(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, Buffer) {// transpilers
	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	__webpack_require__(100);

	// workaround for error: `only one instance of babel/polyfill is allowed`
	// so, include the babel/polyfill into build, but load only single instance

	var _srcBrowser = __webpack_require__(121);

	var VirgilCryptoAPI = babelHelpers.interopRequireWildcard(_srcBrowser);
	if (global && !global._babelPolyfill) {
		__webpack_require__(132);
	}

	var _buffer = __webpack_require__(19);

	Object.defineProperty(exports, 'Buffer', {
		enumerable: true,
		get: function get() {
			return _buffer.Buffer;
		}
	});
	var Version = ("1.6.0");
	exports.Version = Version;
	var VirgilCrypto = babelHelpers._extends({ Buffer: Buffer }, VirgilCryptoAPI);
	exports.VirgilCrypto = VirgilCrypto;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(6).Buffer))

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(9)
	  , core      = __webpack_require__(26)
	  , hide      = __webpack_require__(22)
	  , redefine  = __webpack_require__(17)
	  , ctx       = __webpack_require__(20)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && key in target;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target && !own)redefine(target, key, out);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;  // forced
	$export.G = 2;  // global
	$export.S = 4;  // static
	$export.P = 8;  // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	module.exports = $export;

/***/ },
/* 2 */
/***/ function(module, exports) {

	var $Object = Object;
	module.exports = {
	  create:     $Object.create,
	  getProto:   $Object.getPrototypeOf,
	  isEnum:     {}.propertyIsEnumerable,
	  getDesc:    $Object.getOwnPropertyDescriptor,
	  setDesc:    $Object.defineProperty,
	  setDescs:   $Object.defineProperties,
	  getKeys:    $Object.keys,
	  getNames:   $Object.getOwnPropertyNames,
	  getSymbols: $Object.getOwnPropertySymbols,
	  each:       [].forEach
	};

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	var _cryptoModule = __webpack_require__(12);

	var _cryptoModule2 = babelHelpers.interopRequireDefault(_cryptoModule);

	var _buffer = __webpack_require__(19);

	var _libWrapper = __webpack_require__(131);

	var _libWrapper2 = babelHelpers.interopRequireDefault(_libWrapper);

	var bufferToByteArray = function bufferToByteArray(buffer) {
		var array = _cryptoModule2['default'].VirgilBase64.decode(buffer.toString('base64'));

		for (var i = 0, bl = buffer.length; i < bl; ++i) {
			array.set(i, buffer[i]);
		}

		return array;
	};

	exports.bufferToByteArray = bufferToByteArray;
	var byteArrayToBuffer = function byteArrayToBuffer(byteArray) {
		var size = byteArray.size();
		var buffer = new _buffer.Buffer(size);

		for (var i = 0; i < size; ++i) {
			buffer[i] = byteArray.get(i);
		}

		return buffer;
	};

	exports.byteArrayToBuffer = byteArrayToBuffer;
	var stringToByteArray = function stringToByteArray(string) {
		return bufferToByteArray(new _buffer.Buffer(string, 'utf8'));
	};

	exports.stringToByteArray = stringToByteArray;
	var byteArrayToString = function byteArrayToString(byteArray) {
		return byteArrayToBuffer(byteArray).toString('utf8');
	};

	exports.byteArrayToString = byteArrayToString;
	var toByteArray = function toByteArray(data) {
		switch (true) {
			case _buffer.Buffer.isBuffer(data):
				return bufferToByteArray(data);
			case typeof data === 'string':
				return stringToByteArray(data);
			default:
				throw new Error('Can\'t convert ' + typeof data + ' to ByteArray.');
		}
	};

	exports.toByteArray = toByteArray;
	var toBase64 = function toBase64(data) {
		return _cryptoModule2['default'].VirgilBase64.encode(toByteArray(data));
	};

	exports.toBase64 = toBase64;
	var base64ToBuffer = function base64ToBuffer(data) {
		return byteArrayToBuffer(_cryptoModule2['default'].VirgilBase64.decode(data));
	};

	exports.base64ToBuffer = base64ToBuffer;
	var stringToBuffer = function stringToBuffer(data) {
		return byteArrayToBuffer(toByteArray(data));
	};

	exports.stringToBuffer = stringToBuffer;
	var wrapper = (0, _libWrapper2['default'])({ toByteArray: toByteArray, byteArrayToBuffer: byteArrayToBuffer });
	exports.wrapper = wrapper;

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.throwVirgilError = throwVirgilError;
	exports.throwValidationError = throwValidationError;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _libError = __webpack_require__(129);

	var _libError2 = babelHelpers.interopRequireDefault(_libError);

	_lodash2['default'].templateSettings.interpolate = /{([\s\S]+?)}/g;

	var errors = {
		'00000': 'An error occurred',
		'00001': 'The "{arg}" must be a "{type}"',
		'00002': 'The "{arg}" must be an "{type}"',
		'90001': 'Unable to ENCRYPT the given data "{initialData}", using the given key "{key}"',
		'90002': 'Unable to DECRYPT the given data "{initialData}", using the given key "{key}"',
		'90003': 'Unable to ENCRYPT the given data "{initialData}", using the given password "{password}"',
		'90004': 'Unable to DECRYPT the given data "{initialData}", using the given password "{password}"',
		'90005': 'Unable to SIGN the given data "{initialData}", using the given key "{key}" and password "{password}"',
		'90006': 'Unable to VERIFY the given data "{initialData}", using the given key "{key}" and sign "{sign}"',
		'90007': 'Unable to generate virgil keys using the given password "{password}"',
		'90008': 'Unable to ENCRYPT the given data "{initialData}", using the recipients "{recipients}"'
	};

	exports.errors = errors;

	function throwVirgilError(code, tokens) {
		throw new _libError2['default'](_lodash2['default'].template(errors[code])(tokens), code);
	}

	function throwValidationError(code, tokens) {
		throwVirgilError(code, tokens);
	}

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(257)
	var ieee754 = __webpack_require__(96)
	var isArray = __webpack_require__(97)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	Buffer.poolSize = 8192 // not used by this implementation

	var rootParent = {}

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
	 *     on objects.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	function typedArraySupport () {
	  function Bar () {}
	  try {
	    var arr = new Uint8Array(1)
	    arr.foo = function () { return 42 }
	    arr.constructor = Bar
	    return arr.foo() === 42 && // typed array instances can be augmented
	        arr.constructor === Bar && // constructor can be set
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	/**
	 * Class: Buffer
	 * =============
	 *
	 * The Buffer constructor returns instances of `Uint8Array` that are augmented
	 * with function properties for all the node `Buffer` API functions. We use
	 * `Uint8Array` so that square bracket notation works as expected -- it returns
	 * a single octet.
	 *
	 * By augmenting the instances, we can avoid modifying the `Uint8Array`
	 * prototype.
	 */
	function Buffer (arg) {
	  if (!(this instanceof Buffer)) {
	    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
	    if (arguments.length > 1) return new Buffer(arg, arguments[1])
	    return new Buffer(arg)
	  }

	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    this.length = 0
	    this.parent = undefined
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    return fromNumber(this, arg)
	  }

	  // Slightly less common case.
	  if (typeof arg === 'string') {
	    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
	  }

	  // Unusual.
	  return fromObject(this, arg)
	}

	function fromNumber (that, length) {
	  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < length; i++) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

	  // Assumption: byteLength() return value is always < kMaxLength.
	  var length = byteLength(string, encoding) | 0
	  that = allocate(that, length)

	  that.write(string, encoding)
	  return that
	}

	function fromObject (that, object) {
	  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

	  if (isArray(object)) return fromArray(that, object)

	  if (object == null) {
	    throw new TypeError('must start with number, buffer, array or string')
	  }

	  if (typeof ArrayBuffer !== 'undefined') {
	    if (object.buffer instanceof ArrayBuffer) {
	      return fromTypedArray(that, object)
	    }
	    if (object instanceof ArrayBuffer) {
	      return fromArrayBuffer(that, object)
	    }
	  }

	  if (object.length) return fromArrayLike(that, object)

	  return fromJsonObject(that, object)
	}

	function fromBuffer (that, buffer) {
	  var length = checked(buffer.length) | 0
	  that = allocate(that, length)
	  buffer.copy(that, 0, 0, length)
	  return that
	}

	function fromArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	// Duplicate of fromArray() to keep fromArray() monomorphic.
	function fromTypedArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  // Truncating the elements is probably not what people expect from typed
	  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
	  // of the old Buffer constructor.
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    array.byteLength
	    that = Buffer._augment(new Uint8Array(array))
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromTypedArray(that, new Uint8Array(array))
	  }
	  return that
	}

	function fromArrayLike (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
	// Returns a zero-length buffer for inputs that don't conform to the spec.
	function fromJsonObject (that, object) {
	  var array
	  var length = 0

	  if (object.type === 'Buffer' && isArray(object.data)) {
	    array = object.data
	    length = checked(array.length) | 0
	  }
	  that = allocate(that, length)

	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	} else {
	  // pre-set for values that may exist in the future
	  Buffer.prototype.length = undefined
	  Buffer.prototype.parent = undefined
	}

	function allocate (that, length) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = Buffer._augment(new Uint8Array(length))
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that.length = length
	    that._isBuffer = true
	  }

	  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
	  if (fromPool) that.parent = rootParent

	  return that
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (subject, encoding) {
	  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

	  var buf = new Buffer(subject, encoding)
	  delete buf.parent
	  return buf
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  var i = 0
	  var len = Math.min(x, y)
	  while (i < len) {
	    if (a[i] !== b[i]) break

	    ++i
	  }

	  if (i !== len) {
	    x = a[i]
	    y = b[i]
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'binary':
	    case 'base64':
	    case 'raw':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

	  if (list.length === 0) {
	    return new Buffer(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; i++) {
	      length += list[i].length
	    }
	  }

	  var buf = new Buffer(length)
	  var pos = 0
	  for (i = 0; i < list.length; i++) {
	    var item = list[i]
	    item.copy(buf, pos)
	    pos += item.length
	  }
	  return buf
	}

	function byteLength (string, encoding) {
	  if (typeof string !== 'string') string = '' + string

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'binary':
	      // Deprecated
	      case 'raw':
	      case 'raws':
	        return len
	      case 'utf8':
	      case 'utf-8':
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  start = start | 0
	  end = end === undefined || end === Infinity ? this.length : end | 0

	  if (!encoding) encoding = 'utf8'
	  if (start < 0) start = 0
	  if (end > this.length) end = this.length
	  if (end <= start) return ''

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'binary':
	        return binarySlice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return 0
	  return Buffer.compare(this, b)
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
	  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
	  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
	  byteOffset >>= 0

	  if (this.length === 0) return -1
	  if (byteOffset >= this.length) return -1

	  // Negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

	  if (typeof val === 'string') {
	    if (val.length === 0) return -1 // special case: looking for empty string always fails
	    return String.prototype.indexOf.call(this, val, byteOffset)
	  }
	  if (Buffer.isBuffer(val)) {
	    return arrayIndexOf(this, val, byteOffset)
	  }
	  if (typeof val === 'number') {
	    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
	      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
	    }
	    return arrayIndexOf(this, [ val ], byteOffset)
	  }

	  function arrayIndexOf (arr, val, byteOffset) {
	    var foundIndex = -1
	    for (var i = 0; byteOffset + i < arr.length; i++) {
	      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
	      } else {
	        foundIndex = -1
	      }
	    }
	    return -1
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	// `get` is deprecated
	Buffer.prototype.get = function get (offset) {
	  console.log('.get() is deprecated. Access using array indexes instead.')
	  return this.readUInt8(offset)
	}

	// `set` is deprecated
	Buffer.prototype.set = function set (v, offset) {
	  console.log('.set() is deprecated. Access using array indexes instead.')
	  return this.writeUInt8(v, offset)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; i++) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) throw new Error('Invalid hex string')
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function binaryWrite (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    var swap = encoding
	    encoding = offset
	    offset = length | 0
	    length = swap
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'binary':
	        return binaryWrite(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function binarySlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; i++) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = Buffer._augment(this.subarray(start, end))
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; i++) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  if (newBuf.length) newBuf.parent = this.parent || this

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	  if (offset < 0) throw new RangeError('index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; i--) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; i++) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    target._set(this.subarray(start, start + len), targetStart)
	  }

	  return len
	}

	// fill(value, start=0, end=buffer.length)
	Buffer.prototype.fill = function fill (value, start, end) {
	  if (!value) value = 0
	  if (!start) start = 0
	  if (!end) end = this.length

	  if (end < start) throw new RangeError('end < start')

	  // Fill 0 bytes; we're done
	  if (end === start) return
	  if (this.length === 0) return

	  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
	  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

	  var i
	  if (typeof value === 'number') {
	    for (i = start; i < end; i++) {
	      this[i] = value
	    }
	  } else {
	    var bytes = utf8ToBytes(value.toString())
	    var len = bytes.length
	    for (i = start; i < end; i++) {
	      this[i] = bytes[i % len]
	    }
	  }

	  return this
	}

	/**
	 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
	 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
	 */
	Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
	  if (typeof Uint8Array !== 'undefined') {
	    if (Buffer.TYPED_ARRAY_SUPPORT) {
	      return (new Buffer(this)).buffer
	    } else {
	      var buf = new Uint8Array(this.length)
	      for (var i = 0, len = buf.length; i < len; i += 1) {
	        buf[i] = this[i]
	      }
	      return buf.buffer
	    }
	  } else {
	    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
	  }
	}

	// HELPER FUNCTIONS
	// ================

	var BP = Buffer.prototype

	/**
	 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
	 */
	Buffer._augment = function _augment (arr) {
	  arr.constructor = Buffer
	  arr._isBuffer = true

	  // save reference to original Uint8Array set method before overwriting
	  arr._set = arr.set

	  // deprecated
	  arr.get = BP.get
	  arr.set = BP.set

	  arr.write = BP.write
	  arr.toString = BP.toString
	  arr.toLocaleString = BP.toString
	  arr.toJSON = BP.toJSON
	  arr.equals = BP.equals
	  arr.compare = BP.compare
	  arr.indexOf = BP.indexOf
	  arr.copy = BP.copy
	  arr.slice = BP.slice
	  arr.readUIntLE = BP.readUIntLE
	  arr.readUIntBE = BP.readUIntBE
	  arr.readUInt8 = BP.readUInt8
	  arr.readUInt16LE = BP.readUInt16LE
	  arr.readUInt16BE = BP.readUInt16BE
	  arr.readUInt32LE = BP.readUInt32LE
	  arr.readUInt32BE = BP.readUInt32BE
	  arr.readIntLE = BP.readIntLE
	  arr.readIntBE = BP.readIntBE
	  arr.readInt8 = BP.readInt8
	  arr.readInt16LE = BP.readInt16LE
	  arr.readInt16BE = BP.readInt16BE
	  arr.readInt32LE = BP.readInt32LE
	  arr.readInt32BE = BP.readInt32BE
	  arr.readFloatLE = BP.readFloatLE
	  arr.readFloatBE = BP.readFloatBE
	  arr.readDoubleLE = BP.readDoubleLE
	  arr.readDoubleBE = BP.readDoubleBE
	  arr.writeUInt8 = BP.writeUInt8
	  arr.writeUIntLE = BP.writeUIntLE
	  arr.writeUIntBE = BP.writeUIntBE
	  arr.writeUInt16LE = BP.writeUInt16LE
	  arr.writeUInt16BE = BP.writeUInt16BE
	  arr.writeUInt32LE = BP.writeUInt32LE
	  arr.writeUInt32BE = BP.writeUInt32BE
	  arr.writeIntLE = BP.writeIntLE
	  arr.writeIntBE = BP.writeIntBE
	  arr.writeInt8 = BP.writeInt8
	  arr.writeInt16LE = BP.writeInt16LE
	  arr.writeInt16BE = BP.writeInt16BE
	  arr.writeInt32LE = BP.writeInt32LE
	  arr.writeInt32BE = BP.writeInt32BE
	  arr.writeFloatLE = BP.writeFloatLE
	  arr.writeFloatBE = BP.writeFloatBE
	  arr.writeDoubleLE = BP.writeDoubleLE
	  arr.writeDoubleBE = BP.writeDoubleBE
	  arr.fill = BP.fill
	  arr.inspect = BP.inspect
	  arr.toArrayBuffer = BP.toArrayBuffer

	  return arr
	}

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; i++) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; i++) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer, (function() { return this; }())))

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(4);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var store  = __webpack_require__(89)('wks')
	  , uid    = __webpack_require__(31)
	  , Symbol = __webpack_require__(9).Symbol;
	module.exports = function(name){
	  return store[name] || (store[name] =
	    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));
	};

/***/ },
/* 9 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**
	 * @license
	 * lodash 4.11.1 (Custom Build) <https://lodash.com/>
	 * Build: `lodash -d -o ./foo/lodash.js`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */
	;(function() {

	  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
	  var undefined;

	  /** Used as the semantic version number. */
	  var VERSION = '4.11.1';

	  /** Used as the size to enable large array optimizations. */
	  var LARGE_ARRAY_SIZE = 200;

	  /** Used as the `TypeError` message for "Functions" methods. */
	  var FUNC_ERROR_TEXT = 'Expected a function';

	  /** Used to stand-in for `undefined` hash values. */
	  var HASH_UNDEFINED = '__lodash_hash_undefined__';

	  /** Used as the internal argument placeholder. */
	  var PLACEHOLDER = '__lodash_placeholder__';

	  /** Used to compose bitmasks for wrapper metadata. */
	  var BIND_FLAG = 1,
	      BIND_KEY_FLAG = 2,
	      CURRY_BOUND_FLAG = 4,
	      CURRY_FLAG = 8,
	      CURRY_RIGHT_FLAG = 16,
	      PARTIAL_FLAG = 32,
	      PARTIAL_RIGHT_FLAG = 64,
	      ARY_FLAG = 128,
	      REARG_FLAG = 256,
	      FLIP_FLAG = 512;

	  /** Used to compose bitmasks for comparison styles. */
	  var UNORDERED_COMPARE_FLAG = 1,
	      PARTIAL_COMPARE_FLAG = 2;

	  /** Used as default options for `_.truncate`. */
	  var DEFAULT_TRUNC_LENGTH = 30,
	      DEFAULT_TRUNC_OMISSION = '...';

	  /** Used to detect hot functions by number of calls within a span of milliseconds. */
	  var HOT_COUNT = 150,
	      HOT_SPAN = 16;

	  /** Used to indicate the type of lazy iteratees. */
	  var LAZY_FILTER_FLAG = 1,
	      LAZY_MAP_FLAG = 2,
	      LAZY_WHILE_FLAG = 3;

	  /** Used as references for various `Number` constants. */
	  var INFINITY = 1 / 0,
	      MAX_SAFE_INTEGER = 9007199254740991,
	      MAX_INTEGER = 1.7976931348623157e+308,
	      NAN = 0 / 0;

	  /** Used as references for the maximum length and index of an array. */
	  var MAX_ARRAY_LENGTH = 4294967295,
	      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
	      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

	  /** `Object#toString` result references. */
	  var argsTag = '[object Arguments]',
	      arrayTag = '[object Array]',
	      boolTag = '[object Boolean]',
	      dateTag = '[object Date]',
	      errorTag = '[object Error]',
	      funcTag = '[object Function]',
	      genTag = '[object GeneratorFunction]',
	      mapTag = '[object Map]',
	      numberTag = '[object Number]',
	      objectTag = '[object Object]',
	      promiseTag = '[object Promise]',
	      regexpTag = '[object RegExp]',
	      setTag = '[object Set]',
	      stringTag = '[object String]',
	      symbolTag = '[object Symbol]',
	      weakMapTag = '[object WeakMap]',
	      weakSetTag = '[object WeakSet]';

	  var arrayBufferTag = '[object ArrayBuffer]',
	      dataViewTag = '[object DataView]',
	      float32Tag = '[object Float32Array]',
	      float64Tag = '[object Float64Array]',
	      int8Tag = '[object Int8Array]',
	      int16Tag = '[object Int16Array]',
	      int32Tag = '[object Int32Array]',
	      uint8Tag = '[object Uint8Array]',
	      uint8ClampedTag = '[object Uint8ClampedArray]',
	      uint16Tag = '[object Uint16Array]',
	      uint32Tag = '[object Uint32Array]';

	  /** Used to match empty string literals in compiled template source. */
	  var reEmptyStringLeading = /\b__p \+= '';/g,
	      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
	      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

	  /** Used to match HTML entities and HTML characters. */
	  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
	      reUnescapedHtml = /[&<>"'`]/g,
	      reHasEscapedHtml = RegExp(reEscapedHtml.source),
	      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

	  /** Used to match template delimiters. */
	  var reEscape = /<%-([\s\S]+?)%>/g,
	      reEvaluate = /<%([\s\S]+?)%>/g,
	      reInterpolate = /<%=([\s\S]+?)%>/g;

	  /** Used to match property names within property paths. */
	  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	      reIsPlainProp = /^\w*$/,
	      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;

	  /**
	   * Used to match `RegExp`
	   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
	   */
	  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	      reHasRegExpChar = RegExp(reRegExpChar.source);

	  /** Used to match leading and trailing whitespace. */
	  var reTrim = /^\s+|\s+$/g,
	      reTrimStart = /^\s+/,
	      reTrimEnd = /\s+$/;

	  /** Used to match non-compound words composed of alphanumeric characters. */
	  var reBasicWord = /[a-zA-Z0-9]+/g;

	  /** Used to match backslashes in property paths. */
	  var reEscapeChar = /\\(\\)?/g;

	  /**
	   * Used to match
	   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).
	   */
	  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

	  /** Used to match `RegExp` flags from their coerced string values. */
	  var reFlags = /\w*$/;

	  /** Used to detect hexadecimal string values. */
	  var reHasHexPrefix = /^0x/i;

	  /** Used to detect bad signed hexadecimal string values. */
	  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	  /** Used to detect binary string values. */
	  var reIsBinary = /^0b[01]+$/i;

	  /** Used to detect host constructors (Safari). */
	  var reIsHostCtor = /^\[object .+?Constructor\]$/;

	  /** Used to detect octal string values. */
	  var reIsOctal = /^0o[0-7]+$/i;

	  /** Used to detect unsigned integer values. */
	  var reIsUint = /^(?:0|[1-9]\d*)$/;

	  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */
	  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;

	  /** Used to ensure capturing order of template delimiters. */
	  var reNoMatch = /($^)/;

	  /** Used to match unescaped characters in compiled string literals. */
	  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

	  /** Used to compose unicode character classes. */
	  var rsAstralRange = '\\ud800-\\udfff',
	      rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
	      rsComboSymbolsRange = '\\u20d0-\\u20f0',
	      rsDingbatRange = '\\u2700-\\u27bf',
	      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	      rsQuoteRange = '\\u2018\\u2019\\u201c\\u201d',
	      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	      rsVarRange = '\\ufe0e\\ufe0f',
	      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;

	  /** Used to compose unicode capture groups. */
	  var rsApos = "['\u2019]",
	      rsAstral = '[' + rsAstralRange + ']',
	      rsBreak = '[' + rsBreakRange + ']',
	      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
	      rsDigits = '\\d+',
	      rsDingbat = '[' + rsDingbatRange + ']',
	      rsLower = '[' + rsLowerRange + ']',
	      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	      rsFitz = '\\ud83c[\\udffb-\\udfff]',
	      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	      rsNonAstral = '[^' + rsAstralRange + ']',
	      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	      rsUpper = '[' + rsUpperRange + ']',
	      rsZWJ = '\\u200d';

	  /** Used to compose unicode regexes. */
	  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
	      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
	      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	      reOptMod = rsModifier + '?',
	      rsOptVar = '[' + rsVarRange + ']?',
	      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	      rsSeq = rsOptVar + reOptMod + rsOptJoin,
	      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
	      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

	  /** Used to match apostrophes. */
	  var reApos = RegExp(rsApos, 'g');

	  /**
	   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	   */
	  var reComboMark = RegExp(rsCombo, 'g');

	  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	  /** Used to match complex or compound words. */
	  var reComplexWord = RegExp([
	    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
	    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
	    rsUpper + '+' + rsOptUpperContr,
	    rsDigits,
	    rsEmoji
	  ].join('|'), 'g');

	  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');

	  /** Used to detect strings that need a more robust regexp to match words. */
	  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

	  /** Used to assign default `context` object properties. */
	  var contextProps = [
	    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
	    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
	    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',
	    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
	    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
	  ];

	  /** Used to make template sourceURLs easier to identify. */
	  var templateCounter = -1;

	  /** Used to identify `toStringTag` values of typed arrays. */
	  var typedArrayTags = {};
	  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	  typedArrayTags[uint32Tag] = true;
	  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	  typedArrayTags[setTag] = typedArrayTags[stringTag] =
	  typedArrayTags[weakMapTag] = false;

	  /** Used to identify `toStringTag` values supported by `_.clone`. */
	  var cloneableTags = {};
	  cloneableTags[argsTag] = cloneableTags[arrayTag] =
	  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	  cloneableTags[boolTag] = cloneableTags[dateTag] =
	  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	  cloneableTags[int32Tag] = cloneableTags[mapTag] =
	  cloneableTags[numberTag] = cloneableTags[objectTag] =
	  cloneableTags[regexpTag] = cloneableTags[setTag] =
	  cloneableTags[stringTag] = cloneableTags[symbolTag] =
	  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	  cloneableTags[errorTag] = cloneableTags[funcTag] =
	  cloneableTags[weakMapTag] = false;

	  /** Used to map latin-1 supplementary letters to basic latin letters. */
	  var deburredLetters = {
	    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	    '\xc7': 'C',  '\xe7': 'c',
	    '\xd0': 'D',  '\xf0': 'd',
	    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	    '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	    '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	    '\xd1': 'N',  '\xf1': 'n',
	    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	    '\xc6': 'Ae', '\xe6': 'ae',
	    '\xde': 'Th', '\xfe': 'th',
	    '\xdf': 'ss'
	  };

	  /** Used to map characters to HTML entities. */
	  var htmlEscapes = {
	    '&': '&amp;',
	    '<': '&lt;',
	    '>': '&gt;',
	    '"': '&quot;',
	    "'": '&#39;',
	    '`': '&#96;'
	  };

	  /** Used to map HTML entities to characters. */
	  var htmlUnescapes = {
	    '&amp;': '&',
	    '&lt;': '<',
	    '&gt;': '>',
	    '&quot;': '"',
	    '&#39;': "'",
	    '&#96;': '`'
	  };

	  /** Used to determine if values are of the language type `Object`. */
	  var objectTypes = {
	    'function': true,
	    'object': true
	  };

	  /** Used to escape characters for inclusion in compiled string literals. */
	  var stringEscapes = {
	    '\\': '\\',
	    "'": "'",
	    '\n': 'n',
	    '\r': 'r',
	    '\u2028': 'u2028',
	    '\u2029': 'u2029'
	  };

	  /** Built-in method references without a dependency on `root`. */
	  var freeParseFloat = parseFloat,
	      freeParseInt = parseInt;

	  /** Detect free variable `exports`. */
	  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
	    ? exports
	    : undefined;

	  /** Detect free variable `module`. */
	  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
	    ? module
	    : undefined;

	  /** Detect the popular CommonJS extension `module.exports`. */
	  var moduleExports = (freeModule && freeModule.exports === freeExports)
	    ? freeExports
	    : undefined;

	  /** Detect free variable `global` from Node.js. */
	  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);

	  /** Detect free variable `self`. */
	  var freeSelf = checkGlobal(objectTypes[typeof self] && self);

	  /** Detect free variable `window`. */
	  var freeWindow = checkGlobal(objectTypes[typeof window] && window);

	  /** Detect `this` as the global object. */
	  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);

	  /**
	   * Used as a reference to the global object.
	   *
	   * The `this` value is used if it's the global object to avoid Greasemonkey's
	   * restricted `window` object, otherwise the `window` object is used.
	   */
	  var root = freeGlobal ||
	    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
	      freeSelf || thisGlobal || Function('return this')();

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Adds the key-value `pair` to `map`.
	   *
	   * @private
	   * @param {Object} map The map to modify.
	   * @param {Array} pair The key-value pair to add.
	   * @returns {Object} Returns `map`.
	   */
	  function addMapEntry(map, pair) {
	    // Don't return `Map#set` because it doesn't return the map instance in IE 11.
	    map.set(pair[0], pair[1]);
	    return map;
	  }

	  /**
	   * Adds `value` to `set`.
	   *
	   * @private
	   * @param {Object} set The set to modify.
	   * @param {*} value The value to add.
	   * @returns {Object} Returns `set`.
	   */
	  function addSetEntry(set, value) {
	    set.add(value);
	    return set;
	  }

	  /**
	   * A faster alternative to `Function#apply`, this function invokes `func`
	   * with the `this` binding of `thisArg` and the arguments of `args`.
	   *
	   * @private
	   * @param {Function} func The function to invoke.
	   * @param {*} thisArg The `this` binding of `func`.
	   * @param {Array} args The arguments to invoke `func` with.
	   * @returns {*} Returns the result of `func`.
	   */
	  function apply(func, thisArg, args) {
	    var length = args.length;
	    switch (length) {
	      case 0: return func.call(thisArg);
	      case 1: return func.call(thisArg, args[0]);
	      case 2: return func.call(thisArg, args[0], args[1]);
	      case 3: return func.call(thisArg, args[0], args[1], args[2]);
	    }
	    return func.apply(thisArg, args);
	  }

	  /**
	   * A specialized version of `baseAggregator` for arrays.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} setter The function to set `accumulator` values.
	   * @param {Function} iteratee The iteratee to transform keys.
	   * @param {Object} accumulator The initial aggregated object.
	   * @returns {Function} Returns `accumulator`.
	   */
	  function arrayAggregator(array, setter, iteratee, accumulator) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      var value = array[index];
	      setter(accumulator, value, iteratee(value), array);
	    }
	    return accumulator;
	  }

	  /**
	   * Creates a new array concatenating `array` with `other`.
	   *
	   * @private
	   * @param {Array} array The first array to concatenate.
	   * @param {Array} other The second array to concatenate.
	   * @returns {Array} Returns the new concatenated array.
	   */
	  function arrayConcat(array, other) {
	    var index = -1,
	        length = array.length,
	        othIndex = -1,
	        othLength = other.length,
	        result = Array(length + othLength);

	    while (++index < length) {
	      result[index] = array[index];
	    }
	    while (++othIndex < othLength) {
	      result[index++] = other[othIndex];
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.forEach` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEach(array, iteratee) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (iteratee(array[index], index, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.forEachRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayEachRight(array, iteratee) {
	    var length = array.length;

	    while (length--) {
	      if (iteratee(array[length], length, array) === false) {
	        break;
	      }
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.every` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if all elements pass the predicate check,
	   *  else `false`.
	   */
	  function arrayEvery(array, predicate) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (!predicate(array[index], index, array)) {
	        return false;
	      }
	    }
	    return true;
	  }

	  /**
	   * A specialized version of `_.filter` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {Array} Returns the new filtered array.
	   */
	  function arrayFilter(array, predicate) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (predicate(value, index, array)) {
	        result[resIndex++] = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * A specialized version of `_.includes` for arrays without support for
	   * specifying an index to search from.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludes(array, value) {
	    return !!array.length && baseIndexOf(array, value, 0) > -1;
	  }

	  /**
	   * This function is like `arrayIncludes` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} target The value to search for.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {boolean} Returns `true` if `target` is found, else `false`.
	   */
	  function arrayIncludesWith(array, value, comparator) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(value, array[index])) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * A specialized version of `_.map` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the new mapped array.
	   */
	  function arrayMap(array, iteratee) {
	    var index = -1,
	        length = array.length,
	        result = Array(length);

	    while (++index < length) {
	      result[index] = iteratee(array[index], index, array);
	    }
	    return result;
	  }

	  /**
	   * Appends the elements of `values` to `array`.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {Array} values The values to append.
	   * @returns {Array} Returns `array`.
	   */
	  function arrayPush(array, values) {
	    var index = -1,
	        length = values.length,
	        offset = array.length;

	    while (++index < length) {
	      array[offset + index] = values[index];
	    }
	    return array;
	  }

	  /**
	   * A specialized version of `_.reduce` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the first element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduce(array, iteratee, accumulator, initAccum) {
	    var index = -1,
	        length = array.length;

	    if (initAccum && length) {
	      accumulator = array[++index];
	    }
	    while (++index < length) {
	      accumulator = iteratee(accumulator, array[index], index, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.reduceRight` for arrays without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} [accumulator] The initial value.
	   * @param {boolean} [initAccum] Specify using the last element of `array` as
	   *  the initial value.
	   * @returns {*} Returns the accumulated value.
	   */
	  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
	    var length = array.length;
	    if (initAccum && length) {
	      accumulator = array[--length];
	    }
	    while (length--) {
	      accumulator = iteratee(accumulator, array[length], length, array);
	    }
	    return accumulator;
	  }

	  /**
	   * A specialized version of `_.some` for arrays without support for iteratee
	   * shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} predicate The function invoked per iteration.
	   * @returns {boolean} Returns `true` if any element passes the predicate check,
	   *  else `false`.
	   */
	  function arraySome(array, predicate) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      if (predicate(array[index], index, array)) {
	        return true;
	      }
	    }
	    return false;
	  }

	  /**
	   * The base implementation of methods like `_.max` and `_.min` which accepts a
	   * `comparator` to determine the extremum value.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The iteratee invoked per iteration.
	   * @param {Function} comparator The comparator used to compare values.
	   * @returns {*} Returns the extremum value.
	   */
	  function baseExtremum(array, iteratee, comparator) {
	    var index = -1,
	        length = array.length;

	    while (++index < length) {
	      var value = array[index],
	          current = iteratee(value);

	      if (current != null && (computed === undefined
	            ? current === current
	            : comparator(current, computed)
	          )) {
	        var computed = current,
	            result = value;
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of methods like `_.find` and `_.findKey`, without
	   * support for iteratee shorthands, which iterates over `collection` using
	   * `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @param {boolean} [retKey] Specify returning the key of the found element
	   *  instead of the element itself.
	   * @returns {*} Returns the found element or its key, else `undefined`.
	   */
	  function baseFind(collection, predicate, eachFunc, retKey) {
	    var result;
	    eachFunc(collection, function(value, key, collection) {
	      if (predicate(value, key, collection)) {
	        result = retKey ? key : value;
	        return false;
	      }
	    });
	    return result;
	  }

	  /**
	   * The base implementation of `_.findIndex` and `_.findLastIndex` without
	   * support for iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {Function} predicate The function invoked per iteration.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseFindIndex(array, predicate, fromRight) {
	    var length = array.length,
	        index = fromRight ? length : -1;

	    while ((fromRight ? index-- : ++index < length)) {
	      if (predicate(array[index], index, array)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOf(array, value, fromIndex) {
	    if (value !== value) {
	      return indexOfNaN(array, fromIndex);
	    }
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (array[index] === value) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * This function is like `baseIndexOf` except that it accepts a comparator.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {*} value The value to search for.
	   * @param {number} fromIndex The index to search from.
	   * @param {Function} comparator The comparator invoked per element.
	   * @returns {number} Returns the index of the matched value, else `-1`.
	   */
	  function baseIndexOfWith(array, value, fromIndex, comparator) {
	    var index = fromIndex - 1,
	        length = array.length;

	    while (++index < length) {
	      if (comparator(array[index], value)) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * The base implementation of `_.mean` and `_.meanBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the mean.
	   */
	  function baseMean(array, iteratee) {
	    var length = array ? array.length : 0;
	    return length ? (baseSum(array, iteratee) / length) : NAN;
	  }

	  /**
	   * The base implementation of `_.reduce` and `_.reduceRight`, without support
	   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	   *
	   * @private
	   * @param {Array|Object} collection The collection to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @param {*} accumulator The initial value.
	   * @param {boolean} initAccum Specify using the first or last element of
	   *  `collection` as the initial value.
	   * @param {Function} eachFunc The function to iterate over `collection`.
	   * @returns {*} Returns the accumulated value.
	   */
	  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	    eachFunc(collection, function(value, index, collection) {
	      accumulator = initAccum
	        ? (initAccum = false, value)
	        : iteratee(accumulator, value, index, collection);
	    });
	    return accumulator;
	  }

	  /**
	   * The base implementation of `_.sortBy` which uses `comparer` to define the
	   * sort order of `array` and replaces criteria objects with their corresponding
	   * values.
	   *
	   * @private
	   * @param {Array} array The array to sort.
	   * @param {Function} comparer The function to define sort order.
	   * @returns {Array} Returns `array`.
	   */
	  function baseSortBy(array, comparer) {
	    var length = array.length;

	    array.sort(comparer);
	    while (length--) {
	      array[length] = array[length].value;
	    }
	    return array;
	  }

	  /**
	   * The base implementation of `_.sum` and `_.sumBy` without support for
	   * iteratee shorthands.
	   *
	   * @private
	   * @param {Array} array The array to iterate over.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {number} Returns the sum.
	   */
	  function baseSum(array, iteratee) {
	    var result,
	        index = -1,
	        length = array.length;

	    while (++index < length) {
	      var current = iteratee(array[index]);
	      if (current !== undefined) {
	        result = result === undefined ? current : (result + current);
	      }
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.times` without support for iteratee shorthands
	   * or max array length checks.
	   *
	   * @private
	   * @param {number} n The number of times to invoke `iteratee`.
	   * @param {Function} iteratee The function invoked per iteration.
	   * @returns {Array} Returns the array of results.
	   */
	  function baseTimes(n, iteratee) {
	    var index = -1,
	        result = Array(n);

	    while (++index < n) {
	      result[index] = iteratee(index);
	    }
	    return result;
	  }

	  /**
	   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
	   * of key-value pairs for `object` corresponding to the property names of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the new array of key-value pairs.
	   */
	  function baseToPairs(object, props) {
	    return arrayMap(props, function(key) {
	      return [key, object[key]];
	    });
	  }

	  /**
	   * The base implementation of `_.unary` without support for storing wrapper metadata.
	   *
	   * @private
	   * @param {Function} func The function to cap arguments for.
	   * @returns {Function} Returns the new function.
	   */
	  function baseUnary(func) {
	    return function(value) {
	      return func(value);
	    };
	  }

	  /**
	   * The base implementation of `_.values` and `_.valuesIn` which creates an
	   * array of `object` property values corresponding to the property names
	   * of `props`.
	   *
	   * @private
	   * @param {Object} object The object to query.
	   * @param {Array} props The property names to get values for.
	   * @returns {Object} Returns the array of property values.
	   */
	  function baseValues(object, props) {
	    return arrayMap(props, function(key) {
	      return object[key];
	    });
	  }

	  /**
	   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the first unmatched string symbol.
	   */
	  function charsStartIndex(strSymbols, chrSymbols) {
	    var index = -1,
	        length = strSymbols.length;

	    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	   * that is not found in the character symbols.
	   *
	   * @private
	   * @param {Array} strSymbols The string symbols to inspect.
	   * @param {Array} chrSymbols The character symbols to find.
	   * @returns {number} Returns the index of the last unmatched string symbol.
	   */
	  function charsEndIndex(strSymbols, chrSymbols) {
	    var index = strSymbols.length;

	    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	    return index;
	  }

	  /**
	   * Checks if `value` is a global object.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {null|Object} Returns `value` if it's a global object, else `null`.
	   */
	  function checkGlobal(value) {
	    return (value && value.Object === Object) ? value : null;
	  }

	  /**
	   * Compares values to sort them in ascending order.
	   *
	   * @private
	   * @param {*} value The value to compare.
	   * @param {*} other The other value to compare.
	   * @returns {number} Returns the sort order indicator for `value`.
	   */
	  function compareAscending(value, other) {
	    if (value !== other) {
	      var valIsNull = value === null,
	          valIsUndef = value === undefined,
	          valIsReflexive = value === value;

	      var othIsNull = other === null,
	          othIsUndef = other === undefined,
	          othIsReflexive = other === other;

	      if ((value > other && !othIsNull) || !valIsReflexive ||
	          (valIsNull && !othIsUndef && othIsReflexive) ||
	          (valIsUndef && othIsReflexive)) {
	        return 1;
	      }
	      if ((value < other && !valIsNull) || !othIsReflexive ||
	          (othIsNull && !valIsUndef && valIsReflexive) ||
	          (othIsUndef && valIsReflexive)) {
	        return -1;
	      }
	    }
	    return 0;
	  }

	  /**
	   * Used by `_.orderBy` to compare multiple properties of a value to another
	   * and stable sort them.
	   *
	   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	   * specify an order of "desc" for descending or "asc" for ascending sort order
	   * of corresponding values.
	   *
	   * @private
	   * @param {Object} object The object to compare.
	   * @param {Object} other The other object to compare.
	   * @param {boolean[]|string[]} orders The order to sort by for each property.
	   * @returns {number} Returns the sort order indicator for `object`.
	   */
	  function compareMultiple(object, other, orders) {
	    var index = -1,
	        objCriteria = object.criteria,
	        othCriteria = other.criteria,
	        length = objCriteria.length,
	        ordersLength = orders.length;

	    while (++index < length) {
	      var result = compareAscending(objCriteria[index], othCriteria[index]);
	      if (result) {
	        if (index >= ordersLength) {
	          return result;
	        }
	        var order = orders[index];
	        return result * (order == 'desc' ? -1 : 1);
	      }
	    }
	    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	    // that causes it, under certain circumstances, to provide the same value for
	    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	    // for more details.
	    //
	    // This also ensures a stable sort in V8 and other engines.
	    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	    return object.index - other.index;
	  }

	  /**
	   * Gets the number of `placeholder` occurrences in `array`.
	   *
	   * @private
	   * @param {Array} array The array to inspect.
	   * @param {*} placeholder The placeholder to search for.
	   * @returns {number} Returns the placeholder count.
	   */
	  function countHolders(array, placeholder) {
	    var length = array.length,
	        result = 0;

	    while (length--) {
	      if (array[length] === placeholder) {
	        result++;
	      }
	    }
	    return result;
	  }

	  /**
	   * Creates a function that performs a mathematical operation on two values.
	   *
	   * @private
	   * @param {Function} operator The function to perform the operation.
	   * @returns {Function} Returns the new mathematical operation function.
	   */
	  function createMathOperation(operator) {
	    return function(value, other) {
	      var result;
	      if (value === undefined && other === undefined) {
	        return 0;
	      }
	      if (value !== undefined) {
	        result = value;
	      }
	      if (other !== undefined) {
	        result = result === undefined ? other : operator(result, other);
	      }
	      return result;
	    };
	  }

	  /**
	   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
	   *
	   * @private
	   * @param {string} letter The matched letter to deburr.
	   * @returns {string} Returns the deburred letter.
	   */
	  function deburrLetter(letter) {
	    return deburredLetters[letter];
	  }

	  /**
	   * Used by `_.escape` to convert characters to HTML entities.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeHtmlChar(chr) {
	    return htmlEscapes[chr];
	  }

	  /**
	   * Used by `_.template` to escape characters for inclusion in compiled string literals.
	   *
	   * @private
	   * @param {string} chr The matched character to escape.
	   * @returns {string} Returns the escaped character.
	   */
	  function escapeStringChar(chr) {
	    return '\\' + stringEscapes[chr];
	  }

	  /**
	   * Gets the index at which the first occurrence of `NaN` is found in `array`.
	   *
	   * @private
	   * @param {Array} array The array to search.
	   * @param {number} fromIndex The index to search from.
	   * @param {boolean} [fromRight] Specify iterating from right to left.
	   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
	   */
	  function indexOfNaN(array, fromIndex, fromRight) {
	    var length = array.length,
	        index = fromIndex + (fromRight ? 0 : -1);

	    while ((fromRight ? index-- : ++index < length)) {
	      var other = array[index];
	      if (other !== other) {
	        return index;
	      }
	    }
	    return -1;
	  }

	  /**
	   * Checks if `value` is a host object in IE < 9.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	   */
	  function isHostObject(value) {
	    // Many host objects are `Object` objects that can coerce to strings
	    // despite having improperly defined `toString` methods.
	    var result = false;
	    if (value != null && typeof value.toString != 'function') {
	      try {
	        result = !!(value + '');
	      } catch (e) {}
	    }
	    return result;
	  }

	  /**
	   * Checks if `value` is a valid array-like index.
	   *
	   * @private
	   * @param {*} value The value to check.
	   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	   */
	  function isIndex(value, length) {
	    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
	    length = length == null ? MAX_SAFE_INTEGER : length;
	    return value > -1 && value % 1 == 0 && value < length;
	  }

	  /**
	   * Converts `iterator` to an array.
	   *
	   * @private
	   * @param {Object} iterator The iterator to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function iteratorToArray(iterator) {
	    var data,
	        result = [];

	    while (!(data = iterator.next()).done) {
	      result.push(data.value);
	    }
	    return result;
	  }

	  /**
	   * Converts `map` to an array.
	   *
	   * @private
	   * @param {Object} map The map to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function mapToArray(map) {
	    var index = -1,
	        result = Array(map.size);

	    map.forEach(function(value, key) {
	      result[++index] = [key, value];
	    });
	    return result;
	  }

	  /**
	   * Replaces all `placeholder` elements in `array` with an internal placeholder
	   * and returns an array of their indexes.
	   *
	   * @private
	   * @param {Array} array The array to modify.
	   * @param {*} placeholder The placeholder to replace.
	   * @returns {Array} Returns the new array of placeholder indexes.
	   */
	  function replaceHolders(array, placeholder) {
	    var index = -1,
	        length = array.length,
	        resIndex = 0,
	        result = [];

	    while (++index < length) {
	      var value = array[index];
	      if (value === placeholder || value === PLACEHOLDER) {
	        array[index] = PLACEHOLDER;
	        result[resIndex++] = index;
	      }
	    }
	    return result;
	  }

	  /**
	   * Converts `set` to an array.
	   *
	   * @private
	   * @param {Object} set The set to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function setToArray(set) {
	    var index = -1,
	        result = Array(set.size);

	    set.forEach(function(value) {
	      result[++index] = value;
	    });
	    return result;
	  }

	  /**
	   * Gets the number of symbols in `string`.
	   *
	   * @private
	   * @param {string} string The string to inspect.
	   * @returns {number} Returns the string size.
	   */
	  function stringSize(string) {
	    if (!(string && reHasComplexSymbol.test(string))) {
	      return string.length;
	    }
	    var result = reComplexSymbol.lastIndex = 0;
	    while (reComplexSymbol.test(string)) {
	      result++;
	    }
	    return result;
	  }

	  /**
	   * Converts `string` to an array.
	   *
	   * @private
	   * @param {string} string The string to convert.
	   * @returns {Array} Returns the converted array.
	   */
	  function stringToArray(string) {
	    return string.match(reComplexSymbol);
	  }

	  /**
	   * Used by `_.unescape` to convert HTML entities to characters.
	   *
	   * @private
	   * @param {string} chr The matched character to unescape.
	   * @returns {string} Returns the unescaped character.
	   */
	  function unescapeHtmlChar(chr) {
	    return htmlUnescapes[chr];
	  }

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Create a new pristine `lodash` function using the `context` object.
	   *
	   * @static
	   * @memberOf _
	   * @since 1.1.0
	   * @category Util
	   * @param {Object} [context=root] The context object.
	   * @returns {Function} Returns a new `lodash` function.
	   * @example
	   *
	   * _.mixin({ 'foo': _.constant('foo') });
	   *
	   * var lodash = _.runInContext();
	   * lodash.mixin({ 'bar': lodash.constant('bar') });
	   *
	   * _.isFunction(_.foo);
	   * // => true
	   * _.isFunction(_.bar);
	   * // => false
	   *
	   * lodash.isFunction(lodash.foo);
	   * // => false
	   * lodash.isFunction(lodash.bar);
	   * // => true
	   *
	   * // Use `context` to mock `Date#getTime` use in `_.now`.
	   * var mock = _.runInContext({
	   *   'Date': function() {
	   *     return { 'getTime': getTimeMock };
	   *   }
	   * });
	   *
	   * // Create a suped-up `defer` in Node.js.
	   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
	   */
	  function runInContext(context) {
	    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;

	    /** Built-in constructor references. */
	    var Date = context.Date,
	        Error = context.Error,
	        Math = context.Math,
	        RegExp = context.RegExp,
	        TypeError = context.TypeError;

	    /** Used for built-in method references. */
	    var arrayProto = context.Array.prototype,
	        objectProto = context.Object.prototype,
	        stringProto = context.String.prototype;

	    /** Used to resolve the decompiled source of functions. */
	    var funcToString = context.Function.prototype.toString;

	    /** Used to check objects for own properties. */
	    var hasOwnProperty = objectProto.hasOwnProperty;

	    /** Used to generate unique IDs. */
	    var idCounter = 0;

	    /** Used to infer the `Object` constructor. */
	    var objectCtorString = funcToString.call(Object);

	    /**
	     * Used to resolve the
	     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	     * of values.
	     */
	    var objectToString = objectProto.toString;

	    /** Used to restore the original `_` reference in `_.noConflict`. */
	    var oldDash = root._;

	    /** Used to detect if a method is native. */
	    var reIsNative = RegExp('^' +
	      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	    );

	    /** Built-in value references. */
	    var Buffer = moduleExports ? context.Buffer : undefined,
	        Reflect = context.Reflect,
	        Symbol = context.Symbol,
	        Uint8Array = context.Uint8Array,
	        clearTimeout = context.clearTimeout,
	        enumerate = Reflect ? Reflect.enumerate : undefined,
	        getOwnPropertySymbols = Object.getOwnPropertySymbols,
	        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,
	        objectCreate = Object.create,
	        propertyIsEnumerable = objectProto.propertyIsEnumerable,
	        setTimeout = context.setTimeout,
	        splice = arrayProto.splice;

	    /* Built-in method references for those with the same name as other `lodash` methods. */
	    var nativeCeil = Math.ceil,
	        nativeFloor = Math.floor,
	        nativeGetPrototype = Object.getPrototypeOf,
	        nativeIsFinite = context.isFinite,
	        nativeJoin = arrayProto.join,
	        nativeKeys = Object.keys,
	        nativeMax = Math.max,
	        nativeMin = Math.min,
	        nativeParseInt = context.parseInt,
	        nativeRandom = Math.random,
	        nativeReplace = stringProto.replace,
	        nativeReverse = arrayProto.reverse,
	        nativeSplit = stringProto.split;

	    /* Built-in method references that are verified to be native. */
	    var DataView = getNative(context, 'DataView'),
	        Map = getNative(context, 'Map'),
	        Promise = getNative(context, 'Promise'),
	        Set = getNative(context, 'Set'),
	        WeakMap = getNative(context, 'WeakMap'),
	        nativeCreate = getNative(Object, 'create');

	    /** Used to store function metadata. */
	    var metaMap = WeakMap && new WeakMap;

	    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
	    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');

	    /** Used to lookup unminified function names. */
	    var realNames = {};

	    /** Used to detect maps, sets, and weakmaps. */
	    var dataViewCtorString = toSource(DataView),
	        mapCtorString = toSource(Map),
	        promiseCtorString = toSource(Promise),
	        setCtorString = toSource(Set),
	        weakMapCtorString = toSource(WeakMap);

	    /** Used to convert symbols to primitives and strings. */
	    var symbolProto = Symbol ? Symbol.prototype : undefined,
	        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
	        symbolToString = symbolProto ? symbolProto.toString : undefined;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` object which wraps `value` to enable implicit method
	     * chain sequences. Methods that operate on and return arrays, collections,
	     * and functions can be chained together. Methods that retrieve a single value
	     * or may return a primitive value will automatically end the chain sequence
	     * and return the unwrapped value. Otherwise, the value must be unwrapped
	     * with `_#value`.
	     *
	     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	     * enabled using `_.chain`.
	     *
	     * The execution of chained methods is lazy, that is, it's deferred until
	     * `_#value` is implicitly or explicitly called.
	     *
	     * Lazy evaluation allows several methods to support shortcut fusion.
	     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	     * the creation of intermediate arrays and can greatly reduce the number of
	     * iteratee executions. Sections of a chain sequence qualify for shortcut
	     * fusion if the section is applied to an array of at least `200` elements
	     * and any iteratees accept only one argument. The heuristic for whether a
	     * section qualifies for shortcut fusion is subject to change.
	     *
	     * Chaining is supported in custom builds as long as the `_#value` method is
	     * directly or indirectly included in the build.
	     *
	     * In addition to lodash methods, wrappers have `Array` and `String` methods.
	     *
	     * The wrapper `Array` methods are:
	     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	     *
	     * The wrapper `String` methods are:
	     * `replace` and `split`
	     *
	     * The wrapper methods that support shortcut fusion are:
	     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	     *
	     * The chainable wrapper methods are:
	     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	     * `zipObject`, `zipObjectDeep`, and `zipWith`
	     *
	     * The wrapper methods that are **not** chainable by default are:
	     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,
	     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,
	     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,
	     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,
	     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,
	     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,
	     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`,
	     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`,
	     * `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`,
	     * `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,
	     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,
	     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,
	     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,
	     * `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`, `min`, `minBy`, `multiply`,
	     * `noConflict`, `noop`, `now`, `nth`, `pad`, `padEnd`, `padStart`, `parseInt`,
	     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,
	     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,
	     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,
	     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toInteger`,
	     * `toJSON`, `toLength`, `toLower`, `toNumber`, `toSafeInteger`, `toString`,
	     * `toUpper`, `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`,
	     * `uniqueId`, `upperCase`, `upperFirst`, `value`, and `words`
	     *
	     * @name _
	     * @constructor
	     * @category Seq
	     * @param {*} value The value to wrap in a `lodash` instance.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2, 3]);
	     *
	     * // Returns an unwrapped value.
	     * wrapped.reduce(_.add);
	     * // => 6
	     *
	     * // Returns a wrapped value.
	     * var squares = wrapped.map(square);
	     *
	     * _.isArray(squares);
	     * // => false
	     *
	     * _.isArray(squares.value());
	     * // => true
	     */
	    function lodash(value) {
	      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	        if (value instanceof LodashWrapper) {
	          return value;
	        }
	        if (hasOwnProperty.call(value, '__wrapped__')) {
	          return wrapperClone(value);
	        }
	      }
	      return new LodashWrapper(value);
	    }

	    /**
	     * The function whose prototype chain sequence wrappers inherit from.
	     *
	     * @private
	     */
	    function baseLodash() {
	      // No operation performed.
	    }

	    /**
	     * The base constructor for creating `lodash` wrapper objects.
	     *
	     * @private
	     * @param {*} value The value to wrap.
	     * @param {boolean} [chainAll] Enable explicit method chain sequences.
	     */
	    function LodashWrapper(value, chainAll) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__chain__ = !!chainAll;
	      this.__index__ = 0;
	      this.__values__ = undefined;
	    }

	    /**
	     * By default, the template delimiters used by lodash are like those in
	     * embedded Ruby (ERB). Change the following template settings to use
	     * alternative delimiters.
	     *
	     * @static
	     * @memberOf _
	     * @type {Object}
	     */
	    lodash.templateSettings = {

	      /**
	       * Used to detect `data` property values to be HTML-escaped.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'escape': reEscape,

	      /**
	       * Used to detect code to be evaluated.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'evaluate': reEvaluate,

	      /**
	       * Used to detect `data` property values to inject.
	       *
	       * @memberOf _.templateSettings
	       * @type {RegExp}
	       */
	      'interpolate': reInterpolate,

	      /**
	       * Used to reference the data object in the template text.
	       *
	       * @memberOf _.templateSettings
	       * @type {string}
	       */
	      'variable': '',

	      /**
	       * Used to import variables into the compiled template.
	       *
	       * @memberOf _.templateSettings
	       * @type {Object}
	       */
	      'imports': {

	        /**
	         * A reference to the `lodash` function.
	         *
	         * @memberOf _.templateSettings.imports
	         * @type {Function}
	         */
	        '_': lodash
	      }
	    };

	    // Ensure wrappers are instances of `baseLodash`.
	    lodash.prototype = baseLodash.prototype;
	    lodash.prototype.constructor = lodash;

	    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	    LodashWrapper.prototype.constructor = LodashWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	     *
	     * @private
	     * @constructor
	     * @param {*} value The value to wrap.
	     */
	    function LazyWrapper(value) {
	      this.__wrapped__ = value;
	      this.__actions__ = [];
	      this.__dir__ = 1;
	      this.__filtered__ = false;
	      this.__iteratees__ = [];
	      this.__takeCount__ = MAX_ARRAY_LENGTH;
	      this.__views__ = [];
	    }

	    /**
	     * Creates a clone of the lazy wrapper object.
	     *
	     * @private
	     * @name clone
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the cloned `LazyWrapper` object.
	     */
	    function lazyClone() {
	      var result = new LazyWrapper(this.__wrapped__);
	      result.__actions__ = copyArray(this.__actions__);
	      result.__dir__ = this.__dir__;
	      result.__filtered__ = this.__filtered__;
	      result.__iteratees__ = copyArray(this.__iteratees__);
	      result.__takeCount__ = this.__takeCount__;
	      result.__views__ = copyArray(this.__views__);
	      return result;
	    }

	    /**
	     * Reverses the direction of lazy iteration.
	     *
	     * @private
	     * @name reverse
	     * @memberOf LazyWrapper
	     * @returns {Object} Returns the new reversed `LazyWrapper` object.
	     */
	    function lazyReverse() {
	      if (this.__filtered__) {
	        var result = new LazyWrapper(this);
	        result.__dir__ = -1;
	        result.__filtered__ = true;
	      } else {
	        result = this.clone();
	        result.__dir__ *= -1;
	      }
	      return result;
	    }

	    /**
	     * Extracts the unwrapped value from its lazy wrapper.
	     *
	     * @private
	     * @name value
	     * @memberOf LazyWrapper
	     * @returns {*} Returns the unwrapped value.
	     */
	    function lazyValue() {
	      var array = this.__wrapped__.value(),
	          dir = this.__dir__,
	          isArr = isArray(array),
	          isRight = dir < 0,
	          arrLength = isArr ? array.length : 0,
	          view = getView(0, arrLength, this.__views__),
	          start = view.start,
	          end = view.end,
	          length = end - start,
	          index = isRight ? end : (start - 1),
	          iteratees = this.__iteratees__,
	          iterLength = iteratees.length,
	          resIndex = 0,
	          takeCount = nativeMin(length, this.__takeCount__);

	      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||
	          (arrLength == length && takeCount == length)) {
	        return baseWrapperValue(array, this.__actions__);
	      }
	      var result = [];

	      outer:
	      while (length-- && resIndex < takeCount) {
	        index += dir;

	        var iterIndex = -1,
	            value = array[index];

	        while (++iterIndex < iterLength) {
	          var data = iteratees[iterIndex],
	              iteratee = data.iteratee,
	              type = data.type,
	              computed = iteratee(value);

	          if (type == LAZY_MAP_FLAG) {
	            value = computed;
	          } else if (!computed) {
	            if (type == LAZY_FILTER_FLAG) {
	              continue outer;
	            } else {
	              break outer;
	            }
	          }
	        }
	        result[resIndex++] = value;
	      }
	      return result;
	    }

	    // Ensure `LazyWrapper` is an instance of `baseLodash`.
	    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	    LazyWrapper.prototype.constructor = LazyWrapper;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a hash object.
	     *
	     * @private
	     * @constructor
	     * @returns {Object} Returns the new hash object.
	     */
	    function Hash() {}

	    /**
	     * Removes `key` and its value from the hash.
	     *
	     * @private
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function hashDelete(hash, key) {
	      return hashHas(hash, key) && delete hash[key];
	    }

	    /**
	     * Gets the hash value for `key`.
	     *
	     * @private
	     * @param {Object} hash The hash to query.
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function hashGet(hash, key) {
	      if (nativeCreate) {
	        var result = hash[key];
	        return result === HASH_UNDEFINED ? undefined : result;
	      }
	      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
	    }

	    /**
	     * Checks if a hash value for `key` exists.
	     *
	     * @private
	     * @param {Object} hash The hash to query.
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function hashHas(hash, key) {
	      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
	    }

	    /**
	     * Sets the hash `key` to `value`.
	     *
	     * @private
	     * @param {Object} hash The hash to modify.
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     */
	    function hashSet(hash, key, value) {
	      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	    }

	    // Avoid inheriting from `Object.prototype` when possible.
	    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a map cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function MapCache(values) {
	      var index = -1,
	          length = values ? values.length : 0;

	      this.clear();
	      while (++index < length) {
	        var entry = values[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the map.
	     *
	     * @private
	     * @name clear
	     * @memberOf MapCache
	     */
	    function mapClear() {
	      this.__data__ = {
	        'hash': new Hash,
	        'map': Map ? new Map : [],
	        'string': new Hash
	      };
	    }

	    /**
	     * Removes `key` and its value from the map.
	     *
	     * @private
	     * @name delete
	     * @memberOf MapCache
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function mapDelete(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map['delete'](key) : assocDelete(data.map, key);
	    }

	    /**
	     * Gets the map value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf MapCache
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function mapGet(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashGet(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map.get(key) : assocGet(data.map, key);
	    }

	    /**
	     * Checks if a map value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf MapCache
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function mapHas(key) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        return hashHas(typeof key == 'string' ? data.string : data.hash, key);
	      }
	      return Map ? data.map.has(key) : assocHas(data.map, key);
	    }

	    /**
	     * Sets the map `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf MapCache
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the map cache instance.
	     */
	    function mapSet(key, value) {
	      var data = this.__data__;
	      if (isKeyable(key)) {
	        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
	      } else if (Map) {
	        data.map.set(key, value);
	      } else {
	        assocSet(data.map, key, value);
	      }
	      return this;
	    }

	    // Add methods to `MapCache`.
	    MapCache.prototype.clear = mapClear;
	    MapCache.prototype['delete'] = mapDelete;
	    MapCache.prototype.get = mapGet;
	    MapCache.prototype.has = mapHas;
	    MapCache.prototype.set = mapSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     *
	     * Creates a set cache object to store unique values.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function SetCache(values) {
	      var index = -1,
	          length = values ? values.length : 0;

	      this.__data__ = new MapCache;
	      while (++index < length) {
	        this.push(values[index]);
	      }
	    }

	    /**
	     * Checks if `value` is in `cache`.
	     *
	     * @private
	     * @param {Object} cache The set cache to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns `true` if `value` is found, else `false`.
	     */
	    function cacheHas(cache, value) {
	      var map = cache.__data__;
	      if (isKeyable(value)) {
	        var data = map.__data__,
	            hash = typeof value == 'string' ? data.string : data.hash;

	        return hash[value] === HASH_UNDEFINED;
	      }
	      return map.has(value);
	    }

	    /**
	     * Adds `value` to the set cache.
	     *
	     * @private
	     * @name push
	     * @memberOf SetCache
	     * @param {*} value The value to cache.
	     */
	    function cachePush(value) {
	      var map = this.__data__;
	      if (isKeyable(value)) {
	        var data = map.__data__,
	            hash = typeof value == 'string' ? data.string : data.hash;

	        hash[value] = HASH_UNDEFINED;
	      }
	      else {
	        map.set(value, HASH_UNDEFINED);
	      }
	    }

	    // Add methods to `SetCache`.
	    SetCache.prototype.push = cachePush;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a stack cache object to store key-value pairs.
	     *
	     * @private
	     * @constructor
	     * @param {Array} [values] The values to cache.
	     */
	    function Stack(values) {
	      var index = -1,
	          length = values ? values.length : 0;

	      this.clear();
	      while (++index < length) {
	        var entry = values[index];
	        this.set(entry[0], entry[1]);
	      }
	    }

	    /**
	     * Removes all key-value entries from the stack.
	     *
	     * @private
	     * @name clear
	     * @memberOf Stack
	     */
	    function stackClear() {
	      this.__data__ = { 'array': [], 'map': null };
	    }

	    /**
	     * Removes `key` and its value from the stack.
	     *
	     * @private
	     * @name delete
	     * @memberOf Stack
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function stackDelete(key) {
	      var data = this.__data__,
	          array = data.array;

	      return array ? assocDelete(array, key) : data.map['delete'](key);
	    }

	    /**
	     * Gets the stack value for `key`.
	     *
	     * @private
	     * @name get
	     * @memberOf Stack
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function stackGet(key) {
	      var data = this.__data__,
	          array = data.array;

	      return array ? assocGet(array, key) : data.map.get(key);
	    }

	    /**
	     * Checks if a stack value for `key` exists.
	     *
	     * @private
	     * @name has
	     * @memberOf Stack
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function stackHas(key) {
	      var data = this.__data__,
	          array = data.array;

	      return array ? assocHas(array, key) : data.map.has(key);
	    }

	    /**
	     * Sets the stack `key` to `value`.
	     *
	     * @private
	     * @name set
	     * @memberOf Stack
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns the stack cache instance.
	     */
	    function stackSet(key, value) {
	      var data = this.__data__,
	          array = data.array;

	      if (array) {
	        if (array.length < (LARGE_ARRAY_SIZE - 1)) {
	          assocSet(array, key, value);
	        } else {
	          data.array = null;
	          data.map = new MapCache(array);
	        }
	      }
	      var map = data.map;
	      if (map) {
	        map.set(key, value);
	      }
	      return this;
	    }

	    // Add methods to `Stack`.
	    Stack.prototype.clear = stackClear;
	    Stack.prototype['delete'] = stackDelete;
	    Stack.prototype.get = stackGet;
	    Stack.prototype.has = stackHas;
	    Stack.prototype.set = stackSet;

	    /*------------------------------------------------------------------------*/

	    /**
	     * Removes `key` and its value from the associative array.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {string} key The key of the value to remove.
	     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	     */
	    function assocDelete(array, key) {
	      var index = assocIndexOf(array, key);
	      if (index < 0) {
	        return false;
	      }
	      var lastIndex = array.length - 1;
	      if (index == lastIndex) {
	        array.pop();
	      } else {
	        splice.call(array, index, 1);
	      }
	      return true;
	    }

	    /**
	     * Gets the associative array value for `key`.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {string} key The key of the value to get.
	     * @returns {*} Returns the entry value.
	     */
	    function assocGet(array, key) {
	      var index = assocIndexOf(array, key);
	      return index < 0 ? undefined : array[index][1];
	    }

	    /**
	     * Checks if an associative array value for `key` exists.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {string} key The key of the entry to check.
	     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	     */
	    function assocHas(array, key) {
	      return assocIndexOf(array, key) > -1;
	    }

	    /**
	     * Gets the index at which the `key` is found in `array` of key-value pairs.
	     *
	     * @private
	     * @param {Array} array The array to search.
	     * @param {*} key The key to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     */
	    function assocIndexOf(array, key) {
	      var length = array.length;
	      while (length--) {
	        if (eq(array[length][0], key)) {
	          return length;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Sets the associative array `key` to `value`.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {string} key The key of the value to set.
	     * @param {*} value The value to set.
	     */
	    function assocSet(array, key, value) {
	      var index = assocIndexOf(array, key);
	      if (index < 0) {
	        array.push([key, value]);
	      } else {
	        array[index][1] = value;
	      }
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Used by `_.defaults` to customize its `_.assignIn` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to assign.
	     * @param {Object} object The parent object of `objValue`.
	     * @returns {*} Returns the value to assign.
	     */
	    function assignInDefaults(objValue, srcValue, key, object) {
	      if (objValue === undefined ||
	          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
	        return srcValue;
	      }
	      return objValue;
	    }

	    /**
	     * This function is like `assignValue` except that it doesn't assign
	     * `undefined` values.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignMergeValue(object, key, value) {
	      if ((value !== undefined && !eq(object[key], value)) ||
	          (typeof key == 'number' && value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }

	    /**
	     * Assigns `value` to `key` of `object` if the existing value is not equivalent
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {string} key The key of the property to assign.
	     * @param {*} value The value to assign.
	     */
	    function assignValue(object, key, value) {
	      var objValue = object[key];
	      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	          (value === undefined && !(key in object))) {
	        object[key] = value;
	      }
	    }

	    /**
	     * Aggregates elements of `collection` on `accumulator` with keys transformed
	     * by `iteratee` and values set by `setter`.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform keys.
	     * @param {Object} accumulator The initial aggregated object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseAggregator(collection, setter, iteratee, accumulator) {
	      baseEach(collection, function(value, key, collection) {
	        setter(accumulator, value, iteratee(value), collection);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.assign` without support for multiple sources
	     * or `customizer` functions.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @returns {Object} Returns `object`.
	     */
	    function baseAssign(object, source) {
	      return object && copyObject(source, keys(source), object);
	    }

	    /**
	     * The base implementation of `_.at` without support for individual paths.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {string[]} paths The property paths of elements to pick.
	     * @returns {Array} Returns the new array of picked elements.
	     */
	    function baseAt(object, paths) {
	      var index = -1,
	          isNil = object == null,
	          length = paths.length,
	          result = Array(length);

	      while (++index < length) {
	        result[index] = isNil ? undefined : get(object, paths[index]);
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     */
	    function baseClamp(number, lower, upper) {
	      if (number === number) {
	        if (upper !== undefined) {
	          number = number <= upper ? number : upper;
	        }
	        if (lower !== undefined) {
	          number = number >= lower ? number : lower;
	        }
	      }
	      return number;
	    }

	    /**
	     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	     * traversed objects.
	     *
	     * @private
	     * @param {*} value The value to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @param {boolean} [isFull] Specify a clone including symbols.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @param {string} [key] The key of `value`.
	     * @param {Object} [object] The parent object of `value`.
	     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	     * @returns {*} Returns the cloned value.
	     */
	    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	      var result;
	      if (customizer) {
	        result = object ? customizer(value, key, object, stack) : customizer(value);
	      }
	      if (result !== undefined) {
	        return result;
	      }
	      if (!isObject(value)) {
	        return value;
	      }
	      var isArr = isArray(value);
	      if (isArr) {
	        result = initCloneArray(value);
	        if (!isDeep) {
	          return copyArray(value, result);
	        }
	      } else {
	        var tag = getTag(value),
	            isFunc = tag == funcTag || tag == genTag;

	        if (isBuffer(value)) {
	          return cloneBuffer(value, isDeep);
	        }
	        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	          if (isHostObject(value)) {
	            return object ? value : {};
	          }
	          result = initCloneObject(isFunc ? {} : value);
	          if (!isDeep) {
	            return copySymbols(value, baseAssign(result, value));
	          }
	        } else {
	          if (!cloneableTags[tag]) {
	            return object ? value : {};
	          }
	          result = initCloneByTag(value, tag, baseClone, isDeep);
	        }
	      }
	      // Check for circular references and return its corresponding clone.
	      stack || (stack = new Stack);
	      var stacked = stack.get(value);
	      if (stacked) {
	        return stacked;
	      }
	      stack.set(value, result);

	      if (!isArr) {
	        var props = isFull ? getAllKeys(value) : keys(value);
	      }
	      // Recursively populate clone (susceptible to call stack limits).
	      arrayEach(props || value, function(subValue, key) {
	        if (props) {
	          key = subValue;
	          subValue = value[key];
	        }
	        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.conforms` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new function.
	     */
	    function baseConforms(source) {
	      var props = keys(source),
	          length = props.length;

	      return function(object) {
	        if (object == null) {
	          return !length;
	        }
	        var index = length;
	        while (index--) {
	          var key = props[index],
	              predicate = source[key],
	              value = object[key];

	          if ((value === undefined &&
	              !(key in Object(object))) || !predicate(value)) {
	            return false;
	          }
	        }
	        return true;
	      };
	    }

	    /**
	     * The base implementation of `_.create` without support for assigning
	     * properties to the created object.
	     *
	     * @private
	     * @param {Object} prototype The object to inherit from.
	     * @returns {Object} Returns the new object.
	     */
	    function baseCreate(proto) {
	      return isObject(proto) ? objectCreate(proto) : {};
	    }

	    /**
	     * The base implementation of `_.delay` and `_.defer` which accepts an array
	     * of `func` arguments.
	     *
	     * @private
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {Object} args The arguments to provide to `func`.
	     * @returns {number} Returns the timer id.
	     */
	    function baseDelay(func, wait, args) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return setTimeout(function() { func.apply(undefined, args); }, wait);
	    }

	    /**
	     * The base implementation of methods like `_.difference` without support
	     * for excluding multiple arrays or iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Array} values The values to exclude.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     */
	    function baseDifference(array, values, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          isCommon = true,
	          length = array.length,
	          result = [],
	          valuesLength = values.length;

	      if (!length) {
	        return result;
	      }
	      if (iteratee) {
	        values = arrayMap(values, baseUnary(iteratee));
	      }
	      if (comparator) {
	        includes = arrayIncludesWith;
	        isCommon = false;
	      }
	      else if (values.length >= LARGE_ARRAY_SIZE) {
	        includes = cacheHas;
	        isCommon = false;
	        values = new SetCache(values);
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (isCommon && computed === computed) {
	          var valuesIndex = valuesLength;
	          while (valuesIndex--) {
	            if (values[valuesIndex] === computed) {
	              continue outer;
	            }
	          }
	          result.push(value);
	        }
	        else if (!includes(values, computed, comparator)) {
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.forEach` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEach = createBaseEach(baseForOwn);

	    /**
	     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     */
	    var baseEachRight = createBaseEach(baseForOwnRight, true);

	    /**
	     * The base implementation of `_.every` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`
	     */
	    function baseEvery(collection, predicate) {
	      var result = true;
	      baseEach(collection, function(value, index, collection) {
	        result = !!predicate(value, index, collection);
	        return result;
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.fill` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     */
	    function baseFill(array, value, start, end) {
	      var length = array.length;

	      start = toInteger(start);
	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = (end === undefined || end > length) ? length : toInteger(end);
	      if (end < 0) {
	        end += length;
	      }
	      end = start > end ? 0 : toLength(end);
	      while (start < end) {
	        array[start++] = value;
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.filter` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     */
	    function baseFilter(collection, predicate) {
	      var result = [];
	      baseEach(collection, function(value, index, collection) {
	        if (predicate(value, index, collection)) {
	          result.push(value);
	        }
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.flatten` with support for restricting flattening.
	     *
	     * @private
	     * @param {Array} array The array to flatten.
	     * @param {number} depth The maximum recursion depth.
	     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	     * @param {Array} [result=[]] The initial result value.
	     * @returns {Array} Returns the new flattened array.
	     */
	    function baseFlatten(array, depth, predicate, isStrict, result) {
	      var index = -1,
	          length = array.length;

	      predicate || (predicate = isFlattenable);
	      result || (result = []);

	      while (++index < length) {
	        var value = array[index];
	        if (depth > 0 && predicate(value)) {
	          if (depth > 1) {
	            // Recursively flatten arrays (susceptible to call stack limits).
	            baseFlatten(value, depth - 1, predicate, isStrict, result);
	          } else {
	            arrayPush(result, value);
	          }
	        } else if (!isStrict) {
	          result[result.length] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `baseForOwn` which iterates over `object`
	     * properties returned by `keysFunc` and invokes `iteratee` for each property.
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseFor = createBaseFor();

	    /**
	     * This function is like `baseFor` except that it iterates over properties
	     * in the opposite order.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @returns {Object} Returns `object`.
	     */
	    var baseForRight = createBaseFor(true);

	    /**
	     * The base implementation of `_.forOwn` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwn(object, iteratee) {
	      return object && baseFor(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     */
	    function baseForOwnRight(object, iteratee) {
	      return object && baseForRight(object, iteratee, keys);
	    }

	    /**
	     * The base implementation of `_.functions` which creates an array of
	     * `object` function property names filtered from `props`.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Array} props The property names to filter.
	     * @returns {Array} Returns the new array of filtered property names.
	     */
	    function baseFunctions(object, props) {
	      return arrayFilter(props, function(key) {
	        return isFunction(object[key]);
	      });
	    }

	    /**
	     * The base implementation of `_.get` without support for default values.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseGet(object, path) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = 0,
	          length = path.length;

	      while (object != null && index < length) {
	        object = object[path[index++]];
	      }
	      return (index && index == length) ? object : undefined;
	    }

	    /**
	     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Function} keysFunc The function to get the keys of `object`.
	     * @param {Function} symbolsFunc The function to get the symbols of `object`.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	      var result = keysFunc(object);
	      return isArray(object)
	        ? result
	        : arrayPush(result, symbolsFunc(object));
	    }

	    /**
	     * The base implementation of `_.has` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHas(object, key) {
	      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
	      // that are composed entirely of index properties, return `false` for
	      // `hasOwnProperty` checks of them.
	      return hasOwnProperty.call(object, key) ||
	        (typeof object == 'object' && key in object && getPrototype(object) === null);
	    }

	    /**
	     * The base implementation of `_.hasIn` without support for deep paths.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} key The key to check.
	     * @returns {boolean} Returns `true` if `key` exists, else `false`.
	     */
	    function baseHasIn(object, key) {
	      return key in Object(object);
	    }

	    /**
	     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} number The number to check.
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     */
	    function baseInRange(number, start, end) {
	      return number >= nativeMin(start, end) && number < nativeMax(start, end);
	    }

	    /**
	     * The base implementation of methods like `_.intersection`, without support
	     * for iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of shared values.
	     */
	    function baseIntersection(arrays, iteratee, comparator) {
	      var includes = comparator ? arrayIncludesWith : arrayIncludes,
	          length = arrays[0].length,
	          othLength = arrays.length,
	          othIndex = othLength,
	          caches = Array(othLength),
	          maxLength = Infinity,
	          result = [];

	      while (othIndex--) {
	        var array = arrays[othIndex];
	        if (othIndex && iteratee) {
	          array = arrayMap(array, baseUnary(iteratee));
	        }
	        maxLength = nativeMin(array.length, maxLength);
	        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	          ? new SetCache(othIndex && array)
	          : undefined;
	      }
	      array = arrays[0];

	      var index = -1,
	          seen = caches[0];

	      outer:
	      while (++index < length && result.length < maxLength) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (!(seen
	              ? cacheHas(seen, computed)
	              : includes(result, computed, comparator)
	            )) {
	          othIndex = othLength;
	          while (--othIndex) {
	            var cache = caches[othIndex];
	            if (!(cache
	                  ? cacheHas(cache, computed)
	                  : includes(arrays[othIndex], computed, comparator))
	                ) {
	              continue outer;
	            }
	          }
	          if (seen) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.invert` and `_.invertBy` which inverts
	     * `object` with values transformed by `iteratee` and set by `setter`.
	     *
	     * @private
	     * @param {Object} object The object to iterate over.
	     * @param {Function} setter The function to set `accumulator` values.
	     * @param {Function} iteratee The iteratee to transform values.
	     * @param {Object} accumulator The initial inverted object.
	     * @returns {Function} Returns `accumulator`.
	     */
	    function baseInverter(object, setter, iteratee, accumulator) {
	      baseForOwn(object, function(value, key, object) {
	        setter(accumulator, iteratee(value), key, object);
	      });
	      return accumulator;
	    }

	    /**
	     * The base implementation of `_.invoke` without support for individual
	     * method arguments.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {Array} args The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     */
	    function baseInvoke(object, path, args) {
	      if (!isKey(path, object)) {
	        path = castPath(path);
	        object = parent(object, path);
	        path = last(path);
	      }
	      var func = object == null ? object : object[path];
	      return func == null ? undefined : apply(func, object, args);
	    }

	    /**
	     * The base implementation of `_.isEqual` which supports partial comparisons
	     * and tracks traversed objects.
	     *
	     * @private
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {boolean} [bitmask] The bitmask of comparison flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - Unordered comparison
	     *     2 - Partial comparison
	     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     */
	    function baseIsEqual(value, other, customizer, bitmask, stack) {
	      if (value === other) {
	        return true;
	      }
	      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
	        return value !== value && other !== other;
	      }
	      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
	    }

	    /**
	     * A specialized version of `baseIsEqual` for arrays and objects which performs
	     * deep comparisons and tracks traversed objects enabling objects with circular
	     * references to be compared.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
	      var objIsArr = isArray(object),
	          othIsArr = isArray(other),
	          objTag = arrayTag,
	          othTag = arrayTag;

	      if (!objIsArr) {
	        objTag = getTag(object);
	        objTag = objTag == argsTag ? objectTag : objTag;
	      }
	      if (!othIsArr) {
	        othTag = getTag(other);
	        othTag = othTag == argsTag ? objectTag : othTag;
	      }
	      var objIsObj = objTag == objectTag && !isHostObject(object),
	          othIsObj = othTag == objectTag && !isHostObject(other),
	          isSameTag = objTag == othTag;

	      if (isSameTag && !objIsObj) {
	        stack || (stack = new Stack);
	        return (objIsArr || isTypedArray(object))
	          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
	          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
	      }
	      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
	        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	        if (objIsWrapped || othIsWrapped) {
	          var objUnwrapped = objIsWrapped ? object.value() : object,
	              othUnwrapped = othIsWrapped ? other.value() : other;

	          stack || (stack = new Stack);
	          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
	        }
	      }
	      if (!isSameTag) {
	        return false;
	      }
	      stack || (stack = new Stack);
	      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
	    }

	    /**
	     * The base implementation of `_.isMatch` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Array} matchData The property names, values, and compare flags to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     */
	    function baseIsMatch(object, source, matchData, customizer) {
	      var index = matchData.length,
	          length = index,
	          noCustomizer = !customizer;

	      if (object == null) {
	        return !length;
	      }
	      object = Object(object);
	      while (index--) {
	        var data = matchData[index];
	        if ((noCustomizer && data[2])
	              ? data[1] !== object[data[0]]
	              : !(data[0] in object)
	            ) {
	          return false;
	        }
	      }
	      while (++index < length) {
	        data = matchData[index];
	        var key = data[0],
	            objValue = object[key],
	            srcValue = data[1];

	        if (noCustomizer && data[2]) {
	          if (objValue === undefined && !(key in object)) {
	            return false;
	          }
	        } else {
	          var stack = new Stack;
	          if (customizer) {
	            var result = customizer(objValue, srcValue, key, object, source, stack);
	          }
	          if (!(result === undefined
	                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
	                : result
	              )) {
	            return false;
	          }
	        }
	      }
	      return true;
	    }

	    /**
	     * The base implementation of `_.iteratee`.
	     *
	     * @private
	     * @param {*} [value=_.identity] The value to convert to an iteratee.
	     * @returns {Function} Returns the iteratee.
	     */
	    function baseIteratee(value) {
	      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	      if (typeof value == 'function') {
	        return value;
	      }
	      if (value == null) {
	        return identity;
	      }
	      if (typeof value == 'object') {
	        return isArray(value)
	          ? baseMatchesProperty(value[0], value[1])
	          : baseMatches(value);
	      }
	      return property(value);
	    }

	    /**
	     * The base implementation of `_.keys` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeys(object) {
	      return nativeKeys(Object(object));
	    }

	    /**
	     * The base implementation of `_.keysIn` which doesn't skip the constructor
	     * property of prototypes or treat sparse arrays as dense.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     */
	    function baseKeysIn(object) {
	      object = object == null ? object : Object(object);

	      var result = [];
	      for (var key in object) {
	        result.push(key);
	      }
	      return result;
	    }

	    // Fallback for IE < 9 with es6-shim.
	    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
	      baseKeysIn = function(object) {
	        return iteratorToArray(enumerate(object));
	      };
	    }

	    /**
	     * The base implementation of `_.map` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} iteratee The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     */
	    function baseMap(collection, iteratee) {
	      var index = -1,
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value, key, collection) {
	        result[++index] = iteratee(value, key, collection);
	      });
	      return result;
	    }

	    /**
	     * The base implementation of `_.matches` which doesn't clone `source`.
	     *
	     * @private
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatches(source) {
	      var matchData = getMatchData(source);
	      if (matchData.length == 1 && matchData[0][2]) {
	        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	      }
	      return function(object) {
	        return object === source || baseIsMatch(object, source, matchData);
	      };
	    }

	    /**
	     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	     *
	     * @private
	     * @param {string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     */
	    function baseMatchesProperty(path, srcValue) {
	      if (isKey(path) && isStrictComparable(srcValue)) {
	        return matchesStrictComparable(path, srcValue);
	      }
	      return function(object) {
	        var objValue = get(object, path);
	        return (objValue === undefined && objValue === srcValue)
	          ? hasIn(object, path)
	          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
	      };
	    }

	    /**
	     * The base implementation of `_.merge` without support for multiple sources.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} [customizer] The function to customize merged values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMerge(object, source, srcIndex, customizer, stack) {
	      if (object === source) {
	        return;
	      }
	      if (!(isArray(source) || isTypedArray(source))) {
	        var props = keysIn(source);
	      }
	      arrayEach(props || source, function(srcValue, key) {
	        if (props) {
	          key = srcValue;
	          srcValue = source[key];
	        }
	        if (isObject(srcValue)) {
	          stack || (stack = new Stack);
	          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	        }
	        else {
	          var newValue = customizer
	            ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	            : undefined;

	          if (newValue === undefined) {
	            newValue = srcValue;
	          }
	          assignMergeValue(object, key, newValue);
	        }
	      });
	    }

	    /**
	     * A specialized version of `baseMerge` for arrays and objects which performs
	     * deep merges and tracks traversed objects enabling objects with circular
	     * references to be merged.
	     *
	     * @private
	     * @param {Object} object The destination object.
	     * @param {Object} source The source object.
	     * @param {string} key The key of the value to merge.
	     * @param {number} srcIndex The index of `source`.
	     * @param {Function} mergeFunc The function to merge values.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     */
	    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	      var objValue = object[key],
	          srcValue = source[key],
	          stacked = stack.get(srcValue);

	      if (stacked) {
	        assignMergeValue(object, key, stacked);
	        return;
	      }
	      var newValue = customizer
	        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	        : undefined;

	      var isCommon = newValue === undefined;

	      if (isCommon) {
	        newValue = srcValue;
	        if (isArray(srcValue) || isTypedArray(srcValue)) {
	          if (isArray(objValue)) {
	            newValue = objValue;
	          }
	          else if (isArrayLikeObject(objValue)) {
	            newValue = copyArray(objValue);
	          }
	          else {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	        }
	        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	          if (isArguments(objValue)) {
	            newValue = toPlainObject(objValue);
	          }
	          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	            isCommon = false;
	            newValue = baseClone(srcValue, true);
	          }
	          else {
	            newValue = objValue;
	          }
	        }
	        else {
	          isCommon = false;
	        }
	      }
	      stack.set(srcValue, newValue);

	      if (isCommon) {
	        // Recursively merge objects and arrays (susceptible to call stack limits).
	        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	      }
	      stack['delete'](srcValue);
	      assignMergeValue(object, key, newValue);
	    }

	    /**
	     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {number} n The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     */
	    function baseNth(array, n) {
	      var length = array.length;
	      if (!length) {
	        return;
	      }
	      n += n < 0 ? length : 0;
	      return isIndex(n, length) ? array[n] : undefined;
	    }

	    /**
	     * The base implementation of `_.orderBy` without param guards.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	     * @param {string[]} orders The sort orders of `iteratees`.
	     * @returns {Array} Returns the new sorted array.
	     */
	    function baseOrderBy(collection, iteratees, orders) {
	      var index = -1;
	      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));

	      var result = baseMap(collection, function(value, key, collection) {
	        var criteria = arrayMap(iteratees, function(iteratee) {
	          return iteratee(value);
	        });
	        return { 'criteria': criteria, 'index': ++index, 'value': value };
	      });

	      return baseSortBy(result, function(object, other) {
	        return compareMultiple(object, other, orders);
	      });
	    }

	    /**
	     * The base implementation of `_.pick` without support for individual
	     * property identifiers.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {string[]} props The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     */
	    function basePick(object, props) {
	      object = Object(object);
	      return arrayReduce(props, function(result, key) {
	        if (key in object) {
	          result[key] = object[key];
	        }
	        return result;
	      }, {});
	    }

	    /**
	     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Object} object The source object.
	     * @param {Function} predicate The function invoked per property.
	     * @returns {Object} Returns the new object.
	     */
	    function basePickBy(object, predicate) {
	      var index = -1,
	          props = getAllKeysIn(object),
	          length = props.length,
	          result = {};

	      while (++index < length) {
	        var key = props[index],
	            value = object[key];

	        if (predicate(value, key)) {
	          result[key] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.property` without support for deep paths.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function baseProperty(key) {
	      return function(object) {
	        return object == null ? undefined : object[key];
	      };
	    }

	    /**
	     * A specialized version of `baseProperty` which supports deep paths.
	     *
	     * @private
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     */
	    function basePropertyDeep(path) {
	      return function(object) {
	        return baseGet(object, path);
	      };
	    }

	    /**
	     * The base implementation of `_.pullAllBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAll(array, values, iteratee, comparator) {
	      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
	          index = -1,
	          length = values.length,
	          seen = array;

	      if (iteratee) {
	        seen = arrayMap(array, baseUnary(iteratee));
	      }
	      while (++index < length) {
	        var fromIndex = 0,
	            value = values[index],
	            computed = iteratee ? iteratee(value) : value;

	        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
	          if (seen !== array) {
	            splice.call(seen, fromIndex, 1);
	          }
	          splice.call(array, fromIndex, 1);
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.pullAt` without support for individual
	     * indexes or capturing the removed elements.
	     *
	     * @private
	     * @param {Array} array The array to modify.
	     * @param {number[]} indexes The indexes of elements to remove.
	     * @returns {Array} Returns `array`.
	     */
	    function basePullAt(array, indexes) {
	      var length = array ? indexes.length : 0,
	          lastIndex = length - 1;

	      while (length--) {
	        var index = indexes[length];
	        if (lastIndex == length || index != previous) {
	          var previous = index;
	          if (isIndex(index)) {
	            splice.call(array, index, 1);
	          }
	          else if (!isKey(index, array)) {
	            var path = castPath(index),
	                object = parent(array, path);

	            if (object != null) {
	              delete object[last(path)];
	            }
	          }
	          else {
	            delete array[index];
	          }
	        }
	      }
	      return array;
	    }

	    /**
	     * The base implementation of `_.random` without support for returning
	     * floating-point numbers.
	     *
	     * @private
	     * @param {number} lower The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the random number.
	     */
	    function baseRandom(lower, upper) {
	      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
	    }

	    /**
	     * The base implementation of `_.range` and `_.rangeRight` which doesn't
	     * coerce arguments to numbers.
	     *
	     * @private
	     * @param {number} start The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} step The value to increment or decrement by.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the new array of numbers.
	     */
	    function baseRange(start, end, step, fromRight) {
	      var index = -1,
	          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
	          result = Array(length);

	      while (length--) {
	        result[fromRight ? length : ++index] = start;
	        start += step;
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.repeat` which doesn't coerce arguments.
	     *
	     * @private
	     * @param {string} string The string to repeat.
	     * @param {number} n The number of times to repeat the string.
	     * @returns {string} Returns the repeated string.
	     */
	    function baseRepeat(string, n) {
	      var result = '';
	      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
	        return result;
	      }
	      // Leverage the exponentiation by squaring algorithm for a faster repeat.
	      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
	      do {
	        if (n % 2) {
	          result += string;
	        }
	        n = nativeFloor(n / 2);
	        if (n) {
	          string += string;
	        }
	      } while (n);

	      return result;
	    }

	    /**
	     * The base implementation of `_.set`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseSet(object, path, value, customizer) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = -1,
	          length = path.length,
	          lastIndex = length - 1,
	          nested = object;

	      while (nested != null && ++index < length) {
	        var key = path[index];
	        if (isObject(nested)) {
	          var newValue = value;
	          if (index != lastIndex) {
	            var objValue = nested[key];
	            newValue = customizer ? customizer(objValue, key, nested) : undefined;
	            if (newValue === undefined) {
	              newValue = objValue == null
	                ? (isIndex(path[index + 1]) ? [] : {})
	                : objValue;
	            }
	          }
	          assignValue(nested, key, newValue);
	        }
	        nested = nested[key];
	      }
	      return object;
	    }

	    /**
	     * The base implementation of `setData` without support for hot loop detection.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var baseSetData = !metaMap ? identity : function(func, data) {
	      metaMap.set(func, data);
	      return func;
	    };

	    /**
	     * The base implementation of `_.slice` without an iteratee call guard.
	     *
	     * @private
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseSlice(array, start, end) {
	      var index = -1,
	          length = array.length;

	      if (start < 0) {
	        start = -start > length ? 0 : (length + start);
	      }
	      end = end > length ? length : end;
	      if (end < 0) {
	        end += length;
	      }
	      length = start > end ? 0 : ((end - start) >>> 0);
	      start >>>= 0;

	      var result = Array(length);
	      while (++index < length) {
	        result[index] = array[index + start];
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.some` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} predicate The function invoked per iteration.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     */
	    function baseSome(collection, predicate) {
	      var result;

	      baseEach(collection, function(value, index, collection) {
	        result = predicate(value, index, collection);
	        return !result;
	      });
	      return !!result;
	    }

	    /**
	     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
	     * performs a binary search of `array` to determine the index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndex(array, value, retHighest) {
	      var low = 0,
	          high = array ? array.length : low;

	      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
	        while (low < high) {
	          var mid = (low + high) >>> 1,
	              computed = array[mid];

	          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
	            low = mid + 1;
	          } else {
	            high = mid;
	          }
	        }
	        return high;
	      }
	      return baseSortedIndexBy(array, value, identity, retHighest);
	    }

	    /**
	     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
	     * which invokes `iteratee` for `value` and each element of `array` to compute
	     * their sort ranking. The iteratee is invoked with one argument; (value).
	     *
	     * @private
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Function} iteratee The iteratee invoked per element.
	     * @param {boolean} [retHighest] Specify returning the highest qualified index.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     */
	    function baseSortedIndexBy(array, value, iteratee, retHighest) {
	      value = iteratee(value);

	      var low = 0,
	          high = array ? array.length : 0,
	          valIsNaN = value !== value,
	          valIsNull = value === null,
	          valIsUndef = value === undefined;

	      while (low < high) {
	        var mid = nativeFloor((low + high) / 2),
	            computed = iteratee(array[mid]),
	            isDef = computed !== undefined,
	            isReflexive = computed === computed;

	        if (valIsNaN) {
	          var setLow = isReflexive || retHighest;
	        } else if (valIsNull) {
	          setLow = isReflexive && isDef && (retHighest || computed != null);
	        } else if (valIsUndef) {
	          setLow = isReflexive && (retHighest || isDef);
	        } else if (computed == null) {
	          setLow = false;
	        } else {
	          setLow = retHighest ? (computed <= value) : (computed < value);
	        }
	        if (setLow) {
	          low = mid + 1;
	        } else {
	          high = mid;
	        }
	      }
	      return nativeMin(high, MAX_ARRAY_INDEX);
	    }

	    /**
	     * The base implementation of `_.sortedUniq`.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniq(array) {
	      return baseSortedUniqBy(array);
	    }

	    /**
	     * The base implementation of `_.sortedUniqBy` without support for iteratee
	     * shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseSortedUniqBy(array, iteratee) {
	      var index = 0,
	          length = array.length,
	          value = array[0],
	          computed = iteratee ? iteratee(value) : value,
	          seen = computed,
	          resIndex = 1,
	          result = [value];

	      while (++index < length) {
	        value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	        if (!eq(computed, seen)) {
	          seen = computed;
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     */
	    function baseUniq(array, iteratee, comparator) {
	      var index = -1,
	          includes = arrayIncludes,
	          length = array.length,
	          isCommon = true,
	          result = [],
	          seen = result;

	      if (comparator) {
	        isCommon = false;
	        includes = arrayIncludesWith;
	      }
	      else if (length >= LARGE_ARRAY_SIZE) {
	        var set = iteratee ? null : createSet(array);
	        if (set) {
	          return setToArray(set);
	        }
	        isCommon = false;
	        includes = cacheHas;
	        seen = new SetCache;
	      }
	      else {
	        seen = iteratee ? [] : result;
	      }
	      outer:
	      while (++index < length) {
	        var value = array[index],
	            computed = iteratee ? iteratee(value) : value;

	        if (isCommon && computed === computed) {
	          var seenIndex = seen.length;
	          while (seenIndex--) {
	            if (seen[seenIndex] === computed) {
	              continue outer;
	            }
	          }
	          if (iteratee) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	        else if (!includes(seen, computed, comparator)) {
	          if (seen !== result) {
	            seen.push(computed);
	          }
	          result.push(value);
	        }
	      }
	      return result;
	    }

	    /**
	     * The base implementation of `_.unset`.
	     *
	     * @private
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     */
	    function baseUnset(object, path) {
	      path = isKey(path, object) ? [path] : castPath(path);
	      object = parent(object, path);
	      var key = last(path);
	      return (object != null && has(object, key)) ? delete object[key] : true;
	    }

	    /**
	     * The base implementation of `_.update`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to update.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize path creation.
	     * @returns {Object} Returns `object`.
	     */
	    function baseUpdate(object, path, updater, customizer) {
	      return baseSet(object, path, updater(baseGet(object, path)), customizer);
	    }

	    /**
	     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
	     * without support for iteratee shorthands.
	     *
	     * @private
	     * @param {Array} array The array to query.
	     * @param {Function} predicate The function invoked per iteration.
	     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function baseWhile(array, predicate, isDrop, fromRight) {
	      var length = array.length,
	          index = fromRight ? length : -1;

	      while ((fromRight ? index-- : ++index < length) &&
	        predicate(array[index], index, array)) {}

	      return isDrop
	        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
	        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
	    }

	    /**
	     * The base implementation of `wrapperValue` which returns the result of
	     * performing a sequence of actions on the unwrapped `value`, where each
	     * successive action is supplied the return value of the previous.
	     *
	     * @private
	     * @param {*} value The unwrapped value.
	     * @param {Array} actions Actions to perform to resolve the unwrapped value.
	     * @returns {*} Returns the resolved value.
	     */
	    function baseWrapperValue(value, actions) {
	      var result = value;
	      if (result instanceof LazyWrapper) {
	        result = result.value();
	      }
	      return arrayReduce(actions, function(result, action) {
	        return action.func.apply(action.thisArg, arrayPush([result], action.args));
	      }, result);
	    }

	    /**
	     * The base implementation of methods like `_.xor`, without support for
	     * iteratee shorthands, that accepts an array of arrays to inspect.
	     *
	     * @private
	     * @param {Array} arrays The arrays to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     */
	    function baseXor(arrays, iteratee, comparator) {
	      var index = -1,
	          length = arrays.length;

	      while (++index < length) {
	        var result = result
	          ? arrayPush(
	              baseDifference(result, arrays[index], iteratee, comparator),
	              baseDifference(arrays[index], result, iteratee, comparator)
	            )
	          : arrays[index];
	      }
	      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];
	    }

	    /**
	     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
	     *
	     * @private
	     * @param {Array} props The property identifiers.
	     * @param {Array} values The property values.
	     * @param {Function} assignFunc The function to assign values.
	     * @returns {Object} Returns the new object.
	     */
	    function baseZipObject(props, values, assignFunc) {
	      var index = -1,
	          length = props.length,
	          valsLength = values.length,
	          result = {};

	      while (++index < length) {
	        var value = index < valsLength ? values[index] : undefined;
	        assignFunc(result, props[index], value);
	      }
	      return result;
	    }

	    /**
	     * Casts `value` to an empty array if it's not an array like object.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array|Object} Returns the cast array-like object.
	     */
	    function castArrayLikeObject(value) {
	      return isArrayLikeObject(value) ? value : [];
	    }

	    /**
	     * Casts `value` to `identity` if it's not a function.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Function} Returns cast function.
	     */
	    function castFunction(value) {
	      return typeof value == 'function' ? value : identity;
	    }

	    /**
	     * Casts `value` to a path array if it's not one.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast property path array.
	     */
	    function castPath(value) {
	      return isArray(value) ? value : stringToPath(value);
	    }

	    /**
	     * Casts `array` to a slice if it's needed.
	     *
	     * @private
	     * @param {Array} array The array to inspect.
	     * @param {number} start The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the cast slice.
	     */
	    function castSlice(array, start, end) {
	      var length = array.length;
	      end = end === undefined ? length : end;
	      return (!start && end >= length) ? array : baseSlice(array, start, end);
	    }

	    /**
	     * Creates a clone of  `buffer`.
	     *
	     * @private
	     * @param {Buffer} buffer The buffer to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Buffer} Returns the cloned buffer.
	     */
	    function cloneBuffer(buffer, isDeep) {
	      if (isDeep) {
	        return buffer.slice();
	      }
	      var result = new buffer.constructor(buffer.length);
	      buffer.copy(result);
	      return result;
	    }

	    /**
	     * Creates a clone of `arrayBuffer`.
	     *
	     * @private
	     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	     * @returns {ArrayBuffer} Returns the cloned array buffer.
	     */
	    function cloneArrayBuffer(arrayBuffer) {
	      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	      return result;
	    }

	    /**
	     * Creates a clone of `dataView`.
	     *
	     * @private
	     * @param {Object} dataView The data view to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned data view.
	     */
	    function cloneDataView(dataView, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	    }

	    /**
	     * Creates a clone of `map`.
	     *
	     * @private
	     * @param {Object} map The map to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned map.
	     */
	    function cloneMap(map, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	      return arrayReduce(array, addMapEntry, new map.constructor);
	    }

	    /**
	     * Creates a clone of `regexp`.
	     *
	     * @private
	     * @param {Object} regexp The regexp to clone.
	     * @returns {Object} Returns the cloned regexp.
	     */
	    function cloneRegExp(regexp) {
	      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	      result.lastIndex = regexp.lastIndex;
	      return result;
	    }

	    /**
	     * Creates a clone of `set`.
	     *
	     * @private
	     * @param {Object} set The set to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned set.
	     */
	    function cloneSet(set, isDeep, cloneFunc) {
	      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	      return arrayReduce(array, addSetEntry, new set.constructor);
	    }

	    /**
	     * Creates a clone of the `symbol` object.
	     *
	     * @private
	     * @param {Object} symbol The symbol object to clone.
	     * @returns {Object} Returns the cloned symbol object.
	     */
	    function cloneSymbol(symbol) {
	      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	    }

	    /**
	     * Creates a clone of `typedArray`.
	     *
	     * @private
	     * @param {Object} typedArray The typed array to clone.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the cloned typed array.
	     */
	    function cloneTypedArray(typedArray, isDeep) {
	      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	    }

	    /**
	     * Creates an array that is the composition of partially applied arguments,
	     * placeholders, and provided arguments into a single array of arguments.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to prepend to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgs(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersLength = holders.length,
	          leftIndex = -1,
	          leftLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(leftLength + rangeLength),
	          isUncurried = !isCurried;

	      while (++leftIndex < leftLength) {
	        result[leftIndex] = partials[leftIndex];
	      }
	      while (++argsIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[holders[argsIndex]] = args[argsIndex];
	        }
	      }
	      while (rangeLength--) {
	        result[leftIndex++] = args[argsIndex++];
	      }
	      return result;
	    }

	    /**
	     * This function is like `composeArgs` except that the arguments composition
	     * is tailored for `_.partialRight`.
	     *
	     * @private
	     * @param {Array|Object} args The provided arguments.
	     * @param {Array} partials The arguments to append to those provided.
	     * @param {Array} holders The `partials` placeholder indexes.
	     * @params {boolean} [isCurried] Specify composing for a curried function.
	     * @returns {Array} Returns the new array of composed arguments.
	     */
	    function composeArgsRight(args, partials, holders, isCurried) {
	      var argsIndex = -1,
	          argsLength = args.length,
	          holdersIndex = -1,
	          holdersLength = holders.length,
	          rightIndex = -1,
	          rightLength = partials.length,
	          rangeLength = nativeMax(argsLength - holdersLength, 0),
	          result = Array(rangeLength + rightLength),
	          isUncurried = !isCurried;

	      while (++argsIndex < rangeLength) {
	        result[argsIndex] = args[argsIndex];
	      }
	      var offset = argsIndex;
	      while (++rightIndex < rightLength) {
	        result[offset + rightIndex] = partials[rightIndex];
	      }
	      while (++holdersIndex < holdersLength) {
	        if (isUncurried || argsIndex < argsLength) {
	          result[offset + holders[holdersIndex]] = args[argsIndex++];
	        }
	      }
	      return result;
	    }

	    /**
	     * Copies the values of `source` to `array`.
	     *
	     * @private
	     * @param {Array} source The array to copy values from.
	     * @param {Array} [array=[]] The array to copy values to.
	     * @returns {Array} Returns `array`.
	     */
	    function copyArray(source, array) {
	      var index = -1,
	          length = source.length;

	      array || (array = Array(length));
	      while (++index < length) {
	        array[index] = source[index];
	      }
	      return array;
	    }

	    /**
	     * Copies properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy properties from.
	     * @param {Array} props The property identifiers to copy.
	     * @param {Object} [object={}] The object to copy properties to.
	     * @param {Function} [customizer] The function to customize copied values.
	     * @returns {Object} Returns `object`.
	     */
	    function copyObject(source, props, object, customizer) {
	      object || (object = {});

	      var index = -1,
	          length = props.length;

	      while (++index < length) {
	        var key = props[index];

	        var newValue = customizer
	          ? customizer(object[key], source[key], key, object, source)
	          : source[key];

	        assignValue(object, key, newValue);
	      }
	      return object;
	    }

	    /**
	     * Copies own symbol properties of `source` to `object`.
	     *
	     * @private
	     * @param {Object} source The object to copy symbols from.
	     * @param {Object} [object={}] The object to copy symbols to.
	     * @returns {Object} Returns `object`.
	     */
	    function copySymbols(source, object) {
	      return copyObject(source, getSymbols(source), object);
	    }

	    /**
	     * Creates a function like `_.groupBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} [initializer] The accumulator object initializer.
	     * @returns {Function} Returns the new aggregator function.
	     */
	    function createAggregator(setter, initializer) {
	      return function(collection, iteratee) {
	        var func = isArray(collection) ? arrayAggregator : baseAggregator,
	            accumulator = initializer ? initializer() : {};

	        return func(collection, setter, getIteratee(iteratee), accumulator);
	      };
	    }

	    /**
	     * Creates a function like `_.assign`.
	     *
	     * @private
	     * @param {Function} assigner The function to assign values.
	     * @returns {Function} Returns the new assigner function.
	     */
	    function createAssigner(assigner) {
	      return rest(function(object, sources) {
	        var index = -1,
	            length = sources.length,
	            customizer = length > 1 ? sources[length - 1] : undefined,
	            guard = length > 2 ? sources[2] : undefined;

	        customizer = typeof customizer == 'function'
	          ? (length--, customizer)
	          : undefined;

	        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	          customizer = length < 3 ? undefined : customizer;
	          length = 1;
	        }
	        object = Object(object);
	        while (++index < length) {
	          var source = sources[index];
	          if (source) {
	            assigner(object, source, index, customizer);
	          }
	        }
	        return object;
	      });
	    }

	    /**
	     * Creates a `baseEach` or `baseEachRight` function.
	     *
	     * @private
	     * @param {Function} eachFunc The function to iterate over a collection.
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseEach(eachFunc, fromRight) {
	      return function(collection, iteratee) {
	        if (collection == null) {
	          return collection;
	        }
	        if (!isArrayLike(collection)) {
	          return eachFunc(collection, iteratee);
	        }
	        var length = collection.length,
	            index = fromRight ? length : -1,
	            iterable = Object(collection);

	        while ((fromRight ? index-- : ++index < length)) {
	          if (iteratee(iterable[index], index, iterable) === false) {
	            break;
	          }
	        }
	        return collection;
	      };
	    }

	    /**
	     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new base function.
	     */
	    function createBaseFor(fromRight) {
	      return function(object, iteratee, keysFunc) {
	        var index = -1,
	            iterable = Object(object),
	            props = keysFunc(object),
	            length = props.length;

	        while (length--) {
	          var key = props[fromRight ? length : ++index];
	          if (iteratee(iterable[key], key, iterable) === false) {
	            break;
	          }
	        }
	        return object;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the optional `this`
	     * binding of `thisArg`.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createBaseWrapper(func, bitmask, thisArg) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtorWrapper(func);

	      function wrapper() {
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return fn.apply(isBind ? thisArg : this, arguments);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.lowerFirst`.
	     *
	     * @private
	     * @param {string} methodName The name of the `String` case method to use.
	     * @returns {Function} Returns the new function.
	     */
	    function createCaseFirst(methodName) {
	      return function(string) {
	        string = toString(string);

	        var strSymbols = reHasComplexSymbol.test(string)
	          ? stringToArray(string)
	          : undefined;

	        var chr = strSymbols
	          ? strSymbols[0]
	          : string.charAt(0);

	        var trailing = strSymbols
	          ? castSlice(strSymbols, 1).join('')
	          : string.slice(1);

	        return chr[methodName]() + trailing;
	      };
	    }

	    /**
	     * Creates a function like `_.camelCase`.
	     *
	     * @private
	     * @param {Function} callback The function to combine each word.
	     * @returns {Function} Returns the new compounder function.
	     */
	    function createCompounder(callback) {
	      return function(string) {
	        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	      };
	    }

	    /**
	     * Creates a function that produces an instance of `Ctor` regardless of
	     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	     *
	     * @private
	     * @param {Function} Ctor The constructor to wrap.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCtorWrapper(Ctor) {
	      return function() {
	        // Use a `switch` statement to work with class constructors. See
	        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	        // for more details.
	        var args = arguments;
	        switch (args.length) {
	          case 0: return new Ctor;
	          case 1: return new Ctor(args[0]);
	          case 2: return new Ctor(args[0], args[1]);
	          case 3: return new Ctor(args[0], args[1], args[2]);
	          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	        }
	        var thisBinding = baseCreate(Ctor.prototype),
	            result = Ctor.apply(thisBinding, args);

	        // Mimic the constructor's `return` behavior.
	        // See https://es5.github.io/#x13.2.2 for more details.
	        return isObject(result) ? result : thisBinding;
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to enable currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {number} arity The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createCurryWrapper(func, bitmask, arity) {
	      var Ctor = createCtorWrapper(func);

	      function wrapper() {
	        var length = arguments.length,
	            args = Array(length),
	            index = length,
	            placeholder = getPlaceholder(wrapper);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	          ? []
	          : replaceHolders(args, placeholder);

	        length -= holders.length;
	        if (length < arity) {
	          return createRecurryWrapper(
	            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,
	            args, holders, undefined, undefined, arity - length);
	        }
	        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	        return apply(fn, this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.flow` or `_.flowRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new flow function.
	     */
	    function createFlow(fromRight) {
	      return rest(function(funcs) {
	        funcs = baseFlatten(funcs, 1);

	        var length = funcs.length,
	            index = length,
	            prereq = LodashWrapper.prototype.thru;

	        if (fromRight) {
	          funcs.reverse();
	        }
	        while (index--) {
	          var func = funcs[index];
	          if (typeof func != 'function') {
	            throw new TypeError(FUNC_ERROR_TEXT);
	          }
	          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	            var wrapper = new LodashWrapper([], true);
	          }
	        }
	        index = wrapper ? index : length;
	        while (++index < length) {
	          func = funcs[index];

	          var funcName = getFuncName(func),
	              data = funcName == 'wrapper' ? getData(func) : undefined;

	          if (data && isLaziable(data[0]) &&
	                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&
	                !data[4].length && data[9] == 1
	              ) {
	            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	          } else {
	            wrapper = (func.length == 1 && isLaziable(func))
	              ? wrapper[funcName]()
	              : wrapper.thru(func);
	          }
	        }
	        return function() {
	          var args = arguments,
	              value = args[0];

	          if (wrapper && args.length == 1 &&
	              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
	            return wrapper.plant(value).value();
	          }
	          var index = 0,
	              result = length ? funcs[index].apply(this, args) : value;

	          while (++index < length) {
	            result = funcs[index].call(this, result);
	          }
	          return result;
	        };
	      });
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with optional `this`
	     * binding of `thisArg`, partial application, and currying.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [partialsRight] The arguments to append to those provided
	     *  to the new function.
	     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	      var isAry = bitmask & ARY_FLAG,
	          isBind = bitmask & BIND_FLAG,
	          isBindKey = bitmask & BIND_KEY_FLAG,
	          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
	          isFlip = bitmask & FLIP_FLAG,
	          Ctor = isBindKey ? undefined : createCtorWrapper(func);

	      function wrapper() {
	        var length = arguments.length,
	            index = length,
	            args = Array(length);

	        while (index--) {
	          args[index] = arguments[index];
	        }
	        if (isCurried) {
	          var placeholder = getPlaceholder(wrapper),
	              holdersCount = countHolders(args, placeholder);
	        }
	        if (partials) {
	          args = composeArgs(args, partials, holders, isCurried);
	        }
	        if (partialsRight) {
	          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	        }
	        length -= holdersCount;
	        if (isCurried && length < arity) {
	          var newHolders = replaceHolders(args, placeholder);
	          return createRecurryWrapper(
	            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,
	            args, newHolders, argPos, ary, arity - length
	          );
	        }
	        var thisBinding = isBind ? thisArg : this,
	            fn = isBindKey ? thisBinding[func] : func;

	        length = args.length;
	        if (argPos) {
	          args = reorder(args, argPos);
	        } else if (isFlip && length > 1) {
	          args.reverse();
	        }
	        if (isAry && ary < length) {
	          args.length = ary;
	        }
	        if (this && this !== root && this instanceof wrapper) {
	          fn = Ctor || createCtorWrapper(fn);
	        }
	        return fn.apply(thisBinding, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a function like `_.invertBy`.
	     *
	     * @private
	     * @param {Function} setter The function to set accumulator values.
	     * @param {Function} toIteratee The function to resolve iteratees.
	     * @returns {Function} Returns the new inverter function.
	     */
	    function createInverter(setter, toIteratee) {
	      return function(object, iteratee) {
	        return baseInverter(object, setter, toIteratee(iteratee), {});
	      };
	    }

	    /**
	     * Creates a function like `_.over`.
	     *
	     * @private
	     * @param {Function} arrayFunc The function to iterate over iteratees.
	     * @returns {Function} Returns the new invoker function.
	     */
	    function createOver(arrayFunc) {
	      return rest(function(iteratees) {
	        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
	          ? arrayMap(iteratees[0], baseUnary(getIteratee()))
	          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));

	        return rest(function(args) {
	          var thisArg = this;
	          return arrayFunc(iteratees, function(iteratee) {
	            return apply(iteratee, thisArg, args);
	          });
	        });
	      });
	    }

	    /**
	     * Creates the padding for `string` based on `length`. The `chars` string
	     * is truncated if the number of characters exceeds `length`.
	     *
	     * @private
	     * @param {number} length The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padding for `string`.
	     */
	    function createPadding(length, chars) {
	      chars = chars === undefined ? ' ' : (chars + '');

	      var charsLength = chars.length;
	      if (charsLength < 2) {
	        return charsLength ? baseRepeat(chars, length) : chars;
	      }
	      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
	      return reHasComplexSymbol.test(chars)
	        ? castSlice(stringToArray(result), 0, length).join('')
	        : result.slice(0, length);
	    }

	    /**
	     * Creates a function that wraps `func` to invoke it with the `this` binding
	     * of `thisArg` and `partials` prepended to the arguments it receives.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {Array} partials The arguments to prepend to those provided to
	     *  the new function.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createPartialWrapper(func, bitmask, thisArg, partials) {
	      var isBind = bitmask & BIND_FLAG,
	          Ctor = createCtorWrapper(func);

	      function wrapper() {
	        var argsIndex = -1,
	            argsLength = arguments.length,
	            leftIndex = -1,
	            leftLength = partials.length,
	            args = Array(leftLength + argsLength),
	            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

	        while (++leftIndex < leftLength) {
	          args[leftIndex] = partials[leftIndex];
	        }
	        while (argsLength--) {
	          args[leftIndex++] = arguments[++argsIndex];
	        }
	        return apply(fn, isBind ? thisArg : this, args);
	      }
	      return wrapper;
	    }

	    /**
	     * Creates a `_.range` or `_.rangeRight` function.
	     *
	     * @private
	     * @param {boolean} [fromRight] Specify iterating from right to left.
	     * @returns {Function} Returns the new range function.
	     */
	    function createRange(fromRight) {
	      return function(start, end, step) {
	        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
	          end = step = undefined;
	        }
	        // Ensure the sign of `-0` is preserved.
	        start = toNumber(start);
	        start = start === start ? start : 0;
	        if (end === undefined) {
	          end = start;
	          start = 0;
	        } else {
	          end = toNumber(end) || 0;
	        }
	        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);
	        return baseRange(start, end, step, fromRight);
	      };
	    }

	    /**
	     * Creates a function that wraps `func` to continue currying.
	     *
	     * @private
	     * @param {Function} func The function to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`
	     *  for more details.
	     * @param {Function} wrapFunc The function to create the `func` wrapper.
	     * @param {*} placeholder The placeholder value.
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to prepend to those provided to
	     *  the new function.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	      var isCurry = bitmask & CURRY_FLAG,
	          newHolders = isCurry ? holders : undefined,
	          newHoldersRight = isCurry ? undefined : holders,
	          newPartials = isCurry ? partials : undefined,
	          newPartialsRight = isCurry ? undefined : partials;

	      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
	      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

	      if (!(bitmask & CURRY_BOUND_FLAG)) {
	        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
	      }
	      var newData = [
	        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	        newHoldersRight, argPos, ary, arity
	      ];

	      var result = wrapFunc.apply(undefined, newData);
	      if (isLaziable(func)) {
	        setData(result, newData);
	      }
	      result.placeholder = placeholder;
	      return result;
	    }

	    /**
	     * Creates a function like `_.round`.
	     *
	     * @private
	     * @param {string} methodName The name of the `Math` method to use when rounding.
	     * @returns {Function} Returns the new round function.
	     */
	    function createRound(methodName) {
	      var func = Math[methodName];
	      return function(number, precision) {
	        number = toNumber(number);
	        precision = toInteger(precision);
	        if (precision) {
	          // Shift with exponential notation to avoid floating-point issues.
	          // See [MDN](https://mdn.io/round#Examples) for more details.
	          var pair = (toString(number) + 'e').split('e'),
	              value = func(pair[0] + 'e' + (+pair[1] + precision));

	          pair = (toString(value) + 'e').split('e');
	          return +(pair[0] + 'e' + (+pair[1] - precision));
	        }
	        return func(number);
	      };
	    }

	    /**
	     * Creates a set of `values`.
	     *
	     * @private
	     * @param {Array} values The values to add to the set.
	     * @returns {Object} Returns the new set.
	     */
	    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {
	      return new Set(values);
	    };

	    /**
	     * Creates a function that either curries or invokes `func` with optional
	     * `this` binding and partially applied arguments.
	     *
	     * @private
	     * @param {Function|string} func The function or method name to wrap.
	     * @param {number} bitmask The bitmask of wrapper flags.
	     *  The bitmask may be composed of the following flags:
	     *     1 - `_.bind`
	     *     2 - `_.bindKey`
	     *     4 - `_.curry` or `_.curryRight` of a bound function
	     *     8 - `_.curry`
	     *    16 - `_.curryRight`
	     *    32 - `_.partial`
	     *    64 - `_.partialRight`
	     *   128 - `_.rearg`
	     *   256 - `_.ary`
	     * @param {*} [thisArg] The `this` binding of `func`.
	     * @param {Array} [partials] The arguments to be partially applied.
	     * @param {Array} [holders] The `partials` placeholder indexes.
	     * @param {Array} [argPos] The argument positions of the new function.
	     * @param {number} [ary] The arity cap of `func`.
	     * @param {number} [arity] The arity of `func`.
	     * @returns {Function} Returns the new wrapped function.
	     */
	    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	      var isBindKey = bitmask & BIND_KEY_FLAG;
	      if (!isBindKey && typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var length = partials ? partials.length : 0;
	      if (!length) {
	        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
	        partials = holders = undefined;
	      }
	      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	      arity = arity === undefined ? arity : toInteger(arity);
	      length -= holders ? holders.length : 0;

	      if (bitmask & PARTIAL_RIGHT_FLAG) {
	        var partialsRight = partials,
	            holdersRight = holders;

	        partials = holders = undefined;
	      }
	      var data = isBindKey ? undefined : getData(func);

	      var newData = [
	        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	        argPos, ary, arity
	      ];

	      if (data) {
	        mergeData(newData, data);
	      }
	      func = newData[0];
	      bitmask = newData[1];
	      thisArg = newData[2];
	      partials = newData[3];
	      holders = newData[4];
	      arity = newData[9] = newData[9] == null
	        ? (isBindKey ? 0 : func.length)
	        : nativeMax(newData[9] - length, 0);

	      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
	        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
	      }
	      if (!bitmask || bitmask == BIND_FLAG) {
	        var result = createBaseWrapper(func, bitmask, thisArg);
	      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
	        result = createCurryWrapper(func, bitmask, arity);
	      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
	        result = createPartialWrapper(func, bitmask, thisArg, partials);
	      } else {
	        result = createHybridWrapper.apply(undefined, newData);
	      }
	      var setter = data ? baseSetData : setData;
	      return setter(result, newData);
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for arrays with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Array} array The array to compare.
	     * @param {Array} other The other array to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `array` and `other` objects.
	     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	     */
	    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
	      var index = -1,
	          isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,
	          arrLength = array.length,
	          othLength = other.length;

	      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(array);
	      if (stacked) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(array, other);

	      // Ignore non-index properties.
	      while (++index < arrLength) {
	        var arrValue = array[index],
	            othValue = other[index];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, arrValue, index, other, array, stack)
	            : customizer(arrValue, othValue, index, array, other, stack);
	        }
	        if (compared !== undefined) {
	          if (compared) {
	            continue;
	          }
	          result = false;
	          break;
	        }
	        // Recursively compare arrays (susceptible to call stack limits).
	        if (isUnordered) {
	          if (!arraySome(other, function(othValue) {
	                return arrValue === othValue ||
	                  equalFunc(arrValue, othValue, customizer, bitmask, stack);
	              })) {
	            result = false;
	            break;
	          }
	        } else if (!(
	              arrValue === othValue ||
	                equalFunc(arrValue, othValue, customizer, bitmask, stack)
	            )) {
	          result = false;
	          break;
	        }
	      }
	      stack['delete'](array);
	      return result;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for comparing objects of
	     * the same `toStringTag`.
	     *
	     * **Note:** This function only supports comparing values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {string} tag The `toStringTag` of the objects to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
	      switch (tag) {
	        case dataViewTag:
	          if ((object.byteLength != other.byteLength) ||
	              (object.byteOffset != other.byteOffset)) {
	            return false;
	          }
	          object = object.buffer;
	          other = other.buffer;

	        case arrayBufferTag:
	          if ((object.byteLength != other.byteLength) ||
	              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	            return false;
	          }
	          return true;

	        case boolTag:
	        case dateTag:
	          // Coerce dates and booleans to numbers, dates to milliseconds and
	          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as
	          // not equal.
	          return +object == +other;

	        case errorTag:
	          return object.name == other.name && object.message == other.message;

	        case numberTag:
	          // Treat `NaN` vs. `NaN` as equal.
	          return (object != +object) ? other != +other : object == +other;

	        case regexpTag:
	        case stringTag:
	          // Coerce regexes to strings and treat strings, primitives and objects,
	          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring
	          // for more details.
	          return object == (other + '');

	        case mapTag:
	          var convert = mapToArray;

	        case setTag:
	          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
	          convert || (convert = setToArray);

	          if (object.size != other.size && !isPartial) {
	            return false;
	          }
	          // Assume cyclic values are equal.
	          var stacked = stack.get(object);
	          if (stacked) {
	            return stacked == other;
	          }
	          bitmask |= UNORDERED_COMPARE_FLAG;
	          stack.set(object, other);

	          // Recursively compare objects (susceptible to call stack limits).
	          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);

	        case symbolTag:
	          if (symbolValueOf) {
	            return symbolValueOf.call(object) == symbolValueOf.call(other);
	          }
	      }
	      return false;
	    }

	    /**
	     * A specialized version of `baseIsEqualDeep` for objects with support for
	     * partial deep comparisons.
	     *
	     * @private
	     * @param {Object} object The object to compare.
	     * @param {Object} other The other object to compare.
	     * @param {Function} equalFunc The function to determine equivalents of values.
	     * @param {Function} customizer The function to customize comparisons.
	     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
	     *  for more details.
	     * @param {Object} stack Tracks traversed `object` and `other` objects.
	     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	     */
	    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
	      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
	          objProps = keys(object),
	          objLength = objProps.length,
	          othProps = keys(other),
	          othLength = othProps.length;

	      if (objLength != othLength && !isPartial) {
	        return false;
	      }
	      var index = objLength;
	      while (index--) {
	        var key = objProps[index];
	        if (!(isPartial ? key in other : baseHas(other, key))) {
	          return false;
	        }
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      var result = true;
	      stack.set(object, other);

	      var skipCtor = isPartial;
	      while (++index < objLength) {
	        key = objProps[index];
	        var objValue = object[key],
	            othValue = other[key];

	        if (customizer) {
	          var compared = isPartial
	            ? customizer(othValue, objValue, key, other, object, stack)
	            : customizer(objValue, othValue, key, object, other, stack);
	        }
	        // Recursively compare objects (susceptible to call stack limits).
	        if (!(compared === undefined
	              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
	              : compared
	            )) {
	          result = false;
	          break;
	        }
	        skipCtor || (skipCtor = key == 'constructor');
	      }
	      if (result && !skipCtor) {
	        var objCtor = object.constructor,
	            othCtor = other.constructor;

	        // Non `Object` object instances with different constructors are not equal.
	        if (objCtor != othCtor &&
	            ('constructor' in object && 'constructor' in other) &&
	            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	          result = false;
	        }
	      }
	      stack['delete'](object);
	      return result;
	    }

	    /**
	     * Creates an array of own enumerable property names and symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeys(object) {
	      return baseGetAllKeys(object, keys, getSymbols);
	    }

	    /**
	     * Creates an array of own and inherited enumerable property names and
	     * symbols of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names and symbols.
	     */
	    function getAllKeysIn(object) {
	      return baseGetAllKeys(object, keysIn, getSymbolsIn);
	    }

	    /**
	     * Gets metadata for `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {*} Returns the metadata for `func`.
	     */
	    var getData = !metaMap ? noop : function(func) {
	      return metaMap.get(func);
	    };

	    /**
	     * Gets the name of `func`.
	     *
	     * @private
	     * @param {Function} func The function to query.
	     * @returns {string} Returns the function name.
	     */
	    function getFuncName(func) {
	      var result = (func.name + ''),
	          array = realNames[result],
	          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

	      while (length--) {
	        var data = array[length],
	            otherFunc = data.func;
	        if (otherFunc == null || otherFunc == func) {
	          return data.name;
	        }
	      }
	      return result;
	    }

	    /**
	     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
	     * this function returns the custom method, otherwise it returns `baseIteratee`.
	     * If arguments are provided, the chosen function is invoked with them and
	     * its result is returned.
	     *
	     * @private
	     * @param {*} [value] The value to convert to an iteratee.
	     * @param {number} [arity] The arity of the created iteratee.
	     * @returns {Function} Returns the chosen function or its result.
	     */
	    function getIteratee() {
	      var result = lodash.iteratee || iteratee;
	      result = result === iteratee ? baseIteratee : result;
	      return arguments.length ? result(arguments[0], arguments[1]) : result;
	    }

	    /**
	     * Gets the "length" property value of `object`.
	     *
	     * **Note:** This function is used to avoid a
	     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
	     * Safari on at least iOS 8.1-8.3 ARM64.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {*} Returns the "length" value.
	     */
	    var getLength = baseProperty('length');

	    /**
	     * Gets the property names, values, and compare flags of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the match data of `object`.
	     */
	    function getMatchData(object) {
	      var result = toPairs(object),
	          length = result.length;

	      while (length--) {
	        result[length][2] = isStrictComparable(result[length][1]);
	      }
	      return result;
	    }

	    /**
	     * Gets the native function at `key` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {string} key The key of the method to get.
	     * @returns {*} Returns the function if it's native, else `undefined`.
	     */
	    function getNative(object, key) {
	      var value = object[key];
	      return isNative(value) ? value : undefined;
	    }

	    /**
	     * Gets the argument placeholder value for `func`.
	     *
	     * @private
	     * @param {Function} func The function to inspect.
	     * @returns {*} Returns the placeholder value.
	     */
	    function getPlaceholder(func) {
	      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
	      return object.placeholder;
	    }

	    /**
	     * Gets the `[[Prototype]]` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {null|Object} Returns the `[[Prototype]]`.
	     */
	    function getPrototype(value) {
	      return nativeGetPrototype(Object(value));
	    }

	    /**
	     * Creates an array of the own enumerable symbol properties of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    function getSymbols(object) {
	      // Coerce `object` to an object to avoid non-object errors in V8.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
	      return getOwnPropertySymbols(Object(object));
	    }

	    // Fallback for IE < 11.
	    if (!getOwnPropertySymbols) {
	      getSymbols = function() {
	        return [];
	      };
	    }

	    /**
	     * Creates an array of the own and inherited enumerable symbol properties
	     * of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of symbols.
	     */
	    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {
	      var result = [];
	      while (object) {
	        arrayPush(result, getSymbols(object));
	        object = getPrototype(object);
	      }
	      return result;
	    };

	    /**
	     * Gets the `toStringTag` of `value`.
	     *
	     * @private
	     * @param {*} value The value to query.
	     * @returns {string} Returns the `toStringTag`.
	     */
	    function getTag(value) {
	      return objectToString.call(value);
	    }

	    // Fallback for data views, maps, sets, and weak maps in IE 11,
	    // for data views in Edge, and promises in Node.js.
	    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	        (Map && getTag(new Map) != mapTag) ||
	        (Promise && getTag(Promise.resolve()) != promiseTag) ||
	        (Set && getTag(new Set) != setTag) ||
	        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	      getTag = function(value) {
	        var result = objectToString.call(value),
	            Ctor = result == objectTag ? value.constructor : undefined,
	            ctorString = Ctor ? toSource(Ctor) : undefined;

	        if (ctorString) {
	          switch (ctorString) {
	            case dataViewCtorString: return dataViewTag;
	            case mapCtorString: return mapTag;
	            case promiseCtorString: return promiseTag;
	            case setCtorString: return setTag;
	            case weakMapCtorString: return weakMapTag;
	          }
	        }
	        return result;
	      };
	    }

	    /**
	     * Gets the view, applying any `transforms` to the `start` and `end` positions.
	     *
	     * @private
	     * @param {number} start The start of the view.
	     * @param {number} end The end of the view.
	     * @param {Array} transforms The transformations to apply to the view.
	     * @returns {Object} Returns an object containing the `start` and `end`
	     *  positions of the view.
	     */
	    function getView(start, end, transforms) {
	      var index = -1,
	          length = transforms.length;

	      while (++index < length) {
	        var data = transforms[index],
	            size = data.size;

	        switch (data.type) {
	          case 'drop':      start += size; break;
	          case 'dropRight': end -= size; break;
	          case 'take':      end = nativeMin(end, start + size); break;
	          case 'takeRight': start = nativeMax(start, end - size); break;
	        }
	      }
	      return { 'start': start, 'end': end };
	    }

	    /**
	     * Checks if `path` exists on `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @param {Function} hasFunc The function to check properties.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     */
	    function hasPath(object, path, hasFunc) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var result,
	          index = -1,
	          length = path.length;

	      while (++index < length) {
	        var key = path[index];
	        if (!(result = object != null && hasFunc(object, key))) {
	          break;
	        }
	        object = object[key];
	      }
	      if (result) {
	        return result;
	      }
	      var length = object ? object.length : 0;
	      return !!length && isLength(length) && isIndex(key, length) &&
	        (isArray(object) || isString(object) || isArguments(object));
	    }

	    /**
	     * Initializes an array clone.
	     *
	     * @private
	     * @param {Array} array The array to clone.
	     * @returns {Array} Returns the initialized clone.
	     */
	    function initCloneArray(array) {
	      var length = array.length,
	          result = array.constructor(length);

	      // Add properties assigned by `RegExp#exec`.
	      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	        result.index = array.index;
	        result.input = array.input;
	      }
	      return result;
	    }

	    /**
	     * Initializes an object clone.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneObject(object) {
	      return (typeof object.constructor == 'function' && !isPrototype(object))
	        ? baseCreate(getPrototype(object))
	        : {};
	    }

	    /**
	     * Initializes an object clone based on its `toStringTag`.
	     *
	     * **Note:** This function only supports cloning values with tags of
	     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	     *
	     * @private
	     * @param {Object} object The object to clone.
	     * @param {string} tag The `toStringTag` of the object to clone.
	     * @param {Function} cloneFunc The function to clone values.
	     * @param {boolean} [isDeep] Specify a deep clone.
	     * @returns {Object} Returns the initialized clone.
	     */
	    function initCloneByTag(object, tag, cloneFunc, isDeep) {
	      var Ctor = object.constructor;
	      switch (tag) {
	        case arrayBufferTag:
	          return cloneArrayBuffer(object);

	        case boolTag:
	        case dateTag:
	          return new Ctor(+object);

	        case dataViewTag:
	          return cloneDataView(object, isDeep);

	        case float32Tag: case float64Tag:
	        case int8Tag: case int16Tag: case int32Tag:
	        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	          return cloneTypedArray(object, isDeep);

	        case mapTag:
	          return cloneMap(object, isDeep, cloneFunc);

	        case numberTag:
	        case stringTag:
	          return new Ctor(object);

	        case regexpTag:
	          return cloneRegExp(object);

	        case setTag:
	          return cloneSet(object, isDeep, cloneFunc);

	        case symbolTag:
	          return cloneSymbol(object);
	      }
	    }

	    /**
	     * Creates an array of index keys for `object` values of arrays,
	     * `arguments` objects, and strings, otherwise `null` is returned.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @returns {Array|null} Returns index keys, else `null`.
	     */
	    function indexKeys(object) {
	      var length = object ? object.length : undefined;
	      if (isLength(length) &&
	          (isArray(object) || isString(object) || isArguments(object))) {
	        return baseTimes(length, String);
	      }
	      return null;
	    }

	    /**
	     * Checks if `value` is a flattenable `arguments` object or array.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenable(value) {
	      return isArrayLikeObject(value) && (isArray(value) || isArguments(value));
	    }

	    /**
	     * Checks if `value` is a flattenable array and not a `_.matchesProperty`
	     * iteratee shorthand.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	     */
	    function isFlattenableIteratee(value) {
	      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));
	    }

	    /**
	     * Checks if the given arguments are from an iteratee call.
	     *
	     * @private
	     * @param {*} value The potential iteratee value argument.
	     * @param {*} index The potential iteratee index or key argument.
	     * @param {*} object The potential iteratee object argument.
	     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	     *  else `false`.
	     */
	    function isIterateeCall(value, index, object) {
	      if (!isObject(object)) {
	        return false;
	      }
	      var type = typeof index;
	      if (type == 'number'
	            ? (isArrayLike(object) && isIndex(index, object.length))
	            : (type == 'string' && index in object)
	          ) {
	        return eq(object[index], value);
	      }
	      return false;
	    }

	    /**
	     * Checks if `value` is a property name and not a property path.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @param {Object} [object] The object to query keys on.
	     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	     */
	    function isKey(value, object) {
	      var type = typeof value;
	      if (type == 'number' || type == 'symbol') {
	        return true;
	      }
	      return !isArray(value) &&
	        (isSymbol(value) || reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	          (object != null && value in Object(object)));
	    }

	    /**
	     * Checks if `value` is suitable for use as unique object key.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	     */
	    function isKeyable(value) {
	      var type = typeof value;
	      return type == 'number' || type == 'boolean' ||
	        (type == 'string' && value != '__proto__') || value == null;
	    }

	    /**
	     * Checks if `func` has a lazy counterpart.
	     *
	     * @private
	     * @param {Function} func The function to check.
	     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	     *  else `false`.
	     */
	    function isLaziable(func) {
	      var funcName = getFuncName(func),
	          other = lodash[funcName];

	      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	        return false;
	      }
	      if (func === other) {
	        return true;
	      }
	      var data = getData(other);
	      return !!data && func === data[0];
	    }

	    /**
	     * Checks if `value` is likely a prototype object.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	     */
	    function isPrototype(value) {
	      var Ctor = value && value.constructor,
	          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	      return value === proto;
	    }

	    /**
	     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` if suitable for strict
	     *  equality comparisons, else `false`.
	     */
	    function isStrictComparable(value) {
	      return value === value && !isObject(value);
	    }

	    /**
	     * A specialized version of `matchesProperty` for source values suitable
	     * for strict equality comparisons, i.e. `===`.
	     *
	     * @private
	     * @param {string} key The key of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     */
	    function matchesStrictComparable(key, srcValue) {
	      return function(object) {
	        if (object == null) {
	          return false;
	        }
	        return object[key] === srcValue &&
	          (srcValue !== undefined || (key in Object(object)));
	      };
	    }

	    /**
	     * Merges the function metadata of `source` into `data`.
	     *
	     * Merging metadata reduces the number of wrappers used to invoke a function.
	     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	     * may be applied regardless of execution order. Methods like `_.ary` and
	     * `_.rearg` modify function arguments, making the order in which they are
	     * executed important, preventing the merging of metadata. However, we make
	     * an exception for a safe combined case where curried functions have `_.ary`
	     * and or `_.rearg` applied.
	     *
	     * @private
	     * @param {Array} data The destination metadata.
	     * @param {Array} source The source metadata.
	     * @returns {Array} Returns `data`.
	     */
	    function mergeData(data, source) {
	      var bitmask = data[1],
	          srcBitmask = source[1],
	          newBitmask = bitmask | srcBitmask,
	          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);

	      var isCombo =
	        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
	        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
	        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));

	      // Exit early if metadata can't be merged.
	      if (!(isCommon || isCombo)) {
	        return data;
	      }
	      // Use source `thisArg` if available.
	      if (srcBitmask & BIND_FLAG) {
	        data[2] = source[2];
	        // Set when currying a bound function.
	        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
	      }
	      // Compose partial arguments.
	      var value = source[3];
	      if (value) {
	        var partials = data[3];
	        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	      }
	      // Compose partial right arguments.
	      value = source[5];
	      if (value) {
	        partials = data[5];
	        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	      }
	      // Use source `argPos` if available.
	      value = source[7];
	      if (value) {
	        data[7] = value;
	      }
	      // Use source `ary` if it's smaller.
	      if (srcBitmask & ARY_FLAG) {
	        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	      }
	      // Use source `arity` if one is not provided.
	      if (data[9] == null) {
	        data[9] = source[9];
	      }
	      // Use source `func` and merge bitmasks.
	      data[0] = source[0];
	      data[1] = newBitmask;

	      return data;
	    }

	    /**
	     * Used by `_.defaultsDeep` to customize its `_.merge` use.
	     *
	     * @private
	     * @param {*} objValue The destination value.
	     * @param {*} srcValue The source value.
	     * @param {string} key The key of the property to merge.
	     * @param {Object} object The parent object of `objValue`.
	     * @param {Object} source The parent object of `srcValue`.
	     * @param {Object} [stack] Tracks traversed source values and their merged
	     *  counterparts.
	     * @returns {*} Returns the value to assign.
	     */
	    function mergeDefaults(objValue, srcValue, key, object, source, stack) {
	      if (isObject(objValue) && isObject(srcValue)) {
	        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));
	      }
	      return objValue;
	    }

	    /**
	     * Gets the parent value at `path` of `object`.
	     *
	     * @private
	     * @param {Object} object The object to query.
	     * @param {Array} path The path to get the parent value of.
	     * @returns {*} Returns the parent value.
	     */
	    function parent(object, path) {
	      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
	    }

	    /**
	     * Reorder `array` according to the specified indexes where the element at
	     * the first index is assigned as the first element, the element at
	     * the second index is assigned as the second element, and so on.
	     *
	     * @private
	     * @param {Array} array The array to reorder.
	     * @param {Array} indexes The arranged array indexes.
	     * @returns {Array} Returns `array`.
	     */
	    function reorder(array, indexes) {
	      var arrLength = array.length,
	          length = nativeMin(indexes.length, arrLength),
	          oldArray = copyArray(array);

	      while (length--) {
	        var index = indexes[length];
	        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	      }
	      return array;
	    }

	    /**
	     * Sets metadata for `func`.
	     *
	     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	     * period of time, it will trip its breaker and transition to an identity
	     * function to avoid garbage collection pauses in V8. See
	     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	     * for more details.
	     *
	     * @private
	     * @param {Function} func The function to associate metadata with.
	     * @param {*} data The metadata.
	     * @returns {Function} Returns `func`.
	     */
	    var setData = (function() {
	      var count = 0,
	          lastCalled = 0;

	      return function(key, value) {
	        var stamp = now(),
	            remaining = HOT_SPAN - (stamp - lastCalled);

	        lastCalled = stamp;
	        if (remaining > 0) {
	          if (++count >= HOT_COUNT) {
	            return key;
	          }
	        } else {
	          count = 0;
	        }
	        return baseSetData(key, value);
	      };
	    }());

	    /**
	     * Converts `string` to a property path array.
	     *
	     * @private
	     * @param {string} string The string to convert.
	     * @returns {Array} Returns the property path array.
	     */
	    var stringToPath = memoize(function(string) {
	      var result = [];
	      toString(string).replace(rePropName, function(match, number, quote, string) {
	        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
	      });
	      return result;
	    });

	    /**
	     * Converts `value` to a string key if it's not a string or symbol.
	     *
	     * @private
	     * @param {*} value The value to inspect.
	     * @returns {string|symbol} Returns the key.
	     */
	    function toKey(key) {
	      return (typeof key == 'string' || isSymbol(key)) ? key : (key + '');
	    }

	    /**
	     * Converts `func` to its source code.
	     *
	     * @private
	     * @param {Function} func The function to process.
	     * @returns {string} Returns the source code.
	     */
	    function toSource(func) {
	      if (func != null) {
	        try {
	          return funcToString.call(func);
	        } catch (e) {}
	        try {
	          return (func + '');
	        } catch (e) {}
	      }
	      return '';
	    }

	    /**
	     * Creates a clone of `wrapper`.
	     *
	     * @private
	     * @param {Object} wrapper The wrapper to clone.
	     * @returns {Object} Returns the cloned wrapper.
	     */
	    function wrapperClone(wrapper) {
	      if (wrapper instanceof LazyWrapper) {
	        return wrapper.clone();
	      }
	      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	      result.__actions__ = copyArray(wrapper.__actions__);
	      result.__index__  = wrapper.__index__;
	      result.__values__ = wrapper.__values__;
	      return result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an array of elements split into groups the length of `size`.
	     * If `array` can't be split evenly, the final chunk will be the remaining
	     * elements.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to process.
	     * @param {number} [size=1] The length of each chunk
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the new array containing chunks.
	     * @example
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 2);
	     * // => [['a', 'b'], ['c', 'd']]
	     *
	     * _.chunk(['a', 'b', 'c', 'd'], 3);
	     * // => [['a', 'b', 'c'], ['d']]
	     */
	    function chunk(array, size, guard) {
	      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
	        size = 1;
	      } else {
	        size = nativeMax(toInteger(size), 0);
	      }
	      var length = array ? array.length : 0;
	      if (!length || size < 1) {
	        return [];
	      }
	      var index = 0,
	          resIndex = 0,
	          result = Array(nativeCeil(length / size));

	      while (index < length) {
	        result[resIndex++] = baseSlice(array, index, (index += size));
	      }
	      return result;
	    }

	    /**
	     * Creates an array with all falsey values removed. The values `false`, `null`,
	     * `0`, `""`, `undefined`, and `NaN` are falsey.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to compact.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.compact([0, 1, false, 2, '', 3]);
	     * // => [1, 2, 3]
	     */
	    function compact(array) {
	      var index = -1,
	          length = array ? array.length : 0,
	          resIndex = 0,
	          result = [];

	      while (++index < length) {
	        var value = array[index];
	        if (value) {
	          result[resIndex++] = value;
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates a new array concatenating `array` with any additional arrays
	     * and/or values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to concatenate.
	     * @param {...*} [values] The values to concatenate.
	     * @returns {Array} Returns the new concatenated array.
	     * @example
	     *
	     * var array = [1];
	     * var other = _.concat(array, 2, [3], [[4]]);
	     *
	     * console.log(other);
	     * // => [1, 2, 3, [4]]
	     *
	     * console.log(array);
	     * // => [1]
	     */
	    function concat() {
	      var length = arguments.length,
	          array = castArray(arguments[0]);

	      if (length < 2) {
	        return length ? copyArray(array) : [];
	      }
	      var args = Array(length - 1);
	      while (length--) {
	        args[length - 1] = arguments[length];
	      }
	      return arrayConcat(array, baseFlatten(args, 1));
	    }

	    /**
	     * Creates an array of unique `array` values not included in the other given
	     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.difference([3, 2, 1], [4, 2]);
	     * // => [3, 1]
	     */
	    var difference = rest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `iteratee` which
	     * is invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);
	     * // => [3.1, 1.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var differenceBy = rest(function(array, values) {
	      var iteratee = last(values);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))
	        : [];
	    });

	    /**
	     * This method is like `_.difference` except that it accepts `comparator`
	     * which is invoked to compare elements of `array` to `values`. Result values
	     * are chosen from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {...Array} [values] The values to exclude.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     *
	     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }]
	     */
	    var differenceWith = rest(function(array, values) {
	      var comparator = last(values);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return isArrayLikeObject(array)
	        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
	        : [];
	    });

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.drop([1, 2, 3]);
	     * // => [2, 3]
	     *
	     * _.drop([1, 2, 3], 2);
	     * // => [3]
	     *
	     * _.drop([1, 2, 3], 5);
	     * // => []
	     *
	     * _.drop([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function drop(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements dropped from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to drop.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.dropRight([1, 2, 3]);
	     * // => [1, 2]
	     *
	     * _.dropRight([1, 2, 3], 2);
	     * // => [1]
	     *
	     * _.dropRight([1, 2, 3], 5);
	     * // => []
	     *
	     * _.dropRight([1, 2, 3], 0);
	     * // => [1, 2, 3]
	     */
	    function dropRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the end.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.dropRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropRightWhile(users, ['active', false]);
	     * // => objects for ['barney']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropRightWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` excluding elements dropped from the beginning.
	     * Elements are dropped until `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.dropWhile(users, function(o) { return !o.active; });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.dropWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.dropWhile(users, ['active', false]);
	     * // => objects for ['pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.dropWhile(users, 'active');
	     * // => objects for ['barney', 'fred', 'pebbles']
	     */
	    function dropWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), true)
	        : [];
	    }

	    /**
	     * Fills elements of `array` with `value` from `start` up to, but not
	     * including, `end`.
	     *
	     * **Note:** This method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Array
	     * @param {Array} array The array to fill.
	     * @param {*} value The value to fill `array` with.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.fill(array, 'a');
	     * console.log(array);
	     * // => ['a', 'a', 'a']
	     *
	     * _.fill(Array(3), 2);
	     * // => [2, 2, 2]
	     *
	     * _.fill([4, 6, 8, 10], '*', 1, 3);
	     * // => [4, '*', '*', 10]
	     */
	    function fill(array, value, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
	        start = 0;
	        end = length;
	      }
	      return baseFill(array, value, start, end);
	    }

	    /**
	     * This method is like `_.find` except that it returns the index of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.findIndex(users, function(o) { return o.user == 'barney'; });
	     * // => 0
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findIndex(users, { 'user': 'fred', 'active': false });
	     * // => 1
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findIndex(users, ['active', false]);
	     * // => 0
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findIndex(users, 'active');
	     * // => 2
	     */
	    function findIndex(array, predicate) {
	      return (array && array.length)
	        ? baseFindIndex(array, getIteratee(predicate, 3))
	        : -1;
	    }

	    /**
	     * This method is like `_.findIndex` except that it iterates over elements
	     * of `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {number} Returns the index of the found element, else `-1`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
	     * // => 2
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
	     * // => 0
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastIndex(users, ['active', false]);
	     * // => 2
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastIndex(users, 'active');
	     * // => 0
	     */
	    function findLastIndex(array, predicate) {
	      return (array && array.length)
	        ? baseFindIndex(array, getIteratee(predicate, 3), true)
	        : -1;
	    }

	    /**
	     * Flattens `array` a single level deep.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flatten([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, [3, [4]], 5]
	     */
	    function flatten(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, 1) : [];
	    }

	    /**
	     * Recursively flattens `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * _.flattenDeep([1, [2, [3, [4]], 5]]);
	     * // => [1, 2, 3, 4, 5]
	     */
	    function flattenDeep(array) {
	      var length = array ? array.length : 0;
	      return length ? baseFlatten(array, INFINITY) : [];
	    }

	    /**
	     * Recursively flatten `array` up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Array
	     * @param {Array} array The array to flatten.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * var array = [1, [2, [3, [4]], 5]];
	     *
	     * _.flattenDepth(array, 1);
	     * // => [1, 2, [3, [4]], 5]
	     *
	     * _.flattenDepth(array, 2);
	     * // => [1, 2, 3, [4], 5]
	     */
	    function flattenDepth(array, depth) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(array, depth);
	    }

	    /**
	     * The inverse of `_.toPairs`; this method returns an object composed
	     * from key-value `pairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} pairs The key-value pairs.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.fromPairs([['fred', 30], ['barney', 40]]);
	     * // => { 'fred': 30, 'barney': 40 }
	     */
	    function fromPairs(pairs) {
	      var index = -1,
	          length = pairs ? pairs.length : 0,
	          result = {};

	      while (++index < length) {
	        var pair = pairs[index];
	        result[pair[0]] = pair[1];
	      }
	      return result;
	    }

	    /**
	     * Gets the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias first
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the first element of `array`.
	     * @example
	     *
	     * _.head([1, 2, 3]);
	     * // => 1
	     *
	     * _.head([]);
	     * // => undefined
	     */
	    function head(array) {
	      return (array && array.length) ? array[0] : undefined;
	    }

	    /**
	     * Gets the index at which the first occurrence of `value` is found in `array`
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. If `fromIndex` is negative, it's used as the
	     * offset from the end of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.indexOf([1, 2, 1, 2], 2);
	     * // => 1
	     *
	     * // Search from the `fromIndex`.
	     * _.indexOf([1, 2, 1, 2], 2, 2);
	     * // => 3
	     */
	    function indexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      fromIndex = toInteger(fromIndex);
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return baseIndexOf(array, value, fromIndex);
	    }

	    /**
	     * Gets all but the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.initial([1, 2, 3]);
	     * // => [1, 2]
	     */
	    function initial(array) {
	      return dropRight(array, 1);
	    }

	    /**
	     * Creates an array of unique values that are included in all given arrays
	     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons. The order of result values is determined by the
	     * order they occur in the first array.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersection([2, 1], [4, 2], [1, 2]);
	     * // => [2]
	     */
	    var intersection = rest(function(arrays) {
	      var mapped = arrayMap(arrays, castArrayLikeObject);
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped)
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `iteratee`
	     * which is invoked for each element of each `arrays` to generate the criterion
	     * by which they're compared. Result values are chosen from the first array.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }]
	     */
	    var intersectionBy = rest(function(arrays) {
	      var iteratee = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (iteratee === last(mapped)) {
	        iteratee = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, getIteratee(iteratee))
	        : [];
	    });

	    /**
	     * This method is like `_.intersection` except that it accepts `comparator`
	     * which is invoked to compare elements of `arrays`. Result values are chosen
	     * from the first array. The comparator is invoked with two arguments:
	     * (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of intersecting values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.intersectionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }]
	     */
	    var intersectionWith = rest(function(arrays) {
	      var comparator = last(arrays),
	          mapped = arrayMap(arrays, castArrayLikeObject);

	      if (comparator === last(mapped)) {
	        comparator = undefined;
	      } else {
	        mapped.pop();
	      }
	      return (mapped.length && mapped[0] === arrays[0])
	        ? baseIntersection(mapped, undefined, comparator)
	        : [];
	    });

	    /**
	     * Converts all elements in `array` into a string separated by `separator`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to convert.
	     * @param {string} [separator=','] The element separator.
	     * @returns {string} Returns the joined string.
	     * @example
	     *
	     * _.join(['a', 'b', 'c'], '~');
	     * // => 'a~b~c'
	     */
	    function join(array, separator) {
	      return array ? nativeJoin.call(array, separator) : '';
	    }

	    /**
	     * Gets the last element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {*} Returns the last element of `array`.
	     * @example
	     *
	     * _.last([1, 2, 3]);
	     * // => 3
	     */
	    function last(array) {
	      var length = array ? array.length : 0;
	      return length ? array[length - 1] : undefined;
	    }

	    /**
	     * This method is like `_.indexOf` except that it iterates over elements of
	     * `array` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=array.length-1] The index to search from.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.lastIndexOf([1, 2, 1, 2], 2);
	     * // => 3
	     *
	     * // Search from the `fromIndex`.
	     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
	     * // => 1
	     */
	    function lastIndexOf(array, value, fromIndex) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return -1;
	      }
	      var index = length;
	      if (fromIndex !== undefined) {
	        index = toInteger(fromIndex);
	        index = (
	          index < 0
	            ? nativeMax(length + index, 0)
	            : nativeMin(index, length - 1)
	        ) + 1;
	      }
	      if (value !== value) {
	        return indexOfNaN(array, index, true);
	      }
	      while (index--) {
	        if (array[index] === value) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * Gets the nth element of `array`. If `n` is negative, the nth element
	     * from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.11.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=0] The index of the element to return.
	     * @returns {*} Returns the nth element of `array`.
	     * @example
	     *
	     * var array = ['a', 'b', 'c', 'd'];
	     *
	     * _.nth(array, 1);
	     * // => 'b'
	     *
	     * _.nth(array, -2);
	     * // => 'c';
	     */
	    function nth(array, n) {
	      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
	    }

	    /**
	     * Removes all given values from `array` using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
	     * to remove elements from an array by predicate.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...*} [values] The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pull(array, 2, 3);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    var pull = rest(pullAll);

	    /**
	     * This method is like `_.pull` except that it accepts an array of values to remove.
	     *
	     * **Note:** Unlike `_.difference`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3, 1, 2, 3];
	     *
	     * _.pullAll(array, [2, 3]);
	     * console.log(array);
	     * // => [1, 1]
	     */
	    function pullAll(array, values) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values)
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `iteratee` which is
	     * invoked for each element of `array` and `values` to generate the criterion
	     * by which they're compared. The iteratee is invoked with one argument: (value).
	     *
	     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
	     *
	     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
	     * console.log(array);
	     * // => [{ 'x': 2 }]
	     */
	    function pullAllBy(array, values, iteratee) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, getIteratee(iteratee))
	        : array;
	    }

	    /**
	     * This method is like `_.pullAll` except that it accepts `comparator` which
	     * is invoked to compare elements of `array` to `values`. The comparator is
	     * invoked with two arguments: (arrVal, othVal).
	     *
	     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array} values The values to remove.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
	     *
	     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
	     * console.log(array);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
	     */
	    function pullAllWith(array, values, comparator) {
	      return (array && array.length && values && values.length)
	        ? basePullAll(array, values, undefined, comparator)
	        : array;
	    }

	    /**
	     * Removes elements from `array` corresponding to `indexes` and returns an
	     * array of removed elements.
	     *
	     * **Note:** Unlike `_.at`, this method mutates `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [5, 10, 15, 20];
	     * var evens = _.pullAt(array, 1, 3);
	     *
	     * console.log(array);
	     * // => [5, 15]
	     *
	     * console.log(evens);
	     * // => [10, 20]
	     */
	    var pullAt = rest(function(array, indexes) {
	      indexes = arrayMap(baseFlatten(indexes, 1), String);

	      var result = baseAt(array, indexes);
	      basePullAt(array, indexes.sort(compareAscending));
	      return result;
	    });

	    /**
	     * Removes all elements from `array` that `predicate` returns truthy for
	     * and returns an array of the removed elements. The predicate is invoked
	     * with three arguments: (value, index, array).
	     *
	     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
	     * to pull elements from an array by value.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new array of removed elements.
	     * @example
	     *
	     * var array = [1, 2, 3, 4];
	     * var evens = _.remove(array, function(n) {
	     *   return n % 2 == 0;
	     * });
	     *
	     * console.log(array);
	     * // => [1, 3]
	     *
	     * console.log(evens);
	     * // => [2, 4]
	     */
	    function remove(array, predicate) {
	      var result = [];
	      if (!(array && array.length)) {
	        return result;
	      }
	      var index = -1,
	          indexes = [],
	          length = array.length;

	      predicate = getIteratee(predicate, 3);
	      while (++index < length) {
	        var value = array[index];
	        if (predicate(value, index, array)) {
	          result.push(value);
	          indexes.push(index);
	        }
	      }
	      basePullAt(array, indexes);
	      return result;
	    }

	    /**
	     * Reverses `array` so that the first element becomes the last, the second
	     * element becomes the second to last, and so on.
	     *
	     * **Note:** This method mutates `array` and is based on
	     * [`Array#reverse`](https://mdn.io/Array/reverse).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to modify.
	     * @returns {Array} Returns `array`.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _.reverse(array);
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function reverse(array) {
	      return array ? nativeReverse.call(array) : array;
	    }

	    /**
	     * Creates a slice of `array` from `start` up to, but not including, `end`.
	     *
	     * **Note:** This method is used instead of
	     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
	     * returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to slice.
	     * @param {number} [start=0] The start position.
	     * @param {number} [end=array.length] The end position.
	     * @returns {Array} Returns the slice of `array`.
	     */
	    function slice(array, start, end) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
	        start = 0;
	        end = length;
	      }
	      else {
	        start = start == null ? 0 : toInteger(start);
	        end = end === undefined ? length : toInteger(end);
	      }
	      return baseSlice(array, start, end);
	    }

	    /**
	     * Uses a binary search to determine the lowest index at which `value`
	     * should be inserted into `array` in order to maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedIndex([30, 50], 40);
	     * // => 1
	     *
	     * _.sortedIndex([4, 5], 4);
	     * // => 0
	     */
	    function sortedIndex(array, value) {
	      return baseSortedIndex(array, value);
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };
	     *
	     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));
	     * // => 1
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 0
	     */
	    function sortedIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee));
	    }

	    /**
	     * This method is like `_.indexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedIndexOf([1, 1, 2, 2], 2);
	     * // => 2
	     */
	    function sortedIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value);
	        if (index < length && eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.sortedIndex` except that it returns the highest
	     * index at which `value` should be inserted into `array` in order to
	     * maintain its sort order.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * _.sortedLastIndex([4, 5], 4);
	     * // => 1
	     */
	    function sortedLastIndex(array, value) {
	      return baseSortedIndex(array, value, true);
	    }

	    /**
	     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
	     * which is invoked for `value` and each element of `array` to compute their
	     * sort ranking. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The sorted array to inspect.
	     * @param {*} value The value to evaluate.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the index at which `value` should be inserted
	     *  into `array`.
	     * @example
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');
	     * // => 1
	     */
	    function sortedLastIndexBy(array, value, iteratee) {
	      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);
	    }

	    /**
	     * This method is like `_.lastIndexOf` except that it performs a binary
	     * search on a sorted `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to search.
	     * @param {*} value The value to search for.
	     * @returns {number} Returns the index of the matched value, else `-1`.
	     * @example
	     *
	     * _.sortedLastIndexOf([1, 1, 2, 2], 2);
	     * // => 3
	     */
	    function sortedLastIndexOf(array, value) {
	      var length = array ? array.length : 0;
	      if (length) {
	        var index = baseSortedIndex(array, value, true) - 1;
	        if (eq(array[index], value)) {
	          return index;
	        }
	      }
	      return -1;
	    }

	    /**
	     * This method is like `_.uniq` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniq([1, 1, 2]);
	     * // => [1, 2]
	     */
	    function sortedUniq(array) {
	      return (array && array.length)
	        ? baseSortedUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniqBy` except that it's designed and optimized
	     * for sorted arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [iteratee] The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
	     * // => [1.1, 2.3]
	     */
	    function sortedUniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSortedUniqBy(array, getIteratee(iteratee))
	        : [];
	    }

	    /**
	     * Gets all but the first element of `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.tail([1, 2, 3]);
	     * // => [2, 3]
	     */
	    function tail(array) {
	      return drop(array, 1);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the beginning.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.take([1, 2, 3]);
	     * // => [1]
	     *
	     * _.take([1, 2, 3], 2);
	     * // => [1, 2]
	     *
	     * _.take([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.take([1, 2, 3], 0);
	     * // => []
	     */
	    function take(array, n, guard) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      return baseSlice(array, 0, n < 0 ? 0 : n);
	    }

	    /**
	     * Creates a slice of `array` with `n` elements taken from the end.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {number} [n=1] The number of elements to take.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * _.takeRight([1, 2, 3]);
	     * // => [3]
	     *
	     * _.takeRight([1, 2, 3], 2);
	     * // => [2, 3]
	     *
	     * _.takeRight([1, 2, 3], 5);
	     * // => [1, 2, 3]
	     *
	     * _.takeRight([1, 2, 3], 0);
	     * // => []
	     */
	    function takeRight(array, n, guard) {
	      var length = array ? array.length : 0;
	      if (!length) {
	        return [];
	      }
	      n = (guard || n === undefined) ? 1 : toInteger(n);
	      n = length - n;
	      return baseSlice(array, n < 0 ? 0 : n, length);
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the end. Elements are
	     * taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': true },
	     *   { 'user': 'fred',    'active': false },
	     *   { 'user': 'pebbles', 'active': false }
	     * ];
	     *
	     * _.takeRightWhile(users, function(o) { return !o.active; });
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
	     * // => objects for ['pebbles']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeRightWhile(users, ['active', false]);
	     * // => objects for ['fred', 'pebbles']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeRightWhile(users, 'active');
	     * // => []
	     */
	    function takeRightWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3), false, true)
	        : [];
	    }

	    /**
	     * Creates a slice of `array` with elements taken from the beginning. Elements
	     * are taken until `predicate` returns falsey. The predicate is invoked with
	     * three arguments: (value, index, array).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Array
	     * @param {Array} array The array to query.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the slice of `array`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'active': false },
	     *   { 'user': 'fred',    'active': false},
	     *   { 'user': 'pebbles', 'active': true }
	     * ];
	     *
	     * _.takeWhile(users, function(o) { return !o.active; });
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.takeWhile(users, { 'user': 'barney', 'active': false });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.takeWhile(users, ['active', false]);
	     * // => objects for ['barney', 'fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.takeWhile(users, 'active');
	     * // => []
	     */
	    function takeWhile(array, predicate) {
	      return (array && array.length)
	        ? baseWhile(array, getIteratee(predicate, 3))
	        : [];
	    }

	    /**
	     * Creates an array of unique values, in order, from all given arrays using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.union([2, 1], [4, 2], [1, 2]);
	     * // => [2, 1, 4]
	     */
	    var union = rest(function(arrays) {
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which uniqueness is computed. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [2.1, 1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    var unionBy = rest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));
	    });

	    /**
	     * This method is like `_.union` except that it accepts `comparator` which
	     * is invoked to compare elements of `arrays`. The comparator is invoked
	     * with two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of combined values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.unionWith(objects, others, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var unionWith = rest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
	    });

	    /**
	     * Creates a duplicate-free version of an array, using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons, in which only the first occurrence of each
	     * element is kept.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniq([2, 1, 2]);
	     * // => [2, 1]
	     */
	    function uniq(array) {
	      return (array && array.length)
	        ? baseUniq(array)
	        : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * uniqueness is computed. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
	     * // => [2.1, 1.2]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 1 }, { 'x': 2 }]
	     */
	    function uniqBy(array, iteratee) {
	      return (array && array.length)
	        ? baseUniq(array, getIteratee(iteratee))
	        : [];
	    }

	    /**
	     * This method is like `_.uniq` except that it accepts `comparator` which
	     * is invoked to compare elements of `array`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {Array} array The array to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new duplicate free array.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];
	     *
	     * _.uniqWith(objects, _.isEqual);
	     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
	     */
	    function uniqWith(array, comparator) {
	      return (array && array.length)
	        ? baseUniq(array, undefined, comparator)
	        : [];
	    }

	    /**
	     * This method is like `_.zip` except that it accepts an array of grouped
	     * elements and creates an array regrouping the elements to their pre-zip
	     * configuration.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.2.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     *
	     * _.unzip(zipped);
	     * // => [['fred', 'barney'], [30, 40], [true, false]]
	     */
	    function unzip(array) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var length = 0;
	      array = arrayFilter(array, function(group) {
	        if (isArrayLikeObject(group)) {
	          length = nativeMax(group.length, length);
	          return true;
	        }
	      });
	      return baseTimes(length, function(index) {
	        return arrayMap(array, baseProperty(index));
	      });
	    }

	    /**
	     * This method is like `_.unzip` except that it accepts `iteratee` to specify
	     * how regrouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {Array} array The array of grouped elements to process.
	     * @param {Function} [iteratee=_.identity] The function to combine
	     *  regrouped values.
	     * @returns {Array} Returns the new array of regrouped elements.
	     * @example
	     *
	     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
	     * // => [[1, 10, 100], [2, 20, 200]]
	     *
	     * _.unzipWith(zipped, _.add);
	     * // => [3, 30, 300]
	     */
	    function unzipWith(array, iteratee) {
	      if (!(array && array.length)) {
	        return [];
	      }
	      var result = unzip(array);
	      if (iteratee == null) {
	        return result;
	      }
	      return arrayMap(result, function(group) {
	        return apply(iteratee, undefined, group);
	      });
	    }

	    /**
	     * Creates an array excluding all given values using
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * for equality comparisons.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {Array} array The array to filter.
	     * @param {...*} [values] The values to exclude.
	     * @returns {Array} Returns the new array of filtered values.
	     * @example
	     *
	     * _.without([1, 2, 1, 3], 1, 2);
	     * // => [3]
	     */
	    var without = rest(function(array, values) {
	      return isArrayLikeObject(array)
	        ? baseDifference(array, values)
	        : [];
	    });

	    /**
	     * Creates an array of unique values that is the
	     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
	     * of the given arrays. The order of result values is determined by the order
	     * they occur in the arrays.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * _.xor([2, 1], [4, 2]);
	     * // => [1, 4]
	     */
	    var xor = rest(function(arrays) {
	      return baseXor(arrayFilter(arrays, isArrayLikeObject));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `iteratee` which is
	     * invoked for each element of each `arrays` to generate the criterion by
	     * which by which they're compared. The iteratee is invoked with one argument:
	     * (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);
	     * // => [1.2, 4.3]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
	     * // => [{ 'x': 2 }]
	     */
	    var xorBy = rest(function(arrays) {
	      var iteratee = last(arrays);
	      if (isArrayLikeObject(iteratee)) {
	        iteratee = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));
	    });

	    /**
	     * This method is like `_.xor` except that it accepts `comparator` which is
	     * invoked to compare elements of `arrays`. The comparator is invoked with
	     * two arguments: (arrVal, othVal).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to inspect.
	     * @param {Function} [comparator] The comparator invoked per element.
	     * @returns {Array} Returns the new array of values.
	     * @example
	     *
	     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
	     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
	     *
	     * _.xorWith(objects, others, _.isEqual);
	     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
	     */
	    var xorWith = rest(function(arrays) {
	      var comparator = last(arrays);
	      if (isArrayLikeObject(comparator)) {
	        comparator = undefined;
	      }
	      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
	    });

	    /**
	     * Creates an array of grouped elements, the first of which contains the
	     * first elements of the given arrays, the second of which contains the
	     * second elements of the given arrays, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
	     * // => [['fred', 30, true], ['barney', 40, false]]
	     */
	    var zip = rest(unzip);

	    /**
	     * This method is like `_.fromPairs` except that it accepts two arrays,
	     * one of property identifiers and one of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.4.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObject(['a', 'b'], [1, 2]);
	     * // => { 'a': 1, 'b': 2 }
	     */
	    function zipObject(props, values) {
	      return baseZipObject(props || [], values || [], assignValue);
	    }

	    /**
	     * This method is like `_.zipObject` except that it supports property paths.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Array
	     * @param {Array} [props=[]] The property identifiers.
	     * @param {Array} [values=[]] The property values.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
	     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
	     */
	    function zipObjectDeep(props, values) {
	      return baseZipObject(props || [], values || [], baseSet);
	    }

	    /**
	     * This method is like `_.zip` except that it accepts `iteratee` to specify
	     * how grouped values should be combined. The iteratee is invoked with the
	     * elements of each group: (...group).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Array
	     * @param {...Array} [arrays] The arrays to process.
	     * @param {Function} [iteratee=_.identity] The function to combine grouped values.
	     * @returns {Array} Returns the new array of grouped elements.
	     * @example
	     *
	     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
	     *   return a + b + c;
	     * });
	     * // => [111, 222]
	     */
	    var zipWith = rest(function(arrays) {
	      var length = arrays.length,
	          iteratee = length > 1 ? arrays[length - 1] : undefined;

	      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
	      return unzipWith(arrays, iteratee);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
	     * chain sequences enabled. The result of such sequences must be unwrapped
	     * with `_#value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Seq
	     * @param {*} value The value to wrap.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36 },
	     *   { 'user': 'fred',    'age': 40 },
	     *   { 'user': 'pebbles', 'age': 1 }
	     * ];
	     *
	     * var youngest = _
	     *   .chain(users)
	     *   .sortBy('age')
	     *   .map(function(o) {
	     *     return o.user + ' is ' + o.age;
	     *   })
	     *   .head()
	     *   .value();
	     * // => 'pebbles is 1'
	     */
	    function chain(value) {
	      var result = lodash(value);
	      result.__chain__ = true;
	      return result;
	    }

	    /**
	     * This method invokes `interceptor` and returns `value`. The interceptor
	     * is invoked with one argument; (value). The purpose of this method is to
	     * "tap into" a method chain sequence in order to modify intermediate results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * _([1, 2, 3])
	     *  .tap(function(array) {
	     *    // Mutate input array.
	     *    array.pop();
	     *  })
	     *  .reverse()
	     *  .value();
	     * // => [2, 1]
	     */
	    function tap(value, interceptor) {
	      interceptor(value);
	      return value;
	    }

	    /**
	     * This method is like `_.tap` except that it returns the result of `interceptor`.
	     * The purpose of this method is to "pass thru" values replacing intermediate
	     * results in a method chain sequence.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Seq
	     * @param {*} value The value to provide to `interceptor`.
	     * @param {Function} interceptor The function to invoke.
	     * @returns {*} Returns the result of `interceptor`.
	     * @example
	     *
	     * _('  abc  ')
	     *  .chain()
	     *  .trim()
	     *  .thru(function(value) {
	     *    return [value];
	     *  })
	     *  .value();
	     * // => ['abc']
	     */
	    function thru(value, interceptor) {
	      return interceptor(value);
	    }

	    /**
	     * This method is the wrapper version of `_.at`.
	     *
	     * @name at
	     * @memberOf _
	     * @since 1.0.0
	     * @category Seq
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _(object).at(['a[0].b.c', 'a[1]']).value();
	     * // => [3, 4]
	     *
	     * _(['a', 'b', 'c']).at(0, 2).value();
	     * // => ['a', 'c']
	     */
	    var wrapperAt = rest(function(paths) {
	      paths = baseFlatten(paths, 1);
	      var length = paths.length,
	          start = length ? paths[0] : 0,
	          value = this.__wrapped__,
	          interceptor = function(object) { return baseAt(object, paths); };

	      if (length > 1 || this.__actions__.length ||
	          !(value instanceof LazyWrapper) || !isIndex(start)) {
	        return this.thru(interceptor);
	      }
	      value = value.slice(start, +start + (length ? 1 : 0));
	      value.__actions__.push({
	        'func': thru,
	        'args': [interceptor],
	        'thisArg': undefined
	      });
	      return new LodashWrapper(value, this.__chain__).thru(function(array) {
	        if (length && !array.length) {
	          array.push(undefined);
	        }
	        return array;
	      });
	    });

	    /**
	     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
	     *
	     * @name chain
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * // A sequence without explicit chaining.
	     * _(users).head();
	     * // => { 'user': 'barney', 'age': 36 }
	     *
	     * // A sequence with explicit chaining.
	     * _(users)
	     *   .chain()
	     *   .head()
	     *   .pick('user')
	     *   .value();
	     * // => { 'user': 'barney' }
	     */
	    function wrapperChain() {
	      return chain(this);
	    }

	    /**
	     * Executes the chain sequence and returns the wrapped result.
	     *
	     * @name commit
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2];
	     * var wrapped = _(array).push(3);
	     *
	     * console.log(array);
	     * // => [1, 2]
	     *
	     * wrapped = wrapped.commit();
	     * console.log(array);
	     * // => [1, 2, 3]
	     *
	     * wrapped.last();
	     * // => 3
	     *
	     * console.log(array);
	     * // => [1, 2, 3]
	     */
	    function wrapperCommit() {
	      return new LodashWrapper(this.value(), this.__chain__);
	    }

	    /**
	     * Gets the next value on a wrapped object following the
	     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
	     *
	     * @name next
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the next iterator value.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 1 }
	     *
	     * wrapped.next();
	     * // => { 'done': false, 'value': 2 }
	     *
	     * wrapped.next();
	     * // => { 'done': true, 'value': undefined }
	     */
	    function wrapperNext() {
	      if (this.__values__ === undefined) {
	        this.__values__ = toArray(this.value());
	      }
	      var done = this.__index__ >= this.__values__.length,
	          value = done ? undefined : this.__values__[this.__index__++];

	      return { 'done': done, 'value': value };
	    }

	    /**
	     * Enables the wrapper to be iterable.
	     *
	     * @name Symbol.iterator
	     * @memberOf _
	     * @since 4.0.0
	     * @category Seq
	     * @returns {Object} Returns the wrapper object.
	     * @example
	     *
	     * var wrapped = _([1, 2]);
	     *
	     * wrapped[Symbol.iterator]() === wrapped;
	     * // => true
	     *
	     * Array.from(wrapped);
	     * // => [1, 2]
	     */
	    function wrapperToIterator() {
	      return this;
	    }

	    /**
	     * Creates a clone of the chain sequence planting `value` as the wrapped value.
	     *
	     * @name plant
	     * @memberOf _
	     * @since 3.2.0
	     * @category Seq
	     * @param {*} value The value to plant.
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var wrapped = _([1, 2]).map(square);
	     * var other = wrapped.plant([3, 4]);
	     *
	     * other.value();
	     * // => [9, 16]
	     *
	     * wrapped.value();
	     * // => [1, 4]
	     */
	    function wrapperPlant(value) {
	      var result,
	          parent = this;

	      while (parent instanceof baseLodash) {
	        var clone = wrapperClone(parent);
	        clone.__index__ = 0;
	        clone.__values__ = undefined;
	        if (result) {
	          previous.__wrapped__ = clone;
	        } else {
	          result = clone;
	        }
	        var previous = clone;
	        parent = parent.__wrapped__;
	      }
	      previous.__wrapped__ = value;
	      return result;
	    }

	    /**
	     * This method is the wrapper version of `_.reverse`.
	     *
	     * **Note:** This method mutates the wrapped array.
	     *
	     * @name reverse
	     * @memberOf _
	     * @since 0.1.0
	     * @category Seq
	     * @returns {Object} Returns the new `lodash` wrapper instance.
	     * @example
	     *
	     * var array = [1, 2, 3];
	     *
	     * _(array).reverse().value()
	     * // => [3, 2, 1]
	     *
	     * console.log(array);
	     * // => [3, 2, 1]
	     */
	    function wrapperReverse() {
	      var value = this.__wrapped__;
	      if (value instanceof LazyWrapper) {
	        var wrapped = value;
	        if (this.__actions__.length) {
	          wrapped = new LazyWrapper(this);
	        }
	        wrapped = wrapped.reverse();
	        wrapped.__actions__.push({
	          'func': thru,
	          'args': [reverse],
	          'thisArg': undefined
	        });
	        return new LodashWrapper(wrapped, this.__chain__);
	      }
	      return this.thru(reverse);
	    }

	    /**
	     * Executes the chain sequence to resolve the unwrapped value.
	     *
	     * @name value
	     * @memberOf _
	     * @since 0.1.0
	     * @alias toJSON, valueOf
	     * @category Seq
	     * @returns {*} Returns the resolved unwrapped value.
	     * @example
	     *
	     * _([1, 2, 3]).value();
	     * // => [1, 2, 3]
	     */
	    function wrapperValue() {
	      return baseWrapperValue(this.__wrapped__, this.__actions__);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the number of times the key was returned by `iteratee`. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.countBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': 1, '6': 2 }
	     *
	     * _.countBy(['one', 'two', 'three'], 'length');
	     * // => { '3': 2, '5': 1 }
	     */
	    var countBy = createAggregator(function(result, value, key) {
	      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
	    });

	    /**
	     * Checks if `predicate` returns truthy for **all** elements of `collection`.
	     * Iteration is stopped once `predicate` returns falsey. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if all elements pass the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.every([true, 1, null, 'yes'], Boolean);
	     * // => false
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.every(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.every(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.every(users, 'active');
	     * // => false
	     */
	    function every(collection, predicate, guard) {
	      var func = isArray(collection) ? arrayEvery : baseEvery;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning an array of all elements
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, { 'age': 36, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.filter(users, 'active');
	     * // => objects for ['barney']
	     */
	    function filter(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Iterates over elements of `collection`, returning the first element
	     * `predicate` returns truthy for. The predicate is invoked with three
	     * arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': true },
	     *   { 'user': 'fred',    'age': 40, 'active': false },
	     *   { 'user': 'pebbles', 'age': 1,  'active': true }
	     * ];
	     *
	     * _.find(users, function(o) { return o.age < 40; });
	     * // => object for 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.find(users, { 'age': 1, 'active': true });
	     * // => object for 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.find(users, ['active', false]);
	     * // => object for 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.find(users, 'active');
	     * // => object for 'barney'
	     */
	    function find(collection, predicate) {
	      predicate = getIteratee(predicate, 3);
	      if (isArray(collection)) {
	        var index = baseFindIndex(collection, predicate);
	        return index > -1 ? collection[index] : undefined;
	      }
	      return baseFind(collection, predicate, baseEach);
	    }

	    /**
	     * This method is like `_.find` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {*} Returns the matched element, else `undefined`.
	     * @example
	     *
	     * _.findLast([1, 2, 3, 4], function(n) {
	     *   return n % 2 == 1;
	     * });
	     * // => 3
	     */
	    function findLast(collection, predicate) {
	      predicate = getIteratee(predicate, 3);
	      if (isArray(collection)) {
	        var index = baseFindIndex(collection, predicate, true);
	        return index > -1 ? collection[index] : undefined;
	      }
	      return baseFind(collection, predicate, baseEachRight);
	    }

	    /**
	     * Creates a flattened array of values by running each element in `collection`
	     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
	     * with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [n, n];
	     * }
	     *
	     * _.flatMap([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMap(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), 1);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDeep([1, 2], duplicate);
	     * // => [1, 1, 2, 2]
	     */
	    function flatMapDeep(collection, iteratee) {
	      return baseFlatten(map(collection, iteratee), INFINITY);
	    }

	    /**
	     * This method is like `_.flatMap` except that it recursively flattens the
	     * mapped results up to `depth` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @param {number} [depth=1] The maximum recursion depth.
	     * @returns {Array} Returns the new flattened array.
	     * @example
	     *
	     * function duplicate(n) {
	     *   return [[[n, n]]];
	     * }
	     *
	     * _.flatMapDepth([1, 2], duplicate, 2);
	     * // => [[1, 1], [2, 2]]
	     */
	    function flatMapDepth(collection, iteratee, depth) {
	      depth = depth === undefined ? 1 : toInteger(depth);
	      return baseFlatten(map(collection, iteratee), depth);
	    }

	    /**
	     * Iterates over elements of `collection` and invokes `iteratee` for each element.
	     * The iteratee is invoked with three arguments: (value, index|key, collection).
	     * Iteratee functions may exit iteration early by explicitly returning `false`.
	     *
	     * **Note:** As with other "Collections" methods, objects with a "length"
	     * property are iterated like arrays. To avoid this behavior use `_.forIn`
	     * or `_.forOwn` for object iteration.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @alias each
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @example
	     *
	     * _([1, 2]).forEach(function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `1` then `2`.
	     *
	     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forEach(collection, iteratee) {
	      return (typeof iteratee == 'function' && isArray(collection))
	        ? arrayEach(collection, iteratee)
	        : baseEach(collection, getIteratee(iteratee));
	    }

	    /**
	     * This method is like `_.forEach` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @alias eachRight
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array|Object} Returns `collection`.
	     * @example
	     *
	     * _.forEachRight([1, 2], function(value) {
	     *   console.log(value);
	     * });
	     * // => Logs `2` then `1`.
	     */
	    function forEachRight(collection, iteratee) {
	      return (typeof iteratee == 'function' && isArray(collection))
	        ? arrayEachRight(collection, iteratee)
	        : baseEachRight(collection, getIteratee(iteratee));
	    }

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The order of grouped values
	     * is determined by the order they occur in `collection`. The corresponding
	     * value of each key is an array of elements responsible for generating the
	     * key. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
	     * // => { '4': [4.2], '6': [6.1, 6.3] }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.groupBy(['one', 'two', 'three'], 'length');
	     * // => { '3': ['one', 'two'], '5': ['three'] }
	     */
	    var groupBy = createAggregator(function(result, value, key) {
	      if (hasOwnProperty.call(result, key)) {
	        result[key].push(value);
	      } else {
	        result[key] = [value];
	      }
	    });

	    /**
	     * Checks if `value` is in `collection`. If `collection` is a string, it's
	     * checked for a substring of `value`, otherwise
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * is used for equality comparisons. If `fromIndex` is negative, it's used as
	     * the offset from the end of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object|string} collection The collection to search.
	     * @param {*} value The value to search for.
	     * @param {number} [fromIndex=0] The index to search from.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {boolean} Returns `true` if `value` is found, else `false`.
	     * @example
	     *
	     * _.includes([1, 2, 3], 1);
	     * // => true
	     *
	     * _.includes([1, 2, 3], 1, 2);
	     * // => false
	     *
	     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
	     * // => true
	     *
	     * _.includes('pebbles', 'eb');
	     * // => true
	     */
	    function includes(collection, value, fromIndex, guard) {
	      collection = isArrayLike(collection) ? collection : values(collection);
	      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	      var length = collection.length;
	      if (fromIndex < 0) {
	        fromIndex = nativeMax(length + fromIndex, 0);
	      }
	      return isString(collection)
	        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	    }

	    /**
	     * Invokes the method at `path` of each element in `collection`, returning
	     * an array of the results of each invoked method. Any additional arguments
	     * are provided to each invoked method. If `methodName` is a function, it's
	     * invoked for and `this` bound to, each element in `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|string} path The path of the method to invoke or
	     *  the function invoked per iteration.
	     * @param {...*} [args] The arguments to invoke each method with.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
	     * // => [[1, 5, 7], [1, 2, 3]]
	     *
	     * _.invokeMap([123, 456], String.prototype.split, '');
	     * // => [['1', '2', '3'], ['4', '5', '6']]
	     */
	    var invokeMap = rest(function(collection, path, args) {
	      var index = -1,
	          isFunc = typeof path == 'function',
	          isProp = isKey(path),
	          result = isArrayLike(collection) ? Array(collection.length) : [];

	      baseEach(collection, function(value) {
	        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
	        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);
	      });
	      return result;
	    });

	    /**
	     * Creates an object composed of keys generated from the results of running
	     * each element of `collection` thru `iteratee`. The corresponding value of
	     * each key is the last element responsible for generating the key. The
	     * iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee to transform keys.
	     * @returns {Object} Returns the composed aggregate object.
	     * @example
	     *
	     * var array = [
	     *   { 'dir': 'left', 'code': 97 },
	     *   { 'dir': 'right', 'code': 100 }
	     * ];
	     *
	     * _.keyBy(array, function(o) {
	     *   return String.fromCharCode(o.code);
	     * });
	     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
	     *
	     * _.keyBy(array, 'dir');
	     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
	     */
	    var keyBy = createAggregator(function(result, value, key) {
	      result[key] = value;
	    });

	    /**
	     * Creates an array of values by running each element in `collection` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	     *
	     * The guarded methods are:
	     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new mapped array.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * _.map([4, 8], square);
	     * // => [16, 64]
	     *
	     * _.map({ 'a': 4, 'b': 8 }, square);
	     * // => [16, 64] (iteration order is not guaranteed)
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, 'user');
	     * // => ['barney', 'fred']
	     */
	    function map(collection, iteratee) {
	      var func = isArray(collection) ? arrayMap : baseMap;
	      return func(collection, getIteratee(iteratee, 3));
	    }

	    /**
	     * This method is like `_.sortBy` except that it allows specifying the sort
	     * orders of the iteratees to sort by. If `orders` is unspecified, all values
	     * are sorted in ascending order. Otherwise, specify an order of "desc" for
	     * descending or "asc" for ascending sort order of corresponding values.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
	     *  The iteratees to sort by.
	     * @param {string[]} [orders] The sort orders of `iteratees`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 34 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 36 }
	     * ];
	     *
	     * // Sort by `user` in ascending order and by `age` in descending order.
	     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    function orderBy(collection, iteratees, orders, guard) {
	      if (collection == null) {
	        return [];
	      }
	      if (!isArray(iteratees)) {
	        iteratees = iteratees == null ? [] : [iteratees];
	      }
	      orders = guard ? undefined : orders;
	      if (!isArray(orders)) {
	        orders = orders == null ? [] : [orders];
	      }
	      return baseOrderBy(collection, iteratees, orders);
	    }

	    /**
	     * Creates an array of elements split into two groups, the first of which
	     * contains elements `predicate` returns truthy for, the second of which
	     * contains elements `predicate` returns falsey for. The predicate is
	     * invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the array of grouped elements.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney',  'age': 36, 'active': false },
	     *   { 'user': 'fred',    'age': 40, 'active': true },
	     *   { 'user': 'pebbles', 'age': 1,  'active': false }
	     * ];
	     *
	     * _.partition(users, function(o) { return o.active; });
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.partition(users, { 'age': 1, 'active': false });
	     * // => objects for [['pebbles'], ['barney', 'fred']]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.partition(users, ['active', false]);
	     * // => objects for [['barney', 'pebbles'], ['fred']]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.partition(users, 'active');
	     * // => objects for [['fred'], ['barney', 'pebbles']]
	     */
	    var partition = createAggregator(function(result, value, key) {
	      result[key ? 0 : 1].push(value);
	    }, function() { return [[], []]; });

	    /**
	     * Reduces `collection` to a value which is the accumulated result of running
	     * each element in `collection` thru `iteratee`, where each successive
	     * invocation is supplied the return value of the previous. If `accumulator`
	     * is not given, the first element of `collection` is used as the initial
	     * value. The iteratee is invoked with four arguments:
	     * (accumulator, value, index|key, collection).
	     *
	     * Many lodash methods are guarded to work as iteratees for methods like
	     * `_.reduce`, `_.reduceRight`, and `_.transform`.
	     *
	     * The guarded methods are:
	     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	     * and `sortBy`
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.reduce([1, 2], function(sum, n) {
	     *   return sum + n;
	     * }, 0);
	     * // => 3
	     *
	     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     *   return result;
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	     */
	    function reduce(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduce : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	    }

	    /**
	     * This method is like `_.reduce` except that it iterates over elements of
	     * `collection` from right to left.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The initial value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * var array = [[0, 1], [2, 3], [4, 5]];
	     *
	     * _.reduceRight(array, function(flattened, other) {
	     *   return flattened.concat(other);
	     * }, []);
	     * // => [4, 5, 2, 3, 0, 1]
	     */
	    function reduceRight(collection, iteratee, accumulator) {
	      var func = isArray(collection) ? arrayReduceRight : baseReduce,
	          initAccum = arguments.length < 3;

	      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
	    }

	    /**
	     * The opposite of `_.filter`; this method returns the elements of `collection`
	     * that `predicate` does **not** return truthy for.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Array} Returns the new filtered array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': false },
	     *   { 'user': 'fred',   'age': 40, 'active': true }
	     * ];
	     *
	     * _.reject(users, function(o) { return !o.active; });
	     * // => objects for ['fred']
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.reject(users, { 'age': 40, 'active': true });
	     * // => objects for ['barney']
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.reject(users, ['active', false]);
	     * // => objects for ['fred']
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.reject(users, 'active');
	     * // => objects for ['barney']
	     */
	    function reject(collection, predicate) {
	      var func = isArray(collection) ? arrayFilter : baseFilter;
	      predicate = getIteratee(predicate, 3);
	      return func(collection, function(value, index, collection) {
	        return !predicate(value, index, collection);
	      });
	    }

	    /**
	     * Gets a random element from `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @returns {*} Returns the random element.
	     * @example
	     *
	     * _.sample([1, 2, 3, 4]);
	     * // => 2
	     */
	    function sample(collection) {
	      var array = isArrayLike(collection) ? collection : values(collection),
	          length = array.length;

	      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;
	    }

	    /**
	     * Gets `n` random elements at unique keys from `collection` up to the
	     * size of `collection`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to sample.
	     * @param {number} [n=1] The number of elements to sample.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the random elements.
	     * @example
	     *
	     * _.sampleSize([1, 2, 3], 2);
	     * // => [3, 1]
	     *
	     * _.sampleSize([1, 2, 3], 4);
	     * // => [2, 3, 1]
	     */
	    function sampleSize(collection, n, guard) {
	      var index = -1,
	          result = toArray(collection),
	          length = result.length,
	          lastIndex = length - 1;

	      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = baseClamp(toInteger(n), 0, length);
	      }
	      while (++index < n) {
	        var rand = baseRandom(index, lastIndex),
	            value = result[rand];

	        result[rand] = result[index];
	        result[index] = value;
	      }
	      result.length = n;
	      return result;
	    }

	    /**
	     * Creates an array of shuffled values, using a version of the
	     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to shuffle.
	     * @returns {Array} Returns the new shuffled array.
	     * @example
	     *
	     * _.shuffle([1, 2, 3, 4]);
	     * // => [4, 1, 3, 2]
	     */
	    function shuffle(collection) {
	      return sampleSize(collection, MAX_ARRAY_LENGTH);
	    }

	    /**
	     * Gets the size of `collection` by returning its length for array-like
	     * values or the number of own enumerable string keyed properties for objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to inspect.
	     * @returns {number} Returns the collection size.
	     * @example
	     *
	     * _.size([1, 2, 3]);
	     * // => 3
	     *
	     * _.size({ 'a': 1, 'b': 2 });
	     * // => 2
	     *
	     * _.size('pebbles');
	     * // => 7
	     */
	    function size(collection) {
	      if (collection == null) {
	        return 0;
	      }
	      if (isArrayLike(collection)) {
	        var result = collection.length;
	        return (result && isString(collection)) ? stringSize(collection) : result;
	      }
	      if (isObjectLike(collection)) {
	        var tag = getTag(collection);
	        if (tag == mapTag || tag == setTag) {
	          return collection.size;
	        }
	      }
	      return keys(collection).length;
	    }

	    /**
	     * Checks if `predicate` returns truthy for **any** element of `collection`.
	     * Iteration is stopped once `predicate` returns truthy. The predicate is
	     * invoked with three arguments: (value, index|key, collection).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {boolean} Returns `true` if any element passes the predicate check,
	     *  else `false`.
	     * @example
	     *
	     * _.some([null, 0, 'yes', false], Boolean);
	     * // => true
	     *
	     * var users = [
	     *   { 'user': 'barney', 'active': true },
	     *   { 'user': 'fred',   'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.some(users, { 'user': 'barney', 'active': false });
	     * // => false
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.some(users, ['active', false]);
	     * // => true
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.some(users, 'active');
	     * // => true
	     */
	    function some(collection, predicate, guard) {
	      var func = isArray(collection) ? arraySome : baseSome;
	      if (guard && isIterateeCall(collection, predicate, guard)) {
	        predicate = undefined;
	      }
	      return func(collection, getIteratee(predicate, 3));
	    }

	    /**
	     * Creates an array of elements, sorted in ascending order by the results of
	     * running each element in a collection thru each iteratee. This method
	     * performs a stable sort, that is, it preserves the original sort order of
	     * equal elements. The iteratees are invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Collection
	     * @param {Array|Object} collection The collection to iterate over.
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [iteratees=[_.identity]] The iteratees to sort by.
	     * @returns {Array} Returns the new sorted array.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'fred',   'age': 48 },
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 },
	     *   { 'user': 'barney', 'age': 34 }
	     * ];
	     *
	     * _.sortBy(users, function(o) { return o.user; });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     *
	     * _.sortBy(users, ['user', 'age']);
	     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	     *
	     * _.sortBy(users, 'user', function(o) {
	     *   return Math.floor(o.age / 10);
	     * });
	     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	     */
	    var sortBy = rest(function(collection, iteratees) {
	      if (collection == null) {
	        return [];
	      }
	      var length = iteratees.length;
	      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	        iteratees = [];
	      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	        iteratees = [iteratees[0]];
	      }
	      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))
	        ? iteratees[0]
	        : baseFlatten(iteratees, 1, isFlattenableIteratee);

	      return baseOrderBy(collection, iteratees, []);
	    });

	    /*------------------------------------------------------------------------*/

	    /**
	     * Gets the timestamp of the number of milliseconds that have elapsed since
	     * the Unix epoch (1 January 1970 00:00:00 UTC).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @type {Function}
	     * @category Date
	     * @returns {number} Returns the timestamp.
	     * @example
	     *
	     * _.defer(function(stamp) {
	     *   console.log(_.now() - stamp);
	     * }, _.now());
	     * // => Logs the number of milliseconds it took for the deferred function to be invoked.
	     */
	    var now = Date.now;

	    /*------------------------------------------------------------------------*/

	    /**
	     * The opposite of `_.before`; this method creates a function that invokes
	     * `func` once it's called `n` or more times.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {number} n The number of calls before `func` is invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var saves = ['profile', 'settings'];
	     *
	     * var done = _.after(saves.length, function() {
	     *   console.log('done saving!');
	     * });
	     *
	     * _.forEach(saves, function(type) {
	     *   asyncSave({ 'type': type, 'complete': done });
	     * });
	     * // => Logs 'done saving!' after the two async saves have completed.
	     */
	    function after(n, func) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n < 1) {
	          return func.apply(this, arguments);
	        }
	      };
	    }

	    /**
	     * Creates a function that invokes `func`, with up to `n` arguments,
	     * ignoring any additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @param {number} [n=func.length] The arity cap.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	     * // => [6, 8, 10]
	     */
	    function ary(func, n, guard) {
	      n = guard ? undefined : n;
	      n = (func && n == null) ? func.length : n;
	      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
	    }

	    /**
	     * Creates a function that invokes `func`, with the `this` binding and arguments
	     * of the created function, while it's called less than `n` times. Subsequent
	     * calls to the created function return the result of the last `func` invocation.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {number} n The number of calls at which `func` is no longer invoked.
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * jQuery(element).on('click', _.before(5, addContactToList));
	     * // => allows adding up to 4 contacts to the list
	     */
	    function before(n, func) {
	      var result;
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      n = toInteger(n);
	      return function() {
	        if (--n > 0) {
	          result = func.apply(this, arguments);
	        }
	        if (n <= 1) {
	          func = undefined;
	        }
	        return result;
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of `thisArg`
	     * and `partials` prepended to the arguments it receives.
	     *
	     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** Unlike native `Function#bind` this method doesn't set the "length"
	     * property of bound functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to bind.
	     * @param {*} thisArg The `this` binding of `func`.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var greet = function(greeting, punctuation) {
	     *   return greeting + ' ' + this.user + punctuation;
	     * };
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * var bound = _.bind(greet, object, 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bind(greet, object, _, '!');
	     * bound('hi');
	     * // => 'hi fred!'
	     */
	    var bind = rest(function(func, thisArg, partials) {
	      var bitmask = BIND_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getPlaceholder(bind));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(func, bitmask, thisArg, partials, holders);
	    });

	    /**
	     * Creates a function that invokes the method at `object[key]` with `partials`
	     * prepended to the arguments it receives.
	     *
	     * This method differs from `_.bind` by allowing bound functions to reference
	     * methods that may be redefined or don't yet exist. See
	     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
	     * for more details.
	     *
	     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Function
	     * @param {Object} object The object to invoke the method on.
	     * @param {string} key The key of the method.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new bound function.
	     * @example
	     *
	     * var object = {
	     *   'user': 'fred',
	     *   'greet': function(greeting, punctuation) {
	     *     return greeting + ' ' + this.user + punctuation;
	     *   }
	     * };
	     *
	     * var bound = _.bindKey(object, 'greet', 'hi');
	     * bound('!');
	     * // => 'hi fred!'
	     *
	     * object.greet = function(greeting, punctuation) {
	     *   return greeting + 'ya ' + this.user + punctuation;
	     * };
	     *
	     * bound('!');
	     * // => 'hiya fred!'
	     *
	     * // Bound with placeholders.
	     * var bound = _.bindKey(object, 'greet', _, '!');
	     * bound('hi');
	     * // => 'hiya fred!'
	     */
	    var bindKey = rest(function(object, key, partials) {
	      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
	      if (partials.length) {
	        var holders = replaceHolders(partials, getPlaceholder(bindKey));
	        bitmask |= PARTIAL_FLAG;
	      }
	      return createWrapper(key, bitmask, object, partials, holders);
	    });

	    /**
	     * Creates a function that accepts arguments of `func` and either invokes
	     * `func` returning its result, if at least `arity` number of arguments have
	     * been provided, or returns a function that accepts the remaining `func`
	     * arguments, and so on. The arity of `func` may be specified if `func.length`
	     * is not sufficient.
	     *
	     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	     * may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curry(abc);
	     *
	     * curried(1)(2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2)(3);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(1)(_, 3)(2);
	     * // => [1, 2, 3]
	     */
	    function curry(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curry.placeholder;
	      return result;
	    }

	    /**
	     * This method is like `_.curry` except that arguments are applied to `func`
	     * in the manner of `_.partialRight` instead of `_.partial`.
	     *
	     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for provided arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of curried functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to curry.
	     * @param {number} [arity=func.length] The arity of `func`.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the new curried function.
	     * @example
	     *
	     * var abc = function(a, b, c) {
	     *   return [a, b, c];
	     * };
	     *
	     * var curried = _.curryRight(abc);
	     *
	     * curried(3)(2)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(2, 3)(1);
	     * // => [1, 2, 3]
	     *
	     * curried(1, 2, 3);
	     * // => [1, 2, 3]
	     *
	     * // Curried with placeholders.
	     * curried(3)(1, _)(2);
	     * // => [1, 2, 3]
	     */
	    function curryRight(func, arity, guard) {
	      arity = guard ? undefined : arity;
	      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	      result.placeholder = curryRight.placeholder;
	      return result;
	    }

	    /**
	     * Creates a debounced function that delays invoking `func` until after `wait`
	     * milliseconds have elapsed since the last time the debounced function was
	     * invoked. The debounced function comes with a `cancel` method to cancel
	     * delayed `func` invocations and a `flush` method to immediately invoke them.
	     * Provide an options object to indicate whether `func` should be invoked on
	     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	     * with the last arguments provided to the debounced function. Subsequent calls
	     * to the debounced function return the result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
	     * on the trailing edge of the timeout only if the debounced function is
	     * invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.debounce` and `_.throttle`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to debounce.
	     * @param {number} [wait=0] The number of milliseconds to delay.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=false]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {number} [options.maxWait]
	     *  The maximum time `func` is allowed to be delayed before it's invoked.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new debounced function.
	     * @example
	     *
	     * // Avoid costly calculations while the window size is in flux.
	     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	     *
	     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	     * jQuery(element).on('click', _.debounce(sendMail, 300, {
	     *   'leading': true,
	     *   'trailing': false
	     * }));
	     *
	     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	     * var source = new EventSource('/stream');
	     * jQuery(source).on('message', debounced);
	     *
	     * // Cancel the trailing debounced invocation.
	     * jQuery(window).on('popstate', debounced.cancel);
	     */
	    function debounce(func, wait, options) {
	      var lastArgs,
	          lastThis,
	          maxWait,
	          result,
	          timerId,
	          lastCallTime = 0,
	          lastInvokeTime = 0,
	          leading = false,
	          maxing = false,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      wait = toNumber(wait) || 0;
	      if (isObject(options)) {
	        leading = !!options.leading;
	        maxing = 'maxWait' in options;
	        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }

	      function invokeFunc(time) {
	        var args = lastArgs,
	            thisArg = lastThis;

	        lastArgs = lastThis = undefined;
	        lastInvokeTime = time;
	        result = func.apply(thisArg, args);
	        return result;
	      }

	      function leadingEdge(time) {
	        // Reset any `maxWait` timer.
	        lastInvokeTime = time;
	        // Start the timer for the trailing edge.
	        timerId = setTimeout(timerExpired, wait);
	        // Invoke the leading edge.
	        return leading ? invokeFunc(time) : result;
	      }

	      function remainingWait(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime,
	            result = wait - timeSinceLastCall;

	        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	      }

	      function shouldInvoke(time) {
	        var timeSinceLastCall = time - lastCallTime,
	            timeSinceLastInvoke = time - lastInvokeTime;

	        // Either this is the first call, activity has stopped and we're at the
	        // trailing edge, the system time has gone backwards and we're treating
	        // it as the trailing edge, or we've hit the `maxWait` limit.
	        return (!lastCallTime || (timeSinceLastCall >= wait) ||
	          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	      }

	      function timerExpired() {
	        var time = now();
	        if (shouldInvoke(time)) {
	          return trailingEdge(time);
	        }
	        // Restart the timer.
	        timerId = setTimeout(timerExpired, remainingWait(time));
	      }

	      function trailingEdge(time) {
	        clearTimeout(timerId);
	        timerId = undefined;

	        // Only invoke if we have `lastArgs` which means `func` has been
	        // debounced at least once.
	        if (trailing && lastArgs) {
	          return invokeFunc(time);
	        }
	        lastArgs = lastThis = undefined;
	        return result;
	      }

	      function cancel() {
	        if (timerId !== undefined) {
	          clearTimeout(timerId);
	        }
	        lastCallTime = lastInvokeTime = 0;
	        lastArgs = lastThis = timerId = undefined;
	      }

	      function flush() {
	        return timerId === undefined ? result : trailingEdge(now());
	      }

	      function debounced() {
	        var time = now(),
	            isInvoking = shouldInvoke(time);

	        lastArgs = arguments;
	        lastThis = this;
	        lastCallTime = time;

	        if (isInvoking) {
	          if (timerId === undefined) {
	            return leadingEdge(lastCallTime);
	          }
	          if (maxing) {
	            // Handle invocations in a tight loop.
	            clearTimeout(timerId);
	            timerId = setTimeout(timerExpired, wait);
	            return invokeFunc(lastCallTime);
	          }
	        }
	        if (timerId === undefined) {
	          timerId = setTimeout(timerExpired, wait);
	        }
	        return result;
	      }
	      debounced.cancel = cancel;
	      debounced.flush = flush;
	      return debounced;
	    }

	    /**
	     * Defers invoking the `func` until the current call stack has cleared. Any
	     * additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to defer.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.defer(function(text) {
	     *   console.log(text);
	     * }, 'deferred');
	     * // => Logs 'deferred' after one or more milliseconds.
	     */
	    var defer = rest(function(func, args) {
	      return baseDelay(func, 1, args);
	    });

	    /**
	     * Invokes `func` after `wait` milliseconds. Any additional arguments are
	     * provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to delay.
	     * @param {number} wait The number of milliseconds to delay invocation.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {number} Returns the timer id.
	     * @example
	     *
	     * _.delay(function(text) {
	     *   console.log(text);
	     * }, 1000, 'later');
	     * // => Logs 'later' after one second.
	     */
	    var delay = rest(function(func, wait, args) {
	      return baseDelay(func, toNumber(wait) || 0, args);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments reversed.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to flip arguments for.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var flipped = _.flip(function() {
	     *   return _.toArray(arguments);
	     * });
	     *
	     * flipped('a', 'b', 'c', 'd');
	     * // => ['d', 'c', 'b', 'a']
	     */
	    function flip(func) {
	      return createWrapper(func, FLIP_FLAG);
	    }

	    /**
	     * Creates a function that memoizes the result of `func`. If `resolver` is
	     * provided, it determines the cache key for storing the result based on the
	     * arguments provided to the memoized function. By default, the first argument
	     * provided to the memoized function is used as the map cache key. The `func`
	     * is invoked with the `this` binding of the memoized function.
	     *
	     * **Note:** The cache is exposed as the `cache` property on the memoized
	     * function. Its creation may be customized by replacing the `_.memoize.Cache`
	     * constructor with one whose instances implement the
	     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
	     * method interface of `delete`, `get`, `has`, and `set`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to have its output memoized.
	     * @param {Function} [resolver] The function to resolve the cache key.
	     * @returns {Function} Returns the new memoizing function.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2 };
	     * var other = { 'c': 3, 'd': 4 };
	     *
	     * var values = _.memoize(_.values);
	     * values(object);
	     * // => [1, 2]
	     *
	     * values(other);
	     * // => [3, 4]
	     *
	     * object.a = 2;
	     * values(object);
	     * // => [1, 2]
	     *
	     * // Modify the result cache.
	     * values.cache.set(object, ['a', 'b']);
	     * values(object);
	     * // => ['a', 'b']
	     *
	     * // Replace `_.memoize.Cache`.
	     * _.memoize.Cache = WeakMap;
	     */
	    function memoize(func, resolver) {
	      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      var memoized = function() {
	        var args = arguments,
	            key = resolver ? resolver.apply(this, args) : args[0],
	            cache = memoized.cache;

	        if (cache.has(key)) {
	          return cache.get(key);
	        }
	        var result = func.apply(this, args);
	        memoized.cache = cache.set(key, result);
	        return result;
	      };
	      memoized.cache = new (memoize.Cache || MapCache);
	      return memoized;
	    }

	    // Assign cache to `_.memoize`.
	    memoize.Cache = MapCache;

	    /**
	     * Creates a function that negates the result of the predicate `func`. The
	     * `func` predicate is invoked with the `this` binding and arguments of the
	     * created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} predicate The predicate to negate.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function isEven(n) {
	     *   return n % 2 == 0;
	     * }
	     *
	     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
	     * // => [1, 3, 5]
	     */
	    function negate(predicate) {
	      if (typeof predicate != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      return function() {
	        return !predicate.apply(this, arguments);
	      };
	    }

	    /**
	     * Creates a function that is restricted to invoking `func` once. Repeat calls
	     * to the function return the value of the first invocation. The `func` is
	     * invoked with the `this` binding and arguments of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to restrict.
	     * @returns {Function} Returns the new restricted function.
	     * @example
	     *
	     * var initialize = _.once(createApplication);
	     * initialize();
	     * initialize();
	     * // `initialize` invokes `createApplication` once
	     */
	    function once(func) {
	      return before(2, func);
	    }

	    /**
	     * Creates a function that invokes `func` with arguments transformed by
	     * corresponding `transforms`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Function
	     * @param {Function} func The function to wrap.
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [transforms[_.identity]] The functions to transform.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function doubled(n) {
	     *   return n * 2;
	     * }
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var func = _.overArgs(function(x, y) {
	     *   return [x, y];
	     * }, square, doubled);
	     *
	     * func(9, 3);
	     * // => [81, 6]
	     *
	     * func(10, 5);
	     * // => [100, 10]
	     */
	    var overArgs = rest(function(func, transforms) {
	      transforms = (transforms.length == 1 && isArray(transforms[0]))
	        ? arrayMap(transforms[0], baseUnary(getIteratee()))
	        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));

	      var funcsLength = transforms.length;
	      return rest(function(args) {
	        var index = -1,
	            length = nativeMin(args.length, funcsLength);

	        while (++index < length) {
	          args[index] = transforms[index].call(this, args[index]);
	        }
	        return apply(func, this, args);
	      });
	    });

	    /**
	     * Creates a function that invokes `func` with `partials` prepended to the
	     * arguments it receives. This method is like `_.bind` except it does **not**
	     * alter the `this` binding.
	     *
	     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.2.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var sayHelloTo = _.partial(greet, 'hello');
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     *
	     * // Partially applied with placeholders.
	     * var greetFred = _.partial(greet, _, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     */
	    var partial = rest(function(func, partials) {
	      var holders = replaceHolders(partials, getPlaceholder(partial));
	      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);
	    });

	    /**
	     * This method is like `_.partial` except that partially applied arguments
	     * are appended to the arguments it receives.
	     *
	     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	     * builds, may be used as a placeholder for partially applied arguments.
	     *
	     * **Note:** This method doesn't set the "length" property of partially
	     * applied functions.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Function
	     * @param {Function} func The function to partially apply arguments to.
	     * @param {...*} [partials] The arguments to be partially applied.
	     * @returns {Function} Returns the new partially applied function.
	     * @example
	     *
	     * var greet = function(greeting, name) {
	     *   return greeting + ' ' + name;
	     * };
	     *
	     * var greetFred = _.partialRight(greet, 'fred');
	     * greetFred('hi');
	     * // => 'hi fred'
	     *
	     * // Partially applied with placeholders.
	     * var sayHelloTo = _.partialRight(greet, 'hello', _);
	     * sayHelloTo('fred');
	     * // => 'hello fred'
	     */
	    var partialRight = rest(function(func, partials) {
	      var holders = replaceHolders(partials, getPlaceholder(partialRight));
	      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	    });

	    /**
	     * Creates a function that invokes `func` with arguments arranged according
	     * to the specified `indexes` where the argument value at the first index is
	     * provided as the first argument, the argument value at the second index is
	     * provided as the second argument, and so on.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Function
	     * @param {Function} func The function to rearrange arguments for.
	     * @param {...(number|number[])} indexes The arranged argument indexes.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var rearged = _.rearg(function(a, b, c) {
	     *   return [a, b, c];
	     * }, 2, 0, 1);
	     *
	     * rearged('b', 'c', 'a')
	     * // => ['a', 'b', 'c']
	     */
	    var rearg = rest(function(func, indexes) {
	      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));
	    });

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * created function and arguments from `start` and beyond provided as
	     * an array.
	     *
	     * **Note:** This method is based on the
	     * [rest parameter](https://mdn.io/rest_parameters).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to apply a rest parameter to.
	     * @param {number} [start=func.length-1] The start position of the rest parameter.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.rest(function(what, names) {
	     *   return what + ' ' + _.initial(names).join(', ') +
	     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	     * });
	     *
	     * say('hello', 'fred', 'barney', 'pebbles');
	     * // => 'hello fred, barney, & pebbles'
	     */
	    function rest(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
	      return function() {
	        var args = arguments,
	            index = -1,
	            length = nativeMax(args.length - start, 0),
	            array = Array(length);

	        while (++index < length) {
	          array[index] = args[start + index];
	        }
	        switch (start) {
	          case 0: return func.call(this, array);
	          case 1: return func.call(this, args[0], array);
	          case 2: return func.call(this, args[0], args[1], array);
	        }
	        var otherArgs = Array(start + 1);
	        index = -1;
	        while (++index < start) {
	          otherArgs[index] = args[index];
	        }
	        otherArgs[start] = array;
	        return apply(func, this, otherArgs);
	      };
	    }

	    /**
	     * Creates a function that invokes `func` with the `this` binding of the
	     * create function and an array of arguments much like
	     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).
	     *
	     * **Note:** This method is based on the
	     * [spread operator](https://mdn.io/spread_operator).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Function
	     * @param {Function} func The function to spread arguments over.
	     * @param {number} [start=0] The start position of the spread.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var say = _.spread(function(who, what) {
	     *   return who + ' says ' + what;
	     * });
	     *
	     * say(['fred', 'hello']);
	     * // => 'fred says hello'
	     *
	     * var numbers = Promise.all([
	     *   Promise.resolve(40),
	     *   Promise.resolve(36)
	     * ]);
	     *
	     * numbers.then(_.spread(function(x, y) {
	     *   return x + y;
	     * }));
	     * // => a Promise of 76
	     */
	    function spread(func, start) {
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);
	      return rest(function(args) {
	        var array = args[start],
	            otherArgs = castSlice(args, 0, start);

	        if (array) {
	          arrayPush(otherArgs, array);
	        }
	        return apply(func, this, otherArgs);
	      });
	    }

	    /**
	     * Creates a throttled function that only invokes `func` at most once per
	     * every `wait` milliseconds. The throttled function comes with a `cancel`
	     * method to cancel delayed `func` invocations and a `flush` method to
	     * immediately invoke them. Provide an options object to indicate whether
	     * `func` should be invoked on the leading and/or trailing edge of the `wait`
	     * timeout. The `func` is invoked with the last arguments provided to the
	     * throttled function. Subsequent calls to the throttled function return the
	     * result of the last `func` invocation.
	     *
	     * **Note:** If `leading` and `trailing` options are `true`, `func` is
	     * invoked on the trailing edge of the timeout only if the throttled function
	     * is invoked more than once during the `wait` timeout.
	     *
	     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	     * for details over the differences between `_.throttle` and `_.debounce`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {Function} func The function to throttle.
	     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.leading=true]
	     *  Specify invoking on the leading edge of the timeout.
	     * @param {boolean} [options.trailing=true]
	     *  Specify invoking on the trailing edge of the timeout.
	     * @returns {Function} Returns the new throttled function.
	     * @example
	     *
	     * // Avoid excessively updating the position while scrolling.
	     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	     *
	     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	     * jQuery(element).on('click', throttled);
	     *
	     * // Cancel the trailing throttled invocation.
	     * jQuery(window).on('popstate', throttled.cancel);
	     */
	    function throttle(func, wait, options) {
	      var leading = true,
	          trailing = true;

	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (isObject(options)) {
	        leading = 'leading' in options ? !!options.leading : leading;
	        trailing = 'trailing' in options ? !!options.trailing : trailing;
	      }
	      return debounce(func, wait, {
	        'leading': leading,
	        'maxWait': wait,
	        'trailing': trailing
	      });
	    }

	    /**
	     * Creates a function that accepts up to one argument, ignoring any
	     * additional arguments.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Function
	     * @param {Function} func The function to cap arguments for.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * _.map(['6', '8', '10'], _.unary(parseInt));
	     * // => [6, 8, 10]
	     */
	    function unary(func) {
	      return ary(func, 1);
	    }

	    /**
	     * Creates a function that provides `value` to the wrapper function as its
	     * first argument. Any additional arguments provided to the function are
	     * appended to those provided to the wrapper function. The wrapper is invoked
	     * with the `this` binding of the created function.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Function
	     * @param {*} value The value to wrap.
	     * @param {Function} [wrapper=identity] The wrapper function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var p = _.wrap(_.escape, function(func, text) {
	     *   return '<p>' + func(text) + '</p>';
	     * });
	     *
	     * p('fred, barney, & pebbles');
	     * // => '<p>fred, barney, &amp; pebbles</p>'
	     */
	    function wrap(value, wrapper) {
	      wrapper = wrapper == null ? identity : wrapper;
	      return partial(wrapper, value);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Casts `value` as an array if it's not one.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.4.0
	     * @category Lang
	     * @param {*} value The value to inspect.
	     * @returns {Array} Returns the cast array.
	     * @example
	     *
	     * _.castArray(1);
	     * // => [1]
	     *
	     * _.castArray({ 'a': 1 });
	     * // => [{ 'a': 1 }]
	     *
	     * _.castArray('abc');
	     * // => ['abc']
	     *
	     * _.castArray(null);
	     * // => [null]
	     *
	     * _.castArray(undefined);
	     * // => [undefined]
	     *
	     * _.castArray();
	     * // => []
	     *
	     * var array = [1, 2, 3];
	     * console.log(_.castArray(array) === array);
	     * // => true
	     */
	    function castArray() {
	      if (!arguments.length) {
	        return [];
	      }
	      var value = arguments[0];
	      return isArray(value) ? value : [value];
	    }

	    /**
	     * Creates a shallow clone of `value`.
	     *
	     * **Note:** This method is loosely based on the
	     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	     * and supports cloning arrays, array buffers, booleans, date objects, maps,
	     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	     * arrays. The own enumerable properties of `arguments` objects are cloned
	     * as plain objects. An empty object is returned for uncloneable values such
	     * as error objects, functions, DOM nodes, and WeakMaps.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var shallow = _.clone(objects);
	     * console.log(shallow[0] === objects[0]);
	     * // => true
	     */
	    function clone(value) {
	      return baseClone(value, false, true);
	    }

	    /**
	     * This method is like `_.clone` except that it accepts `customizer` which
	     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
	     * cloning is handled by the method instead. The `customizer` is invoked with
	     * up to four arguments; (value [, index|key, object, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the cloned value.
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(false);
	     *   }
	     * }
	     *
	     * var el = _.cloneWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 0
	     */
	    function cloneWith(value, customizer) {
	      return baseClone(value, false, true, customizer);
	    }

	    /**
	     * This method is like `_.clone` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * var objects = [{ 'a': 1 }, { 'b': 2 }];
	     *
	     * var deep = _.cloneDeep(objects);
	     * console.log(deep[0] === objects[0]);
	     * // => false
	     */
	    function cloneDeep(value) {
	      return baseClone(value, true, true);
	    }

	    /**
	     * This method is like `_.cloneWith` except that it recursively clones `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to recursively clone.
	     * @param {Function} [customizer] The function to customize cloning.
	     * @returns {*} Returns the deep cloned value.
	     * @example
	     *
	     * function customizer(value) {
	     *   if (_.isElement(value)) {
	     *     return value.cloneNode(true);
	     *   }
	     * }
	     *
	     * var el = _.cloneDeepWith(document.body, customizer);
	     *
	     * console.log(el === document.body);
	     * // => false
	     * console.log(el.nodeName);
	     * // => 'BODY'
	     * console.log(el.childNodes.length);
	     * // => 20
	     */
	    function cloneDeepWith(value, customizer) {
	      return baseClone(value, true, true, customizer);
	    }

	    /**
	     * Performs a
	     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
	     * comparison between two values to determine if they are equivalent.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.eq(object, object);
	     * // => true
	     *
	     * _.eq(object, other);
	     * // => false
	     *
	     * _.eq('a', 'a');
	     * // => true
	     *
	     * _.eq('a', Object('a'));
	     * // => false
	     *
	     * _.eq(NaN, NaN);
	     * // => true
	     */
	    function eq(value, other) {
	      return value === other || (value !== value && other !== other);
	    }

	    /**
	     * Checks if `value` is greater than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than `other`,
	     *  else `false`.
	     * @example
	     *
	     * _.gt(3, 1);
	     * // => true
	     *
	     * _.gt(3, 3);
	     * // => false
	     *
	     * _.gt(1, 3);
	     * // => false
	     */
	    function gt(value, other) {
	      return value > other;
	    }

	    /**
	     * Checks if `value` is greater than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is greater than or equal to
	     *  `other`, else `false`.
	     * @example
	     *
	     * _.gte(3, 1);
	     * // => true
	     *
	     * _.gte(3, 3);
	     * // => true
	     *
	     * _.gte(1, 3);
	     * // => false
	     */
	    function gte(value, other) {
	      return value >= other;
	    }

	    /**
	     * Checks if `value` is likely an `arguments` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArguments(function() { return arguments; }());
	     * // => true
	     *
	     * _.isArguments([1, 2, 3]);
	     * // => false
	     */
	    function isArguments(value) {
	      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
	      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	    }

	    /**
	     * Checks if `value` is classified as an `Array` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @type {Function}
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArray([1, 2, 3]);
	     * // => true
	     *
	     * _.isArray(document.body.children);
	     * // => false
	     *
	     * _.isArray('abc');
	     * // => false
	     *
	     * _.isArray(_.noop);
	     * // => false
	     */
	    var isArray = Array.isArray;

	    /**
	     * Checks if `value` is classified as an `ArrayBuffer` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayBuffer(new ArrayBuffer(2));
	     * // => true
	     *
	     * _.isArrayBuffer(new Array(2));
	     * // => false
	     */
	    function isArrayBuffer(value) {
	      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;
	    }

	    /**
	     * Checks if `value` is array-like. A value is considered array-like if it's
	     * not a function and has a `value.length` that's an integer greater than or
	     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	     * @example
	     *
	     * _.isArrayLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLike(document.body.children);
	     * // => true
	     *
	     * _.isArrayLike('abc');
	     * // => true
	     *
	     * _.isArrayLike(_.noop);
	     * // => false
	     */
	    function isArrayLike(value) {
	      return value != null && isLength(getLength(value)) && !isFunction(value);
	    }

	    /**
	     * This method is like `_.isArrayLike` except that it also checks if `value`
	     * is an object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an array-like object,
	     *  else `false`.
	     * @example
	     *
	     * _.isArrayLikeObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isArrayLikeObject(document.body.children);
	     * // => true
	     *
	     * _.isArrayLikeObject('abc');
	     * // => false
	     *
	     * _.isArrayLikeObject(_.noop);
	     * // => false
	     */
	    function isArrayLikeObject(value) {
	      return isObjectLike(value) && isArrayLike(value);
	    }

	    /**
	     * Checks if `value` is classified as a boolean primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isBoolean(false);
	     * // => true
	     *
	     * _.isBoolean(null);
	     * // => false
	     */
	    function isBoolean(value) {
	      return value === true || value === false ||
	        (isObjectLike(value) && objectToString.call(value) == boolTag);
	    }

	    /**
	     * Checks if `value` is a buffer.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	     * @example
	     *
	     * _.isBuffer(new Buffer(2));
	     * // => true
	     *
	     * _.isBuffer(new Uint8Array(2));
	     * // => false
	     */
	    var isBuffer = !Buffer ? constant(false) : function(value) {
	      return value instanceof Buffer;
	    };

	    /**
	     * Checks if `value` is classified as a `Date` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isDate(new Date);
	     * // => true
	     *
	     * _.isDate('Mon April 23 2012');
	     * // => false
	     */
	    function isDate(value) {
	      return isObjectLike(value) && objectToString.call(value) == dateTag;
	    }

	    /**
	     * Checks if `value` is likely a DOM element.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a DOM element,
	     *  else `false`.
	     * @example
	     *
	     * _.isElement(document.body);
	     * // => true
	     *
	     * _.isElement('<body>');
	     * // => false
	     */
	    function isElement(value) {
	      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
	    }

	    /**
	     * Checks if `value` is an empty object, collection, map, or set.
	     *
	     * Objects are considered empty if they have no own enumerable string keyed
	     * properties.
	     *
	     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	     * jQuery-like collections are considered empty if they have a `length` of `0`.
	     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	     * @example
	     *
	     * _.isEmpty(null);
	     * // => true
	     *
	     * _.isEmpty(true);
	     * // => true
	     *
	     * _.isEmpty(1);
	     * // => true
	     *
	     * _.isEmpty([1, 2, 3]);
	     * // => false
	     *
	     * _.isEmpty({ 'a': 1 });
	     * // => false
	     */
	    function isEmpty(value) {
	      if (isArrayLike(value) &&
	          (isArray(value) || isString(value) || isFunction(value.splice) ||
	            isArguments(value) || isBuffer(value))) {
	        return !value.length;
	      }
	      if (isObjectLike(value)) {
	        var tag = getTag(value);
	        if (tag == mapTag || tag == setTag) {
	          return !value.size;
	        }
	      }
	      for (var key in value) {
	        if (hasOwnProperty.call(value, key)) {
	          return false;
	        }
	      }
	      return !(nonEnumShadows && keys(value).length);
	    }

	    /**
	     * Performs a deep comparison between two values to determine if they are
	     * equivalent.
	     *
	     * **Note:** This method supports comparing arrays, array buffers, booleans,
	     * date objects, error objects, maps, numbers, `Object` objects, regexes,
	     * sets, strings, symbols, and typed arrays. `Object` objects are compared
	     * by their own, not inherited, enumerable properties. Functions and DOM
	     * nodes are **not** supported.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var other = { 'user': 'fred' };
	     *
	     * _.isEqual(object, other);
	     * // => true
	     *
	     * object === other;
	     * // => false
	     */
	    function isEqual(value, other) {
	      return baseIsEqual(value, other);
	    }

	    /**
	     * This method is like `_.isEqual` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with up to
	     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if the values are equivalent,
	     *  else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, othValue) {
	     *   if (isGreeting(objValue) && isGreeting(othValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var array = ['hello', 'goodbye'];
	     * var other = ['hi', 'goodbye'];
	     *
	     * _.isEqualWith(array, other, customizer);
	     * // => true
	     */
	    function isEqualWith(value, other, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      var result = customizer ? customizer(value, other) : undefined;
	      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;
	    }

	    /**
	     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	     * `SyntaxError`, `TypeError`, or `URIError` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an error object,
	     *  else `false`.
	     * @example
	     *
	     * _.isError(new Error);
	     * // => true
	     *
	     * _.isError(Error);
	     * // => false
	     */
	    function isError(value) {
	      if (!isObjectLike(value)) {
	        return false;
	      }
	      return (objectToString.call(value) == errorTag) ||
	        (typeof value.message == 'string' && typeof value.name == 'string');
	    }

	    /**
	     * Checks if `value` is a finite primitive number.
	     *
	     * **Note:** This method is based on
	     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a finite number,
	     *  else `false`.
	     * @example
	     *
	     * _.isFinite(3);
	     * // => true
	     *
	     * _.isFinite(Number.MAX_VALUE);
	     * // => true
	     *
	     * _.isFinite(3.14);
	     * // => true
	     *
	     * _.isFinite(Infinity);
	     * // => false
	     */
	    function isFinite(value) {
	      return typeof value == 'number' && nativeIsFinite(value);
	    }

	    /**
	     * Checks if `value` is classified as a `Function` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isFunction(_);
	     * // => true
	     *
	     * _.isFunction(/abc/);
	     * // => false
	     */
	    function isFunction(value) {
	      // The use of `Object#toString` avoids issues with the `typeof` operator
	      // in Safari 8 which returns 'object' for typed array and weak map constructors,
	      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
	      var tag = isObject(value) ? objectToString.call(value) : '';
	      return tag == funcTag || tag == genTag;
	    }

	    /**
	     * Checks if `value` is an integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
	     * @example
	     *
	     * _.isInteger(3);
	     * // => true
	     *
	     * _.isInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isInteger(Infinity);
	     * // => false
	     *
	     * _.isInteger('3');
	     * // => false
	     */
	    function isInteger(value) {
	      return typeof value == 'number' && value == toInteger(value);
	    }

	    /**
	     * Checks if `value` is a valid array-like length.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a valid length,
	     *  else `false`.
	     * @example
	     *
	     * _.isLength(3);
	     * // => true
	     *
	     * _.isLength(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isLength(Infinity);
	     * // => false
	     *
	     * _.isLength('3');
	     * // => false
	     */
	    function isLength(value) {
	      return typeof value == 'number' &&
	        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is the
	     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
	     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	     * @example
	     *
	     * _.isObject({});
	     * // => true
	     *
	     * _.isObject([1, 2, 3]);
	     * // => true
	     *
	     * _.isObject(_.noop);
	     * // => true
	     *
	     * _.isObject(null);
	     * // => false
	     */
	    function isObject(value) {
	      var type = typeof value;
	      return !!value && (type == 'object' || type == 'function');
	    }

	    /**
	     * Checks if `value` is object-like. A value is object-like if it's not `null`
	     * and has a `typeof` result of "object".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	     * @example
	     *
	     * _.isObjectLike({});
	     * // => true
	     *
	     * _.isObjectLike([1, 2, 3]);
	     * // => true
	     *
	     * _.isObjectLike(_.noop);
	     * // => false
	     *
	     * _.isObjectLike(null);
	     * // => false
	     */
	    function isObjectLike(value) {
	      return !!value && typeof value == 'object';
	    }

	    /**
	     * Checks if `value` is classified as a `Map` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isMap(new Map);
	     * // => true
	     *
	     * _.isMap(new WeakMap);
	     * // => false
	     */
	    function isMap(value) {
	      return isObjectLike(value) && getTag(value) == mapTag;
	    }

	    /**
	     * Performs a partial deep comparison between `object` and `source` to
	     * determine if `object` contains equivalent property values. This method is
	     * equivalent to a `_.matches` function when `source` is partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * var object = { 'user': 'fred', 'age': 40 };
	     *
	     * _.isMatch(object, { 'age': 40 });
	     * // => true
	     *
	     * _.isMatch(object, { 'age': 36 });
	     * // => false
	     */
	    function isMatch(object, source) {
	      return object === source || baseIsMatch(object, source, getMatchData(source));
	    }

	    /**
	     * This method is like `_.isMatch` except that it accepts `customizer` which
	     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
	     * are handled by the method instead. The `customizer` is invoked with five
	     * arguments: (objValue, srcValue, index|key, object, source).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {Object} object The object to inspect.
	     * @param {Object} source The object of property values to match.
	     * @param {Function} [customizer] The function to customize comparisons.
	     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	     * @example
	     *
	     * function isGreeting(value) {
	     *   return /^h(?:i|ello)$/.test(value);
	     * }
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
	     *     return true;
	     *   }
	     * }
	     *
	     * var object = { 'greeting': 'hello' };
	     * var source = { 'greeting': 'hi' };
	     *
	     * _.isMatchWith(object, source, customizer);
	     * // => true
	     */
	    function isMatchWith(object, source, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return baseIsMatch(object, source, getMatchData(source), customizer);
	    }

	    /**
	     * Checks if `value` is `NaN`.
	     *
	     * **Note:** This method is based on
	     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
	     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
	     * `undefined` and other non-number values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	     * @example
	     *
	     * _.isNaN(NaN);
	     * // => true
	     *
	     * _.isNaN(new Number(NaN));
	     * // => true
	     *
	     * isNaN(undefined);
	     * // => true
	     *
	     * _.isNaN(undefined);
	     * // => false
	     */
	    function isNaN(value) {
	      // An `NaN` primitive is the only value that is not equal to itself.
	      // Perform the `toStringTag` check first to avoid errors with some
	      // ActiveX objects in IE.
	      return isNumber(value) && value != +value;
	    }

	    /**
	     * Checks if `value` is a native function.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a native function,
	     *  else `false`.
	     * @example
	     *
	     * _.isNative(Array.prototype.push);
	     * // => true
	     *
	     * _.isNative(_);
	     * // => false
	     */
	    function isNative(value) {
	      if (!isObject(value)) {
	        return false;
	      }
	      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	      return pattern.test(toSource(value));
	    }

	    /**
	     * Checks if `value` is `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
	     * @example
	     *
	     * _.isNull(null);
	     * // => true
	     *
	     * _.isNull(void 0);
	     * // => false
	     */
	    function isNull(value) {
	      return value === null;
	    }

	    /**
	     * Checks if `value` is `null` or `undefined`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	     * @example
	     *
	     * _.isNil(null);
	     * // => true
	     *
	     * _.isNil(void 0);
	     * // => true
	     *
	     * _.isNil(NaN);
	     * // => false
	     */
	    function isNil(value) {
	      return value == null;
	    }

	    /**
	     * Checks if `value` is classified as a `Number` primitive or object.
	     *
	     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	     * classified as numbers, use the `_.isFinite` method.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isNumber(3);
	     * // => true
	     *
	     * _.isNumber(Number.MIN_VALUE);
	     * // => true
	     *
	     * _.isNumber(Infinity);
	     * // => true
	     *
	     * _.isNumber('3');
	     * // => false
	     */
	    function isNumber(value) {
	      return typeof value == 'number' ||
	        (isObjectLike(value) && objectToString.call(value) == numberTag);
	    }

	    /**
	     * Checks if `value` is a plain object, that is, an object created by the
	     * `Object` constructor or one with a `[[Prototype]]` of `null`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.8.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a plain object,
	     *  else `false`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     * }
	     *
	     * _.isPlainObject(new Foo);
	     * // => false
	     *
	     * _.isPlainObject([1, 2, 3]);
	     * // => false
	     *
	     * _.isPlainObject({ 'x': 0, 'y': 0 });
	     * // => true
	     *
	     * _.isPlainObject(Object.create(null));
	     * // => true
	     */
	    function isPlainObject(value) {
	      if (!isObjectLike(value) ||
	          objectToString.call(value) != objectTag || isHostObject(value)) {
	        return false;
	      }
	      var proto = getPrototype(value);
	      if (proto === null) {
	        return true;
	      }
	      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	      return (typeof Ctor == 'function' &&
	        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	    }

	    /**
	     * Checks if `value` is classified as a `RegExp` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.1.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isRegExp(/abc/);
	     * // => true
	     *
	     * _.isRegExp('/abc/');
	     * // => false
	     */
	    function isRegExp(value) {
	      return isObject(value) && objectToString.call(value) == regexpTag;
	    }

	    /**
	     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
	     * double precision number which isn't the result of a rounded unsafe integer.
	     *
	     * **Note:** This method is based on
	     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is a safe integer,
	     *  else `false`.
	     * @example
	     *
	     * _.isSafeInteger(3);
	     * // => true
	     *
	     * _.isSafeInteger(Number.MIN_VALUE);
	     * // => false
	     *
	     * _.isSafeInteger(Infinity);
	     * // => false
	     *
	     * _.isSafeInteger('3');
	     * // => false
	     */
	    function isSafeInteger(value) {
	      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
	    }

	    /**
	     * Checks if `value` is classified as a `Set` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSet(new Set);
	     * // => true
	     *
	     * _.isSet(new WeakSet);
	     * // => false
	     */
	    function isSet(value) {
	      return isObjectLike(value) && getTag(value) == setTag;
	    }

	    /**
	     * Checks if `value` is classified as a `String` primitive or object.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isString('abc');
	     * // => true
	     *
	     * _.isString(1);
	     * // => false
	     */
	    function isString(value) {
	      return typeof value == 'string' ||
	        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
	    }

	    /**
	     * Checks if `value` is classified as a `Symbol` primitive or object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isSymbol(Symbol.iterator);
	     * // => true
	     *
	     * _.isSymbol('abc');
	     * // => false
	     */
	    function isSymbol(value) {
	      return typeof value == 'symbol' ||
	        (isObjectLike(value) && objectToString.call(value) == symbolTag);
	    }

	    /**
	     * Checks if `value` is classified as a typed array.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isTypedArray(new Uint8Array);
	     * // => true
	     *
	     * _.isTypedArray([]);
	     * // => false
	     */
	    function isTypedArray(value) {
	      return isObjectLike(value) &&
	        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	    }

	    /**
	     * Checks if `value` is `undefined`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	     * @example
	     *
	     * _.isUndefined(void 0);
	     * // => true
	     *
	     * _.isUndefined(null);
	     * // => false
	     */
	    function isUndefined(value) {
	      return value === undefined;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakMap` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakMap(new WeakMap);
	     * // => true
	     *
	     * _.isWeakMap(new Map);
	     * // => false
	     */
	    function isWeakMap(value) {
	      return isObjectLike(value) && getTag(value) == weakMapTag;
	    }

	    /**
	     * Checks if `value` is classified as a `WeakSet` object.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.3.0
	     * @category Lang
	     * @param {*} value The value to check.
	     * @returns {boolean} Returns `true` if `value` is correctly classified,
	     *  else `false`.
	     * @example
	     *
	     * _.isWeakSet(new WeakSet);
	     * // => true
	     *
	     * _.isWeakSet(new Set);
	     * // => false
	     */
	    function isWeakSet(value) {
	      return isObjectLike(value) && objectToString.call(value) == weakSetTag;
	    }

	    /**
	     * Checks if `value` is less than `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than `other`,
	     *  else `false`.
	     * @example
	     *
	     * _.lt(1, 3);
	     * // => true
	     *
	     * _.lt(3, 3);
	     * // => false
	     *
	     * _.lt(3, 1);
	     * // => false
	     */
	    function lt(value, other) {
	      return value < other;
	    }

	    /**
	     * Checks if `value` is less than or equal to `other`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.9.0
	     * @category Lang
	     * @param {*} value The value to compare.
	     * @param {*} other The other value to compare.
	     * @returns {boolean} Returns `true` if `value` is less than or equal to
	     *  `other`, else `false`.
	     * @example
	     *
	     * _.lte(1, 3);
	     * // => true
	     *
	     * _.lte(3, 3);
	     * // => true
	     *
	     * _.lte(3, 1);
	     * // => false
	     */
	    function lte(value, other) {
	      return value <= other;
	    }

	    /**
	     * Converts `value` to an array.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the converted array.
	     * @example
	     *
	     * _.toArray({ 'a': 1, 'b': 2 });
	     * // => [1, 2]
	     *
	     * _.toArray('abc');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toArray(1);
	     * // => []
	     *
	     * _.toArray(null);
	     * // => []
	     */
	    function toArray(value) {
	      if (!value) {
	        return [];
	      }
	      if (isArrayLike(value)) {
	        return isString(value) ? stringToArray(value) : copyArray(value);
	      }
	      if (iteratorSymbol && value[iteratorSymbol]) {
	        return iteratorToArray(value[iteratorSymbol]());
	      }
	      var tag = getTag(value),
	          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

	      return func(value);
	    }

	    /**
	     * Converts `value` to an integer.
	     *
	     * **Note:** This function is loosely based on
	     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toInteger(3);
	     * // => 3
	     *
	     * _.toInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toInteger(Infinity);
	     * // => 1.7976931348623157e+308
	     *
	     * _.toInteger('3');
	     * // => 3
	     */
	    function toInteger(value) {
	      if (!value) {
	        return value === 0 ? value : 0;
	      }
	      value = toNumber(value);
	      if (value === INFINITY || value === -INFINITY) {
	        var sign = (value < 0 ? -1 : 1);
	        return sign * MAX_INTEGER;
	      }
	      var remainder = value % 1;
	      return value === value ? (remainder ? value - remainder : value) : 0;
	    }

	    /**
	     * Converts `value` to an integer suitable for use as the length of an
	     * array-like object.
	     *
	     * **Note:** This method is based on
	     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toLength(3);
	     * // => 3
	     *
	     * _.toLength(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toLength(Infinity);
	     * // => 4294967295
	     *
	     * _.toLength('3');
	     * // => 3
	     */
	    function toLength(value) {
	      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
	    }

	    /**
	     * Converts `value` to a number.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {number} Returns the number.
	     * @example
	     *
	     * _.toNumber(3);
	     * // => 3
	     *
	     * _.toNumber(Number.MIN_VALUE);
	     * // => 5e-324
	     *
	     * _.toNumber(Infinity);
	     * // => Infinity
	     *
	     * _.toNumber('3');
	     * // => 3
	     */
	    function toNumber(value) {
	      if (typeof value == 'number') {
	        return value;
	      }
	      if (isSymbol(value)) {
	        return NAN;
	      }
	      if (isObject(value)) {
	        var other = isFunction(value.valueOf) ? value.valueOf() : value;
	        value = isObject(other) ? (other + '') : other;
	      }
	      if (typeof value != 'string') {
	        return value === 0 ? value : +value;
	      }
	      value = value.replace(reTrim, '');
	      var isBinary = reIsBinary.test(value);
	      return (isBinary || reIsOctal.test(value))
	        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	        : (reIsBadHex.test(value) ? NAN : +value);
	    }

	    /**
	     * Converts `value` to a plain object flattening inherited enumerable string
	     * keyed properties of `value` to own properties of the plain object.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {Object} Returns the converted plain object.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.assign({ 'a': 1 }, new Foo);
	     * // => { 'a': 1, 'b': 2 }
	     *
	     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	     * // => { 'a': 1, 'b': 2, 'c': 3 }
	     */
	    function toPlainObject(value) {
	      return copyObject(value, keysIn(value));
	    }

	    /**
	     * Converts `value` to a safe integer. A safe integer can be compared and
	     * represented correctly.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to convert.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.toSafeInteger(3);
	     * // => 3
	     *
	     * _.toSafeInteger(Number.MIN_VALUE);
	     * // => 0
	     *
	     * _.toSafeInteger(Infinity);
	     * // => 9007199254740991
	     *
	     * _.toSafeInteger('3');
	     * // => 3
	     */
	    function toSafeInteger(value) {
	      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
	    }

	    /**
	     * Converts `value` to a string. An empty string is returned for `null`
	     * and `undefined` values. The sign of `-0` is preserved.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Lang
	     * @param {*} value The value to process.
	     * @returns {string} Returns the string.
	     * @example
	     *
	     * _.toString(null);
	     * // => ''
	     *
	     * _.toString(-0);
	     * // => '-0'
	     *
	     * _.toString([1, 2, 3]);
	     * // => '1,2,3'
	     */
	    function toString(value) {
	      // Exit early for strings to avoid a performance hit in some environments.
	      if (typeof value == 'string') {
	        return value;
	      }
	      if (value == null) {
	        return '';
	      }
	      if (isSymbol(value)) {
	        return symbolToString ? symbolToString.call(value) : '';
	      }
	      var result = (value + '');
	      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Assigns own enumerable string keyed properties of source objects to the
	     * destination object. Source objects are applied from left to right.
	     * Subsequent sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object` and is loosely based on
	     * [`Object.assign`](https://mdn.io/Object/assign).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.c = 3;
	     * }
	     *
	     * function Bar() {
	     *   this.e = 5;
	     * }
	     *
	     * Foo.prototype.d = 4;
	     * Bar.prototype.f = 6;
	     *
	     * _.assign({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'c': 3, 'e': 5 }
	     */
	    var assign = createAssigner(function(object, source) {
	      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keys(source), object);
	        return;
	      }
	      for (var key in source) {
	        if (hasOwnProperty.call(source, key)) {
	          assignValue(object, key, source[key]);
	        }
	      }
	    });

	    /**
	     * This method is like `_.assign` except that it iterates over own and
	     * inherited source properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extend
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.b = 2;
	     * }
	     *
	     * function Bar() {
	     *   this.d = 4;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     * Bar.prototype.e = 5;
	     *
	     * _.assignIn({ 'a': 1 }, new Foo, new Bar);
	     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }
	     */
	    var assignIn = createAssigner(function(object, source) {
	      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
	        copyObject(source, keysIn(source), object);
	        return;
	      }
	      for (var key in source) {
	        assignValue(object, key, source[key]);
	      }
	    });

	    /**
	     * This method is like `_.assignIn` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias extendWith
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignInWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keysIn(source), object, customizer);
	    });

	    /**
	     * This method is like `_.assign` except that it accepts `customizer`
	     * which is invoked to produce the assigned values. If `customizer` returns
	     * `undefined`, assignment is handled by the method instead. The `customizer`
	     * is invoked with five arguments: (objValue, srcValue, key, object, source).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   return _.isUndefined(objValue) ? srcValue : objValue;
	     * }
	     *
	     * var defaults = _.partialRight(_.assignWith, customizer);
	     *
	     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
	     * // => { 'a': 1, 'b': 2 }
	     */
	    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
	      copyObject(source, keys(source), object, customizer);
	    });

	    /**
	     * Creates an array of values corresponding to `paths` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {...(string|string[])} [paths] The property paths of elements to pick.
	     * @returns {Array} Returns the new array of picked elements.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
	     *
	     * _.at(object, ['a[0].b.c', 'a[1]']);
	     * // => [3, 4]
	     *
	     * _.at(['a', 'b', 'c'], 0, 2);
	     * // => ['a', 'c']
	     */
	    var at = rest(function(object, paths) {
	      return baseAt(object, baseFlatten(paths, 1));
	    });

	    /**
	     * Creates an object that inherits from the `prototype` object. If a
	     * `properties` object is given, its own enumerable string keyed properties
	     * are assigned to the created object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Object
	     * @param {Object} prototype The object to inherit from.
	     * @param {Object} [properties] The properties to assign to the object.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * function Shape() {
	     *   this.x = 0;
	     *   this.y = 0;
	     * }
	     *
	     * function Circle() {
	     *   Shape.call(this);
	     * }
	     *
	     * Circle.prototype = _.create(Shape.prototype, {
	     *   'constructor': Circle
	     * });
	     *
	     * var circle = new Circle;
	     * circle instanceof Circle;
	     * // => true
	     *
	     * circle instanceof Shape;
	     * // => true
	     */
	    function create(prototype, properties) {
	      var result = baseCreate(prototype);
	      return properties ? baseAssign(result, properties) : result;
	    }

	    /**
	     * Assigns own and inherited enumerable string keyed properties of source
	     * objects to the destination object for all destination properties that
	     * resolve to `undefined`. Source objects are applied from left to right.
	     * Once a property is set, additional values of the same property are ignored.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
	     * // => { 'user': 'barney', 'age': 36 }
	     */
	    var defaults = rest(function(args) {
	      args.push(undefined, assignInDefaults);
	      return apply(assignInWith, undefined, args);
	    });

	    /**
	     * This method is like `_.defaults` except that it recursively assigns
	     * default properties.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
	     * // => { 'user': { 'name': 'barney', 'age': 36 } }
	     *
	     */
	    var defaultsDeep = rest(function(args) {
	      args.push(undefined, mergeDefaults);
	      return apply(mergeWith, undefined, args);
	    });

	    /**
	     * This method is like `_.find` except that it returns the key of the first
	     * element `predicate` returns truthy for instead of the element itself.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findKey(users, function(o) { return o.age < 40; });
	     * // => 'barney' (iteration order is not guaranteed)
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findKey(users, { 'age': 1, 'active': true });
	     * // => 'pebbles'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findKey(users, 'active');
	     * // => 'barney'
	     */
	    function findKey(object, predicate) {
	      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);
	    }

	    /**
	     * This method is like `_.findKey` except that it iterates over elements of
	     * a collection in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to search.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per iteration.
	     * @returns {string|undefined} Returns the key of the matched element,
	     *  else `undefined`.
	     * @example
	     *
	     * var users = {
	     *   'barney':  { 'age': 36, 'active': true },
	     *   'fred':    { 'age': 40, 'active': false },
	     *   'pebbles': { 'age': 1,  'active': true }
	     * };
	     *
	     * _.findLastKey(users, function(o) { return o.age < 40; });
	     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.findLastKey(users, { 'age': 36, 'active': true });
	     * // => 'barney'
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.findLastKey(users, ['active', false]);
	     * // => 'fred'
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.findLastKey(users, 'active');
	     * // => 'pebbles'
	     */
	    function findLastKey(object, predicate) {
	      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);
	    }

	    /**
	     * Iterates over own and inherited enumerable string keyed properties of an
	     * object and invokes `iteratee` for each property. The iteratee is invoked
	     * with three arguments: (value, key, object). Iteratee functions may exit
	     * iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forIn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
	     */
	    function forIn(object, iteratee) {
	      return object == null
	        ? object
	        : baseFor(object, getIteratee(iteratee), keysIn);
	    }

	    /**
	     * This method is like `_.forIn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forInRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
	     */
	    function forInRight(object, iteratee) {
	      return object == null
	        ? object
	        : baseForRight(object, getIteratee(iteratee), keysIn);
	    }

	    /**
	     * Iterates over own enumerable string keyed properties of an object and
	     * invokes `iteratee` for each property. The iteratee is invoked with three
	     * arguments: (value, key, object). Iteratee functions may exit iteration
	     * early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.3.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwn(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	     */
	    function forOwn(object, iteratee) {
	      return object && baseForOwn(object, getIteratee(iteratee));
	    }

	    /**
	     * This method is like `_.forOwn` except that it iterates over properties of
	     * `object` in the opposite order.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.0.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.forOwnRight(new Foo, function(value, key) {
	     *   console.log(key);
	     * });
	     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
	     */
	    function forOwnRight(object, iteratee) {
	      return object && baseForOwnRight(object, getIteratee(iteratee));
	    }

	    /**
	     * Creates an array of function property names from own enumerable properties
	     * of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the new array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functions(new Foo);
	     * // => ['a', 'b']
	     */
	    function functions(object) {
	      return object == null ? [] : baseFunctions(object, keys(object));
	    }

	    /**
	     * Creates an array of function property names from own and inherited
	     * enumerable properties of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to inspect.
	     * @returns {Array} Returns the new array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = _.constant('a');
	     *   this.b = _.constant('b');
	     * }
	     *
	     * Foo.prototype.c = _.constant('c');
	     *
	     * _.functionsIn(new Foo);
	     * // => ['a', 'b', 'c']
	     */
	    function functionsIn(object) {
	      return object == null ? [] : baseFunctions(object, keysIn(object));
	    }

	    /**
	     * Gets the value at `path` of `object`. If the resolved value is
	     * `undefined`, the `defaultValue` is used in its place.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.get(object, 'a[0].b.c');
	     * // => 3
	     *
	     * _.get(object, ['a', '0', 'b', 'c']);
	     * // => 3
	     *
	     * _.get(object, 'a.b.c', 'default');
	     * // => 'default'
	     */
	    function get(object, path, defaultValue) {
	      var result = object == null ? undefined : baseGet(object, path);
	      return result === undefined ? defaultValue : result;
	    }

	    /**
	     * Checks if `path` is a direct property of `object`.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = { 'a': { 'b': 2 } };
	     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.has(object, 'a');
	     * // => true
	     *
	     * _.has(object, 'a.b');
	     * // => true
	     *
	     * _.has(object, ['a', 'b']);
	     * // => true
	     *
	     * _.has(other, 'a');
	     * // => false
	     */
	    function has(object, path) {
	      return object != null && hasPath(object, path, baseHas);
	    }

	    /**
	     * Checks if `path` is a direct or inherited property of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path to check.
	     * @returns {boolean} Returns `true` if `path` exists, else `false`.
	     * @example
	     *
	     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	     *
	     * _.hasIn(object, 'a');
	     * // => true
	     *
	     * _.hasIn(object, 'a.b');
	     * // => true
	     *
	     * _.hasIn(object, ['a', 'b']);
	     * // => true
	     *
	     * _.hasIn(object, 'b');
	     * // => false
	     */
	    function hasIn(object, path) {
	      return object != null && hasPath(object, path, baseHasIn);
	    }

	    /**
	     * Creates an object composed of the inverted keys and values of `object`.
	     * If `object` contains duplicate values, subsequent values overwrite
	     * property assignments of previous values.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invert(object);
	     * // => { '1': 'c', '2': 'b' }
	     */
	    var invert = createInverter(function(result, value, key) {
	      result[value] = key;
	    }, constant(identity));

	    /**
	     * This method is like `_.invert` except that the inverted object is generated
	     * from the results of running each element of `object` thru `iteratee`. The
	     * corresponding inverted value of each inverted key is an array of keys
	     * responsible for generating the inverted value. The iteratee is invoked
	     * with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.1.0
	     * @category Object
	     * @param {Object} object The object to invert.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {Object} Returns the new inverted object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': 2, 'c': 1 };
	     *
	     * _.invertBy(object);
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     *
	     * _.invertBy(object, function(value) {
	     *   return 'group' + value;
	     * });
	     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
	     */
	    var invertBy = createInverter(function(result, value, key) {
	      if (hasOwnProperty.call(result, value)) {
	        result[value].push(key);
	      } else {
	        result[value] = [key];
	      }
	    }, getIteratee);

	    /**
	     * Invokes the method at `path` of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {*} Returns the result of the invoked method.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	     *
	     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	     * // => [2, 3]
	     */
	    var invoke = rest(baseInvoke);

	    /**
	     * Creates an array of the own enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects. See the
	     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
	     * for more details.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keys(new Foo);
	     * // => ['a', 'b'] (iteration order is not guaranteed)
	     *
	     * _.keys('hi');
	     * // => ['0', '1']
	     */
	    function keys(object) {
	      var isProto = isPrototype(object);
	      if (!(isProto || isArrayLike(object))) {
	        return baseKeys(object);
	      }
	      var indexes = indexKeys(object),
	          skipIndexes = !!indexes,
	          result = indexes || [],
	          length = result.length;

	      for (var key in object) {
	        if (baseHas(object, key) &&
	            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	            !(isProto && key == 'constructor')) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * Creates an array of the own and inherited enumerable property names of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property names.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.keysIn(new Foo);
	     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	     */
	    function keysIn(object) {
	      var index = -1,
	          isProto = isPrototype(object),
	          props = baseKeysIn(object),
	          propsLength = props.length,
	          indexes = indexKeys(object),
	          skipIndexes = !!indexes,
	          result = indexes || [],
	          length = result.length;

	      while (++index < propsLength) {
	        var key = props[index];
	        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
	            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	          result.push(key);
	        }
	      }
	      return result;
	    }

	    /**
	     * The opposite of `_.mapValues`; this method creates an object with the
	     * same values as `object` and keys generated by running each own enumerable
	     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
	     * with three arguments: (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.8.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
	     *   return key + value;
	     * });
	     * // => { 'a1': 1, 'b2': 2 }
	     */
	    function mapKeys(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        result[iteratee(value, key, object)] = value;
	      });
	      return result;
	    }

	    /**
	     * Creates an object with the same keys as `object` and values generated
	     * by running each own enumerable string keyed property of `object` thru
	     * `iteratee`. The iteratee is invoked with three arguments:
	     * (value, key, object).
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Object
	     * @param {Object} object The object to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The function invoked per iteration.
	     * @returns {Object} Returns the new mapped object.
	     * @example
	     *
	     * var users = {
	     *   'fred':    { 'user': 'fred',    'age': 40 },
	     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	     * };
	     *
	     * _.mapValues(users, function(o) { return o.age; });
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.mapValues(users, 'age');
	     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	     */
	    function mapValues(object, iteratee) {
	      var result = {};
	      iteratee = getIteratee(iteratee, 3);

	      baseForOwn(object, function(value, key, object) {
	        result[key] = iteratee(value, key, object);
	      });
	      return result;
	    }

	    /**
	     * This method is like `_.assign` except that it recursively merges own and
	     * inherited enumerable string keyed properties of source objects into the
	     * destination object. Source properties that resolve to `undefined` are
	     * skipped if a destination value exists. Array and plain object properties
	     * are merged recursively.Other objects and value types are overridden by
	     * assignment. Source objects are applied from left to right. Subsequent
	     * sources overwrite property assignments of previous sources.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.5.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} [sources] The source objects.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var users = {
	     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
	     * };
	     *
	     * var ages = {
	     *   'data': [{ 'age': 36 }, { 'age': 40 }]
	     * };
	     *
	     * _.merge(users, ages);
	     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
	     */
	    var merge = createAssigner(function(object, source, srcIndex) {
	      baseMerge(object, source, srcIndex);
	    });

	    /**
	     * This method is like `_.merge` except that it accepts `customizer` which
	     * is invoked to produce the merged values of the destination and source
	     * properties. If `customizer` returns `undefined`, merging is handled by the
	     * method instead. The `customizer` is invoked with seven arguments:
	     * (objValue, srcValue, key, object, source, stack).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The destination object.
	     * @param {...Object} sources The source objects.
	     * @param {Function} customizer The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * function customizer(objValue, srcValue) {
	     *   if (_.isArray(objValue)) {
	     *     return objValue.concat(srcValue);
	     *   }
	     * }
	     *
	     * var object = {
	     *   'fruits': ['apple'],
	     *   'vegetables': ['beet']
	     * };
	     *
	     * var other = {
	     *   'fruits': ['banana'],
	     *   'vegetables': ['carrot']
	     * };
	     *
	     * _.mergeWith(object, other, customizer);
	     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
	     */
	    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
	      baseMerge(object, source, srcIndex, customizer);
	    });

	    /**
	     * The opposite of `_.pick`; this method creates an object composed of the
	     * own and inherited enumerable string keyed properties of `object` that are
	     * not omitted.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to omit.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omit(object, ['a', 'c']);
	     * // => { 'b': '2' }
	     */
	    var omit = rest(function(object, props) {
	      if (object == null) {
	        return {};
	      }
	      props = arrayMap(baseFlatten(props, 1), toKey);
	      return basePick(object, baseDifference(getAllKeysIn(object), props));
	    });

	    /**
	     * The opposite of `_.pickBy`; this method creates an object composed of
	     * the own and inherited enumerable string keyed properties of `object` that
	     * `predicate` doesn't return truthy for. The predicate is invoked with two
	     * arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.omitBy(object, _.isNumber);
	     * // => { 'b': '2' }
	     */
	    function omitBy(object, predicate) {
	      predicate = getIteratee(predicate);
	      return basePickBy(object, function(value, key) {
	        return !predicate(value, key);
	      });
	    }

	    /**
	     * Creates an object composed of the picked `object` properties.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {...(string|string[])} [props] The property identifiers to pick.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pick(object, ['a', 'c']);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    var pick = rest(function(object, props) {
	      return object == null ? {} : basePick(object, baseFlatten(props, 1));
	    });

	    /**
	     * Creates an object composed of the `object` properties `predicate` returns
	     * truthy for. The predicate is invoked with two arguments: (value, key).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The source object.
	     * @param {Array|Function|Object|string} [predicate=_.identity]
	     *  The function invoked per property.
	     * @returns {Object} Returns the new object.
	     * @example
	     *
	     * var object = { 'a': 1, 'b': '2', 'c': 3 };
	     *
	     * _.pickBy(object, _.isNumber);
	     * // => { 'a': 1, 'c': 3 }
	     */
	    function pickBy(object, predicate) {
	      return object == null ? {} : basePickBy(object, getIteratee(predicate));
	    }

	    /**
	     * This method is like `_.get` except that if the resolved value is a
	     * function it's invoked with the `this` binding of its parent object and
	     * its result is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @param {Array|string} path The path of the property to resolve.
	     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	     * @returns {*} Returns the resolved value.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
	     *
	     * _.result(object, 'a[0].b.c1');
	     * // => 3
	     *
	     * _.result(object, 'a[0].b.c2');
	     * // => 4
	     *
	     * _.result(object, 'a[0].b.c3', 'default');
	     * // => 'default'
	     *
	     * _.result(object, 'a[0].b.c3', _.constant('default'));
	     * // => 'default'
	     */
	    function result(object, path, defaultValue) {
	      path = isKey(path, object) ? [path] : castPath(path);

	      var index = -1,
	          length = path.length;

	      // Ensure the loop is entered when path is empty.
	      if (!length) {
	        object = undefined;
	        length = 1;
	      }
	      while (++index < length) {
	        var value = object == null ? undefined : object[path[index]];
	        if (value === undefined) {
	          index = length;
	          value = defaultValue;
	        }
	        object = isFunction(value) ? value.call(object) : value;
	      }
	      return object;
	    }

	    /**
	     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
	     * it's created. Arrays are created for missing index properties while objects
	     * are created for all other missing properties. Use `_.setWith` to customize
	     * `path` creation.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.set(object, 'a[0].b.c', 4);
	     * console.log(object.a[0].b.c);
	     * // => 4
	     *
	     * _.set(object, ['x', '0', 'y', 'z'], 5);
	     * console.log(object.x[0].y.z);
	     * // => 5
	     */
	    function set(object, path, value) {
	      return object == null ? object : baseSet(object, path, value);
	    }

	    /**
	     * This method is like `_.set` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {*} value The value to set.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.setWith(object, '[0][1]', 'a', Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function setWith(object, path, value, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseSet(object, path, value, customizer);
	    }

	    /**
	     * Creates an array of own enumerable string keyed-value pairs for `object`
	     * which can be consumed by `_.fromPairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entries
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the new array of key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairs(new Foo);
	     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
	     */
	    function toPairs(object) {
	      return baseToPairs(object, keys(object));
	    }

	    /**
	     * Creates an array of own and inherited enumerable string keyed-value pairs
	     * for `object` which can be consumed by `_.fromPairs`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @alias entriesIn
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the new array of key-value pairs.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.toPairsIn(new Foo);
	     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)
	     */
	    function toPairsIn(object) {
	      return baseToPairs(object, keysIn(object));
	    }

	    /**
	     * An alternative to `_.reduce`; this method transforms `object` to a new
	     * `accumulator` object which is the result of running each of its own
	     * enumerable string keyed properties thru `iteratee`, with each invocation
	     * potentially mutating the `accumulator` object. The iteratee is invoked
	     * with four arguments: (accumulator, value, key, object). Iteratee functions
	     * may exit iteration early by explicitly returning `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.3.0
	     * @category Object
	     * @param {Array|Object} object The object to iterate over.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @param {*} [accumulator] The custom accumulator value.
	     * @returns {*} Returns the accumulated value.
	     * @example
	     *
	     * _.transform([2, 3, 4], function(result, n) {
	     *   result.push(n *= n);
	     *   return n % 2 == 0;
	     * }, []);
	     * // => [4, 9]
	     *
	     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	     *   (result[value] || (result[value] = [])).push(key);
	     * }, {});
	     * // => { '1': ['a', 'c'], '2': ['b'] }
	     */
	    function transform(object, iteratee, accumulator) {
	      var isArr = isArray(object) || isTypedArray(object);
	      iteratee = getIteratee(iteratee, 4);

	      if (accumulator == null) {
	        if (isArr || isObject(object)) {
	          var Ctor = object.constructor;
	          if (isArr) {
	            accumulator = isArray(object) ? new Ctor : [];
	          } else {
	            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	          }
	        } else {
	          accumulator = {};
	        }
	      }
	      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
	        return iteratee(accumulator, value, index, object);
	      });
	      return accumulator;
	    }

	    /**
	     * Removes the property at `path` of `object`.
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to unset.
	     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
	     * _.unset(object, 'a[0].b.c');
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     *
	     * _.unset(object, ['a', '0', 'b', 'c']);
	     * // => true
	     *
	     * console.log(object);
	     * // => { 'a': [{ 'b': {} }] };
	     */
	    function unset(object, path) {
	      return object == null ? true : baseUnset(object, path);
	    }

	    /**
	     * This method is like `_.set` except that accepts `updater` to produce the
	     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
	     * is invoked with one argument: (value).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	     *
	     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
	     * console.log(object.a[0].b.c);
	     * // => 9
	     *
	     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
	     * console.log(object.x[0].y.z);
	     * // => 0
	     */
	    function update(object, path, updater) {
	      return object == null ? object : baseUpdate(object, path, castFunction(updater));
	    }

	    /**
	     * This method is like `_.update` except that it accepts `customizer` which is
	     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
	     * path creation is handled by the method instead. The `customizer` is invoked
	     * with three arguments: (nsValue, key, nsObject).
	     *
	     * **Note:** This method mutates `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.6.0
	     * @category Object
	     * @param {Object} object The object to modify.
	     * @param {Array|string} path The path of the property to set.
	     * @param {Function} updater The function to produce the updated value.
	     * @param {Function} [customizer] The function to customize assigned values.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var object = {};
	     *
	     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
	     * // => { '0': { '1': 'a' } }
	     */
	    function updateWith(object, path, updater, customizer) {
	      customizer = typeof customizer == 'function' ? customizer : undefined;
	      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
	    }

	    /**
	     * Creates an array of the own enumerable string keyed property values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.values(new Foo);
	     * // => [1, 2] (iteration order is not guaranteed)
	     *
	     * _.values('hi');
	     * // => ['h', 'i']
	     */
	    function values(object) {
	      return object ? baseValues(object, keys(object)) : [];
	    }

	    /**
	     * Creates an array of the own and inherited enumerable string keyed property
	     * values of `object`.
	     *
	     * **Note:** Non-object values are coerced to objects.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Object
	     * @param {Object} object The object to query.
	     * @returns {Array} Returns the array of property values.
	     * @example
	     *
	     * function Foo() {
	     *   this.a = 1;
	     *   this.b = 2;
	     * }
	     *
	     * Foo.prototype.c = 3;
	     *
	     * _.valuesIn(new Foo);
	     * // => [1, 2, 3] (iteration order is not guaranteed)
	     */
	    function valuesIn(object) {
	      return object == null ? [] : baseValues(object, keysIn(object));
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Clamps `number` within the inclusive `lower` and `upper` bounds.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Number
	     * @param {number} number The number to clamp.
	     * @param {number} [lower] The lower bound.
	     * @param {number} upper The upper bound.
	     * @returns {number} Returns the clamped number.
	     * @example
	     *
	     * _.clamp(-10, -5, 5);
	     * // => -5
	     *
	     * _.clamp(10, -5, 5);
	     * // => 5
	     */
	    function clamp(number, lower, upper) {
	      if (upper === undefined) {
	        upper = lower;
	        lower = undefined;
	      }
	      if (upper !== undefined) {
	        upper = toNumber(upper);
	        upper = upper === upper ? upper : 0;
	      }
	      if (lower !== undefined) {
	        lower = toNumber(lower);
	        lower = lower === lower ? lower : 0;
	      }
	      return baseClamp(toNumber(number), lower, upper);
	    }

	    /**
	     * Checks if `n` is between `start` and up to but not including, `end`. If
	     * `end` is not specified, it's set to `start` with `start` then set to `0`.
	     * If `start` is greater than `end` the params are swapped to support
	     * negative ranges.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.3.0
	     * @category Number
	     * @param {number} number The number to check.
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	     * @example
	     *
	     * _.inRange(3, 2, 4);
	     * // => true
	     *
	     * _.inRange(4, 8);
	     * // => true
	     *
	     * _.inRange(4, 2);
	     * // => false
	     *
	     * _.inRange(2, 2);
	     * // => false
	     *
	     * _.inRange(1.2, 2);
	     * // => true
	     *
	     * _.inRange(5.2, 4);
	     * // => false
	     *
	     * _.inRange(-3, -2, -6);
	     * // => true
	     */
	    function inRange(number, start, end) {
	      start = toNumber(start) || 0;
	      if (end === undefined) {
	        end = start;
	        start = 0;
	      } else {
	        end = toNumber(end) || 0;
	      }
	      number = toNumber(number);
	      return baseInRange(number, start, end);
	    }

	    /**
	     * Produces a random number between the inclusive `lower` and `upper` bounds.
	     * If only one argument is provided a number between `0` and the given number
	     * is returned. If `floating` is `true`, or either `lower` or `upper` are
	     * floats, a floating-point number is returned instead of an integer.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @memberOf _
	     * @since 0.7.0
	     * @category Number
	     * @param {number} [lower=0] The lower bound.
	     * @param {number} [upper=1] The upper bound.
	     * @param {boolean} [floating] Specify returning a floating-point number.
	     * @returns {number} Returns the random number.
	     * @example
	     *
	     * _.random(0, 5);
	     * // => an integer between 0 and 5
	     *
	     * _.random(5);
	     * // => also an integer between 0 and 5
	     *
	     * _.random(5, true);
	     * // => a floating-point number between 0 and 5
	     *
	     * _.random(1.2, 5.2);
	     * // => a floating-point number between 1.2 and 5.2
	     */
	    function random(lower, upper, floating) {
	      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
	        upper = floating = undefined;
	      }
	      if (floating === undefined) {
	        if (typeof upper == 'boolean') {
	          floating = upper;
	          upper = undefined;
	        }
	        else if (typeof lower == 'boolean') {
	          floating = lower;
	          lower = undefined;
	        }
	      }
	      if (lower === undefined && upper === undefined) {
	        lower = 0;
	        upper = 1;
	      }
	      else {
	        lower = toNumber(lower) || 0;
	        if (upper === undefined) {
	          upper = lower;
	          lower = 0;
	        } else {
	          upper = toNumber(upper) || 0;
	        }
	      }
	      if (lower > upper) {
	        var temp = lower;
	        lower = upper;
	        upper = temp;
	      }
	      if (floating || lower % 1 || upper % 1) {
	        var rand = nativeRandom();
	        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
	      }
	      return baseRandom(lower, upper);
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the camel cased string.
	     * @example
	     *
	     * _.camelCase('Foo Bar');
	     * // => 'fooBar'
	     *
	     * _.camelCase('--foo-bar--');
	     * // => 'fooBar'
	     *
	     * _.camelCase('__FOO_BAR__');
	     * // => 'fooBar'
	     */
	    var camelCase = createCompounder(function(result, word, index) {
	      word = word.toLowerCase();
	      return result + (index ? capitalize(word) : word);
	    });

	    /**
	     * Converts the first character of `string` to upper case and the remaining
	     * to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to capitalize.
	     * @returns {string} Returns the capitalized string.
	     * @example
	     *
	     * _.capitalize('FRED');
	     * // => 'Fred'
	     */
	    function capitalize(string) {
	      return upperFirst(toString(string).toLowerCase());
	    }

	    /**
	     * Deburrs `string` by converting
	     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	     * to basic latin letters and removing
	     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to deburr.
	     * @returns {string} Returns the deburred string.
	     * @example
	     *
	     * _.deburr('déjà vu');
	     * // => 'deja vu'
	     */
	    function deburr(string) {
	      string = toString(string);
	      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
	    }

	    /**
	     * Checks if `string` ends with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=string.length] The position to search from.
	     * @returns {boolean} Returns `true` if `string` ends with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.endsWith('abc', 'c');
	     * // => true
	     *
	     * _.endsWith('abc', 'b');
	     * // => false
	     *
	     * _.endsWith('abc', 'b', 2);
	     * // => true
	     */
	    function endsWith(string, target, position) {
	      string = toString(string);
	      target = typeof target == 'string' ? target : (target + '');

	      var length = string.length;
	      position = position === undefined
	        ? length
	        : baseClamp(toInteger(position), 0, length);

	      position -= target.length;
	      return position >= 0 && string.indexOf(target, position) == position;
	    }

	    /**
	     * Converts the characters "&", "<", ">", '"', "'", and "\`" in `string` to
	     * their corresponding HTML entities.
	     *
	     * **Note:** No other characters are escaped. To escape additional
	     * characters use a third-party library like [_he_](https://mths.be/he).
	     *
	     * Though the ">" character is escaped for symmetry, characters like
	     * ">" and "/" don't need escaping in HTML and have no special meaning
	     * unless they're part of a tag or unquoted attribute value. See
	     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
	     * (under "semi-related fun fact") for more details.
	     *
	     * Backticks are escaped because in IE < 9, they can break out of
	     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),
	     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
	     * [#133](https://html5sec.org/#133) of the
	     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.
	     *
	     * When working with HTML you should always
	     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
	     * XSS vectors.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escape('fred, barney, & pebbles');
	     * // => 'fred, barney, &amp; pebbles'
	     */
	    function escape(string) {
	      string = toString(string);
	      return (string && reHasUnescapedHtml.test(string))
	        ? string.replace(reUnescapedHtml, escapeHtmlChar)
	        : string;
	    }

	    /**
	     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to escape.
	     * @returns {string} Returns the escaped string.
	     * @example
	     *
	     * _.escapeRegExp('[lodash](https://lodash.com/)');
	     * // => '\[lodash\]\(https://lodash\.com/\)'
	     */
	    function escapeRegExp(string) {
	      string = toString(string);
	      return (string && reHasRegExpChar.test(string))
	        ? string.replace(reRegExpChar, '\\$&')
	        : string;
	    }

	    /**
	     * Converts `string` to
	     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the kebab cased string.
	     * @example
	     *
	     * _.kebabCase('Foo Bar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('fooBar');
	     * // => 'foo-bar'
	     *
	     * _.kebabCase('__FOO_BAR__');
	     * // => 'foo-bar'
	     */
	    var kebabCase = createCompounder(function(result, word, index) {
	      return result + (index ? '-' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts `string`, as space separated words, to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.lowerCase('--Foo-Bar--');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('fooBar');
	     * // => 'foo bar'
	     *
	     * _.lowerCase('__FOO_BAR__');
	     * // => 'foo bar'
	     */
	    var lowerCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toLowerCase();
	    });

	    /**
	     * Converts the first character of `string` to lower case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.lowerFirst('Fred');
	     * // => 'fred'
	     *
	     * _.lowerFirst('FRED');
	     * // => 'fRED'
	     */
	    var lowerFirst = createCaseFirst('toLowerCase');

	    /**
	     * Pads `string` on the left and right sides if it's shorter than `length`.
	     * Padding characters are truncated if they can't be evenly divided by `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.pad('abc', 8);
	     * // => '  abc   '
	     *
	     * _.pad('abc', 8, '_-');
	     * // => '_-abc_-_'
	     *
	     * _.pad('abc', 3);
	     * // => 'abc'
	     */
	    function pad(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      if (!length || strLength >= length) {
	        return string;
	      }
	      var mid = (length - strLength) / 2;
	      return (
	        createPadding(nativeFloor(mid), chars) +
	        string +
	        createPadding(nativeCeil(mid), chars)
	      );
	    }

	    /**
	     * Pads `string` on the right side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padEnd('abc', 6);
	     * // => 'abc   '
	     *
	     * _.padEnd('abc', 6, '_-');
	     * // => 'abc_-_'
	     *
	     * _.padEnd('abc', 3);
	     * // => 'abc'
	     */
	    function padEnd(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (string + createPadding(length - strLength, chars))
	        : string;
	    }

	    /**
	     * Pads `string` on the left side if it's shorter than `length`. Padding
	     * characters are truncated if they exceed `length`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to pad.
	     * @param {number} [length=0] The padding length.
	     * @param {string} [chars=' '] The string used as padding.
	     * @returns {string} Returns the padded string.
	     * @example
	     *
	     * _.padStart('abc', 6);
	     * // => '   abc'
	     *
	     * _.padStart('abc', 6, '_-');
	     * // => '_-_abc'
	     *
	     * _.padStart('abc', 3);
	     * // => 'abc'
	     */
	    function padStart(string, length, chars) {
	      string = toString(string);
	      length = toInteger(length);

	      var strLength = length ? stringSize(string) : 0;
	      return (length && strLength < length)
	        ? (createPadding(length - strLength, chars) + string)
	        : string;
	    }

	    /**
	     * Converts `string` to an integer of the specified radix. If `radix` is
	     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
	     * hexadecimal, in which case a `radix` of `16` is used.
	     *
	     * **Note:** This method aligns with the
	     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
	     *
	     * @static
	     * @memberOf _
	     * @since 1.1.0
	     * @category String
	     * @param {string} string The string to convert.
	     * @param {number} [radix=10] The radix to interpret `value` by.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {number} Returns the converted integer.
	     * @example
	     *
	     * _.parseInt('08');
	     * // => 8
	     *
	     * _.map(['6', '08', '10'], _.parseInt);
	     * // => [6, 8, 10]
	     */
	    function parseInt(string, radix, guard) {
	      // Chrome fails to trim leading <BOM> whitespace characters.
	      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.
	      if (guard || radix == null) {
	        radix = 0;
	      } else if (radix) {
	        radix = +radix;
	      }
	      string = toString(string).replace(reTrim, '');
	      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
	    }

	    /**
	     * Repeats the given string `n` times.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to repeat.
	     * @param {number} [n=1] The number of times to repeat the string.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the repeated string.
	     * @example
	     *
	     * _.repeat('*', 3);
	     * // => '***'
	     *
	     * _.repeat('abc', 2);
	     * // => 'abcabc'
	     *
	     * _.repeat('abc', 0);
	     * // => ''
	     */
	    function repeat(string, n, guard) {
	      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
	        n = 1;
	      } else {
	        n = toInteger(n);
	      }
	      return baseRepeat(toString(string), n);
	    }

	    /**
	     * Replaces matches for `pattern` in `string` with `replacement`.
	     *
	     * **Note:** This method is based on
	     * [`String#replace`](https://mdn.io/String/replace).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to modify.
	     * @param {RegExp|string} pattern The pattern to replace.
	     * @param {Function|string} replacement The match replacement.
	     * @returns {string} Returns the modified string.
	     * @example
	     *
	     * _.replace('Hi Fred', 'Fred', 'Barney');
	     * // => 'Hi Barney'
	     */
	    function replace() {
	      var args = arguments,
	          string = toString(args[0]);

	      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);
	    }

	    /**
	     * Converts `string` to
	     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the snake cased string.
	     * @example
	     *
	     * _.snakeCase('Foo Bar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('fooBar');
	     * // => 'foo_bar'
	     *
	     * _.snakeCase('--FOO-BAR--');
	     * // => 'foo_bar'
	     */
	    var snakeCase = createCompounder(function(result, word, index) {
	      return result + (index ? '_' : '') + word.toLowerCase();
	    });

	    /**
	     * Splits `string` by `separator`.
	     *
	     * **Note:** This method is based on
	     * [`String#split`](https://mdn.io/String/split).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to split.
	     * @param {RegExp|string} separator The separator pattern to split by.
	     * @param {number} [limit] The length to truncate results to.
	     * @returns {Array} Returns the new array of string segments.
	     * @example
	     *
	     * _.split('a-b-c', '-', 2);
	     * // => ['a', 'b']
	     */
	    function split(string, separator, limit) {
	      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
	        separator = limit = undefined;
	      }
	      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
	      if (!limit) {
	        return [];
	      }
	      string = toString(string);
	      if (string && (
	            typeof separator == 'string' ||
	            (separator != null && !isRegExp(separator))
	          )) {
	        separator += '';
	        if (separator == '' && reHasComplexSymbol.test(string)) {
	          return castSlice(stringToArray(string), 0, limit);
	        }
	      }
	      return nativeSplit.call(string, separator, limit);
	    }

	    /**
	     * Converts `string` to
	     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	     *
	     * @static
	     * @memberOf _
	     * @since 3.1.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the start cased string.
	     * @example
	     *
	     * _.startCase('--foo-bar--');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('fooBar');
	     * // => 'Foo Bar'
	     *
	     * _.startCase('__FOO_BAR__');
	     * // => 'FOO BAR'
	     */
	    var startCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + upperFirst(word);
	    });

	    /**
	     * Checks if `string` starts with the given target string.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to search.
	     * @param {string} [target] The string to search for.
	     * @param {number} [position=0] The position to search from.
	     * @returns {boolean} Returns `true` if `string` starts with `target`,
	     *  else `false`.
	     * @example
	     *
	     * _.startsWith('abc', 'a');
	     * // => true
	     *
	     * _.startsWith('abc', 'b');
	     * // => false
	     *
	     * _.startsWith('abc', 'b', 1);
	     * // => true
	     */
	    function startsWith(string, target, position) {
	      string = toString(string);
	      position = baseClamp(toInteger(position), 0, string.length);
	      return string.lastIndexOf(target, position) == position;
	    }

	    /**
	     * Creates a compiled template function that can interpolate data properties
	     * in "interpolate" delimiters, HTML-escape interpolated data properties in
	     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
	     * properties may be accessed as free variables in the template. If a setting
	     * object is given, it takes precedence over `_.templateSettings` values.
	     *
	     * **Note:** In the development build `_.template` utilizes
	     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
	     * for easier debugging.
	     *
	     * For more information on precompiling templates see
	     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
	     *
	     * For more information on Chrome extension sandboxes see
	     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category String
	     * @param {string} [string=''] The template string.
	     * @param {Object} [options={}] The options object.
	     * @param {RegExp} [options.escape=_.templateSettings.escape]
	     *  The HTML "escape" delimiter.
	     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
	     *  The "evaluate" delimiter.
	     * @param {Object} [options.imports=_.templateSettings.imports]
	     *  An object to import into the template as free variables.
	     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
	     *  The "interpolate" delimiter.
	     * @param {string} [options.sourceURL='lodash.templateSources[n]']
	     *  The sourceURL of the compiled template.
	     * @param {string} [options.variable='obj']
	     *  The data object variable name.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Function} Returns the compiled template function.
	     * @example
	     *
	     * // Use the "interpolate" delimiter to create a compiled template.
	     * var compiled = _.template('hello <%= user %>!');
	     * compiled({ 'user': 'fred' });
	     * // => 'hello fred!'
	     *
	     * // Use the HTML "escape" delimiter to escape data property values.
	     * var compiled = _.template('<b><%- value %></b>');
	     * compiled({ 'value': '<script>' });
	     * // => '<b>&lt;script&gt;</b>'
	     *
	     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
	     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the internal `print` function in "evaluate" delimiters.
	     * var compiled = _.template('<% print("hello " + user); %>!');
	     * compiled({ 'user': 'barney' });
	     * // => 'hello barney!'
	     *
	     * // Use the ES delimiter as an alternative to the default "interpolate" delimiter.
	     * var compiled = _.template('hello ${ user }!');
	     * compiled({ 'user': 'pebbles' });
	     * // => 'hello pebbles!'
	     *
	     * // Use custom template delimiters.
	     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
	     * var compiled = _.template('hello {{ user }}!');
	     * compiled({ 'user': 'mustache' });
	     * // => 'hello mustache!'
	     *
	     * // Use backslashes to treat delimiters as plain text.
	     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
	     * compiled({ 'value': 'ignored' });
	     * // => '<%- value %>'
	     *
	     * // Use the `imports` option to import `jQuery` as `jq`.
	     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
	     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
	     * compiled({ 'users': ['fred', 'barney'] });
	     * // => '<li>fred</li><li>barney</li>'
	     *
	     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
	     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
	     * compiled(data);
	     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
	     *
	     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
	     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
	     * compiled.source;
	     * // => function(data) {
	     * //   var __t, __p = '';
	     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
	     * //   return __p;
	     * // }
	     *
	     * // Use the `source` property to inline compiled templates for meaningful
	     * // line numbers in error messages and stack traces.
	     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
	     *   var JST = {\
	     *     "main": ' + _.template(mainText).source + '\
	     *   };\
	     * ');
	     */
	    function template(string, options, guard) {
	      // Based on John Resig's `tmpl` implementation
	      // (http://ejohn.org/blog/javascript-micro-templating/)
	      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
	      var settings = lodash.templateSettings;

	      if (guard && isIterateeCall(string, options, guard)) {
	        options = undefined;
	      }
	      string = toString(string);
	      options = assignInWith({}, options, settings, assignInDefaults);

	      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),
	          importsKeys = keys(imports),
	          importsValues = baseValues(imports, importsKeys);

	      var isEscaping,
	          isEvaluating,
	          index = 0,
	          interpolate = options.interpolate || reNoMatch,
	          source = "__p += '";

	      // Compile the regexp to match each delimiter.
	      var reDelimiters = RegExp(
	        (options.escape || reNoMatch).source + '|' +
	        interpolate.source + '|' +
	        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
	        (options.evaluate || reNoMatch).source + '|$'
	      , 'g');

	      // Use a sourceURL for easier debugging.
	      var sourceURL = '//# sourceURL=' +
	        ('sourceURL' in options
	          ? options.sourceURL
	          : ('lodash.templateSources[' + (++templateCounter) + ']')
	        ) + '\n';

	      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
	        interpolateValue || (interpolateValue = esTemplateValue);

	        // Escape characters that can't be included in string literals.
	        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

	        // Replace delimiters with snippets.
	        if (escapeValue) {
	          isEscaping = true;
	          source += "' +\n__e(" + escapeValue + ") +\n'";
	        }
	        if (evaluateValue) {
	          isEvaluating = true;
	          source += "';\n" + evaluateValue + ";\n__p += '";
	        }
	        if (interpolateValue) {
	          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
	        }
	        index = offset + match.length;

	        // The JS engine embedded in Adobe products needs `match` returned in
	        // order to produce the correct `offset` value.
	        return match;
	      });

	      source += "';\n";

	      // If `variable` is not specified wrap a with-statement around the generated
	      // code to add the data object to the top of the scope chain.
	      var variable = options.variable;
	      if (!variable) {
	        source = 'with (obj) {\n' + source + '\n}\n';
	      }
	      // Cleanup code by stripping empty strings.
	      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
	        .replace(reEmptyStringMiddle, '$1')
	        .replace(reEmptyStringTrailing, '$1;');

	      // Frame code as the function body.
	      source = 'function(' + (variable || 'obj') + ') {\n' +
	        (variable
	          ? ''
	          : 'obj || (obj = {});\n'
	        ) +
	        "var __t, __p = ''" +
	        (isEscaping
	           ? ', __e = _.escape'
	           : ''
	        ) +
	        (isEvaluating
	          ? ', __j = Array.prototype.join;\n' +
	            "function print() { __p += __j.call(arguments, '') }\n"
	          : ';\n'
	        ) +
	        source +
	        'return __p\n}';

	      var result = attempt(function() {
	        return Function(importsKeys, sourceURL + 'return ' + source)
	          .apply(undefined, importsValues);
	      });

	      // Provide the compiled function's source by its `toString` method or
	      // the `source` property as a convenience for inlining compiled templates.
	      result.source = source;
	      if (isError(result)) {
	        throw result;
	      }
	      return result;
	    }

	    /**
	     * Converts `string`, as a whole, to lower case just like
	     * [String#toLowerCase](https://mdn.io/toLowerCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the lower cased string.
	     * @example
	     *
	     * _.toLower('--Foo-Bar--');
	     * // => '--foo-bar--'
	     *
	     * _.toLower('fooBar');
	     * // => 'foobar'
	     *
	     * _.toLower('__FOO_BAR__');
	     * // => '__foo_bar__'
	     */
	    function toLower(value) {
	      return toString(value).toLowerCase();
	    }

	    /**
	     * Converts `string`, as a whole, to upper case just like
	     * [String#toUpperCase](https://mdn.io/toUpperCase).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.toUpper('--foo-bar--');
	     * // => '--FOO-BAR--'
	     *
	     * _.toUpper('fooBar');
	     * // => 'FOOBAR'
	     *
	     * _.toUpper('__foo_bar__');
	     * // => '__FOO_BAR__'
	     */
	    function toUpper(value) {
	      return toString(value).toUpperCase();
	    }

	    /**
	     * Removes leading and trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trim('  abc  ');
	     * // => 'abc'
	     *
	     * _.trim('-_-abc-_-', '_-');
	     * // => 'abc'
	     *
	     * _.map(['  foo  ', '  bar  '], _.trim);
	     * // => ['foo', 'bar']
	     */
	    function trim(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrim, '');
	      }
	      if (!(chars += '')) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          chrSymbols = stringToArray(chars),
	          start = charsStartIndex(strSymbols, chrSymbols),
	          end = charsEndIndex(strSymbols, chrSymbols) + 1;

	      return castSlice(strSymbols, start, end).join('');
	    }

	    /**
	     * Removes trailing whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimEnd('  abc  ');
	     * // => '  abc'
	     *
	     * _.trimEnd('-_-abc-_-', '_-');
	     * // => '-_-abc'
	     */
	    function trimEnd(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrimEnd, '');
	      }
	      if (!(chars += '')) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

	      return castSlice(strSymbols, 0, end).join('');
	    }

	    /**
	     * Removes leading whitespace or specified characters from `string`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to trim.
	     * @param {string} [chars=whitespace] The characters to trim.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {string} Returns the trimmed string.
	     * @example
	     *
	     * _.trimStart('  abc  ');
	     * // => 'abc  '
	     *
	     * _.trimStart('-_-abc-_-', '_-');
	     * // => 'abc-_-'
	     */
	    function trimStart(string, chars, guard) {
	      string = toString(string);
	      if (!string) {
	        return string;
	      }
	      if (guard || chars === undefined) {
	        return string.replace(reTrimStart, '');
	      }
	      if (!(chars += '')) {
	        return string;
	      }
	      var strSymbols = stringToArray(string),
	          start = charsStartIndex(strSymbols, stringToArray(chars));

	      return castSlice(strSymbols, start).join('');
	    }

	    /**
	     * Truncates `string` if it's longer than the given maximum string length.
	     * The last characters of the truncated string are replaced with the omission
	     * string which defaults to "...".
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to truncate.
	     * @param {Object} [options={}] The options object.
	     * @param {number} [options.length=30] The maximum string length.
	     * @param {string} [options.omission='...'] The string to indicate text is omitted.
	     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
	     * @returns {string} Returns the truncated string.
	     * @example
	     *
	     * _.truncate('hi-diddly-ho there, neighborino');
	     * // => 'hi-diddly-ho there, neighbo...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': ' '
	     * });
	     * // => 'hi-diddly-ho there,...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'length': 24,
	     *   'separator': /,? +/
	     * });
	     * // => 'hi-diddly-ho there...'
	     *
	     * _.truncate('hi-diddly-ho there, neighborino', {
	     *   'omission': ' [...]'
	     * });
	     * // => 'hi-diddly-ho there, neig [...]'
	     */
	    function truncate(string, options) {
	      var length = DEFAULT_TRUNC_LENGTH,
	          omission = DEFAULT_TRUNC_OMISSION;

	      if (isObject(options)) {
	        var separator = 'separator' in options ? options.separator : separator;
	        length = 'length' in options ? toInteger(options.length) : length;
	        omission = 'omission' in options ? toString(options.omission) : omission;
	      }
	      string = toString(string);

	      var strLength = string.length;
	      if (reHasComplexSymbol.test(string)) {
	        var strSymbols = stringToArray(string);
	        strLength = strSymbols.length;
	      }
	      if (length >= strLength) {
	        return string;
	      }
	      var end = length - stringSize(omission);
	      if (end < 1) {
	        return omission;
	      }
	      var result = strSymbols
	        ? castSlice(strSymbols, 0, end).join('')
	        : string.slice(0, end);

	      if (separator === undefined) {
	        return result + omission;
	      }
	      if (strSymbols) {
	        end += (result.length - end);
	      }
	      if (isRegExp(separator)) {
	        if (string.slice(end).search(separator)) {
	          var match,
	              substring = result;

	          if (!separator.global) {
	            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
	          }
	          separator.lastIndex = 0;
	          while ((match = separator.exec(substring))) {
	            var newEnd = match.index;
	          }
	          result = result.slice(0, newEnd === undefined ? end : newEnd);
	        }
	      } else if (string.indexOf(separator, end) != end) {
	        var index = result.lastIndexOf(separator);
	        if (index > -1) {
	          result = result.slice(0, index);
	        }
	      }
	      return result + omission;
	    }

	    /**
	     * The inverse of `_.escape`; this method converts the HTML entities
	     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to
	     * their corresponding characters.
	     *
	     * **Note:** No other HTML entities are unescaped. To unescape additional
	     * HTML entities use a third-party library like [_he_](https://mths.be/he).
	     *
	     * @static
	     * @memberOf _
	     * @since 0.6.0
	     * @category String
	     * @param {string} [string=''] The string to unescape.
	     * @returns {string} Returns the unescaped string.
	     * @example
	     *
	     * _.unescape('fred, barney, &amp; pebbles');
	     * // => 'fred, barney, & pebbles'
	     */
	    function unescape(string) {
	      string = toString(string);
	      return (string && reHasEscapedHtml.test(string))
	        ? string.replace(reEscapedHtml, unescapeHtmlChar)
	        : string;
	    }

	    /**
	     * Converts `string`, as space separated words, to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the upper cased string.
	     * @example
	     *
	     * _.upperCase('--foo-bar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('fooBar');
	     * // => 'FOO BAR'
	     *
	     * _.upperCase('__foo_bar__');
	     * // => 'FOO BAR'
	     */
	    var upperCase = createCompounder(function(result, word, index) {
	      return result + (index ? ' ' : '') + word.toUpperCase();
	    });

	    /**
	     * Converts the first character of `string` to upper case.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category String
	     * @param {string} [string=''] The string to convert.
	     * @returns {string} Returns the converted string.
	     * @example
	     *
	     * _.upperFirst('fred');
	     * // => 'Fred'
	     *
	     * _.upperFirst('FRED');
	     * // => 'FRED'
	     */
	    var upperFirst = createCaseFirst('toUpperCase');

	    /**
	     * Splits `string` into an array of its words.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category String
	     * @param {string} [string=''] The string to inspect.
	     * @param {RegExp|string} [pattern] The pattern to match words.
	     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	     * @returns {Array} Returns the words of `string`.
	     * @example
	     *
	     * _.words('fred, barney, & pebbles');
	     * // => ['fred', 'barney', 'pebbles']
	     *
	     * _.words('fred, barney, & pebbles', /[^, ]+/g);
	     * // => ['fred', 'barney', '&', 'pebbles']
	     */
	    function words(string, pattern, guard) {
	      string = toString(string);
	      pattern = guard ? undefined : pattern;

	      if (pattern === undefined) {
	        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;
	      }
	      return string.match(pattern) || [];
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Attempts to invoke `func`, returning either the result or the caught error
	     * object. Any additional arguments are provided to `func` when it's invoked.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Function} func The function to attempt.
	     * @param {...*} [args] The arguments to invoke `func` with.
	     * @returns {*} Returns the `func` result or error object.
	     * @example
	     *
	     * // Avoid throwing errors for invalid selectors.
	     * var elements = _.attempt(function(selector) {
	     *   return document.querySelectorAll(selector);
	     * }, '>_>');
	     *
	     * if (_.isError(elements)) {
	     *   elements = [];
	     * }
	     */
	    var attempt = rest(function(func, args) {
	      try {
	        return apply(func, undefined, args);
	      } catch (e) {
	        return isError(e) ? e : new Error(e);
	      }
	    });

	    /**
	     * Binds methods of an object to the object itself, overwriting the existing
	     * method.
	     *
	     * **Note:** This method doesn't set the "length" property of bound functions.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Object} object The object to bind and assign the bound methods to.
	     * @param {...(string|string[])} methodNames The object method names to bind.
	     * @returns {Object} Returns `object`.
	     * @example
	     *
	     * var view = {
	     *   'label': 'docs',
	     *   'onClick': function() {
	     *     console.log('clicked ' + this.label);
	     *   }
	     * };
	     *
	     * _.bindAll(view, 'onClick');
	     * jQuery(element).on('click', view.onClick);
	     * // => Logs 'clicked docs' when clicked.
	     */
	    var bindAll = rest(function(object, methodNames) {
	      arrayEach(baseFlatten(methodNames, 1), function(key) {
	        object[key] = bind(object[key], object);
	      });
	      return object;
	    });

	    /**
	     * Creates a function that iterates over `pairs` and invokes the corresponding
	     * function of the first predicate to return truthy. The predicate-function
	     * pairs are invoked with the `this` binding and arguments of the created
	     * function.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Array} pairs The predicate-function pairs.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.cond([
	     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
	     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
	     *   [_.constant(true),                _.constant('no match')]
	     * ]);
	     *
	     * func({ 'a': 1, 'b': 2 });
	     * // => 'matches A'
	     *
	     * func({ 'a': 0, 'b': 1 });
	     * // => 'matches B'
	     *
	     * func({ 'a': '1', 'b': '2' });
	     * // => 'no match'
	     */
	    function cond(pairs) {
	      var length = pairs ? pairs.length : 0,
	          toIteratee = getIteratee();

	      pairs = !length ? [] : arrayMap(pairs, function(pair) {
	        if (typeof pair[1] != 'function') {
	          throw new TypeError(FUNC_ERROR_TEXT);
	        }
	        return [toIteratee(pair[0]), pair[1]];
	      });

	      return rest(function(args) {
	        var index = -1;
	        while (++index < length) {
	          var pair = pairs[index];
	          if (apply(pair[0], this, args)) {
	            return apply(pair[1], this, args);
	          }
	        }
	      });
	    }

	    /**
	     * Creates a function that invokes the predicate properties of `source` with
	     * the corresponding property values of a given object, returning `true` if
	     * all predicates return truthy, else `false`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {Object} source The object of property predicates to conform to.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36 },
	     *   { 'user': 'fred',   'age': 40 }
	     * ];
	     *
	     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     */
	    function conforms(source) {
	      return baseConforms(baseClone(source, true));
	    }

	    /**
	     * Creates a function that returns `value`.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {*} value The value to return from the new function.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     * var getter = _.constant(object);
	     *
	     * getter() === object;
	     * // => true
	     */
	    function constant(value) {
	      return function() {
	        return value;
	      };
	    }

	    /**
	     * Creates a function that returns the result of invoking the given functions
	     * with the `this` binding of the created function, where each successive
	     * invocation is supplied the return value of the previous.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flow(_.add, square);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flow = createFlow();

	    /**
	     * This method is like `_.flow` except that it creates a function that
	     * invokes the given functions from right to left.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {...(Function|Function[])} [funcs] Functions to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * function square(n) {
	     *   return n * n;
	     * }
	     *
	     * var addSquare = _.flowRight(square, _.add);
	     * addSquare(1, 2);
	     * // => 9
	     */
	    var flowRight = createFlow(true);

	    /**
	     * This method returns the first argument given to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {*} value Any value.
	     * @returns {*} Returns `value`.
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.identity(object) === object;
	     * // => true
	     */
	    function identity(value) {
	      return value;
	    }

	    /**
	     * Creates a function that invokes `func` with the arguments of the created
	     * function. If `func` is a property name, the created function returns the
	     * property value for a given element. If `func` is an array or object, the
	     * created function returns `true` for elements that contain the equivalent
	     * source properties, otherwise it returns `false`.
	     *
	     * @static
	     * @since 4.0.0
	     * @memberOf _
	     * @category Util
	     * @param {*} [func=_.identity] The value to convert to a callback.
	     * @returns {Function} Returns the callback.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * // The `_.matches` iteratee shorthand.
	     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	     *
	     * // The `_.matchesProperty` iteratee shorthand.
	     * _.filter(users, _.iteratee(['user', 'fred']));
	     * // => [{ 'user': 'fred', 'age': 40 }]
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.map(users, _.iteratee('user'));
	     * // => ['barney', 'fred']
	     *
	     * // Create custom iteratee shorthands.
	     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	     *     return func.test(string);
	     *   };
	     * });
	     *
	     * _.filter(['abc', 'def'], /ef/);
	     * // => ['def']
	     */
	    function iteratee(func) {
	      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between a given
	     * object and `source`, returning `true` if the given object has equivalent
	     * property values, else `false`. The created function is equivalent to
	     * `_.isMatch` with a `source` partially applied.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} source The object of property values to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney', 'age': 36, 'active': true },
	     *   { 'user': 'fred',   'age': 40, 'active': false }
	     * ];
	     *
	     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
	     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
	     */
	    function matches(source) {
	      return baseMatches(baseClone(source, true));
	    }

	    /**
	     * Creates a function that performs a partial deep comparison between the
	     * value at `path` of a given object to `srcValue`, returning `true` if the
	     * object value is equivalent, else `false`.
	     *
	     * **Note:** This method supports comparing the same values as `_.isEqual`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.2.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @param {*} srcValue The value to match.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var users = [
	     *   { 'user': 'barney' },
	     *   { 'user': 'fred' }
	     * ];
	     *
	     * _.find(users, _.matchesProperty('user', 'fred'));
	     * // => { 'user': 'fred' }
	     */
	    function matchesProperty(path, srcValue) {
	      return baseMatchesProperty(path, baseClone(srcValue, true));
	    }

	    /**
	     * Creates a function that invokes the method at `path` of a given object.
	     * Any additional arguments are provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Array|string} path The path of the method to invoke.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': _.constant(2) } },
	     *   { 'a': { 'b': _.constant(1) } }
	     * ];
	     *
	     * _.map(objects, _.method('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(objects, _.method(['a', 'b']));
	     * // => [2, 1]
	     */
	    var method = rest(function(path, args) {
	      return function(object) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * The opposite of `_.method`; this method creates a function that invokes
	     * the method at a given path of `object`. Any additional arguments are
	     * provided to the invoked method.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.7.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @param {...*} [args] The arguments to invoke the method with.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = _.times(3, _.constant),
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
	     * // => [2, 0]
	     */
	    var methodOf = rest(function(object, args) {
	      return function(path) {
	        return baseInvoke(object, path, args);
	      };
	    });

	    /**
	     * Adds all own enumerable string keyed function properties of a source
	     * object to the destination object. If `object` is a function, then methods
	     * are added to its prototype as well.
	     *
	     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
	     * avoid conflicts caused by modifying the original.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {Function|Object} [object=lodash] The destination object.
	     * @param {Object} source The object of functions to add.
	     * @param {Object} [options={}] The options object.
	     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
	     * @returns {Function|Object} Returns `object`.
	     * @example
	     *
	     * function vowels(string) {
	     *   return _.filter(string, function(v) {
	     *     return /[aeiou]/i.test(v);
	     *   });
	     * }
	     *
	     * _.mixin({ 'vowels': vowels });
	     * _.vowels('fred');
	     * // => ['e']
	     *
	     * _('fred').vowels().value();
	     * // => ['e']
	     *
	     * _.mixin({ 'vowels': vowels }, { 'chain': false });
	     * _('fred').vowels();
	     * // => ['e']
	     */
	    function mixin(object, source, options) {
	      var props = keys(source),
	          methodNames = baseFunctions(source, props);

	      if (options == null &&
	          !(isObject(source) && (methodNames.length || !props.length))) {
	        options = source;
	        source = object;
	        object = this;
	        methodNames = baseFunctions(source, keys(source));
	      }
	      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
	          isFunc = isFunction(object);

	      arrayEach(methodNames, function(methodName) {
	        var func = source[methodName];
	        object[methodName] = func;
	        if (isFunc) {
	          object.prototype[methodName] = function() {
	            var chainAll = this.__chain__;
	            if (chain || chainAll) {
	              var result = object(this.__wrapped__),
	                  actions = result.__actions__ = copyArray(this.__actions__);

	              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
	              result.__chain__ = chainAll;
	              return result;
	            }
	            return func.apply(object, arrayPush([this.value()], arguments));
	          };
	        }
	      });

	      return object;
	    }

	    /**
	     * Reverts the `_` variable to its previous value and returns a reference to
	     * the `lodash` function.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @returns {Function} Returns the `lodash` function.
	     * @example
	     *
	     * var lodash = _.noConflict();
	     */
	    function noConflict() {
	      if (root._ === this) {
	        root._ = oldDash;
	      }
	      return this;
	    }

	    /**
	     * A no-operation function that returns `undefined` regardless of the
	     * arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.3.0
	     * @category Util
	     * @example
	     *
	     * var object = { 'user': 'fred' };
	     *
	     * _.noop(object) === undefined;
	     * // => true
	     */
	    function noop() {
	      // No operation performed.
	    }

	    /**
	     * Creates a function that returns its nth argument. If `n` is negative,
	     * the nth argument from the end is returned.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [n=0] The index of the argument to return.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.nthArg(1);
	     * func('a', 'b', 'c', 'd');
	     * // => 'b'
	     *
	     * var func = _.nthArg(-2);
	     * func('a', 'b', 'c', 'd');
	     * // => 'c'
	     */
	    function nthArg(n) {
	      n = toInteger(n);
	      return rest(function(args) {
	        return baseNth(args, n);
	      });
	    }

	    /**
	     * Creates a function that invokes `iteratees` with the arguments it receives
	     * and returns their results.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [iteratees=[_.identity]] The iteratees to invoke.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.over(Math.max, Math.min);
	     *
	     * func(1, 2, 3, 4);
	     * // => [4, 1]
	     */
	    var over = createOver(arrayMap);

	    /**
	     * Creates a function that checks if **all** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [predicates=[_.identity]] The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overEvery(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => false
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overEvery = createOver(arrayEvery);

	    /**
	     * Creates a function that checks if **any** of the `predicates` return
	     * truthy when invoked with the arguments it receives.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}
	     *  [predicates=[_.identity]] The predicates to check.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var func = _.overSome(Boolean, isFinite);
	     *
	     * func('1');
	     * // => true
	     *
	     * func(null);
	     * // => true
	     *
	     * func(NaN);
	     * // => false
	     */
	    var overSome = createOver(arraySome);

	    /**
	     * Creates a function that returns the value at `path` of a given object.
	     *
	     * @static
	     * @memberOf _
	     * @since 2.4.0
	     * @category Util
	     * @param {Array|string} path The path of the property to get.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var objects = [
	     *   { 'a': { 'b': 2 } },
	     *   { 'a': { 'b': 1 } }
	     * ];
	     *
	     * _.map(objects, _.property('a.b'));
	     * // => [2, 1]
	     *
	     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	     * // => [1, 2]
	     */
	    function property(path) {
	      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
	    }

	    /**
	     * The opposite of `_.property`; this method creates a function that returns
	     * the value at a given path of `object`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.0.0
	     * @category Util
	     * @param {Object} object The object to query.
	     * @returns {Function} Returns the new function.
	     * @example
	     *
	     * var array = [0, 1, 2],
	     *     object = { 'a': array, 'b': array, 'c': array };
	     *
	     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
	     * // => [2, 0]
	     *
	     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
	     * // => [2, 0]
	     */
	    function propertyOf(object) {
	      return function(path) {
	        return object == null ? undefined : baseGet(object, path);
	      };
	    }

	    /**
	     * Creates an array of numbers (positive and/or negative) progressing from
	     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
	     * `start` is specified without an `end` or `step`. If `end` is not specified,
	     * it's set to `start` with `start` then set to `0`.
	     *
	     * **Note:** JavaScript follows the IEEE-754 standard for resolving
	     * floating-point values which can produce unexpected results.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the new array of numbers.
	     * @example
	     *
	     * _.range(4);
	     * // => [0, 1, 2, 3]
	     *
	     * _.range(-4);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 5);
	     * // => [1, 2, 3, 4]
	     *
	     * _.range(0, 20, 5);
	     * // => [0, 5, 10, 15]
	     *
	     * _.range(0, -4, -1);
	     * // => [0, -1, -2, -3]
	     *
	     * _.range(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.range(0);
	     * // => []
	     */
	    var range = createRange();

	    /**
	     * This method is like `_.range` except that it populates values in
	     * descending order.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {number} [start=0] The start of the range.
	     * @param {number} end The end of the range.
	     * @param {number} [step=1] The value to increment or decrement by.
	     * @returns {Array} Returns the new array of numbers.
	     * @example
	     *
	     * _.rangeRight(4);
	     * // => [3, 2, 1, 0]
	     *
	     * _.rangeRight(-4);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 5);
	     * // => [4, 3, 2, 1]
	     *
	     * _.rangeRight(0, 20, 5);
	     * // => [15, 10, 5, 0]
	     *
	     * _.rangeRight(0, -4, -1);
	     * // => [-3, -2, -1, 0]
	     *
	     * _.rangeRight(1, 4, 0);
	     * // => [1, 1, 1]
	     *
	     * _.rangeRight(0);
	     * // => []
	     */
	    var rangeRight = createRange(true);

	    /**
	     * Invokes the iteratee `n` times, returning an array of the results of
	     * each invocation. The iteratee is invoked with one argument; (index).
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {number} n The number of times to invoke `iteratee`.
	     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	     * @returns {Array} Returns the array of results.
	     * @example
	     *
	     * _.times(3, String);
	     * // => ['0', '1', '2']
	     *
	     *  _.times(4, _.constant(true));
	     * // => [true, true, true, true]
	     */
	    function times(n, iteratee) {
	      n = toInteger(n);
	      if (n < 1 || n > MAX_SAFE_INTEGER) {
	        return [];
	      }
	      var index = MAX_ARRAY_LENGTH,
	          length = nativeMin(n, MAX_ARRAY_LENGTH);

	      iteratee = getIteratee(iteratee);
	      n -= MAX_ARRAY_LENGTH;

	      var result = baseTimes(length, iteratee);
	      while (++index < n) {
	        iteratee(index);
	      }
	      return result;
	    }

	    /**
	     * Converts `value` to a property path array.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Util
	     * @param {*} value The value to convert.
	     * @returns {Array} Returns the new property path array.
	     * @example
	     *
	     * _.toPath('a.b.c');
	     * // => ['a', 'b', 'c']
	     *
	     * _.toPath('a[0].b.c');
	     * // => ['a', '0', 'b', 'c']
	     *
	     * var path = ['a', 'b', 'c'],
	     *     newPath = _.toPath(path);
	     *
	     * console.log(newPath);
	     * // => ['a', 'b', 'c']
	     *
	     * console.log(path === newPath);
	     * // => false
	     */
	    function toPath(value) {
	      if (isArray(value)) {
	        return arrayMap(value, toKey);
	      }
	      return isSymbol(value) ? [value] : copyArray(stringToPath(value));
	    }

	    /**
	     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Util
	     * @param {string} [prefix=''] The value to prefix the ID with.
	     * @returns {string} Returns the unique ID.
	     * @example
	     *
	     * _.uniqueId('contact_');
	     * // => 'contact_104'
	     *
	     * _.uniqueId();
	     * // => '105'
	     */
	    function uniqueId(prefix) {
	      var id = ++idCounter;
	      return toString(prefix) + id;
	    }

	    /*------------------------------------------------------------------------*/

	    /**
	     * Adds two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {number} augend The first number in an addition.
	     * @param {number} addend The second number in an addition.
	     * @returns {number} Returns the total.
	     * @example
	     *
	     * _.add(6, 4);
	     * // => 10
	     */
	    var add = createMathOperation(function(augend, addend) {
	      return augend + addend;
	    });

	    /**
	     * Computes `number` rounded up to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round up.
	     * @param {number} [precision=0] The precision to round up to.
	     * @returns {number} Returns the rounded up number.
	     * @example
	     *
	     * _.ceil(4.006);
	     * // => 5
	     *
	     * _.ceil(6.004, 2);
	     * // => 6.01
	     *
	     * _.ceil(6040, -2);
	     * // => 6100
	     */
	    var ceil = createRound('ceil');

	    /**
	     * Divide two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} dividend The first number in a division.
	     * @param {number} divisor The second number in a division.
	     * @returns {number} Returns the quotient.
	     * @example
	     *
	     * _.divide(6, 4);
	     * // => 1.5
	     */
	    var divide = createMathOperation(function(dividend, divisor) {
	      return dividend / divisor;
	    });

	    /**
	     * Computes `number` rounded down to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round down.
	     * @param {number} [precision=0] The precision to round down to.
	     * @returns {number} Returns the rounded down number.
	     * @example
	     *
	     * _.floor(4.006);
	     * // => 4
	     *
	     * _.floor(0.046, 2);
	     * // => 0.04
	     *
	     * _.floor(4060, -2);
	     * // => 4000
	     */
	    var floor = createRound('floor');

	    /**
	     * Computes the maximum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * _.max([4, 2, 8, 6]);
	     * // => 8
	     *
	     * _.max([]);
	     * // => undefined
	     */
	    function max(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, gt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.max` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the maximum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.maxBy(objects, function(o) { return o.n; });
	     * // => { 'n': 2 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.maxBy(objects, 'n');
	     * // => { 'n': 2 }
	     */
	    function maxBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee), gt)
	        : undefined;
	    }

	    /**
	     * Computes the mean of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * _.mean([4, 2, 8, 6]);
	     * // => 5
	     */
	    function mean(array) {
	      return baseMean(array, identity);
	    }

	    /**
	     * This method is like `_.mean` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be averaged.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the mean.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.meanBy(objects, function(o) { return o.n; });
	     * // => 5
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.meanBy(objects, 'n');
	     * // => 5
	     */
	    function meanBy(array, iteratee) {
	      return baseMean(array, getIteratee(iteratee));
	    }

	    /**
	     * Computes the minimum value of `array`. If `array` is empty or falsey,
	     * `undefined` is returned.
	     *
	     * @static
	     * @since 0.1.0
	     * @memberOf _
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * _.min([4, 2, 8, 6]);
	     * // => 2
	     *
	     * _.min([]);
	     * // => undefined
	     */
	    function min(array) {
	      return (array && array.length)
	        ? baseExtremum(array, identity, lt)
	        : undefined;
	    }

	    /**
	     * This method is like `_.min` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the criterion by which
	     * the value is ranked. The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {*} Returns the minimum value.
	     * @example
	     *
	     * var objects = [{ 'n': 1 }, { 'n': 2 }];
	     *
	     * _.minBy(objects, function(o) { return o.n; });
	     * // => { 'n': 1 }
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.minBy(objects, 'n');
	     * // => { 'n': 1 }
	     */
	    function minBy(array, iteratee) {
	      return (array && array.length)
	        ? baseExtremum(array, getIteratee(iteratee), lt)
	        : undefined;
	    }

	    /**
	     * Multiply two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.7.0
	     * @category Math
	     * @param {number} multiplier The first number in a multiplication.
	     * @param {number} multiplicand The second number in a multiplication.
	     * @returns {number} Returns the product.
	     * @example
	     *
	     * _.multiply(6, 4);
	     * // => 24
	     */
	    var multiply = createMathOperation(function(multiplier, multiplicand) {
	      return multiplier * multiplicand;
	    });

	    /**
	     * Computes `number` rounded to `precision`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.10.0
	     * @category Math
	     * @param {number} number The number to round.
	     * @param {number} [precision=0] The precision to round to.
	     * @returns {number} Returns the rounded number.
	     * @example
	     *
	     * _.round(4.006);
	     * // => 4
	     *
	     * _.round(4.006, 2);
	     * // => 4.01
	     *
	     * _.round(4060, -2);
	     * // => 4100
	     */
	    var round = createRound('round');

	    /**
	     * Subtract two numbers.
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {number} minuend The first number in a subtraction.
	     * @param {number} subtrahend The second number in a subtraction.
	     * @returns {number} Returns the difference.
	     * @example
	     *
	     * _.subtract(6, 4);
	     * // => 2
	     */
	    var subtract = createMathOperation(function(minuend, subtrahend) {
	      return minuend - subtrahend;
	    });

	    /**
	     * Computes the sum of the values in `array`.
	     *
	     * @static
	     * @memberOf _
	     * @since 3.4.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * _.sum([4, 2, 8, 6]);
	     * // => 20
	     */
	    function sum(array) {
	      return (array && array.length)
	        ? baseSum(array, identity)
	        : 0;
	    }

	    /**
	     * This method is like `_.sum` except that it accepts `iteratee` which is
	     * invoked for each element in `array` to generate the value to be summed.
	     * The iteratee is invoked with one argument: (value).
	     *
	     * @static
	     * @memberOf _
	     * @since 4.0.0
	     * @category Math
	     * @param {Array} array The array to iterate over.
	     * @param {Array|Function|Object|string} [iteratee=_.identity]
	     *  The iteratee invoked per element.
	     * @returns {number} Returns the sum.
	     * @example
	     *
	     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
	     *
	     * _.sumBy(objects, function(o) { return o.n; });
	     * // => 20
	     *
	     * // The `_.property` iteratee shorthand.
	     * _.sumBy(objects, 'n');
	     * // => 20
	     */
	    function sumBy(array, iteratee) {
	      return (array && array.length)
	        ? baseSum(array, getIteratee(iteratee))
	        : 0;
	    }

	    /*------------------------------------------------------------------------*/

	    // Add methods that return wrapped values in chain sequences.
	    lodash.after = after;
	    lodash.ary = ary;
	    lodash.assign = assign;
	    lodash.assignIn = assignIn;
	    lodash.assignInWith = assignInWith;
	    lodash.assignWith = assignWith;
	    lodash.at = at;
	    lodash.before = before;
	    lodash.bind = bind;
	    lodash.bindAll = bindAll;
	    lodash.bindKey = bindKey;
	    lodash.castArray = castArray;
	    lodash.chain = chain;
	    lodash.chunk = chunk;
	    lodash.compact = compact;
	    lodash.concat = concat;
	    lodash.cond = cond;
	    lodash.conforms = conforms;
	    lodash.constant = constant;
	    lodash.countBy = countBy;
	    lodash.create = create;
	    lodash.curry = curry;
	    lodash.curryRight = curryRight;
	    lodash.debounce = debounce;
	    lodash.defaults = defaults;
	    lodash.defaultsDeep = defaultsDeep;
	    lodash.defer = defer;
	    lodash.delay = delay;
	    lodash.difference = difference;
	    lodash.differenceBy = differenceBy;
	    lodash.differenceWith = differenceWith;
	    lodash.drop = drop;
	    lodash.dropRight = dropRight;
	    lodash.dropRightWhile = dropRightWhile;
	    lodash.dropWhile = dropWhile;
	    lodash.fill = fill;
	    lodash.filter = filter;
	    lodash.flatMap = flatMap;
	    lodash.flatMapDeep = flatMapDeep;
	    lodash.flatMapDepth = flatMapDepth;
	    lodash.flatten = flatten;
	    lodash.flattenDeep = flattenDeep;
	    lodash.flattenDepth = flattenDepth;
	    lodash.flip = flip;
	    lodash.flow = flow;
	    lodash.flowRight = flowRight;
	    lodash.fromPairs = fromPairs;
	    lodash.functions = functions;
	    lodash.functionsIn = functionsIn;
	    lodash.groupBy = groupBy;
	    lodash.initial = initial;
	    lodash.intersection = intersection;
	    lodash.intersectionBy = intersectionBy;
	    lodash.intersectionWith = intersectionWith;
	    lodash.invert = invert;
	    lodash.invertBy = invertBy;
	    lodash.invokeMap = invokeMap;
	    lodash.iteratee = iteratee;
	    lodash.keyBy = keyBy;
	    lodash.keys = keys;
	    lodash.keysIn = keysIn;
	    lodash.map = map;
	    lodash.mapKeys = mapKeys;
	    lodash.mapValues = mapValues;
	    lodash.matches = matches;
	    lodash.matchesProperty = matchesProperty;
	    lodash.memoize = memoize;
	    lodash.merge = merge;
	    lodash.mergeWith = mergeWith;
	    lodash.method = method;
	    lodash.methodOf = methodOf;
	    lodash.mixin = mixin;
	    lodash.negate = negate;
	    lodash.nthArg = nthArg;
	    lodash.omit = omit;
	    lodash.omitBy = omitBy;
	    lodash.once = once;
	    lodash.orderBy = orderBy;
	    lodash.over = over;
	    lodash.overArgs = overArgs;
	    lodash.overEvery = overEvery;
	    lodash.overSome = overSome;
	    lodash.partial = partial;
	    lodash.partialRight = partialRight;
	    lodash.partition = partition;
	    lodash.pick = pick;
	    lodash.pickBy = pickBy;
	    lodash.property = property;
	    lodash.propertyOf = propertyOf;
	    lodash.pull = pull;
	    lodash.pullAll = pullAll;
	    lodash.pullAllBy = pullAllBy;
	    lodash.pullAllWith = pullAllWith;
	    lodash.pullAt = pullAt;
	    lodash.range = range;
	    lodash.rangeRight = rangeRight;
	    lodash.rearg = rearg;
	    lodash.reject = reject;
	    lodash.remove = remove;
	    lodash.rest = rest;
	    lodash.reverse = reverse;
	    lodash.sampleSize = sampleSize;
	    lodash.set = set;
	    lodash.setWith = setWith;
	    lodash.shuffle = shuffle;
	    lodash.slice = slice;
	    lodash.sortBy = sortBy;
	    lodash.sortedUniq = sortedUniq;
	    lodash.sortedUniqBy = sortedUniqBy;
	    lodash.split = split;
	    lodash.spread = spread;
	    lodash.tail = tail;
	    lodash.take = take;
	    lodash.takeRight = takeRight;
	    lodash.takeRightWhile = takeRightWhile;
	    lodash.takeWhile = takeWhile;
	    lodash.tap = tap;
	    lodash.throttle = throttle;
	    lodash.thru = thru;
	    lodash.toArray = toArray;
	    lodash.toPairs = toPairs;
	    lodash.toPairsIn = toPairsIn;
	    lodash.toPath = toPath;
	    lodash.toPlainObject = toPlainObject;
	    lodash.transform = transform;
	    lodash.unary = unary;
	    lodash.union = union;
	    lodash.unionBy = unionBy;
	    lodash.unionWith = unionWith;
	    lodash.uniq = uniq;
	    lodash.uniqBy = uniqBy;
	    lodash.uniqWith = uniqWith;
	    lodash.unset = unset;
	    lodash.unzip = unzip;
	    lodash.unzipWith = unzipWith;
	    lodash.update = update;
	    lodash.updateWith = updateWith;
	    lodash.values = values;
	    lodash.valuesIn = valuesIn;
	    lodash.without = without;
	    lodash.words = words;
	    lodash.wrap = wrap;
	    lodash.xor = xor;
	    lodash.xorBy = xorBy;
	    lodash.xorWith = xorWith;
	    lodash.zip = zip;
	    lodash.zipObject = zipObject;
	    lodash.zipObjectDeep = zipObjectDeep;
	    lodash.zipWith = zipWith;

	    // Add aliases.
	    lodash.entries = toPairs;
	    lodash.entriesIn = toPairsIn;
	    lodash.extend = assignIn;
	    lodash.extendWith = assignInWith;

	    // Add methods to `lodash.prototype`.
	    mixin(lodash, lodash);

	    /*------------------------------------------------------------------------*/

	    // Add methods that return unwrapped values in chain sequences.
	    lodash.add = add;
	    lodash.attempt = attempt;
	    lodash.camelCase = camelCase;
	    lodash.capitalize = capitalize;
	    lodash.ceil = ceil;
	    lodash.clamp = clamp;
	    lodash.clone = clone;
	    lodash.cloneDeep = cloneDeep;
	    lodash.cloneDeepWith = cloneDeepWith;
	    lodash.cloneWith = cloneWith;
	    lodash.deburr = deburr;
	    lodash.divide = divide;
	    lodash.endsWith = endsWith;
	    lodash.eq = eq;
	    lodash.escape = escape;
	    lodash.escapeRegExp = escapeRegExp;
	    lodash.every = every;
	    lodash.find = find;
	    lodash.findIndex = findIndex;
	    lodash.findKey = findKey;
	    lodash.findLast = findLast;
	    lodash.findLastIndex = findLastIndex;
	    lodash.findLastKey = findLastKey;
	    lodash.floor = floor;
	    lodash.forEach = forEach;
	    lodash.forEachRight = forEachRight;
	    lodash.forIn = forIn;
	    lodash.forInRight = forInRight;
	    lodash.forOwn = forOwn;
	    lodash.forOwnRight = forOwnRight;
	    lodash.get = get;
	    lodash.gt = gt;
	    lodash.gte = gte;
	    lodash.has = has;
	    lodash.hasIn = hasIn;
	    lodash.head = head;
	    lodash.identity = identity;
	    lodash.includes = includes;
	    lodash.indexOf = indexOf;
	    lodash.inRange = inRange;
	    lodash.invoke = invoke;
	    lodash.isArguments = isArguments;
	    lodash.isArray = isArray;
	    lodash.isArrayBuffer = isArrayBuffer;
	    lodash.isArrayLike = isArrayLike;
	    lodash.isArrayLikeObject = isArrayLikeObject;
	    lodash.isBoolean = isBoolean;
	    lodash.isBuffer = isBuffer;
	    lodash.isDate = isDate;
	    lodash.isElement = isElement;
	    lodash.isEmpty = isEmpty;
	    lodash.isEqual = isEqual;
	    lodash.isEqualWith = isEqualWith;
	    lodash.isError = isError;
	    lodash.isFinite = isFinite;
	    lodash.isFunction = isFunction;
	    lodash.isInteger = isInteger;
	    lodash.isLength = isLength;
	    lodash.isMap = isMap;
	    lodash.isMatch = isMatch;
	    lodash.isMatchWith = isMatchWith;
	    lodash.isNaN = isNaN;
	    lodash.isNative = isNative;
	    lodash.isNil = isNil;
	    lodash.isNull = isNull;
	    lodash.isNumber = isNumber;
	    lodash.isObject = isObject;
	    lodash.isObjectLike = isObjectLike;
	    lodash.isPlainObject = isPlainObject;
	    lodash.isRegExp = isRegExp;
	    lodash.isSafeInteger = isSafeInteger;
	    lodash.isSet = isSet;
	    lodash.isString = isString;
	    lodash.isSymbol = isSymbol;
	    lodash.isTypedArray = isTypedArray;
	    lodash.isUndefined = isUndefined;
	    lodash.isWeakMap = isWeakMap;
	    lodash.isWeakSet = isWeakSet;
	    lodash.join = join;
	    lodash.kebabCase = kebabCase;
	    lodash.last = last;
	    lodash.lastIndexOf = lastIndexOf;
	    lodash.lowerCase = lowerCase;
	    lodash.lowerFirst = lowerFirst;
	    lodash.lt = lt;
	    lodash.lte = lte;
	    lodash.max = max;
	    lodash.maxBy = maxBy;
	    lodash.mean = mean;
	    lodash.meanBy = meanBy;
	    lodash.min = min;
	    lodash.minBy = minBy;
	    lodash.multiply = multiply;
	    lodash.nth = nth;
	    lodash.noConflict = noConflict;
	    lodash.noop = noop;
	    lodash.now = now;
	    lodash.pad = pad;
	    lodash.padEnd = padEnd;
	    lodash.padStart = padStart;
	    lodash.parseInt = parseInt;
	    lodash.random = random;
	    lodash.reduce = reduce;
	    lodash.reduceRight = reduceRight;
	    lodash.repeat = repeat;
	    lodash.replace = replace;
	    lodash.result = result;
	    lodash.round = round;
	    lodash.runInContext = runInContext;
	    lodash.sample = sample;
	    lodash.size = size;
	    lodash.snakeCase = snakeCase;
	    lodash.some = some;
	    lodash.sortedIndex = sortedIndex;
	    lodash.sortedIndexBy = sortedIndexBy;
	    lodash.sortedIndexOf = sortedIndexOf;
	    lodash.sortedLastIndex = sortedLastIndex;
	    lodash.sortedLastIndexBy = sortedLastIndexBy;
	    lodash.sortedLastIndexOf = sortedLastIndexOf;
	    lodash.startCase = startCase;
	    lodash.startsWith = startsWith;
	    lodash.subtract = subtract;
	    lodash.sum = sum;
	    lodash.sumBy = sumBy;
	    lodash.template = template;
	    lodash.times = times;
	    lodash.toInteger = toInteger;
	    lodash.toLength = toLength;
	    lodash.toLower = toLower;
	    lodash.toNumber = toNumber;
	    lodash.toSafeInteger = toSafeInteger;
	    lodash.toString = toString;
	    lodash.toUpper = toUpper;
	    lodash.trim = trim;
	    lodash.trimEnd = trimEnd;
	    lodash.trimStart = trimStart;
	    lodash.truncate = truncate;
	    lodash.unescape = unescape;
	    lodash.uniqueId = uniqueId;
	    lodash.upperCase = upperCase;
	    lodash.upperFirst = upperFirst;

	    // Add aliases.
	    lodash.each = forEach;
	    lodash.eachRight = forEachRight;
	    lodash.first = head;

	    mixin(lodash, (function() {
	      var source = {};
	      baseForOwn(lodash, function(func, methodName) {
	        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
	          source[methodName] = func;
	        }
	      });
	      return source;
	    }()), { 'chain': false });

	    /*------------------------------------------------------------------------*/

	    /**
	     * The semantic version number.
	     *
	     * @static
	     * @memberOf _
	     * @type {string}
	     */
	    lodash.VERSION = VERSION;

	    // Assign default placeholders.
	    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
	      lodash[methodName].placeholder = lodash;
	    });

	    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
	    arrayEach(['drop', 'take'], function(methodName, index) {
	      LazyWrapper.prototype[methodName] = function(n) {
	        var filtered = this.__filtered__;
	        if (filtered && !index) {
	          return new LazyWrapper(this);
	        }
	        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

	        var result = this.clone();
	        if (filtered) {
	          result.__takeCount__ = nativeMin(n, result.__takeCount__);
	        } else {
	          result.__views__.push({
	            'size': nativeMin(n, MAX_ARRAY_LENGTH),
	            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
	          });
	        }
	        return result;
	      };

	      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
	        return this.reverse()[methodName](n).reverse();
	      };
	    });

	    // Add `LazyWrapper` methods that accept an `iteratee` value.
	    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
	      var type = index + 1,
	          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

	      LazyWrapper.prototype[methodName] = function(iteratee) {
	        var result = this.clone();
	        result.__iteratees__.push({
	          'iteratee': getIteratee(iteratee, 3),
	          'type': type
	        });
	        result.__filtered__ = result.__filtered__ || isFilter;
	        return result;
	      };
	    });

	    // Add `LazyWrapper` methods for `_.head` and `_.last`.
	    arrayEach(['head', 'last'], function(methodName, index) {
	      var takeName = 'take' + (index ? 'Right' : '');

	      LazyWrapper.prototype[methodName] = function() {
	        return this[takeName](1).value()[0];
	      };
	    });

	    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
	    arrayEach(['initial', 'tail'], function(methodName, index) {
	      var dropName = 'drop' + (index ? '' : 'Right');

	      LazyWrapper.prototype[methodName] = function() {
	        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
	      };
	    });

	    LazyWrapper.prototype.compact = function() {
	      return this.filter(identity);
	    };

	    LazyWrapper.prototype.find = function(predicate) {
	      return this.filter(predicate).head();
	    };

	    LazyWrapper.prototype.findLast = function(predicate) {
	      return this.reverse().find(predicate);
	    };

	    LazyWrapper.prototype.invokeMap = rest(function(path, args) {
	      if (typeof path == 'function') {
	        return new LazyWrapper(this);
	      }
	      return this.map(function(value) {
	        return baseInvoke(value, path, args);
	      });
	    });

	    LazyWrapper.prototype.reject = function(predicate) {
	      predicate = getIteratee(predicate, 3);
	      return this.filter(function(value) {
	        return !predicate(value);
	      });
	    };

	    LazyWrapper.prototype.slice = function(start, end) {
	      start = toInteger(start);

	      var result = this;
	      if (result.__filtered__ && (start > 0 || end < 0)) {
	        return new LazyWrapper(result);
	      }
	      if (start < 0) {
	        result = result.takeRight(-start);
	      } else if (start) {
	        result = result.drop(start);
	      }
	      if (end !== undefined) {
	        end = toInteger(end);
	        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
	      }
	      return result;
	    };

	    LazyWrapper.prototype.takeRightWhile = function(predicate) {
	      return this.reverse().takeWhile(predicate).reverse();
	    };

	    LazyWrapper.prototype.toArray = function() {
	      return this.take(MAX_ARRAY_LENGTH);
	    };

	    // Add `LazyWrapper` methods to `lodash.prototype`.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
	          isTaker = /^(?:head|last)$/.test(methodName),
	          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
	          retUnwrapped = isTaker || /^find/.test(methodName);

	      if (!lodashFunc) {
	        return;
	      }
	      lodash.prototype[methodName] = function() {
	        var value = this.__wrapped__,
	            args = isTaker ? [1] : arguments,
	            isLazy = value instanceof LazyWrapper,
	            iteratee = args[0],
	            useLazy = isLazy || isArray(value);

	        var interceptor = function(value) {
	          var result = lodashFunc.apply(lodash, arrayPush([value], args));
	          return (isTaker && chainAll) ? result[0] : result;
	        };

	        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
	          // Avoid lazy use if the iteratee has a "length" value other than `1`.
	          isLazy = useLazy = false;
	        }
	        var chainAll = this.__chain__,
	            isHybrid = !!this.__actions__.length,
	            isUnwrapped = retUnwrapped && !chainAll,
	            onlyLazy = isLazy && !isHybrid;

	        if (!retUnwrapped && useLazy) {
	          value = onlyLazy ? value : new LazyWrapper(this);
	          var result = func.apply(value, args);
	          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
	          return new LodashWrapper(result, chainAll);
	        }
	        if (isUnwrapped && onlyLazy) {
	          return func.apply(this, args);
	        }
	        result = this.thru(interceptor);
	        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
	      };
	    });

	    // Add `Array` methods to `lodash.prototype`.
	    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
	      var func = arrayProto[methodName],
	          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
	          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

	      lodash.prototype[methodName] = function() {
	        var args = arguments;
	        if (retUnwrapped && !this.__chain__) {
	          var value = this.value();
	          return func.apply(isArray(value) ? value : [], args);
	        }
	        return this[chainName](function(value) {
	          return func.apply(isArray(value) ? value : [], args);
	        });
	      };
	    });

	    // Map minified method names to their real names.
	    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
	      var lodashFunc = lodash[methodName];
	      if (lodashFunc) {
	        var key = (lodashFunc.name + ''),
	            names = realNames[key] || (realNames[key] = []);

	        names.push({ 'name': methodName, 'func': lodashFunc });
	      }
	    });

	    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{
	      'name': 'wrapper',
	      'func': undefined
	    }];

	    // Add methods to `LazyWrapper`.
	    LazyWrapper.prototype.clone = lazyClone;
	    LazyWrapper.prototype.reverse = lazyReverse;
	    LazyWrapper.prototype.value = lazyValue;

	    // Add chain sequence methods to the `lodash` wrapper.
	    lodash.prototype.at = wrapperAt;
	    lodash.prototype.chain = wrapperChain;
	    lodash.prototype.commit = wrapperCommit;
	    lodash.prototype.next = wrapperNext;
	    lodash.prototype.plant = wrapperPlant;
	    lodash.prototype.reverse = wrapperReverse;
	    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

	    if (iteratorSymbol) {
	      lodash.prototype[iteratorSymbol] = wrapperToIterator;
	    }
	    return lodash;
	  }

	  /*--------------------------------------------------------------------------*/

	  // Export lodash.
	  var _ = runInContext();

	  // Expose lodash on the free variable `window` or `self` when available. This
	  // prevents errors in cases where lodash is loaded by a script tag in the presence
	  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.
	  (freeWindow || freeSelf || {})._ = _;

	  // Some AMD build optimizers like r.js check for condition patterns like the following:
	  if (true) {
	    // Define as an anonymous module so, through path mapping, it can be
	    // referenced as the "underscore" module.
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
	      return _;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  }
	  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
	  else if (freeExports && freeModule) {
	    // Export for Node.js.
	    if (moduleExports) {
	      (freeModule.exports = _)._ = _;
	    }
	    // Export for CommonJS support.
	    freeExports._ = _;
	  }
	  else {
	    // Export to the global object.
	    root._ = _;
	  }
	}.call(this));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(272)(module), (function() { return this; }())))

/***/ },
/* 11 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	window.Module = window.Module || {};
	window.Module.onRuntimeInitialized = _lodash2['default'].noop;

	__webpack_require__(265);

	exports['default'] = window.Module;
	module.exports = exports['default'];

/***/ },
/* 13 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(36)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(11)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(1)
	  , core    = __webpack_require__(26)
	  , fails   = __webpack_require__(11);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	// add fake Function#toString
	// for correct work wrapped methods / constructors with methods like LoDash isNative
	var global    = __webpack_require__(9)
	  , hide      = __webpack_require__(22)
	  , SRC       = __webpack_require__(31)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);

	__webpack_require__(26).inspectSource = function(it){
	  return $toString.call(it);
	};

	(module.exports = function(O, key, val, safe){
	  if(typeof val == 'function'){
	    val.hasOwnProperty(SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	    val.hasOwnProperty('name') || hide(val, 'name', key);
	  }
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe)delete O[key];
	    hide(O, key, val);
	  }
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(42)
	  , defined = __webpack_require__(21);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(133)
	var ieee754 = __webpack_require__(96)
	var isArray = __webpack_require__(97)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.foo = function () { return 42 }
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; i++) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  that.write(string, encoding)
	  return that
	}

	function fromArrayLike (that, array) {
	  var length = checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'binary':
	    case 'base64':
	    case 'raw':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; i++) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; i++) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'binary':
	      // Deprecated
	      case 'raw':
	      case 'raws':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'binary':
	        return binarySlice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	function arrayIndexOf (arr, val, byteOffset, encoding) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var foundIndex = -1
	  for (var i = 0; byteOffset + i < arrLength; i++) {
	    if (read(arr, byteOffset + i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	      if (foundIndex === -1) foundIndex = i
	      if (i - foundIndex + 1 === valLength) return (byteOffset + foundIndex) * indexSize
	    } else {
	      if (foundIndex !== -1) i -= i - foundIndex
	      foundIndex = -1
	    }
	  }
	  return -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset >>= 0

	  if (this.length === 0) return -1
	  if (byteOffset >= this.length) return -1

	  // Negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  if (Buffer.isBuffer(val)) {
	    // special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(this, val, byteOffset, encoding)
	  }
	  if (typeof val === 'number') {
	    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
	      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
	    }
	    return arrayIndexOf(this, [ val ], byteOffset, encoding)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; i++) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function binaryWrite (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'binary':
	        return binaryWrite(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function binarySlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; i++) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; i++) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; i--) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; i++) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; i++) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; i++) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; i++) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; i++) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer, (function() { return this; }())))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(29);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 21 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var $          = __webpack_require__(2)
	  , createDesc = __webpack_require__(28);
	module.exports = __webpack_require__(15) ? function(object, key, value){
	  return $.setDesc(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	__webpack_require__(259);

	var _utilsBlobScript = __webpack_require__(125);

	var _utilsBlobScript2 = babelHelpers.interopRequireDefault(_utilsBlobScript);

	var _rawLibVirgilEmscripten = __webpack_require__(99);

	var _rawLibVirgilEmscripten2 = babelHelpers.interopRequireDefault(_rawLibVirgilEmscripten);

	var _rawUtilsWorkerCryptoContext = __webpack_require__(261);

	var _rawUtilsWorkerCryptoContext2 = babelHelpers.interopRequireDefault(_rawUtilsWorkerCryptoContext);

	var _generateKeyPairWorker = __webpack_require__(119);

	var _generateKeyPairWorker2 = babelHelpers.interopRequireDefault(_generateKeyPairWorker);

	var _encryptWithKeyWorker = __webpack_require__(115);

	var _encryptWithKeyWorker2 = babelHelpers.interopRequireDefault(_encryptWithKeyWorker);

	var _encryptWithKeyMultiRecipientsWorker = __webpack_require__(114);

	var _encryptWithKeyMultiRecipientsWorker2 = babelHelpers.interopRequireDefault(_encryptWithKeyMultiRecipientsWorker);

	var _encryptWithPasswordWorker = __webpack_require__(117);

	var _encryptWithPasswordWorker2 = babelHelpers.interopRequireDefault(_encryptWithPasswordWorker);

	var _decryptWithKeyWorker = __webpack_require__(107);

	var _decryptWithKeyWorker2 = babelHelpers.interopRequireDefault(_decryptWithKeyWorker);

	var _decryptWithPasswordWorker = __webpack_require__(109);

	var _decryptWithPasswordWorker2 = babelHelpers.interopRequireDefault(_decryptWithPasswordWorker);

	var _signWorker = __webpack_require__(124);

	var _signWorker2 = babelHelpers.interopRequireDefault(_signWorker);

	var _verifyWorker = __webpack_require__(127);

	var _verifyWorker2 = babelHelpers.interopRequireDefault(_verifyWorker);

	var api = {
		generateKeyPair: _generateKeyPairWorker2['default'],
		encryptWithKey: _encryptWithKeyWorker2['default'],
		encryptWithKeyMultiRecipients: _encryptWithKeyMultiRecipientsWorker2['default'],
		encryptWithPassword: _encryptWithPasswordWorker2['default'],
		decryptWithKey: _decryptWithKeyWorker2['default'],
		decryptWithPassword: _decryptWithPasswordWorker2['default'],
		sign: _signWorker2['default'],
		verify: _verifyWorker2['default']
	};

	var dependencies = [(0, _utilsBlobScript2['default'])(_rawLibVirgilEmscripten2['default']), (0, _utilsBlobScript2['default'])(_rawUtilsWorkerCryptoContext2['default'])];

	exports['default'] = window.operative(api, dependencies);
	module.exports = exports['default'];

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  * Bowser - a browser detector
	  * https://github.com/ded/bowser
	  * MIT License | (c) Dustin Diaz 2015
	  */

	!function (name, definition) {
	  if (typeof module != 'undefined' && module.exports) module.exports = definition()
	  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
	  else this[name] = definition()
	}('bowser', function () {
	  /**
	    * See useragents.js for examples of navigator.userAgent
	    */

	  var t = true

	  function detect(ua) {

	    function getFirstMatch(regex) {
	      var match = ua.match(regex);
	      return (match && match.length > 1 && match[1]) || '';
	    }

	    function getSecondMatch(regex) {
	      var match = ua.match(regex);
	      return (match && match.length > 1 && match[2]) || '';
	    }

	    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()
	      , likeAndroid = /like android/i.test(ua)
	      , android = !likeAndroid && /android/i.test(ua)
	      , chromeBook = /CrOS/.test(ua)
	      , edgeVersion = getFirstMatch(/edge\/(\d+(\.\d+)?)/i)
	      , versionIdentifier = getFirstMatch(/version\/(\d+(\.\d+)?)/i)
	      , tablet = /tablet/i.test(ua)
	      , mobile = !tablet && /[^-]mobi/i.test(ua)
	      , result

	    if (/opera|opr/i.test(ua)) {
	      result = {
	        name: 'Opera'
	      , opera: t
	      , version: versionIdentifier || getFirstMatch(/(?:opera|opr)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/yabrowser/i.test(ua)) {
	      result = {
	        name: 'Yandex Browser'
	      , yandexbrowser: t
	      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/windows phone/i.test(ua)) {
	      result = {
	        name: 'Windows Phone'
	      , windowsphone: t
	      }
	      if (edgeVersion) {
	        result.msedge = t
	        result.version = edgeVersion
	      }
	      else {
	        result.msie = t
	        result.version = getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/msie|trident/i.test(ua)) {
	      result = {
	        name: 'Internet Explorer'
	      , msie: t
	      , version: getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i)
	      }
	    } else if (chromeBook) {
	      result = {
	        name: 'Chrome'
	      , chromeBook: t
	      , chrome: t
	      , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
	      }
	    } else if (/chrome.+? edge/i.test(ua)) {
	      result = {
	        name: 'Microsoft Edge'
	      , msedge: t
	      , version: edgeVersion
	      }
	    }
	    else if (/chrome|crios|crmo/i.test(ua)) {
	      result = {
	        name: 'Chrome'
	      , chrome: t
	      , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (iosdevice) {
	      result = {
	        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'
	      }
	      // WTF: version is not part of user agent in web apps
	      if (versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    }
	    else if (/sailfish/i.test(ua)) {
	      result = {
	        name: 'Sailfish'
	      , sailfish: t
	      , version: getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/seamonkey\//i.test(ua)) {
	      result = {
	        name: 'SeaMonkey'
	      , seamonkey: t
	      , version: getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/firefox|iceweasel/i.test(ua)) {
	      result = {
	        name: 'Firefox'
	      , firefox: t
	      , version: getFirstMatch(/(?:firefox|iceweasel)[ \/](\d+(\.\d+)?)/i)
	      }
	      if (/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)) {
	        result.firefoxos = t
	      }
	    }
	    else if (/silk/i.test(ua)) {
	      result =  {
	        name: 'Amazon Silk'
	      , silk: t
	      , version : getFirstMatch(/silk\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (android) {
	      result = {
	        name: 'Android'
	      , version: versionIdentifier
	      }
	    }
	    else if (/phantom/i.test(ua)) {
	      result = {
	        name: 'PhantomJS'
	      , phantom: t
	      , version: getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/blackberry|\bbb\d+/i.test(ua) || /rim\stablet/i.test(ua)) {
	      result = {
	        name: 'BlackBerry'
	      , blackberry: t
	      , version: versionIdentifier || getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/(web|hpw)os/i.test(ua)) {
	      result = {
	        name: 'WebOS'
	      , webos: t
	      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
	      };
	      /touchpad\//i.test(ua) && (result.touchpad = t)
	    }
	    else if (/bada/i.test(ua)) {
	      result = {
	        name: 'Bada'
	      , bada: t
	      , version: getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i)
	      };
	    }
	    else if (/tizen/i.test(ua)) {
	      result = {
	        name: 'Tizen'
	      , tizen: t
	      , version: getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || versionIdentifier
	      };
	    }
	    else if (/safari/i.test(ua)) {
	      result = {
	        name: 'Safari'
	      , safari: t
	      , version: versionIdentifier
	      }
	    }
	    else {
	      result = {
	        name: getFirstMatch(/^(.*)\/(.*) /),
	        version: getSecondMatch(/^(.*)\/(.*) /)
	     };
	   }

	    // set webkit or gecko flag for browsers based on these engines
	    if (!result.msedge && /(apple)?webkit/i.test(ua)) {
	      result.name = result.name || "Webkit"
	      result.webkit = t
	      if (!result.version && versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    } else if (!result.opera && /gecko\//i.test(ua)) {
	      result.name = result.name || "Gecko"
	      result.gecko = t
	      result.version = result.version || getFirstMatch(/gecko\/(\d+(\.\d+)?)/i)
	    }

	    // set OS flags for platforms that have multiple browsers
	    if (!result.msedge && (android || result.silk)) {
	      result.android = t
	    } else if (iosdevice) {
	      result[iosdevice] = t
	      result.ios = t
	    }

	    // OS version extraction
	    var osVersion = '';
	    if (result.windowsphone) {
	      osVersion = getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i);
	    } else if (iosdevice) {
	      osVersion = getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
	      osVersion = osVersion.replace(/[_\s]/g, '.');
	    } else if (android) {
	      osVersion = getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i);
	    } else if (result.webos) {
	      osVersion = getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i);
	    } else if (result.blackberry) {
	      osVersion = getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i);
	    } else if (result.bada) {
	      osVersion = getFirstMatch(/bada\/(\d+(\.\d+)*)/i);
	    } else if (result.tizen) {
	      osVersion = getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i);
	    }
	    if (osVersion) {
	      result.osversion = osVersion;
	    }

	    // device type extraction
	    var osMajorVersion = osVersion.split('.')[0];
	    if (tablet || iosdevice == 'ipad' || (android && (osMajorVersion == 3 || (osMajorVersion == 4 && !mobile))) || result.silk) {
	      result.tablet = t
	    } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || result.blackberry || result.webos || result.bada) {
	      result.mobile = t
	    }

	    // Graded Browser Support
	    // http://developer.yahoo.com/yui/articles/gbs
	    if (result.msedge ||
	        (result.msie && result.version >= 10) ||
	        (result.yandexbrowser && result.version >= 15) ||
	        (result.chrome && result.version >= 20) ||
	        (result.firefox && result.version >= 20.0) ||
	        (result.safari && result.version >= 6) ||
	        (result.opera && result.version >= 10.0) ||
	        (result.ios && result.osversion && result.osversion.split(".")[0] >= 6) ||
	        (result.blackberry && result.version >= 10.1)
	        ) {
	      result.a = t;
	    }
	    else if ((result.msie && result.version < 10) ||
	        (result.chrome && result.version < 20) ||
	        (result.firefox && result.version < 20.0) ||
	        (result.safari && result.version < 6) ||
	        (result.opera && result.version < 10.0) ||
	        (result.ios && result.osversion && result.osversion.split(".")[0] < 6)
	        ) {
	      result.c = t
	    } else result.x = t

	    return result
	  }

	  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent : '')

	  bowser.test = function (browserList) {
	    for (var i = 0; i < browserList.length; ++i) {
	      var browserItem = browserList[i];
	      if (typeof browserItem=== 'string') {
	        if (browserItem in bowser) {
	          return true;
	        }
	      }
	    }
	    return false;
	  }

	  /*
	   * Set our detect method to the main bowser object so we can
	   * reuse it to test other user agents.
	   * This is needed to implement future tests.
	   */
	  bowser._detect = detect;

	  return bowser
	});


/***/ },
/* 25 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 26 */
/***/ function(module, exports) {

	var core = module.exports = {version: '1.2.6'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(21);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(8)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(22)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 31 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(20)
	  , call        = __webpack_require__(82)
	  , isArrayIter = __webpack_require__(79)
	  , anObject    = __webpack_require__(7)
	  , toLength    = __webpack_require__(14)
	  , getIterFn   = __webpack_require__(93);
	module.exports = function(iterable, entries, fn, that){
	  var iterFn = getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    call(iterator, f, step.value, entries);
	  }
	};

/***/ },
/* 33 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(2).setDesc
	  , has = __webpack_require__(13)
	  , TAG = __webpack_require__(8)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(36)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 36 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(20)
	  , IObject  = __webpack_require__(42)
	  , toObject = __webpack_require__(27)
	  , toLength = __webpack_require__(14)
	  , asc      = __webpack_require__(136);
	module.exports = function(TYPE){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? asc($this, length) : IS_FILTER ? asc($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(25)
	  , TAG = __webpack_require__(8)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(9)
	  , $export        = __webpack_require__(1)
	  , redefine       = __webpack_require__(17)
	  , redefineAll    = __webpack_require__(43)
	  , forOf          = __webpack_require__(32)
	  , strictNew      = __webpack_require__(45)
	  , isObject       = __webpack_require__(4)
	  , fails          = __webpack_require__(11)
	  , $iterDetect    = __webpack_require__(52)
	  , setToStringTag = __webpack_require__(34);

	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO;
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        strictNew(target, C, NAME);
	        var that = new Base;
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    IS_WEAK || instance.forEach(function(val, key){
	      BUGGY_ZERO = 1 / key === -Infinity;
	    });
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }

	  setToStringTag(C, NAME);

	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);

	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

	  return C;
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(22)
	  , redefine = __webpack_require__(17)
	  , fails    = __webpack_require__(11)
	  , defined  = __webpack_require__(21)
	  , wks      = __webpack_require__(8);

	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , original = ''[KEY];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, exec(defined, SYMBOL, original));
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return original.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return original.call(string, this); }
	    );
	  }
	};

/***/ },
/* 41 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(25);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(17);
	module.exports = function(target, src){
	  for(var key in src)redefine(target, key, src[key]);
	  return target;
	};

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(9)
	  , $           = __webpack_require__(2)
	  , DESCRIPTORS = __webpack_require__(15)
	  , SPECIES     = __webpack_require__(8)('species');

	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 45 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name){
	  if(!(it instanceof Constructor))throw TypeError(name + ": use the 'new' operator!");
	  return it;
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1)
	  , defined = __webpack_require__(21)
	  , fails   = __webpack_require__(11)
	  , spaces  = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	      '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF'
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');

	var exporter = function(KEY, exec){
	  var exp  = {};
	  exp[KEY] = exec(trim);
	  $export($export.P + $export.F * fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  }), 'String', exp);
	};

	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};

	module.exports = exporter;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.sign = sign;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	/**
	 * Sign the encrypted data using private key
	 *
	 * @param data {string|Buffer}
	 * @param privateKey {string}
	 * @param [privateKeyPassword = ''] {string}
	 * @returns {Buffer}
	 */

	var _buffer = __webpack_require__(19);

	Object.defineProperty(exports, 'Buffer', {
		enumerable: true,
		get: function get() {
			return _buffer.Buffer;
		}
	});

	function sign(data, privateKey) {
		var privateKeyPassword = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];

		if (!(_lodash2['default'].isString(data) || Buffer.isBuffer(data))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'data', type: 'String or Buffer' });
		}

		if (!_lodash2['default'].isString(privateKey)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'privateKey', type: 'String' });
		}

		var virgilSigner = new _utilsCryptoModule2['default'].VirgilSigner();
		var signBuffer = undefined;

		try {
			var dataByteArray = CryptoUtils.toByteArray(data);
			var privateKeyByteArray = CryptoUtils.toByteArray(privateKey);
			var privateKeyPasswordByteArray = CryptoUtils.toByteArray(privateKeyPassword);

			var _sign = virgilSigner.sign(dataByteArray, privateKeyByteArray, privateKeyPasswordByteArray);
			signBuffer = CryptoUtils.byteArrayToBuffer(_sign);

			// cleanup memory to avoid memory leaks
			dataByteArray['delete']();
			privateKeyByteArray['delete']();
			privateKeyPasswordByteArray['delete']();
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90005', { initialData: data, key: privateKey, password: privateKeyPassword });
		} finally {
			virgilSigner['delete']();
		}

		return signBuffer;
	}

	exports['default'] = sign;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Enum = __webpack_require__(128);

	module.exports = Enum({
		Default: 'Default',
		EC_BP256R1: 'EC_BP256R1',
		EC_BP384R1: 'EC_BP384R1',
		EC_BP512R1: 'EC_BP512R1',
		EC_M221: 'EC_M221',
		EC_M255: 'EC_M255',
		EC_M383: 'EC_M383',
		EC_M511: 'EC_M511',
		EC_SECP192K1: 'EC_SECP192K1',
		EC_SECP224K1: 'EC_SECP224K1',
		EC_SECP256K1: 'EC_SECP256K1',
		EC_SECP256R1: 'EC_SECP256R1',
		EC_SECP384R1: 'EC_SECP384R1',
		EC_SECP521R1: 'EC_SECP521R1',
		RSA_2048: 'RSA_2048',
		RSA_3072: 'RSA_3072',
		RSA_4096: 'RSA_4096',
		RSA_8192: 'RSA_8192'
	});

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(8)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(25);
	module.exports = Array.isArray || function(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(53)
	  , $export        = __webpack_require__(1)
	  , redefine       = __webpack_require__(17)
	  , hide           = __webpack_require__(22)
	  , has            = __webpack_require__(13)
	  , Iterators      = __webpack_require__(33)
	  , $iterCreate    = __webpack_require__(83)
	  , setToStringTag = __webpack_require__(34)
	  , getProto       = __webpack_require__(2).getProto
	  , ITERATOR       = __webpack_require__(8)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';

	var returnThis = function(){ return this; };

	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , methods, key;
	  // Fix native
	  if($native){
	    var IteratorPrototype = getProto($default.call(new Base));
	    // Set @@toStringTag to native iterators
	    setToStringTag(IteratorPrototype, TAG, true);
	    // FF fix
	    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    // fix Array#{values, @@iterator}.name in V8 / FF
	    if(DEF_VALUES && $native.name !== VALUES){
	      VALUES_BUG = true;
	      $default = function values(){ return $native.call(this); };
	    }
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES  ? $default : getMethod(VALUES),
	      keys:    IS_SET      ? $default : getMethod(KEYS),
	      entries: !DEF_VALUES ? $default : getMethod('entries')
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(8)('iterator')
	  , SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }

	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ safe = true; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 53 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 54 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	module.exports = Math.expm1 || function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	};

/***/ },
/* 55 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var getDesc  = __webpack_require__(2).getDesc
	  , isObject = __webpack_require__(4)
	  , anObject = __webpack_require__(7);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(20)(Function.call, getDesc(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(36)
	  , defined   = __webpack_require__(21);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(81)
	  , defined  = __webpack_require__(21);

	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};


	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};


	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};


	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;


	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};


	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}


	function stylizeNoColor(str, styleType) {
	  return str;
	}


	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}


	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}


	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(271);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}


	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}


	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};


	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(256);

	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(98)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decryptAsync = decryptAsync;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _decryptWithPasswordAsync = __webpack_require__(108);

	var _decryptWithKeyAsync = __webpack_require__(106);

	var _utilsCryptoErrors = __webpack_require__(5);

	/**
	 * Decrypt data async
	 *
	 * @param initialEncryptedData {Buffer}
	 * @param recipientId {string}
	 * @param [privateKey] {string}
	 * @param [privateKeyPassword = ''] {string}
	 * @returns {Promise}
	 */

	var _buffer = __webpack_require__(19);

	Object.defineProperty(exports, 'Buffer', {
		enumerable: true,
		get: function get() {
			return _buffer.Buffer;
		}
	});

	function decryptAsync(initialEncryptedData, recipientId, privateKey) {
		var privateKeyPassword = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];

		if (!Buffer.isBuffer(initialEncryptedData)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'initialEncryptedData', type: 'Buffer' });
		}

		if (!_lodash2['default'].isString(recipientId)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'recipientId', type: 'String' });
		}

		var decryptedDataPromise = undefined;

		if (arguments.length === 2) {
			var password = recipientId;

			decryptedDataPromise = (0, _decryptWithPasswordAsync.decryptWithPasswordAsync)(initialEncryptedData, password);
		} else {
			decryptedDataPromise = (0, _decryptWithKeyAsync.decryptWithKeyAsync)(initialEncryptedData, recipientId, privateKey, privateKeyPassword);
		}

		return decryptedDataPromise;
	}

	exports['default'] = decryptAsync;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decryptWithKey = decryptWithKey;

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	function decryptWithKey(initialEncryptedData, recipientId, privateKey) {
		var privateKeyPassword = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];

		var virgilCipher = new _utilsCryptoModule2['default'].VirgilCipher();
		var decryptedDataBuffer = undefined;

		try {
			var recipientIdByteArray = CryptoUtils.toByteArray(recipientId);
			var dataByteArray = CryptoUtils.toByteArray(initialEncryptedData);
			var privateKeyByteArray = CryptoUtils.toByteArray(privateKey);
			var privateKeyPasswordByteArray = CryptoUtils.toByteArray(privateKeyPassword);
			var decryptedDataByteArray = virgilCipher.decryptWithKey(dataByteArray, recipientIdByteArray, privateKeyByteArray, privateKeyPasswordByteArray);
			decryptedDataBuffer = CryptoUtils.byteArrayToBuffer(decryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			recipientIdByteArray['delete']();
			dataByteArray['delete']();
			privateKeyByteArray['delete']();
			decryptedDataByteArray['delete']();
			privateKeyPasswordByteArray['delete']();
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90002', { initialData: initialEncryptedData, key: privateKey });
		} finally {
			virgilCipher['delete']();
		}

		return decryptedDataBuffer;
	}

	exports['default'] = decryptWithKey;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decryptWithPassword = decryptWithPassword;

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	function decryptWithPassword(initialEncryptedData) {
		var password = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];

		var virgilCipher = new _utilsCryptoModule2['default'].VirgilCipher();
		var decryptedDataBuffer = undefined;

		try {
			var dataByteArray = CryptoUtils.toByteArray(initialEncryptedData);
			var passwordByteArray = CryptoUtils.toByteArray(password);
			var decryptedDataByteArray = virgilCipher.decryptWithPassword(dataByteArray, passwordByteArray);
			decryptedDataBuffer = CryptoUtils.byteArrayToBuffer(decryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray['delete']();
			passwordByteArray['delete']();
			decryptedDataByteArray['delete']();
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90004', { initialData: initialEncryptedData, password: password });
		} finally {
			virgilCipher['delete']();
		}

		return decryptedDataBuffer;
	}

	exports['default'] = decryptWithPassword;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decrypt = decrypt;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _decryptWithPassword = __webpack_require__(62);

	var _decryptWithKey = __webpack_require__(61);

	var _utilsCryptoErrors = __webpack_require__(5);

	/**
	 * Decrypt data
	 *
	 * @param initialEncryptedData {Buffer}
	 * @param recipientId {string}
	 * @param [privateKey] {string}
	 * @param [privateKeyPassword = ''] {string}
	 * @returns {Buffer}
	 */

	var _buffer = __webpack_require__(19);

	Object.defineProperty(exports, 'Buffer', {
		enumerable: true,
		get: function get() {
			return _buffer.Buffer;
		}
	});

	function decrypt(initialEncryptedData, recipientId, privateKey) {
		var privateKeyPassword = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];

		if (!Buffer.isBuffer(initialEncryptedData)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'initialEncryptedData', type: 'Buffer' });
		}

		if (!_lodash2['default'].isString(recipientId)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'recipientId', type: 'String' });
		}

		var decryptedData = undefined;

		if (arguments.length === 2) {
			var password = recipientId;

			decryptedData = (0, _decryptWithPassword.decryptWithPassword)(initialEncryptedData, password);
		} else {
			decryptedData = (0, _decryptWithKey.decryptWithKey)(initialEncryptedData, recipientId, privateKey, privateKeyPassword);
		}

		return decryptedData;
	}

	exports['default'] = decrypt;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptAsync = encryptAsync;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _encryptWithPasswordAsync = __webpack_require__(116);

	var _encryptWithKeyAsync = __webpack_require__(112);

	var _encryptWithKeyMultiRecipientsAsync = __webpack_require__(113);

	var _utilsCryptoErrors = __webpack_require__(5);

	/**
	 * Encrypt data async
	 *
	 * @param initialData {string|Buffer}
	 * @param recipientId {string|Array}
	 * @param [publicKey] {string}
	 *
	 * @returns {Promise}
	 */

	function encryptAsync(initialData, recipientId, publicKey) {
		if (!(_lodash2['default'].isString(initialData) || Buffer.isBuffer(initialData))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'initialData', type: 'String or Buffer' });
		}

		if (!(_lodash2['default'].isString(recipientId) || _lodash2['default'].isArray(recipientId))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'recipientId', type: 'String or Array' });
		}

		var encryptedDataPromise = undefined;

		if (_lodash2['default'].isArray(recipientId)) {
			var recipients = recipientId;

			encryptedDataPromise = (0, _encryptWithKeyMultiRecipientsAsync.encryptWithKeyMultiRecipientsAsync)(initialData, recipients);
		} else if (_lodash2['default'].isString(recipientId) && _lodash2['default'].isString(publicKey)) {
			encryptedDataPromise = (0, _encryptWithKeyAsync.encryptWithKeyAsync)(initialData, recipientId, publicKey);
		} else {
			var password = recipientId;
			var isEmbeddedContentInfo = publicKey;

			encryptedDataPromise = (0, _encryptWithPasswordAsync.encryptWithPasswordAsync)(initialData, password, isEmbeddedContentInfo);
		}

		return encryptedDataPromise;
	}

	exports['default'] = encryptAsync;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptWithKeyMultiRecipients = encryptWithKeyMultiRecipients;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	function encryptWithKeyMultiRecipients(initialData, recipients) {
		var virgilCipher = new _utilsCryptoModule2['default'].VirgilCipher();
		var encryptedDataBuffer = undefined;
		var recipientIdsByteArrays = [];

		try {
			var dataByteArray = CryptoUtils.toByteArray(initialData);

			_lodash2['default'].each(recipients, function (recipient) {
				var recipientIdByteArray = CryptoUtils.toByteArray(recipient.recipientId);
				var publicKeyByteArray = CryptoUtils.toByteArray(recipient.publicKey);

				virgilCipher.addKeyRecipient(recipientIdByteArray, publicKeyByteArray);

				recipientIdsByteArrays.push(recipientIdByteArray);
			});

			var encryptedDataByteArray = virgilCipher.encrypt(dataByteArray, true);
			encryptedDataBuffer = CryptoUtils.byteArrayToBuffer(encryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray['delete']();
			encryptedDataByteArray['delete']();
			_lodash2['default'].each(recipientIdsByteArrays, function (recipientIdByteArray) {
				return recipientIdByteArray['delete']();
			});
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90008', { initialData: initialData, recipients: recipients });
		} finally {
			virgilCipher['delete']();
		}

		return encryptedDataBuffer;
	}

	exports['default'] = encryptWithKeyMultiRecipients;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptWithKey = encryptWithKey;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	function encryptWithKey(initialData, recipientId, publicKey) {
		var virgilCipher = new _utilsCryptoModule2['default'].VirgilCipher();
		var encryptedDataBuffer = undefined;

		try {
			var recipientIdByteArray = CryptoUtils.toByteArray(recipientId);
			var dataByteArray = CryptoUtils.toByteArray(initialData);
			var publicKeyByteArray = CryptoUtils.toByteArray(publicKey);

			virgilCipher.addKeyRecipient(recipientIdByteArray, publicKeyByteArray);
			var encryptedDataByteArray = virgilCipher.encrypt(dataByteArray, true);
			encryptedDataBuffer = CryptoUtils.byteArrayToBuffer(encryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			recipientIdByteArray['delete']();
			dataByteArray['delete']();
			encryptedDataByteArray['delete']();
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90001', { initialData: initialData, key: publicKey });
		} finally {
			virgilCipher['delete']();
		}

		return encryptedDataBuffer;
	}

	exports['default'] = encryptWithKey;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptWithPassword = encryptWithPassword;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	function encryptWithPassword(initialData) {
		var password = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];
		var isEmbeddedContentInfo = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

		var virgilCipher = new _utilsCryptoModule2['default'].VirgilCipher();
		var encryptedDataBuffer = undefined;

		try {
			var dataByteArray = CryptoUtils.toByteArray(initialData);
			var passwordByteArray = undefined;

			if (password) {
				passwordByteArray = CryptoUtils.toByteArray(password);
				virgilCipher.addPasswordRecipient(passwordByteArray);
			}

			var encryptedDataByteArray = virgilCipher.encrypt(dataByteArray, isEmbeddedContentInfo);
			encryptedDataBuffer = CryptoUtils.byteArrayToBuffer(encryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray['delete']();
			if (passwordByteArray) {
				passwordByteArray['delete']();
			}
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90003', { initialData: initialData, password: password });
		} finally {
			virgilCipher['delete']();
		}

		return encryptedDataBuffer;
	}

	exports['default'] = encryptWithPassword;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encrypt = encrypt;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _encryptWithPassword = __webpack_require__(67);

	var _encryptWithKey = __webpack_require__(66);

	var _encryptWithKeyMultiRecipients = __webpack_require__(65);

	var _utilsCryptoErrors = __webpack_require__(5);

	/**
	 * Encrypt data
	 *
	 * @param initialData {string|Buffer}
	 * @param recipientId {string|Array} - [{ recipientId: <string>, publicKey: <string> }]
	 * @param [publicKey] {string}
	 *
	 * @returns {Buffer}
	 */

	var _buffer = __webpack_require__(19);

	Object.defineProperty(exports, 'Buffer', {
		enumerable: true,
		get: function get() {
			return _buffer.Buffer;
		}
	});

	function encrypt(initialData, recipientId, publicKey) {
		if (!(_lodash2['default'].isString(initialData) || Buffer.isBuffer(initialData))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'initialData', type: 'String or Buffer' });
		}

		if (!(_lodash2['default'].isString(recipientId) || _lodash2['default'].isArray(recipientId))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'recipientId', type: 'String or Array' });
		}

		var encryptedData = undefined;

		if (_lodash2['default'].isArray(recipientId)) {
			var recipients = recipientId;

			encryptedData = (0, _encryptWithKeyMultiRecipients.encryptWithKeyMultiRecipients)(initialData, recipients);
		} else if (_lodash2['default'].isString(recipientId) && _lodash2['default'].isString(publicKey)) {
			encryptedData = (0, _encryptWithKey.encryptWithKey)(initialData, recipientId, publicKey);
		} else {
			var password = recipientId;
			var isEmbeddedContentInfo = publicKey;

			encryptedData = (0, _encryptWithPassword.encryptWithPassword)(initialData, password, isEmbeddedContentInfo);
		}

		return encryptedData;
	}

	exports['default'] = encrypt;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.generateKeyPair = generateKeyPair;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _libKeysTypesEnum = __webpack_require__(48);

	var _libKeysTypesEnum2 = babelHelpers.interopRequireDefault(_libKeysTypesEnum);

	var _utilsCryptoErrors = __webpack_require__(5);

	/**
	 * Generate the key pair - public and private keys
	 *
	 * @param [password = ''] {string}
	 * @param [keysType = 'Default'] {string}
	 * @returns {{publicKey: *, privateKey: *}}
	 */

	function generateKeyPair(password, keysType) {
		switch (arguments.length) {
			case 1:
				if (_libKeysTypesEnum2['default'][password]) {
					keysType = _libKeysTypesEnum2['default'][password];
					password = '';
				} else {
					keysType = _libKeysTypesEnum2['default'].Default;
				}
				break;

			case 2:
				keysType = _libKeysTypesEnum2['default'][keysType];
				break;

			case 0:
			default:
				password = '';
				keysType = _libKeysTypesEnum2['default'].Default;
				break;
		}

		if (!_lodash2['default'].isString(password)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'password', type: 'String' });
		}

		if (_lodash2['default'].isUndefined(keysType)) {
			(0, _utilsCryptoErrors.throwValidationError)('00002', { arg: 'keysType', type: ' second argument and must be equal to one of ' + _lodash2['default'].values(_libKeysTypesEnum2['default']).join(', ') + ' - use the KeysTypesEnum for it.' });
		}

		var virgilKeys = undefined;
		var publicKey = undefined;
		var privateKey = undefined;

		try {
			var passwordByteArray = CryptoUtils.toByteArray(password);
			virgilKeys = _utilsCryptoModule2['default'].VirgilKeyPair.generate(_utilsCryptoModule2['default'].VirgilKeyPair.Type[keysType], passwordByteArray);

			publicKey = virgilKeys.publicKey().toUTF8();
			privateKey = virgilKeys.privateKey().toUTF8();

			// cleanup memory to avoid memory leaks
			passwordByteArray['delete']();
			virgilKeys['delete']();
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90007', { password: password });
		}

		return { publicKey: publicKey, privateKey: privateKey };
	}

	exports['default'] = generateKeyPair;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.verify = verify;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	/**
	 * Verify signed data using public key
	 *
	 * @param data {string|Buffer}
	 * @param publicKey {string}
	 * @param sign {string|Buffer}
	 * @returns {boolean}
	 */

	var _buffer = __webpack_require__(19);

	Object.defineProperty(exports, 'Buffer', {
		enumerable: true,
		get: function get() {
			return _buffer.Buffer;
		}
	});

	function verify(data, publicKey, sign) {
		if (!(_lodash2['default'].isString(data) || Buffer.isBuffer(data))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'data', type: 'String or Buffer' });
		}

		if (!_lodash2['default'].isString(publicKey)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'publicKey', type: 'String' });
		}

		if (!(_lodash2['default'].isString(sign) || Buffer.isBuffer(sign))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'sign', type: 'base64 String or Buffer' });
		}

		var virgilSigner = new _utilsCryptoModule2['default'].VirgilSigner();
		var isVerified = undefined;

		try {
			var dataByteArray = CryptoUtils.toByteArray(data);
			var publicKeyByteArray = CryptoUtils.toByteArray(publicKey);
			var signByteArray = Buffer.isBuffer(sign) ? CryptoUtils.toByteArray(sign) : CryptoUtils.toByteArray(new Buffer(sign, 'base64'));

			isVerified = virgilSigner.verify(dataByteArray, signByteArray, publicKeyByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray['delete']();
			publicKeyByteArray['delete']();
			signByteArray['delete']();
		} catch (e) {
			(0, _utilsCryptoErrors.throwVirgilError)('90006', { initialData: data, key: publicKey, sign: sign });
		} finally {
			virgilSigner['delete']();
		}

		return isVerified;
	}

	exports['default'] = verify;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(18)
	  , toLength  = __webpack_require__(14)
	  , toIndex   = __webpack_require__(35);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $            = __webpack_require__(2)
	  , hide         = __webpack_require__(22)
	  , redefineAll  = __webpack_require__(43)
	  , ctx          = __webpack_require__(20)
	  , strictNew    = __webpack_require__(45)
	  , defined      = __webpack_require__(21)
	  , forOf        = __webpack_require__(32)
	  , $iterDefine  = __webpack_require__(51)
	  , step         = __webpack_require__(84)
	  , ID           = __webpack_require__(31)('id')
	  , $has         = __webpack_require__(13)
	  , isObject     = __webpack_require__(4)
	  , setSpecies   = __webpack_require__(44)
	  , DESCRIPTORS  = __webpack_require__(15)
	  , isExtensible = Object.isExtensible || isObject
	  , SIZE         = DESCRIPTORS ? '_s' : 'size'
	  , id           = 0;

	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!$has(it, ID)){
	    // can't set id to frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add id
	    if(!create)return 'E';
	    // add missing object id
	    hide(it, ID, ++id);
	  // return object id with prefix
	  } return 'O' + it[ID];
	};

	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      strictNew(that, C, NAME);
	      that._i = $.create(null); // index
	      that._f = undefined;      // first entry
	      that._l = undefined;      // last entry
	      that[SIZE] = 0;           // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)$.setDesc(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var forOf   = __webpack_require__(32)
	  , classof = __webpack_require__(38);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    var arr = [];
	    forOf(this, false, arr.push, arr);
	    return arr;
	  };
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide              = __webpack_require__(22)
	  , redefineAll       = __webpack_require__(43)
	  , anObject          = __webpack_require__(7)
	  , isObject          = __webpack_require__(4)
	  , strictNew         = __webpack_require__(45)
	  , forOf             = __webpack_require__(32)
	  , createArrayMethod = __webpack_require__(37)
	  , $has              = __webpack_require__(13)
	  , WEAK              = __webpack_require__(31)('weak')
	  , isExtensible      = Object.isExtensible || isObject
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;

	// fallback for frozen keys
	var frozenStore = function(that){
	  return that._l || (that._l = new FrozenStore);
	};
	var FrozenStore = function(){
	  this.a = [];
	};
	var findFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	FrozenStore.prototype = {
	  get: function(key){
	    var entry = findFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      strictNew(that, C, NAME);
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        if(!isExtensible(key))return frozenStore(this)['delete'](key);
	        return $has(key, WEAK) && $has(key[WEAK], this._i) && delete key[WEAK][this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        if(!isExtensible(key))return frozenStore(this).has(key);
	        return $has(key, WEAK) && $has(key[WEAK], this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    if(!isExtensible(anObject(key))){
	      frozenStore(that).set(key, value);
	    } else {
	      $has(key, WEAK) || hide(key, WEAK, {});
	      key[WEAK][that._i] = value;
	    } return that;
	  },
	  frozenStore: frozenStore,
	  WEAK: WEAK
	};

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(4)
	  , document = __webpack_require__(9).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(7);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(18)
	  , getNames  = __webpack_require__(2).getNames
	  , toString  = {}.toString;

	var windowNames = typeof window == 'object' && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return getNames(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	module.exports.get = function getOwnPropertyNames(it){
	  if(windowNames && toString.call(it) == '[object Window]')return getWindowNames(it);
	  return getNames(toIObject(it));
	};

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(9).document && document.documentElement;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(33)
	  , ITERATOR   = __webpack_require__(8)('iterator')
	  , ArrayProto = Array.prototype;

	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(4)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(4)
	  , cof      = __webpack_require__(25)
	  , MATCH    = __webpack_require__(8)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(7);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $              = __webpack_require__(2)
	  , descriptor     = __webpack_require__(28)
	  , setToStringTag = __webpack_require__(34)
	  , IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(22)(IteratorPrototype, __webpack_require__(8)('iterator'), function(){ return this; });

	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 84 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 85 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var $         = __webpack_require__(2)
	  , toIObject = __webpack_require__(18)
	  , isEnum    = $.isEnum;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = $.getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var $        = __webpack_require__(2)
	  , anObject = __webpack_require__(7)
	  , Reflect  = __webpack_require__(9).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = $.getNames(anObject(it))
	    , getSymbols = $.getSymbols;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 88 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(9)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-string-pad-left-right
	var toLength = __webpack_require__(14)
	  , repeat   = __webpack_require__(91)
	  , defined  = __webpack_require__(21);

	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength)return S;
	  if(fillStr == '')fillStr = ' ';
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(36)
	  , defined   = __webpack_require__(21);

	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(20)
	  , invoke             = __webpack_require__(41)
	  , html               = __webpack_require__(78)
	  , cel                = __webpack_require__(75)
	  , global             = __webpack_require__(9)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listner = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(25)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listner;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listner, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(38)
	  , ITERATOR  = __webpack_require__(8)('iterator')
	  , Iterators = __webpack_require__(33);
	module.exports = __webpack_require__(26).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(30)
	  , step             = __webpack_require__(84)
	  , Iterators        = __webpack_require__(33)
	  , toIObject        = __webpack_require__(18);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(51)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(267)

	var md5 = toConstructor(__webpack_require__(252))
	var rmd160 = toConstructor(__webpack_require__(263))

	function toConstructor (fn) {
	  return function () {
	    var buffers = []
	    var m= {
	      update: function (data, enc) {
	        if(!Buffer.isBuffer(data)) data = new Buffer(data, enc)
	        buffers.push(data)
	        return this
	      },
	      digest: function (enc) {
	        var buf = Buffer.concat(buffers)
	        var r = fn(buf)
	        buffers = null
	        return enc ? r.toString(enc) : r
	      }
	    }
	    return m
	  }
	}

	module.exports = function (alg) {
	  if('md5' === alg) return new md5()
	  if('rmd160' === alg) return new rmd160()
	  return createHash(alg)
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 96 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 97 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 98 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 99 */
/***/ function(module, exports) {

	module.exports = "var Module;if(!Module)Module=(typeof Module!==\"undefined\"?Module:null)||{};var moduleOverrides={};for(var key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB;var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(ENVIRONMENT_IS_NODE){if(!Module[\"print\"])Module[\"print\"]=function print(x){process[\"stdout\"].write(x+\"\\n\")};if(!Module[\"printErr\"])Module[\"printErr\"]=function printErr(x){process[\"stderr\"].write(x+\"\\n\")};var nodeFS=require(\"fs\");var nodePath=require(\"path\");Module[\"read\"]=function read(filename,binary){filename=nodePath[\"normalize\"](filename);var ret=nodeFS[\"readFileSync\"](filename);if(!ret&&filename!=nodePath[\"resolve\"](filename)){filename=path.join(__dirname,\"..\",\"src\",filename);ret=nodeFS[\"readFileSync\"](filename)}if(ret&&!binary)ret=ret.toString();return ret};Module[\"readBinary\"]=function readBinary(filename){return Module[\"read\"](filename,true)};Module[\"load\"]=function load(f){globalEval(read(f))};if(!Module[\"thisProgram\"]){if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}else{Module[\"thisProgram\"]=\"unknown-program\"}}Module[\"arguments\"]=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(!Module[\"print\"])Module[\"print\"]=print;if(typeof printErr!=\"undefined\")Module[\"printErr\"]=printErr;if(typeof read!=\"undefined\"){Module[\"read\"]=read}else{Module[\"read\"]=function read(){throw\"no read() available (jsc?)\"}}Module[\"readBinary\"]=function readBinary(f){if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}var data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\"read\"]=function read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof console!==\"undefined\"){if(!Module[\"print\"])Module[\"print\"]=function print(x){console.log(x)};if(!Module[\"printErr\"])Module[\"printErr\"]=function printErr(x){console.log(x)}}else{var TRY_USE_DUMP=false;if(!Module[\"print\"])Module[\"print\"]=TRY_USE_DUMP&&typeof dump!==\"undefined\"?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module[\"load\"]=importScripts}if(typeof Module[\"setWindowTitle\"]===\"undefined\"){Module[\"setWindowTitle\"]=(function(title){document.title=title})}}else{throw\"Unknown runtime environment. Where are we?\"}function globalEval(x){eval.call(null,x)}if(!Module[\"load\"]&&Module[\"read\"]){Module[\"load\"]=function load(f){globalEval(Module[\"read\"](f))}}if(!Module[\"print\"]){Module[\"print\"]=(function(){})}if(!Module[\"printErr\"]){Module[\"printErr\"]=Module[\"print\"]}if(!Module[\"arguments\"]){Module[\"arguments\"]=[]}if(!Module[\"thisProgram\"]){Module[\"thisProgram\"]=\"./this.program\"}Module.print=Module[\"print\"];Module.printErr=Module[\"printErr\"];Module[\"preRun\"]=[];Module[\"postRun\"]=[];for(var key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}var Runtime={setTempRet0:(function(value){tempRet0=value}),getTempRet0:(function(){return tempRet0}),stackSave:(function(){return STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case\"i1\":case\"i8\":return 1;case\"i16\":return 2;case\"i32\":return 4;case\"i64\":return 8;case\"float\":return 4;case\"double\":return 8;default:{if(type[type.length-1]===\"*\"){return Runtime.QUANTUM_SIZE}else if(type[0]===\"i\"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}),getNativeFieldSize:(function(type){return Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type===\"double\"||type===\"i64\"){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type==\"i64\"||type==\"double\"))return 8;if(!type)return Math.min(size,8);return Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){if(!args.splice)args=Array.prototype.slice.call(args);args.splice(0,0,ptr);return Module[\"dynCall_\"+sig].apply(null,args)}else{return Module[\"dynCall_\"+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return 2*(1+i)}}throw\"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.\"}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){sigCache[func]=function dynCall_wrapper(){return Runtime.dynCall(sig,func,arguments)}}return sigCache[func]}),getCompilerSetting:(function(name){throw\"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work\"}),stackAlloc:(function(size){var ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return ret}),staticAlloc:(function(size){var ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return ret}),dynamicAlloc:(function(size){var ret=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+size|0;DYNAMICTOP=DYNAMICTOP+15&-16;if(DYNAMICTOP>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){DYNAMICTOP=ret;return 0}}return ret}),alignMemory:(function(size,quantum){var ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return ret}),makeBigInt:(function(low,high,unsigned){var ret=unsigned?+(low>>>0)+ +(high>>>0)*+4294967296:+(low>>>0)+ +(high|0)*+4294967296;return ret}),GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0};Module[\"Runtime\"]=Runtime;var __THREW__=0;var ABORT=false;var EXITSTATUS=0;var undef=0;var tempValue,tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempDouble,tempFloat;var tempI64,tempI64b;var tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var globalScope=this;function getCFunc(ident){var func=Module[\"_\"+ident];if(!func){try{func=eval(\"_\"+ident)}catch(e){}}assert(func,\"Cannot call unknown function \"+ident+\" (perhaps LLVM optimizations or closure removed it?)\");return func}var cwrap,ccall;((function(){var JSfuncs={\"stackSave\":(function(){Runtime.stackSave()}),\"stackRestore\":(function(){Runtime.stackRestore()}),\"arrayToC\":(function(arr){var ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),\"stringToC\":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=Runtime.stackAlloc((str.length<<2)+1);writeStringToMemory(str,ret)}return ret})};var toC={\"string\":JSfuncs[\"stringToC\"],\"array\":JSfuncs[\"arrayToC\"]};ccall=function ccallFunc(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType===\"string\")ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return ret};var sourceRegex=/^function\\s*\\(([^)]*)\\)\\s*{\\s*([^*]*?)[\\s;]*(?:return\\s*(.*?)[;\\s]*)?}$/;function parseJSFunc(jsfunc){var parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var JSsource={};for(var fun in JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}cwrap=function cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var cfunc=getCFunc(ident);var numericArgs=argTypes.every((function(type){return type===\"number\"}));var numericRet=returnType!==\"string\";if(numericRet&&numericArgs){return cfunc}var argNames=argTypes.map((function(x,i){return\"$\"+i}));var funcstr=\"(function(\"+argNames.join(\",\")+\") {\";var nargs=argTypes.length;if(!numericArgs){funcstr+=\"var stack = \"+JSsource[\"stackSave\"].body+\";\";for(var i=0;i<nargs;i++){var arg=argNames[i],type=argTypes[i];if(type===\"number\")continue;var convertCode=JSsource[type+\"ToC\"];funcstr+=\"var \"+convertCode.arguments+\" = \"+arg+\";\";funcstr+=convertCode.body+\";\";funcstr+=arg+\"=\"+convertCode.returnValue+\";\"}}var cfuncname=parseJSFunc((function(){return cfunc})).returnValue;funcstr+=\"var ret = \"+cfuncname+\"(\"+argNames.join(\",\")+\");\";if(!numericRet){var strgfy=parseJSFunc((function(){return Pointer_stringify})).returnValue;funcstr+=\"ret = \"+strgfy+\"(ret);\"}if(!numericArgs){funcstr+=JSsource[\"stackRestore\"].body.replace(\"()\",\"(stack)\")+\";\"}funcstr+=\"return ret})\";return eval(funcstr)}}))();Module[\"cwrap\"]=cwrap;Module[\"ccall\"]=ccall;function setValue(ptr,value,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;default:abort(\"invalid type for setValue: \"+type)}}Module[\"setValue\"]=setValue;function getValue(ptr,type,noSafe){type=type||\"i8\";if(type.charAt(type.length-1)===\"*\")type=\"i32\";switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];default:abort(\"invalid type for setValue: \"+type)}return null}Module[\"getValue\"]=getValue;var ALLOC_NORMAL=0;var ALLOC_STACK=1;var ALLOC_STATIC=2;var ALLOC_DYNAMIC=3;var ALLOC_NONE=4;Module[\"ALLOC_NORMAL\"]=ALLOC_NORMAL;Module[\"ALLOC_STACK\"]=ALLOC_STACK;Module[\"ALLOC_STATIC\"]=ALLOC_STATIC;Module[\"ALLOC_DYNAMIC\"]=ALLOC_DYNAMIC;Module[\"ALLOC_NONE\"]=ALLOC_NONE;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab===\"number\"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types===\"string\"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType===\"i8\"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];if(typeof curr===\"function\"){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type==\"i64\")type=\"i32\";setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}Module[\"allocate\"]=allocate;function getMemory(size){if(!staticSealed)return Runtime.staticAlloc(size);if(typeof _sbrk!==\"undefined\"&&!_sbrk.called||!runtimeInitialized)return Runtime.dynamicAlloc(size);return _malloc(size)}Module[\"getMemory\"]=getMemory;function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return Module[\"UTF8ToString\"](ptr)}Module[\"Pointer_stringify\"]=Pointer_stringify;function AsciiToString(ptr){var str=\"\";while(1){var ch=HEAP8[ptr++>>0];if(!ch)return str;str+=String.fromCharCode(ch)}}Module[\"AsciiToString\"]=AsciiToString;function stringToAscii(str,outPtr){return writeAsciiToMemory(str,outPtr,false)}Module[\"stringToAscii\"]=stringToAscii;function UTF8ArrayToString(u8Array,idx){var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}Module[\"UTF8ArrayToString\"]=UTF8ArrayToString;function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}Module[\"UTF8ToString\"]=UTF8ToString;function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}Module[\"stringToUTF8Array\"]=stringToUTF8Array;function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module[\"stringToUTF8\"]=stringToUTF8;function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}Module[\"lengthBytesUTF8\"]=lengthBytesUTF8;function UTF16ToString(ptr){var i=0;var str=\"\";while(1){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)return str;++i;str+=String.fromCharCode(codeUnit)}}Module[\"UTF16ToString\"]=UTF16ToString;function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}Module[\"stringToUTF16\"]=stringToUTF16;function lengthBytesUTF16(str){return str.length*2}Module[\"lengthBytesUTF16\"]=lengthBytesUTF16;function UTF32ToString(ptr){var i=0;var str=\"\";while(1){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)return str;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}}Module[\"UTF32ToString\"]=UTF32ToString;function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}Module[\"stringToUTF32\"]=stringToUTF32;function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}Module[\"lengthBytesUTF32\"]=lengthBytesUTF32;function demangle(func){var hasLibcxxabi=!!Module[\"___cxa_demangle\"];if(hasLibcxxabi){try{var buf=_malloc(func.length);writeStringToMemory(func.substr(1),buf);var status=_malloc(4);var ret=Module[\"___cxa_demangle\"](buf,0,0,status);if(getValue(status,\"i32\")===0&&ret){return Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}}var i=3;var basicTypes={\"v\":\"void\",\"b\":\"bool\",\"c\":\"char\",\"s\":\"short\",\"i\":\"int\",\"l\":\"long\",\"f\":\"float\",\"d\":\"double\",\"w\":\"wchar_t\",\"a\":\"signed char\",\"h\":\"unsigned char\",\"t\":\"unsigned short\",\"j\":\"unsigned int\",\"m\":\"unsigned long\",\"x\":\"long long\",\"y\":\"unsigned long long\",\"z\":\"...\"};var subs=[];var first=true;function dump(x){if(x)Module.print(x);Module.print(func);var pre=\"\";for(var a=0;a<i;a++)pre+=\" \";Module.print(pre+\"^\")}function parseNested(){i++;if(func[i]===\"K\")i++;var parts=[];while(func[i]!==\"E\"){if(func[i]===\"S\"){i++;var next=func.indexOf(\"_\",i);var num=func.substring(i,next)||0;parts.push(subs[num]||\"?\");i=next+1;continue}if(func[i]===\"C\"){parts.push(parts[parts.length-1]);i+=2;continue}var size=parseInt(func.substr(i));var pre=size.toString().length;if(!size||!pre){i--;break}var curr=func.substr(i+pre,size);parts.push(curr);subs.push(curr);i+=pre+size}i++;return parts}function parse(rawList,limit,allowVoid){limit=limit||Infinity;var ret=\"\",list=[];function flushList(){return\"(\"+list.join(\", \")+\")\"}var name;if(func[i]===\"N\"){name=parseNested().join(\"::\");limit--;if(limit===0)return rawList?[name]:name}else{if(func[i]===\"K\"||first&&func[i]===\"L\")i++;var size=parseInt(func.substr(i));if(size){var pre=size.toString().length;name=func.substr(i+pre,size);i+=pre+size}}first=false;if(func[i]===\"I\"){i++;var iList=parse(true);var iRet=parse(true,1,true);ret+=iRet[0]+\" \"+name+\"<\"+iList.join(\", \")+\">\"}else{ret=name}paramLoop:while(i<func.length&&limit-->0){var c=func[i++];if(c in basicTypes){list.push(basicTypes[c])}else{switch(c){case\"P\":list.push(parse(true,1,true)[0]+\"*\");break;case\"R\":list.push(parse(true,1,true)[0]+\"&\");break;case\"L\":{i++;var end=func.indexOf(\"E\",i);var size=end-i;list.push(func.substr(i,size));i+=size+2;break};case\"A\":{var size=parseInt(func.substr(i));i+=size.toString().length;if(func[i]!==\"_\")throw\"?\";i++;list.push(parse(true,1,true)[0]+\" [\"+size+\"]\");break};case\"E\":break paramLoop;default:ret+=\"?\"+c;break paramLoop}}}if(!allowVoid&&list.length===1&&list[0]===\"void\")list=[];if(rawList){if(ret){list.push(ret+\"?\")}return list}else{return ret+flushList()}}var parsed=func;try{if(func==\"Object._main\"||func==\"_main\"){return\"main()\"}if(typeof func===\"number\")func=Pointer_stringify(func);if(func[0]!==\"_\")return func;if(func[1]!==\"_\")return func;if(func[2]!==\"Z\")return func;switch(func[3]){case\"n\":return\"operator new()\";case\"d\":return\"operator delete()\"}parsed=parse()}catch(e){parsed+=\"?\"}if(parsed.indexOf(\"?\")>=0&&!hasLibcxxabi){Runtime.warnOnce(\"warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling\")}return parsed}function demangleAll(text){return text.replace(/__Z[\\w\\d_]+/g,(function(x){var y=demangle(x);return x===y?x:x+\" [\"+y+\"]\"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return\"(no stack trace available)\"}}return err.stack.toString()}function stackTrace(){return demangleAll(jsStackTrace())}Module[\"stackTrace\"]=stackTrace;var PAGE_SIZE=4096;function alignMemoryPage(x){if(x%4096>0){x+=4096-x%4096}return x}var HEAP;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;var STATIC_BASE=0,STATICTOP=0,staticSealed=false;var STACK_BASE=0,STACKTOP=0,STACK_MAX=0;var DYNAMIC_BASE=0,DYNAMICTOP=0;function enlargeMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.\")}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;var totalMemory=64*1024;while(totalMemory<TOTAL_MEMORY||totalMemory<2*TOTAL_STACK){if(totalMemory<16*1024*1024){totalMemory*=2}else{totalMemory+=16*1024*1024}}if(totalMemory!==TOTAL_MEMORY){Module.printErr(\"increasing TOTAL_MEMORY to \"+totalMemory+\" to be compliant with the asm.js spec (and given that TOTAL_STACK=\"+TOTAL_STACK+\")\");TOTAL_MEMORY=totalMemory}assert(typeof Int32Array!==\"undefined\"&&typeof Float64Array!==\"undefined\"&&!!(new Int32Array(1))[\"subarray\"]&&!!(new Int32Array(1))[\"set\"],\"JS engine does not provide full typed array support\");var buffer;buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(HEAPU8[0]===255&&HEAPU8[3]===0,\"Typed arrays 2 must be run on a little-endian system\");Module[\"HEAP\"]=HEAP;Module[\"buffer\"]=buffer;Module[\"HEAP8\"]=HEAP8;Module[\"HEAP16\"]=HEAP16;Module[\"HEAP32\"]=HEAP32;Module[\"HEAPU8\"]=HEAPU8;Module[\"HEAPU16\"]=HEAPU16;Module[\"HEAPU32\"]=HEAPU32;Module[\"HEAPF32\"]=HEAPF32;Module[\"HEAPF64\"]=HEAPF64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Runtime.dynCall(\"v\",func)}else{Runtime.dynCall(\"vi\",func,[callback.arg])}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module[\"addOnPreRun\"]=Module.addOnPreRun=addOnPreRun;function addOnInit(cb){__ATINIT__.unshift(cb)}Module[\"addOnInit\"]=Module.addOnInit=addOnInit;function addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module[\"addOnPreMain\"]=Module.addOnPreMain=addOnPreMain;function addOnExit(cb){__ATEXIT__.unshift(cb)}Module[\"addOnExit\"]=Module.addOnExit=addOnExit;function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module[\"addOnPostRun\"]=Module.addOnPostRun=addOnPostRun;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module[\"intArrayFromString\"]=intArrayFromString;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}Module[\"intArrayToString\"]=intArrayToString;function writeStringToMemory(string,buffer,dontAddNull){var array=intArrayFromString(string,dontAddNull);var i=0;while(i<array.length){var chr=array[i];HEAP8[buffer+i>>0]=chr;i=i+1}}Module[\"writeStringToMemory\"]=writeStringToMemory;function writeArrayToMemory(array,buffer){for(var i=0;i<array.length;i++){HEAP8[buffer++>>0]=array[i]}}Module[\"writeArrayToMemory\"]=writeArrayToMemory;function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module[\"writeAsciiToMemory\"]=writeAsciiToMemory;function unSign(value,bits,ignore){if(value>=0){return value}return bits<=32?2*Math.abs(1<<bits-1)+value:Math.pow(2,bits)+value}function reSign(value,bits,ignore){if(value<=0){return value}var half=bits<=32?Math.abs(1<<bits-1):Math.pow(2,bits-1);if(value>=half&&(bits<=32||value>half)){value=-2*half+value}return value}if(!Math[\"imul\"]||Math[\"imul\"](4294967295,5)!==-5)Math[\"imul\"]=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math[\"imul\"];if(!Math[\"clz32\"])Math[\"clz32\"]=(function(x){x=x>>>0;for(var i=0;i<32;i++){if(x&1<<31-i)return i}return 32});Math.clz32=Math[\"clz32\"];var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_min=Math.min;var Math_clz32=Math.clz32;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}Module[\"addRunDependency\"]=addRunDependency;function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"removeRunDependency\"]=removeRunDependency;Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var memoryInitializer=null;var ASM_CONSTS=[];STATIC_BASE=8;STATICTOP=STATIC_BASE+91760;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_wrapper_cxx()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});allocate([112,54,1,0,176,27,0,0,88,55,1,0,136,27,0,0,0,0,0,0,8,0,0,0,88,55,1,0,96,27,0,0,1,0,0,0,8,0,0,0,105,105,0,0,0,0,0,0,118,0,0,0,0,0,0,0,86,105,114,103,105,108,86,101,114,115,105,111,110,0,0,0,118,105,0,0,0,0,0,0,97,115,78,117,109,98,101,114,0,0,0,0,0,0,0,0,208,53,1,0,0,0,0,0,105,105,0,0,0,0,0,0,97,115,83,116,114,105,110,103,0,0,0,0,0,0,0,0,184,19,0,0,0,0,0,0,105,105,0,0,0,0,0,0,109,97,106,111,114,86,101,114,115,105,111,110,0,0,0,0,109,105,110,111,114,86,101,114,115,105,111,110,0,0,0,0,112,97,116,99,104,86,101,114,115,105,111,110,0,0,0,0,86,105,114,103,105,108,66,121,116,101,65,114,114,97,121,0,248,54,1,0,104,25,0,0,0,0,0,0,1,0,0,0,144,25,0,0,0,0,0,0,100,97,116,97,0,0,0,0,64,25,0,0,216,0,0,0,105,105,105,0,0,0,0,0,97,115,115,105,103,110,0,0,64,53,1,0,216,0,0,0,64,25,0,0,0,0,0,0,118,105,105,105,0,0,0,0,152,54,1,0,24,25,0,0,88,51,1,0,0,0,0,0,88,55,1,0,232,24,0,0,0,0,0,0,40,1,0,0,88,55,1,0,184,24,0,0,1,0,0,0,40,1,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,69,120,99,101,112,116,105,111,110,0,118,105,0,0,0,0,0,0,56,1,0,0,184,19,0,0,105,105,105,0,0,0,0,0,109,101,115,115,97,103,101,0,184,19,0,0,40,1,0,0,105,105,105,0,0,0,0,0,112,54,1,0,152,24,0,0,88,55,1,0,112,24,0,0,0,0,0,0,160,1,0,0,88,55,1,0,72,24,0,0,1,0,0,0,160,1,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,75,101,121,80,97,105,114,0,0,0,118,105,0,0,0,0,0,0,168,1,0,0,0,0,0,0,105,105,0,0,0,0,0,0,168,1,0,0,216,0,0,0,105,105,105,0,0,0,0,0,168,1,0,0,216,0,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,112,117,98,108,105,99,75,101,121,0,0,0,0,0,0,0,216,0,0,0,184,1,0,0,105,105,105,0,0,0,0,0,112,114,105,118,97,116,101,75,101,121,0,0,0,0,0,0,103,101,110,101,114,97,116,101,0,0,0,0,0,0,0,0,160,1,0,0,104,4,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,103,101,110,101,114,97,116,101,70,114,111,109,0,0,0,0,160,1,0,0,160,1,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,0,0,0,101,99,78,105,115,116,49,57,50,0,0,0,0,0,0,0,160,1,0,0,216,0,0,0,105,105,105,0,0,0,0,0,101,99,78,105,115,116,50,50,52,0,0,0,0,0,0,0,101,99,78,105,115,116,50,53,54,0,0,0,0,0,0,0,101,99,78,105,115,116,51,56,52,0,0,0,0,0,0,0,101,99,78,105,115,116,53,50,49,0,0,0,0,0,0,0,101,99,66,114,97,105,110,112,111,111,108,50,53,54,0,0,101,99,66,114,97,105,110,112,111,111,108,51,56,52,0,0,101,99,66,114,97,105,110,112,111,111,108,53,49,50,0,0,101,99,75,111,98,108,105,116,122,49,57,50,0,0,0,0,101,99,75,111,98,108,105,116,122,50,50,52,0,0,0,0,101,99,75,111,98,108,105,116,122,50,53,54,0,0,0,0,114,115,97,50,53,54,0,0,114,115,97,53,49,50,0,0,114,115,97,49,48,50,52,0,114,115,97,50,48,52,56,0,114,115,97,52,48,57,54,0,105,115,75,101,121,80,97,105,114,77,97,116,99,104,0,0,96,53,1,0,216,0,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,0,0,0,99,104,101,99,107,80,114,105,118,97,116,101,75,101,121,80,97,115,115,119,111,114,100,0,96,53,1,0,216,0,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,105,115,80,114,105,118,97,116,101,75,101,121,69,110,99,114,121,112,116,101,100,0,0,0,96,53,1,0,216,0,0,0,105,105,105,0,0,0,0,0,114,101,115,101,116,80,114,105,118,97,116,101,75,101,121,80,97,115,115,119,111,114,100,0,216,0,0,0,216,0,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,0,0,0,101,120,116,114,97,99,116,80,117,98,108,105,99,75,101,121,0,0,0,0,0,0,0,0,216,0,0,0,216,0,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,24,54,1,0,32,24,0,0,86,105,114,103,105,108,75,101,121,80,97,105,114,84,121,112,101,0,0,0,0,0,0,0,68,101,102,97,117,108,116,0,82,83,65,95,50,53,54,0,82,83,65,95,53,49,50,0,82,83,65,95,49,48,50,52,0,0,0,0,0,0,0,0,82,83,65,95,50,48,52,56,0,0,0,0,0,0,0,0,82,83,65,95,51,48,55,50,0,0,0,0,0,0,0,0,82,83,65,95,52,48,57,54,0,0,0,0,0,0,0,0,82,83,65,95,56,49,57,50,0,0,0,0,0,0,0,0,69,67,95,83,69,67,80,49,57,50,82,49,0,0,0,0,69,67,95,83,69,67,80,50,50,52,82,49,0,0,0,0,69,67,95,83,69,67,80,50,53,54,82,49,0,0,0,0,69,67,95,83,69,67,80,51,56,52,82,49,0,0,0,0,69,67,95,83,69,67,80,53,50,49,82,49,0,0,0,0,69,67,95,66,80,50,53,54,82,49,0,0,0,0,0,0,69,67,95,66,80,51,56,52,82,49,0,0,0,0,0,0,69,67,95,66,80,53,49,50,82,49,0,0,0,0,0,0,69,67,95,77,50,50,49,0,69,67,95,77,50,53,53,0,69,67,95,77,51,56,51,0,69,67,95,77,53,49,49,0,69,67,95,67,117,114,118,101,50,53,53,49,57,0,0,0,69,67,95,83,69,67,80,49,57,50,75,49,0,0,0,0,69,67,95,83,69,67,80,50,50,52,75,49,0,0,0,0,69,67,95,83,69,67,80,50,53,54,75,49,0,0,0,0,88,55,1,0,248,23,0,0,0,0,0,0,168,41,0,0,88,55,1,0,208,23,0,0,1,0,0,0,168,41,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,0,0,0,0,0,0,0,0,118,105,0,0,0,0,0,0,97,100,100,75,101,121,82,101,99,105,112,105,101,110,116,0,64,53,1,0,208,5,0,0,216,0,0,0,216,0,0,0,118,105,105,105,105,0,0,0,114,101,109,111,118,101,75,101,121,82,101,99,105,112,105,101,110,116,0,0,0,0,0,0,64,53,1,0,208,5,0,0,216,0,0,0,0,0,0,0,118,105,105,105,0,0,0,0,107,101,121,82,101,99,105,112,105,101,110,116,69,120,105,115,116,115,0,0,0,0,0,0,96,53,1,0,224,5,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,97,100,100,80,97,115,115,119,111,114,100,82,101,99,105,112,105,101,110,116,0,0,0,0,114,101,109,111,118,101,80,97,115,115,119,111,114,100,82,101,99,105,112,105,101,110,116,0,114,101,109,111,118,101,65,108,108,82,101,99,105,112,105,101,110,116,115,0,0,0,0,0,64,53,1,0,208,5,0,0,118,105,105,0,0,0,0,0,103,101,116,67,111,110,116,101,110,116,73,110,102,111,0,0,216,0,0,0,224,5,0,0,105,105,105,0,0,0,0,0,115,101,116,67,111,110,116,101,110,116,73,110,102,111,0,0,99,117,115,116,111,109,80,97,114,97,109,115,0,0,0,0,160,22,0,0,168,41,0,0,105,105,105,0,0,0,0,0,100,101,102,105,110,101,67,111,110,116,101,110,116,73,110,102,111,83,105,122,101,0,0,0,208,53,1,0,216,0,0,0,105,105,105,0,0,0,0,0,99,111,109,112,117,116,101,83,104,97,114,101,100,0,0,0,88,55,1,0,128,22,0,0,0,0,0,0,96,41,0,0,88,55,1,0,88,22,0,0,1,0,0,0,96,41,0,0,105,105,0,0,0,0,0,0,105,105,0,0,0,0,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,67,105,112,104,101,114,0,0,0,0,118,105,0,0,0,0,0,0,128,7,0,0,0,0,0,0,105,105,0,0,0,0,0,0,101,110,99,114,121,112,116,0,216,0,0,0,128,7,0,0,216,0,0,0,96,53,1,0,105,105,105,105,105,0,0,0,100,101,99,114,121,112,116,87,105,116,104,75,101,121,0,0,216,0,0,0,128,7,0,0,216,0,0,0,216,0,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,105,105,0,100,101,99,114,121,112,116,87,105,116,104,80,97,115,115,119,111,114,100,0,0,0,0,0,216,0,0,0,128,7,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,0,0,0,112,54,1,0,56,22,0,0,88,55,1,0,24,22,0,0,0,0,0,0,96,8,0,0,88,55,1,0,240,21,0,0,1,0,0,0,96,8,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,83,105,103,110,101,114,0,0,0,0,118,105,0,0,0,0,0,0,104,8,0,0,0,0,0,0,105,105,0,0,0,0,0,0,104,8,0,0,40,50,0,0,105,105,105,0,0,0,0,0,216,0,0,0,96,8,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,0,0,0,216,0,0,0,96,8,0,0,216,0,0,0,216,0,0,0,216,0,0,0,0,0,0,0,105,105,105,105,105,105,0,0,118,101,114,105,102,121,0,0,96,53,1,0,96,8,0,0,216,0,0,0,216,0,0,0,216,0,0,0,0,0,0,0,105,105,105,105,105,105,0,0,88,55,1,0,200,21,0,0,0,0,0,0,64,49,0,0,88,55,1,0,160,21,0,0,1,0,0,0,64,49,0,0,105,105,0,0,0,0,0,0,118,105,0,0,0,0,0,0,40,9,0,0,0,0,0,0,105,105,0,0,0,0,0,0,105,115,69,109,112,116,121,0,96,53,1,0,56,9,0,0,105,105,105,0,0,0,0,0,115,101,116,73,110,116,101,103,101,114,0,0,0,0,0,0,64,53,1,0,40,9,0,0,216,0,0,0,192,53,1,0,118,105,105,105,105,0,0,0,103,101,116,73,110,116,101,103,101,114,0,0,0,0,0,0,192,53,1,0,56,9,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,114,101,109,111,118,101,73,110,116,101,103,101,114,0,0,0,64,53,1,0,40,9,0,0,216,0,0,0,0,0,0,0,118,105,105,105,0,0,0,0,115,101,116,83,116,114,105,110,103,0,0,0,0,0,0,0,64,53,1,0,40,9,0,0,216,0,0,0,216,0,0,0,118,105,105,105,105,0,0,0,103,101,116,83,116,114,105,110,103,0,0,0,0,0,0,0,216,0,0,0,56,9,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,114,101,109,111,118,101,83,116,114,105,110,103,0,0,0,0,115,101,116,68,97,116,97,0,103,101,116,68,97,116,97,0,114,101,109,111,118,101,68,97,116,97,0,0,0,0,0,0,99,108,101,97,114,0,0,0,64,53,1,0,40,9,0,0,118,105,105,0,0,0,0,0,112,54,1,0,120,21,0,0,88,55,1,0,80,21,0,0,0,0,0,0,144,10,0,0,88,55,1,0,32,21,0,0,1,0,0,0,144,10,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,66,121,116,101,65,114,114,97,121,85,116,105,108,115,0,0,0,0,118,105,0,0,0,0,0,0,106,115,111,110,84,111,66,121,116,101,115,0,0,0,0,0,216,0,0,0,184,19,0,0,105,105,105,0,0,0,0,0,98,121,116,101,115,84,111,83,116,114,105,110,103,0,0,0,184,19,0,0,216,0,0,0,105,105,105,0,0,0,0,0,115,116,114,105,110,103,84,111,66,121,116,101,115,0,0,0,104,101,120,84,111,66,121,116,101,115,0,0,0,0,0,0,98,121,116,101,115,84,111,72,101,120,0,0,0,0,0,0,184,19,0,0,216,0,0,0,96,53,1,0,0,0,0,0,105,105,105,105,0,0,0,0,122,101,114,111,105,122,101,0,64,53,1,0,216,0,0,0,118,105,105,0,0,0,0,0,24,54,1,0,240,20,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,80,97,99,107,97,103,101,83,105,122,101,0,0,0,0,0,77,105,110,0,0,0,0,0,83,104,111,114,116,95,83,77,83,0,0,0,0,0,0,0,76,111,110,103,95,83,77,83,0,0,0,0,0,0,0,0,88,55,1,0,200,20,0,0,0,0,0,0,184,55,0,0,88,55,1,0,160,20,0,0,1,0,0,0,184,55,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,0,0,0,0,0,0,0,0,118,105,0,0,0,0,0,0,208,11,0,0,0,0,0,0,105,105,0,0,0,0,0,0,208,11,0,0,208,53,1,0,105,105,105,0,0,0,0,0,114,101,115,101,116,0,0,0,64,53,1,0,208,11,0,0,118,105,105,0,0,0,0,0,64,53,1,0,208,11,0,0,216,0,0,0,216,0,0,0,118,105,105,105,105,0,0,0,101,110,99,114,121,112,116,65,110,100,83,105,103,110,0,0,64,53,1,0,208,11,0,0,216,0,0,0,216,0,0,0,216,0,0,0,216,0,0,0,118,105,105,105,105,105,105,0,103,101,116,80,97,99,107,97,103,101,67,111,117,110,116,0,208,53,1,0,224,11,0,0,105,105,105,0,0,0,0,0,103,101,116,80,97,99,107,97,103,101,0,0,0,0,0,0,216,0,0,0,224,11,0,0,208,53,1,0,0,0,0,0,105,105,105,105,0,0,0,0,97,100,100,80,97,99,107,97,103,101,0,0,0,0,0,0,64,53,1,0,208,11,0,0,216,0,0,0,0,0,0,0,118,105,105,105,0,0,0,0,105,115,80,97,99,107,97,103,101,115,65,99,99,117,109,117,108,97,116,101,100,0,0,0,96,53,1,0,224,11,0,0,105,105,105,0,0,0,0,0,100,101,99,114,121,112,116,0,216,0,0,0,208,11,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,0,0,0,118,101,114,105,102,121,65,110,100,68,101,99,114,121,112,116,0,0,0,0,0,0,0,0,216,0,0,0,208,11,0,0,216,0,0,0,216,0,0,0,216,0,0,0,0,0,0,0,105,105,105,105,105,105,0,0,88,55,1,0,112,20,0,0,0,0,0,0,40,50,0,0,88,55,1,0,64,20,0,0,1,0,0,0,40,50,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,72,97,115,104,0,0,0,0,0,0,118,105,0,0,0,0,0,0,136,13,0,0,0,0,0,0,105,105,0,0,0,0,0,0,109,100,53,0,0,0,0,0,40,50,0,0,0,0,0,0,105,105,0,0,0,0,0,0,115,104,97,50,53,54,0,0,115,104,97,51,56,51,0,0,115,104,97,53,49,50,0,0,110,97,109,101,0,0,0,0,184,19,0,0,152,13,0,0,105,105,105,0,0,0,0,0,104,97,115,104,0,0,0,0,216,0,0,0,152,13,0,0,216,0,0,0,0,0,0,0,105,105,105,105,0,0,0,0,115,116,97,114,116,0,0,0,64,53,1,0,136,13,0,0,118,105,105,0,0,0,0,0,117,112,100,97,116,101,0,0,64,53,1,0,136,13,0,0,216,0,0,0,0,0,0,0,118,105,105,105,0,0,0,0,102,105,110,105,115,104,0,0,216,0,0,0,136,13,0,0,105,105,105,0,0,0,0,0,104,109,97,99,0,0,0,0,216,0,0,0,152,13,0,0,216,0,0,0,216,0,0,0,105,105,105,105,105,0,0,0,104,109,97,99,83,116,97,114,116,0,0,0,0,0,0,0,104,109,97,99,82,101,115,101,116,0,0,0,0,0,0,0,104,109,97,99,85,112,100,97,116,101,0,0,0,0,0,0,104,109,97,99,70,105,110,105,115,104,0,0,0,0,0,0,112,54,1,0,136,19,0,0,88,55,1,0,88,19,0,0,0,0,0,0,240,14,0,0,88,55,1,0,40,19,0,0,1,0,0,0,240,14,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,66,97,115,101,54,52,0,0,0,0,118,105,0,0,0,0,0,0,101,110,99,111,100,101,0,0,100,101,99,111,100,101,0,0,88,55,1,0,248,18,0,0,0,0,0,0,240,51,0,0,88,55,1,0,200,18,0,0,1,0,0,0,240,51,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,80,66,75,68,70,0,0,0,0,0,118,105,0,0,0,0,0,0,72,15,0,0,0,0,0,0,105,105,0,0,0,0,0,0,72,15,0,0,216,0,0,0,105,105,105,0,0,0,0,0,72,15,0,0,216,0,0,0,208,53,1,0,0,0,0,0,105,105,105,105,0,0,0,0,103,101,116,83,97,108,116,0,216,0,0,0,88,15,0,0,105,105,105,0,0,0,0,0,103,101,116,73,116,101,114,97,116,105,111,110,67,111,117,110,116,0,0,0,0,0,0,0,208,53,1,0,88,15,0,0,105,105,105,0,0,0,0,0,115,101,116,65,108,103,111,114,105,116,104,109,0,0,0,0,64,53,1,0,72,15,0,0,240,16,0,0,0,0,0,0,118,105,105,105,0,0,0,0,103,101,116,65,108,103,111,114,105,116,104,109,0,0,0,0,240,16,0,0,88,15,0,0,105,105,105,0,0,0,0,0,115,101,116,72,97,115,104,0,64,53,1,0,72,15,0,0,32,17,0,0,0,0,0,0,118,105,105,105,0,0,0,0,103,101,116,72,97,115,104,0,32,17,0,0,88,15,0,0,105,105,105,0,0,0,0,0,101,110,97,98,108,101,82,101,99,111,109,109,101,110,100,97,116,105,111,110,115,67,104,101,99,107,0,0,0,0,0,0,64,53,1,0,72,15,0,0,118,105,105,0,0,0,0,0,100,105,115,97,98,108,101,82,101,99,111,109,109,101,110,100,97,116,105,111,110,115,67,104,101,99,107,0,0,0,0,0,100,101,114,105,118,101,0,0,216,0,0,0,72,15,0,0,216,0,0,0,208,53,1,0,105,105,105,105,105,0,0,0,24,54,1,0,144,18,0,0,86,105,114,103,105,108,80,66,75,68,70,65,108,103,111,114,105,116,104,109,0,0,0,0,78,111,110,101,0,0,0,0,80,66,75,68,70,50,0,0,24,54,1,0,96,18,0,0,86,105,114,103,105,108,80,66,75,68,70,72,97,115,104,0,88,55,1,0,48,18,0,0,0,0,0,0,72,54,0,0,88,55,1,0,0,18,0,0,1,0,0,0,72,54,0,0,105,105,0,0,0,0,0,0,86,105,114,103,105,108,82,97,110,100,111,109,0,0,0,0,118,105,0,0,0,0,0,0,56,17,0,0,216,0,0,0,105,105,105,0,0,0,0,0,114,97,110,100,111,109,105,122,101,66,121,116,101,115,0,0,216,0,0,0,56,17,0,0,208,53,1,0,0,0,0,0,105,105,105,105,0,0,0,0,114,97,110,100,111,109,105,122,101,78,117,109,98,101,114,0,208,53,1,0,56,17,0,0,105,105,105,0,0,0,0,0,114,97,110,100,111,109,105,122,101,78,117,109,98,101,114,73,110,82,97,110,103,101,0,0,208,53,1,0,56,17,0,0,208,53,1,0,208,53,1,0,105,105,105,105,105,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,50,86,105,114,103,105,108,82,97,110,100,111,109,69,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,50,86,105,114,103,105,108,82,97,110,100,111,109,69,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,49,86,105,114,103,105,108,80,66,75,68,70,52,72,97,115,104,69,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,49,86,105,114,103,105,108,80,66,75,68,70,57,65,108,103,111,114,105,116,104,109,69,0,0,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,49,86,105,114,103,105,108,80,66,75,68,70,69,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,49,86,105,114,103,105,108,80,66,75,68,70,69,0,0,0,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,50,86,105,114,103,105,108,66,97,115,101,54,52,69,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,50,86,105,114,103,105,108,66,97,115,101,54,52,69,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,50,86,105,114,103,105,108,66,97,115,101,54,52,69,0,0,0,0,0,0,248,54,1,0,208,19,0,0,0,0,0,0,1,0,0,0,16,20,0,0,0,0,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,112,54,1,0,24,20,0,0,78,83,116,51,95,95,49,50,49,95,95,98,97,115,105,99,95,115,116,114,105,110,103,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,48,86,105,114,103,105,108,72,97,115,104,69,0,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,48,86,105,114,103,105,108,72,97,115,104,69,0,0,0,0,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,54,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,69,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,54,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,69,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,54,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,49,49,80,97,99,107,97,103,101,83,105,122,101,69,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,50,48,86,105,114,103,105,108,66,121,116,101,65,114,114,97,121,85,116,105,108,115,69,0,0,0,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,50,48,86,105,114,103,105,108,66,121,116,101,65,114,114,97,121,85,116,105,108,115,69,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,50,48,86,105,114,103,105,108,66,121,116,101,65,114,114,97,121,85,116,105,108,115,69,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,56,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,69,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,56,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,69,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,50,86,105,114,103,105,108,83,105,103,110,101,114,69,0,0,0,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,50,86,105,114,103,105,108,83,105,103,110,101,114,69,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,50,86,105,114,103,105,108,83,105,103,110,101,114,69,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,50,86,105,114,103,105,108,67,105,112,104,101,114,69,0,0,0,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,50,86,105,114,103,105,108,67,105,112,104,101,114,69,0,112,54,1,0,168,22,0,0,78,83,116,51,95,95,49,49,48,115,104,97,114,101,100,95,112,116,114,73,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,56,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,69,69,69,0,0,0,0,0,0,0,0,0,0,8,23,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,152,54,1,0,88,23,0,0,104,64,1,0,0,0,0,0,78,83,116,51,95,95,49,49,52,100,101,102,97,117,108,116,95,100,101,108,101,116,101,73,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,56,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,69,69,69,0,0,78,83,116,51,95,95,49,50,48,95,95,115,104,97,114,101,100,95,112,116,114,95,112,111,105,110,116,101,114,73,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,56,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,69,78,83,95,49,52,100,101,102,97,117,108,116,95,100,101,108,101,116,101,73,83,51,95,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,83,51,95,69,69,69,69,0,0,0,0,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,54,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,69,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,54,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,69,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,51,86,105,114,103,105,108,75,101,121,80,97,105,114,52,84,121,112,101,69,0,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,51,86,105,114,103,105,108,75,101,121,80,97,105,114,69,0,0,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,51,86,105,114,103,105,108,75,101,121,80,97,105,114,69,0,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,51,86,105,114,103,105,108,75,101,121,80,97,105,114,69,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,50,49,86,105,114,103,105,108,67,114,121,112,116,111,69,120,99,101,112,116,105,111,110,69,0,0,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,50,49,86,105,114,103,105,108,67,114,121,112,116,111,69,120,99,101,112,116,105,111,110,69,0,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,50,49,86,105,114,103,105,108,67,114,121,112,116,111,69,120,99,101,112,116,105,111,110,69,0,112,54,1,0,72,25,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,51,118,97,108,69,0,0,0,0,0,0,108,101,110,103,116,104,0,0,78,83,116,51,95,95,49,54,118,101,99,116,111,114,73,104,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,0,0,0,0,248,54,1,0,168,25,0,0,0,0,0,0,1,0,0,0,216,25,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,95,95,118,101,99,116,111,114,95,98,97,115,101,73,104,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,0,0,0,0,112,54,1,0,224,25,0,0,78,83,116,51,95,95,49,50,48,95,95,118,101,99,116,111,114,95,98,97,115,101,95,99,111,109,109,111,110,73,76,98,49,69,69,69,0,0,0,0,112,54,1,0,16,26,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,104,69,69,0,0,88,55,1,0,56,27,0,0,0,0,0,0,216,0,0,0,88,55,1,0,16,27,0,0,1,0,0,0,216,0,0,0,105,105,0,0,0,0,0,0,118,105,0,0,0,0,0,0,48,26,0,0,0,0,0,0,105,105,0,0,0,0,0,0,112,117,115,104,95,98,97,99,107,0,0,0,0,0,0,0,64,53,1,0,48,26,0,0,128,53,1,0,0,0,0,0,118,105,105,105,0,0,0,0,114,101,115,105,122,101,0,0,64,53,1,0,48,26,0,0,208,53,1,0,128,53,1,0,118,105,105,105,105,0,0,0,115,105,122,101,0,0,0,0,208,53,1,0,64,26,0,0,105,105,105,0,0,0,0,0,103,101,116,0,0,0,0,0,64,25,0,0,216,0,0,0,208,53,1,0,0,0,0,0,105,105,105,105,0,0,0,0,115,101,116,0,0,0,0,0,96,53,1,0,216,0,0,0,208,53,1,0,128,53,1,0,105,105,105,105,105,0,0,0,80,75,78,83,116,51,95,95,49,54,118,101,99,116,111,114,73,104,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,0,0,80,78,83,116,51,95,95,49,54,118,101,99,116,111,114,73,104,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,0,0,0,80,75,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,51,86,105,114,103,105,108,86,101,114,115,105,111,110,69,0,0,0,0,0,0,0,80,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,51,86,105,114,103,105,108,86,101,114,115,105,111,110,69,0,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,51,86,105,114,103,105,108,86,101,114,115,105,111,110,69,0,60,0,0,0,0,0,0,0,240,65,1,0,5,0,0,0,6,0,0,0,196,255,255,255,196,255,255,255,240,65,1,0,7,0,0,0,8,0,0,0,60,0,0,0,0,0,0,0,144,29,0,0,9,0,0,0,10,0,0,0,196,255,255,255,196,255,255,255,144,29,0,0,11,0,0,0,12,0,0,0,0,0,0,0,56,29,0,0,13,0,0,0,14,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,28,0,0,220,27,0,0,240,27,0,0,24,28,0,0,56,0,0,0,0,0,0,0,56,66,1,0,15,0,0,0,16,0,0,0,200,255,255,255,200,255,255,255,56,66,1,0,17,0,0,0,18,0,0,0,56,0,0,0,0,0,0,0,224,28,0,0,19,0,0,0,20,0,0,0,200,255,255,255,200,255,255,255,224,28,0,0,21,0,0,0,22,0,0,0,164,28,0,0,124,28,0,0,144,28,0,0,184,28,0,0,10,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,152,54,1,0,240,28,0,0,56,66,1,0,0,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,152,54,1,0,72,29,0,0,184,65,1,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,152,54,1,0,160,29,0,0,240,65,1,0,0,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,105,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,115,111,110,58,32,69,120,112,101,99,116,101,100,32,112,114,105,109,105,116,105,118,101,32,116,121,112,101,46,0,0,86,105,114,103,105,108,66,121,116,101,65,114,114,97,121,85,116,105,108,115,58,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,108,111,97,116,32,118,97,108,117,101,115,32,105,110,32,74,83,79,78,46,0,0,0,0,0,0,0,74,115,111,110,58,32,85,110,107,110,111,119,110,32,111,98,106,101,99,116,32,116,121,112,101,46,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,64,143,64,0,0,0,0,0,136,195,64,0,0,0,0,0,106,248,64,0,0,0,0,128,132,46,65,0,0,0,0,208,18,99,65,0,0,0,0,132,215,151,65,0,0,0,0,101,205,205,65,0,0,0,32,95,160,2,66,0,0,0,232,118,72,55,66,0,0,0,162,148,26,109,66,0,0,64,229,156,48,162,66,0,0,144,30,196,188,214,66,0,0,52,38,245,107,12,67,0,128,224,55,121,195,65,67,0,160,216,133,87,52,118,67,0,200,78,103,109,193,171,67,0,61,145,96,228,88,225,67,64,140,181,120,29,175,21,68,80,239,226,214,228,26,75,68,146,213,77,6,207,240,128,68,246,74,225,199,2,45,181,68,180,157,217,121,67,120,234,68,145,2,40,44,42,139,32,69,53,3,50,183,244,173,84,69,2,132,254,228,113,217,137,69,129,18,31,47,231,39,192,69,33,215,230,250,224,49,244,69,234,140,160,57,89,62,41,70,36,176,8,136,239,141,95,70,23,110,5,181,181,184,147,70,156,201,70,34,227,166,200,70,3,124,216,234,155,208,254,70,130,77,199,114,97,66,51,71,227,32,121,207,249,18,104,71,27,105,87,67,184,23,158,71,177,161,22,42,211,206,210,71,29,74,156,244,135,130,7,72,165,92,195,241,41,99,61,72,231,25,26,55,250,93,114,72,97,160,224,196,120,245,166,72,121,200,24,246,214,178,220,72,76,125,207,89,198,239,17,73,158,92,67,240,183,107,70,73,198,51,84,236,165,6,124,73,92,160,180,179,39,132,177,73,115,200,161,160,49,229,229,73,143,58,202,8,126,94,27,74,154,100,126,197,14,27,81,74,192,253,221,118,210,97,133,74,48,125,149,20,71,186,186,74,62,110,221,108,108,180,240,74,206,201,20,136,135,225,36,75,65,252,25,106,233,25,90,75,169,61,80,226,49,80,144,75,19,77,228,90,62,100,196,75,87,96,157,241,77,125,249,75,109,184,4,110,161,220,47,76,68,243,194,228,228,233,99,76,21,176,243,29,94,228,152,76,27,156,112,165,117,29,207,76,145,97,102,135,105,114,3,77,245,249,63,233,3,79,56,77,114,248,143,227,196,98,110,77,71,251,57,14,187,253,162,77,25,122,200,209,41,189,215,77,159,152,58,70,116,172,13,78,100,159,228,171,200,139,66,78,61,199,221,214,186,46,119,78,12,57,149,140,105,250,172,78,167,67,221,247,129,28,226,78,145,148,212,117,162,163,22,79,181,185,73,19,139,76,76,79,17,20,14,236,214,175,129,79,22,153,17,167,204,27,182,79,91,255,213,208,191,162,235,79,153,191,133,226,183,69,33,80,127,47,39,219,37,151,85,80,95,251,240,81,239,252,138,80,27,157,54,147,21,222,192,80,98,68,4,248,154,21,245,80,123,85,5,182,1,91,42,81,109,85,195,17,225,120,96,81,200,42,52,86,25,151,148,81,122,53,193,171,223,188,201,81,108,193,88,203,11,22,0,82,199,241,46,190,142,27,52,82,57,174,186,109,114,34,105,82,199,89,41,9,15,107,159,82,29,216,185,101,233,162,211,82,36,78,40,191,163,139,8,83,173,97,242,174,140,174,62,83,12,125,87,237,23,45,115,83,79,92,173,232,93,248,167,83,99,179,216,98,117,246,221,83,30,112,199,93,9,186,18,84,37,76,57,181,139,104,71,84,46,159,135,162,174,66,125,84,125,195,148,37,173,73,178,84,92,244,249,110,24,220,230,84,115,113,184,138,30,147,28,85,232,70,179,22,243,219,81,85,162,24,96,220,239,82,134,85,202,30,120,211,171,231,187,85,63,19,43,100,203,112,241,85,14,216,53,61,254,204,37,86,18,78,131,204,61,64,91,86,203,16,210,159,38,8,145,86,254,148,198,71,48,74,197,86,61,58,184,89,188,156,250,86,102,36,19,184,245,161,48,87,128,237,23,38,115,202,100,87,224,232,157,239,15,253,153,87,140,177,194,245,41,62,208,87,239,93,51,115,180,77,4,88,107,53,0,144,33,97,57,88,197,66,0,244,105,185,111,88,187,41,128,56,226,211,163,88,42,52,160,198,218,200,216,88,53,65,72,120,17,251,14,89,193,40,45,235,234,92,67,89,241,114,248,165,37,52,120,89,173,143,118,15,47,65,174,89,204,25,170,105,189,232,226,89,63,160,20,196,236,162,23,90,79,200,25,245,167,139,77,90,50,29,48,249,72,119,130,90,126,36,124,55,27,21,183,90,158,45,91,5,98,218,236,90,130,252,88,67,125,8,34,91,163,59,47,148,156,138,86,91,140,10,59,185,67,45,140,91,151,230,196,83,74,156,193,91,61,32,182,232,92,3,246,91,77,168,227,34,52,132,43,92,48,73,206,149,160,50,97,92,124,219,65,187,72,127,149,92,91,82,18,234,26,223,202,92,121,115,75,210,112,203,0,93,87,80,222,6,77,254,52,93,109,228,149,72,224,61,106,93,196,174,93,45,172,102,160,93,117,26,181,56,87,128,212,93,18,97,226,6,109,160,9,94,171,124,77,36,68,4,64,94,214,219,96,45,85,5,116,94,204,18,185,120,170,6,169,94,127,87,231,22,85,72,223,94,175,150,80,46,53,141,19,95,91,188,228,121,130,112,72,95,114,235,93,24,163,140,126,95,39,179,58,239,229,23,179,95,241,95,9,107,223,221,231,95,237,183,203,69,87,213,29,96,244,82,159,139,86,165,82,96,177,39,135,46,172,78,135,96,157,241,40,58,87,34,189,96,2,151,89,132,118,53,242,96,195,252,111,37,212,194,38,97,244,251,203,46,137,115,92,97,120,125,63,189,53,200,145,97,214,92,143,44,67,58,198,97,12,52,179,247,211,200,251,97,135,0,208,122,132,93,49,98,169,0,132,153,229,180,101,98,212,0,229,255,30,34,155,98,132,32,239,95,83,245,208,98,165,232,234,55,168,50,5,99,207,162,229,69,82,127,58,99,193,133,175,107,147,143,112,99,50,103,155,70,120,179,164,99,254,64,66,88,86,224,217,99,159,104,41,247,53,44,16,100,198,194,243,116,67,55,68,100,120,179,48,82,20,69,121,100,86,224,188,102,89,150,175,100,54,12,54,224,247,189,227,100,67,143,67,216,117,173,24,101,20,115,84,78,211,216,78,101,236,199,244,16,132,71,131,101,232,249,49,21,101,25,184,101,97,120,126,90,190,31,238,101,61,11,143,248,214,211,34,102,12,206,178,182,204,136,87,102,143,129,95,228,255,106,141,102,249,176,187,238,223,98,194,102,56,157,106,234,151,251,246,102,134,68,5,229,125,186,44,103,212,74,35,175,142,244,97,103,137,29,236,90,178,113,150,103,235,36,167,241,30,14,204,103,19,119,8,87,211,136,1,104,215,148,202,44,8,235,53,104,13,58,253,55,202,101,107,104,72,68,254,98,158,31,161,104,90,213,189,251,133,103,213,104,177,74,173,122,103,193,10,105,175,78,172,172,224,184,64,105,90,98,215,215,24,231,116,105,241,58,205,13,223,32,170,105,214,68,160,104,139,84,224,105,12,86,200,66,174,105,20,106,143,107,122,211,25,132,73,106,115,6,89,72,32,229,127,106,8,164,55,45,52,239,179,106,10,141,133,56,1,235,232,106,76,240,166,134,193,37,31,107,48,86,40,244,152,119,83,107,187,107,50,49,127,85,136,107,170,6,127,253,222,106,190,107,42,100,111,94,203,2,243,107,53,61,11,54,126,195,39,108,130,12,142,195,93,180,93,108,209,199,56,154,186,144,146,108,198,249,198,64,233,52,199,108,55,184,248,144,35,2,253,108,35,115,155,58,86,33,50,109,235,79,66,201,171,169,102,109,230,227,146,187,22,84,156,109,112,206,59,53,142,180,209,109,12,194,138,194,177,33,6,110,143,114,45,51,30,170,59,110,153,103,252,223,82,74,113,110,127,129,251,151,231,156,165,110,223,97,250,125,33,4,219,110,44,125,188,238,148,226,16,111,118,156,107,42,58,27,69,111,148,131,6,181,8,98,122,111,61,18,36,113,69,125,176,111,204,22,109,205,150,156,228,111,127,92,200,128,188,195,25,112,207,57,125,208,85,26,80,112,67,136,156,68,235,32,132,112,84,170,195,21,38,41,185,112,233,148,52,155,111,115,239,112,17,221,0,193,37,168,35,113,86,20,65,49,47,146,88,113,107,89,145,253,186,182,142,113,227,215,122,222,52,50,195,113,220,141,25,22,194,254,247,113,83,241,159,155,114,254,45,114,212,246,67,161,7,191,98,114,137,244,148,137,201,110,151,114,171,49,250,235,123,74,205,114,11,95,124,115,141,78,2,115,205,118,91,208,48,226,54,115,129,84,114,4,189,154,108,115,208,116,199,34,182,224,161,115,4,82,121,171,227,88,214,115,134,166,87,150,28,239,11,116,20,200,246,221,113,117,65,116,24,122,116,85,206,210,117,116,158,152,209,234,129,71,171,116,99,255,194,50,177,12,225,116,60,191,115,127,221,79,21,117,11,175,80,223,212,163,74,117,103,109,146,11,101,166,128,117,192,8,119,78,254,207,180,117,241,202,20,226,253,3,234,117,214,254,76,173,126,66,32,118,140,62,160,88,30,83,84,118,47,78,200,238,229,103,137,118,187,97,122,106,223,193,191,118,21,125,140,162,43,217,243,118,90,156,47,139,118,207,40,119,112,131,251,45,84,3,95,119,38,50,189,156,20,98,147,119,176,126,236,195,153,58,200,119,92,158,231,52,64,73,254,119,249,194,16,33,200,237,50,120,184,243,84,41,58,169,103,120,165,48,170,179,136,147,157,120,103,94,74,112,53,124,210,120,1,246,92,204,66,27,7,121,130,51,116,127,19,226,60,121,49,160,168,47,76,13,114,121,61,200,146,59,159,144,166,121,77,122,119,10,199,52,220,121,112,172,138,102,252,160,17,122,140,87,45,128,59,9,70,122,111,173,56,96,138,139,123,122,101,108,35,124,54,55,177,122,127,71,44,27,4,133,229,122,94,89,247,33,69,230,26,123,219,151,58,53,235,207,80,123,210,61,137,2,230,3,133,123,70,141,43,131,223,68,186,123,76,56,251,177,11,107,240,123,95,6,122,158,206,133,36,124,246,135,24,70,66,167,89,124,250,84,207,107,137,8,144,124,56,42,195,198,171,10,196,124,199,244,115,184,86,13,249,124,248,241,144,102,172,80,47,125,59,151,26,192,107,146,99,125,10,61,33,176,6,119,152,125,76,140,41,92,200,148,206,125,176,247,153,57,253,28,3,126,156,117,0,136,60,228,55,126,3,147,0,170,75,221,109,126,226,91,64,74,79,170,162,126,218,114,208,28,227,84,215,126],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE);allocate([144,143,4,228,27,42,13,127,186,217,130,110,81,58,66,127,41,144,35,202,229,200,118,127,51,116,172,60,31,123,172,127,160,200,235,133,243,204,225,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,8,0,0,0,12,0,0,0,0,0,0,0,10,0,0,0,13,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,41,0,0,23,0,0,0,24,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,50,86,105,114,103,105,108,67,105,112,104,101,114,69,0,0,152,54,1,0,64,41,0,0,168,41,0,0,0,0,0,0,0,0,0,0,168,41,0,0,25,0,0,0,26,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,54,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,69,0,0,0,0,0,0,112,54,1,0,128,41,0,0,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,58,32,80,97,114,97,109,101,116,101,114,115,32,39,114,101,99,105,112,105,101,110,116,73,100,39,32,111,114,32,39,112,117,98,108,105,99,75,101,121,39,32,97,114,101,32,110,111,116,32,115,112,101,99,105,102,105,101,100,46,0,0,0,0,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,58,32,80,97,114,97,109,101,116,101,114,32,39,112,119,100,39,32,105,115,32,110,111,116,32,115,112,101,99,105,102,105,101,100,46,0,0,0,0,0,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,58,32,85,110,115,117,112,112,111,114,116,101,100,32,99,111,110,116,101,110,116,32,105,110,102,111,32,116,121,112,101,32,119,97,115,32,103,105,118,101,110,46,0,0,0,0,0,0,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,58,32,82,101,99,105,112,105,101,110,116,32,119,105,116,104,32,103,105,118,101,110,32,112,97,115,115,119,111,114,100,32,110,111,116,32,102,111,117,110,100,46,0,0,0,0,0,0,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,58,32,0,0,0,0,0,0,82,101,99,105,112,105,101,110,116,32,119,105,116,104,32,103,105,118,101,110,32,105,100,32,40,0,0,0,0,0,0,0,41,32,105,115,32,110,111,116,32,102,111,117,110,100,46,0,118,105,114,103,105,108,58,58,86,105,114,103,105,108,67,105,112,104,101,114,66,97,115,101,0,0,0,0,0,0,0,0,0,0,0,0,120,43,0,0,27,0,0,0,28,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,51,99,109,115,49,54,86,105,114,103,105,108,67,77,83,67,111,110,116,101,110,116,69,0,0,0,0,0,0,152,54,1,0,64,43,0,0,248,63,0,0,0,0,0,0,99,111,110,116,101,110,116,0,42,134,72,134,247,13,1,7,2,0,0,0,0,0,0,0,42,134,72,134,247,13,1,7,3,0,0,0,0,0,0,0,42,134,72,134,247,13,1,7,5,0,0,0,0,0,0,0,42,134,72,134,247,13,1,7,6,0,0,0,0,0,0,0,42,134,72,134,247,13,1,9,15,1,2,0,0,0,0,0,86,105,114,103,105,108,67,77,83,67,111,110,116,101,110,116,58,32,0,0,0,0,0,0,85,110,115,117,112,112,111,114,116,101,100,32,99,111,110,116,101,110,116,32,116,121,112,101,32,119,97,115,32,103,105,118,101,110,46,0,0,0,0,0,69,120,112,101,99,116,101,100,32,112,97,114,97,109,101,116,101,114,32,39,99,111,110,116,101,110,116,39,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,46,0,0,0,0,85,110,115,117,112,112,111,114,116,101,100,32,99,111,110,116,101,110,116,32,116,121,112,101,32,79,73,68,32,119,97,115,32,103,105,118,101,110,46,0,0,0,0,0,208,44,0,0,29,0,0,0,30,0,0,0,5,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,51,99,109,115,50,48,86,105,114,103,105,108,67,77,83,67,111,110,116,101,110,116,73,110,102,111,69,0,0,152,54,1,0,152,44,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,67,77,83,67,111,110,116,101,110,116,73,110,102,111,58,32,0,0,85,110,115,117,112,112,111,114,116,101,100,32,99,111,110,116,101,110,116,32,105,110,102,111,32,118,101,114,115,105,111,110,32,119,97,115,32,103,105,118,101,110,46,0,0,0,0,0,0,0,0,0,136,45,0,0,31,0,0,0,32,0,0,0,6,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,51,99,109,115,50,53,86,105,114,103,105,108,67,77,83,69,110,99,114,121,112,116,101,100,67,111,110,116,101,110,116,69,0,0,0,0,0,152,54,1,0,72,45,0,0,248,63,0,0,0,0,0,0,99,111,110,116,101,110,116,69,110,99,114,121,112,116,105,111,110,65,108,103,111,114,105,116,104,109,0,0,0,0,0,0,42,134,72,134,247,13,1,7,1,0,0,0,0,0,0,0,0,0,0,0,40,46,0,0,33,0,0,0,34,0,0,0,7,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,51,99,109,115,50,50,86,105,114,103,105,108,67,77,83,69,110,118,101,108,111,112,101,100,68,97,116,97,69,0,0,0,0,0,0,0,0,152,54,1,0,232,45,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,67,77,83,69,110,118,101,108,111,112,101,100,68,97,116,97,58,32,0,0,0,0,0,0,0,0,71,105,118,101,110,32,82,101,99,105,112,105,101,110,116,73,110,102,111,32,116,121,112,101,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,0,0,0,0,0,0,0,0,0,0,232,46,0,0,35,0,0,0,36,0,0,0,8,0,0,0,6,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,51,99,109,115,50,54,86,105,114,103,105,108,67,77,83,75,101,121,84,114,97,110,115,82,101,99,105,112,105,101,110,116,69,0,0,0,0,152,54,1,0,168,46,0,0,248,63,0,0,0,0,0,0,101,110,99,114,121,112,116,101,100,75,101,121,0,0,0,0,107,101,121,69,110,99,114,121,112,116,105,111,110,65,108,103,111,114,105,116,104,109,0,0,114,101,99,105,112,105,101,110,116,73,100,101,110,116,105,102,105,101,114,0,0,0,0,0,86,105,114,103,105,108,67,77,83,75,101,121,84,114,97,110,115,82,101,99,105,112,105,101,110,116,58,32,0,0,0,0,75,101,121,84,114,97,110,115,82,101,99,105,112,105,101,110,116,73,110,102,111,32,115,116,114,117,99,116,117,114,101,32,105,115,32,109,97,108,102,111,114,109,101,100,46,32,73,110,99,111,114,114,101,99,116,32,67,77,83,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,46,0,0,0,0,0,75,101,121,84,114,97,110,115,82,101,99,105,112,105,101,110,116,73,110,102,111,32,115,116,114,117,99,116,117,114,101,32,105,115,32,109,97,108,102,111,114,109,101,100,46,32,80,97,114,97,109,101,116,101,114,32,39,114,105,100,39,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,46,0,0,0,0,0,0,0,88,48,0,0,37,0,0,0,38,0,0,0,9,0,0,0,7,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,51,99,109,115,50,54,86,105,114,103,105,108,67,77,83,80,97,115,115,119,111,114,100,82,101,99,105,112,105,101,110,116,69,0,0,0,0,152,54,1,0,24,48,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,67,77,83,80,97,115,115,119,111,114,100,82,101,99,105,112,105,101,110,116,58,32,0,0,0,0,80,97,115,115,119,111,114,100,82,101,99,105,112,105,101,110,116,73,110,102,111,32,115,116,114,117,99,116,117,114,101,32,105,115,32,109,97,108,102,111,114,109,101,100,32,100,117,101,32,116,111,32,105,110,99,111,114,114,101,99,116,32,67,77,83,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,46,0,0,0,0,0,0,0,0,0,0,0,40,1,0,0,39,0,0,0,40,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,64,49,0,0,41,0,0,0,42,0,0,0,10,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,56,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,69,0,0,0,0,152,54,1,0,24,49,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,0,0,0,0,0,0,75,101,121,32,39,0,0,0,39,32,105,115,32,110,111,116,32,102,111,117,110,100,46,0,86,105,114,103,105,108,67,117,115,116,111,109,80,97,114,97,109,115,58,32,0,0,0,0,69,120,112,101,99,116,101,100,32,112,97,114,97,109,101,116,101,114,32,39,118,97,108,39,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,32,111,114,32,104,97,115,32,117,110,101,120,112,101,99,116,101,100,32,116,121,112,101,46,0,0,0,0,0,40,50,0,0,43,0,0,0,44,0,0,0,11,0,0,0,9,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,48,86,105,114,103,105,108,72,97,115,104,69,0,0,0,0,0,0,0,0,152,54,1,0,248,49,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,72,97,115,104,58,32,111,98,106,101,99,116,32,104,97,115,32,117,110,100,101,102,105,110,101,100,32,97,108,103,111,114,105,116,104,109,46,0,0,0,0,0,0,0,0,0,176,50,0,0,45,0,0,0,46,0,0,0,12,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,57,86,105,114,103,105,108,80,66,69,69,0,0,152,54,1,0,136,50,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,80,66,69,58,32,71,105,118,101,110,32,97,108,103,111,114,105,116,104,109,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,0,0,0,0,86,105,114,103,105,108,80,66,69,58,32,111,98,106,101,99,116,32,104,97,115,32,117,110,100,101,102,105,110,101,100,32,97,108,103,111,114,105,116,104,109,46,0,0,0,0,0,0,32,85,115,101,32,111,110,101,32,111,102,32,116,104,101,32,102,97,99,116,111,114,121,32,109,101,116,104,111,100,115,32,111,114,32,109,101,116,104,111,100,32,39,102,114,111,109,65,115,110,49,39,32,116,111,32,100,101,102,105,110,101,32,104,97,115,104,32,97,108,103,111,114,105,116,104,109,46,0,0,80,97,115,115,119,111,114,100,32,105,115,32,116,111,111,32,108,111,110,103,46,32,77,97,120,32,108,101,110,103,116,104,32,105,115,32,0,0,0,0,32,98,121,116,101,115,46,0,0,0,0,0,240,51,0,0,47,0,0,0,48,0,0,0,13,0,0,0,11,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,49,86,105,114,103,105,108,80,66,75,68,70,69,0,0,0,0,0,0,0,152,54,1,0,192,51,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,117,110,107,110,111,119,110,32,115,116,97,116,101,46,0,0,0,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,111,98,106,101,99,116,32,104,97,115,32,117,110,100,101,102,105,110,101,100,32,97,108,103,111,114,105,116,104,109,115,46,0,0,0,32,85,115,101,32,99,111,110,115,116,114,117,99,116,111,114,32,119,105,116,104,32,112,97,114,97,109,101,116,101,114,115,32,111,114,32,109,101,116,104,111,100,32,39,102,114,111,109,65,115,110,49,39,32,116,111,32,100,101,102,105,110,101,32,107,101,121,32,100,101,114,105,118,97,116,105,111,110,32,102,117,110,99,116,105,111,110,32,97,108,103,111,114,105,116,104,109,115,46,0,0,0,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,101,109,112,116,121,32,112,97,115,115,119,111,114,100,32,105,115,32,110,111,116,32,115,101,99,117,114,101,0,0,0,0,0,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,101,109,112,116,121,32,115,97,108,116,32,105,115,32,110,111,116,32,115,101,99,117,114,101,0,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,105,116,101,114,97,116,105,111,110,32,99,111,117,110,116,32,40,0,0,41,32,105,115,32,110,111,116,32,115,101,99,117,114,101,44,32,0,0,0,0,0,0,0,109,105,110,105,109,117,109,32,114,101,99,111,109,109,101,110,100,101,100,32,118,97,108,117,101,32,105,115,32,0,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,65,83,78,46,49,32,119,114,105,116,101,32,45,32,117,110,115,117,112,112,111,114,116,101,100,32,80,66,75,68,70,32,97,108,103,111,114,105,116,104,109,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,65,83,78,46,49,32,114,101,97,100,32,45,32,117,110,115,117,112,112,111,114,116,101,100,32,80,66,75,68,70,32,97,108,103,111,114,105,116,104,109,0,0,0,86,105,114,103,105,108,80,66,75,68,70,58,32,117,110,107,110,111,119,110,32,104,97,115,104,32,97,108,103,111,114,105,116,104,109,32,100,101,116,101,99,116,101,100,0,0,0,0,0,0,0,0,72,54,0,0,49,0,0,0,50,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,50,86,105,114,103,105,108,82,97,110,100,111,109,69,0,0,0,0,0,0,112,54,1,0,24,54,0,0,86,105,114,103,105,108,82,97,110,100,111,109,58,32,119,114,111,110,103,32,114,97,110,103,101,32,45,32,109,105,110,32,105,115,32,103,114,101,97,116,101,114,32,116,104,97,110,32,109,97,120,0,0,0,0,0,0,0,0,0,224,54,0,0,51,0,0,0,52,0,0,0,14,0,0,0,12,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,50,49,86,105,114,103,105,108,83,121,109,109,101,116,114,105,99,67,105,112,104,101,114,69,0,0,0,0,0,152,54,1,0,168,54,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,83,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,111,98,106,101,99,116,32,104,97,115,32,117,110,100,101,102,105,110,101,100,32,97,108,103,111,114,105,116,104,109,46,0,0,32,85,115,101,32,111,110,101,32,111,102,32,116,104,101,32,102,97,99,116,111,114,121,32,109,101,116,104,111,100,115,32,111,114,32,109,101,116,104,111,100,32,39,102,114,111,109,65,115,110,49,39,32,116,111,32,100,101,102,105,110,101,32,99,105,112,104,101,114,32,97,108,103,111,114,105,116,104,109,46,0,0,0,0,0,0,0,0,0,0,0,0,184,55,0,0,53,0,0,0,54,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,54,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,69,0,0,0,0,0,0,112,54,1,0,144,55,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,103,105,118,101,110,32,112,97,99,107,97,103,101,83,105,122,101,32,108,101,115,115,32,116,104,101,110,32,109,105,110,105,109,117,109,32,118,97,108,117,101,32,114,101,113,117,105,114,101,100,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,114,101,113,117,101,115,116,101,100,32,112,97,99,107,97,103,101,32,110,111,116,32,102,111,117,110,100,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,112,97,99,107,97,103,101,32,105,115,32,109,97,108,102,111,114,109,101,100,32,40,101,109,112,116,121,32,112,97,99,107,97,103,101,41,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,112,97,99,107,97,103,101,32,105,115,32,109,97,108,102,111,114,109,101,100,32,40,101,112,104,101,109,101,114,97,108,32,112,117,98,108,105,99,32,107,101,121,32,105,115,32,99,111,114,114,117,112,116,101,100,41,0,0,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,112,97,99,107,97,103,101,32,105,115,32,109,97,108,102,111,114,109,101,100,32,40,115,105,103,110,32,105,115,32,99,111,114,114,117,112,116,101,100,41,0,0,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,103,105,118,101,110,32,100,97,116,97,32,105,115,32,116,111,111,32,98,105,103,32,116,111,32,98,101,32,101,110,99,114,121,112,116,101,100,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,112,97,99,107,97,103,101,32,99,111,117,110,116,32,47,32,112,97,99,107,97,103,101,32,110,117,109,98,101,114,32,103,114,101,97,116,101,114,32,116,104,101,110,32,109,97,120,105,109,117,109,32,97,108,108,111,119,101,100,32,40,49,53,41,0,0,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,112,97,99,107,97,103,101,32,115,105,122,101,32,111,118,101,114,102,108,111,119,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,112,97,99,107,97,103,101,32,115,105,122,101,32,111,118,101,114,102,108,111,119,32,40,112,111,115,116,32,99,111,110,100,105,116,105,111,110,41,0,0,0,0,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,110,111,116,32,97,108,108,32,112,97,99,107,97,103,101,115,32,119,97,115,32,114,101,99,101,105,118,101,100,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,100,97,116,97,32,105,115,32,109,97,108,102,111,114,109,101,100,32,40,115,105,103,110,32,118,97,108,105,100,97,116,105,111,110,32,102,97,105,108,101,100,41,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,117,110,115,117,112,112,111,114,116,101,100,32,107,101,121,32,119,97,115,32,103,105,118,101,110,0,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,112,97,99,107,97,103,101,32,99,111,117,110,116,32,103,114,101,97,116,101,114,32,116,104,101,110,32,109,97,120,105,109,117,109,32,97,108,108,111,119,101,100,32,40,49,53,41,0,0,0,0,0,0,0,86,105,114,103,105,108,84,105,110,121,67,105,112,104,101,114,58,32,117,110,115,117,112,112,111,114,116,101,100,32,107,101,121,32,116,121,112,101,32,119,97,115,32,103,105,118,101,110,0,0,0,0,0,0,0,0,49,46,56,46,49,0,0,0,0,0,0,0,104,59,0,0,55,0,0,0,56,0,0,0,5,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,49,55,80,111,108,97,114,115,115,108,69,120,99,101,112,116,105,111,110,69,0,152,54,1,0,56,59,0,0,40,1],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+10240);allocate([112,107,99,115,53,95,115,101,101,100,0,0,0,0,0,0,86,105,114,103,105,108,80,66,69,58,32,71,105,118,101,110,32,99,105,112,104,101,114,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,46,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,52,97,115,110,49,50,48,86,105,114,103,105,108,65,115,110,49,67,111,109,112,97,116,105,98,108,101,69,0,112,54,1,0,192,63,0,0,86,105,114,103,105,108,65,115,110,49,67,111,109,112,97,116,105,98,108,101,58,32,0,0,82,101,113,117,105,114,101,100,32,65,83,78,46,49,32,112,97,114,97,109,101,116,101,114,32,105,115,32,110,111,116,32,115,112,101,99,105,102,105,101,100,46,0,0,0,0,0,0,32,80,97,114,97,109,101,116,101,114,32,110,97,109,101,58,32,0,0,0,0,0,0,0,86,105,114,103,105,108,65,115,110,49,82,101,97,100,101,114,58,32,0,0,0,0,0,0,82,101,97,100,101,114,32,119,97,115,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,32,45,32,39,114,101,115,101,116,39,32,109,101,116,104,111,100,32,119,97,115,32,110,111,116,32,99,97,108,108,101,100,46,0,0,0,0,0,65,83,78,46,49,32,115,116,114,117,99,116,117,114,101,32,119,97,115,32,116,111,116,97,108,108,121,32,114,101,97,100,44,32,115,111,32,110,111,32,100,97,116,97,32,108,101,102,116,32,116,111,32,98,101,32,112,114,111,99,101,115,115,101,100,46,0,0,0,0,0,0,84,97,103,32,118,97,108,117,101,32,105,115,32,116,111,111,32,98,105,103,44,32,77,65,88,32,118,97,108,117,101,32,105,115,32,51,49,46,0,0,86,105,114,103,105,108,65,115,110,49,87,114,105,116,101,114,58,32,99,111,117,108,100,32,110,111,116,32,114,101,115,101,114,118,101,32,115,112,97,99,101,32,108,101,115,115,32,116,104,97,110,32,99,117,114,114,101,110,116,0,0,0,0,0,86,105,114,103,105,108,65,115,110,49,87,114,105,116,101,114,58,32,111,98,106,101,99,116,32,105,115,32,110,111,116,32,105,110,105,116,105,97,108,105,122,101,100,32,45,32,39,114,101,115,101,116,39,32,109,101,116,104,111,100,32,119,97,115,32,110,111,116,32,99,97,108,108,101,100,0,0,0,0,0,86,105,114,103,105,108,65,115,110,49,87,114,105,116,101,114,58,32,101,120,99,101,101,100,101,100,32,109,97,120,105,109,117,109,32,65,83,78,46,49,32,115,105,122,101,32,111,102,32,0,0,0,0,0,0,0,32,98,121,116,101,115,0,0,86,105,114,103,105,108,65,115,110,49,87,114,105,116,101,114,58,32,101,120,99,101,101,100,101,100,32,109,97,120,105,109,117,109,32,65,83,78,46,49,32,99,111,110,116,101,120,116,32,116,97,103,32,118,97,108,117,101,32,0,0,0,0,0,0,0,0,0,144,66,0,0,57,0,0,0,58,0,0,0,15,0,0,0,13,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,50,50,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,69,0,0,0,0,152,54,1,0,88,66,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,111,98,106,101,99,116,32,104,97,115,32,117,110,100,101,102,105,110,101,100,32,97,108,103,111,114,105,116,104,109,46,0,32,85,115,101,32,111,110,101,32,111,102,32,116,104,101,32,102,97,99,116,111,114,121,32,109,101,116,104,111,100,115,32,111,114,32,109,101,116,104,111,100,32,39,102,114,111,109,65,115,110,49,39,32,116,111,32,100,101,102,105,110,101,32,80,75,32,97,108,103,111,114,105,116,104,109,46,0,0,0,0,118,105,114,103,105,108,95,103,101,110,95,107,101,121,112,97,105,114,0,0,0,0,0,0,86,105,114,103,105,108,75,101,121,80,97,105,114,58,32,85,110,107,110,111,119,110,32,116,121,112,101,32,111,102,32,116,104,101,32,103,101,110,101,114,97,116,101,100,32,75,101,121,32,80,97,105,114,46,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,67,97,110,32,99,111,109,112,117,116,101,32,115,104,97,114,101,100,32,111,110,32,100,105,102,102,101,114,101,110,116,32,99,117,114,118,101,115,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,73,110,118,97,108,105,100,32,107,101,121,115,32,102,111,114,32,68,72,32,97,108,103,111,114,105,116,104,109,44,32,111,110,108,121,32,69,67,32,107,101,121,115,32,97,114,101,32,99,117,114,114,101,110,116,108,121,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,115,105,103,110,0,0,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,117,110,100,101,102,105,110,101,100,32,107,101,121,32,116,121,112,101,0,0,0,0,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,111,112,101,114,97,116,105,111,110,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,82,83,65,32,107,101,121,115,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,108,105,109,105,116,101,100,32,115,117,112,112,111,114,116,32,102,111,114,32,69,67,32,107,101,121,115,32,40,111,110,108,121,32,67,117,114,118,101,50,53,53,49,57,32,99,117,114,114,101,110,116,108,121,32,115,117,112,112,111,114,116,101,100,41,0,0,0,0,0,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,105,110,118,97,108,105,100,32,115,105,122,101,32,111,102,32,67,117,114,118,101,50,53,53,49,57,32,112,117,98,108,105,99,32,107,101,121,0,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,115,105,103,110,97,116,117,114,101,32,105,115,32,109,97,108,102,111,114,109,101,100,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,105,110,118,97,108,105,100,32,115,105,122,101,32,111,102,32,67,117,114,118,101,50,53,53,49,57,32,115,105,103,110,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,115,105,103,110,97,116,117,114,101,32,98,105,116,115,32,105,115,32,109,97,108,102,111,114,109,101,100,0,0,0,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,117,110,100,101,102,105,110,101,100,32,82,83,65,32,107,101,121,32,108,101,110,103,116,104,0,0,0,0,0,0,0,0,86,105,114,103,105,108,65,115,121,109,109,101,116,114,105,99,67,105,112,104,101,114,58,32,117,110,100,101,102,105,110,101,100,32,69,67,80,32,116,121,112,101,0,0,0,0,0,0,101,110,99,114,121,112,116,95,100,101,99,114,121,112,116,0,107,101,121,95,101,120,112,111,114,116,0,0,0,0,0,0,85,110,101,120,112,101,99,116,101,100,32,80,111,108,97,114,115,115,108,75,101,121,69,120,112,111,114,116,58,58,70,111,114,109,97,116,32,97,110,100,47,111,114,32,80,111,108,97,114,115,115,108,75,101,121,69,120,112,111,114,116,58,58,84,121,112,101,32,118,97,108,117,101,32,119,97,115,32,103,105,118,101,110,46,0,0,0,0,86,105,114,103,105,108,75,101,121,80,97,105,114,58,32,78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,99,117,114,118,101,32,84,121,112,101,95,69,67,95,77,50,50,49,0,0,0,0,0,0,0,86,105,114,103,105,108,75,101,121,80,97,105,114,58,32,78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,99,117,114,118,101,32,84,121,112,101,95,69,67,95,77,51,56,51,0,0,0,0,0,0,0,86,105,114,103,105,108,75,101,121,80,97,105,114,58,32,78,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,99,117,114,118,101,32,84,121,112,101,95,69,67,95,77,53,49,49,0,0,0,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,0,0,0,0,0,0,0,0,0,176,71,0,0,59,0,0,0,60,0,0,0,16,0,0,0,14,0,0,0,1,0,0,0,0,0,0,0,78,54,118,105,114,103,105,108,54,99,114,121,112,116,111,49,48,102,111,117,110,100,97,116,105,111,110,57,86,105,114,103,105,108,75,68,70,69,0,0,152,54,1,0,136,71,0,0,248,63,0,0,0,0,0,0,86,105,114,103,105,108,75,68,70,58,32,111,98,106,101,99,116,32,104,97,115,32,117,110,100,101,102,105,110,101,100,32,97,108,103,111,114,105,116,104,109,46,0,0,0,0,0,0,32,85,115,101,32,111,110,101,32,111,102,32,116,104,101,32,102,97,99,116,111,114,121,32,109,101,116,104,111,100,115,32,111,114,32,109,101,116,104,111,100,32,39,102,114,111,109,65,115,110,49,39,32,116,111,32,100,101,102,105,110,101,32,107,101,121,32,100,101,114,105,118,97,116,105,111,110,32,102,117,110,99,116,105,111,110,32,97,108,103,111,114,105,116,104,109,46,0,0,0,0,0,0,0,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,62,127,127,127,63,52,53,54,55,56,57,58,59,60,61,127,127,127,64,127,127,127,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,127,127,127,127,127,127,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,127,127,127,127,127,3,0,0,0,5,0,0,0,7,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,211,0,0,0,223,0,0,0,227,0,0,0,229,0,0,0,233,0,0,0,239,0,0,0,241,0,0,0,251,0,0,0,1,1,0,0,7,1,0,0,13,1,0,0,15,1,0,0,21,1,0,0,25,1,0,0,27,1,0,0,37,1,0,0,51,1,0,0,55,1,0,0,57,1,0,0,61,1,0,0,75,1,0,0,81,1,0,0,91,1,0,0,93,1,0,0,97,1,0,0,103,1,0,0,111,1,0,0,117,1,0,0,123,1,0,0,127,1,0,0,133,1,0,0,141,1,0,0,145,1,0,0,153,1,0,0,163,1,0,0,165,1,0,0,175,1,0,0,177,1,0,0,183,1,0,0,187,1,0,0,193,1,0,0,201,1,0,0,205,1,0,0,207,1,0,0,211,1,0,0,223,1,0,0,231,1,0,0,235,1,0,0,243,1,0,0,247,1,0,0,253,1,0,0,9,2,0,0,11,2,0,0,29,2,0,0,35,2,0,0,45,2,0,0,51,2,0,0,57,2,0,0,59,2,0,0,65,2,0,0,75,2,0,0,81,2,0,0,87,2,0,0,89,2,0,0,95,2,0,0,101,2,0,0,105,2,0,0,107,2,0,0,119,2,0,0,129,2,0,0,131,2,0,0,135,2,0,0,141,2,0,0,147,2,0,0,149,2,0,0,161,2,0,0,165,2,0,0,171,2,0,0,179,2,0,0,189,2,0,0,197,2,0,0,207,2,0,0,215,2,0,0,221,2,0,0,227,2,0,0,231,2,0,0,239,2,0,0,245,2,0,0,249,2,0,0,1,3,0,0,5,3,0,0,19,3,0,0,29,3,0,0,41,3,0,0,43,3,0,0,53,3,0,0,55,3,0,0,59,3,0,0,61,3,0,0,71,3,0,0,85,3,0,0,89,3,0,0,91,3,0,0,95,3,0,0,109,3,0,0,113,3,0,0,115,3,0,0,119,3,0,0,139,3,0,0,143,3,0,0,151,3,0,0,161,3,0,0,169,3,0,0,173,3,0,0,179,3,0,0,185,3,0,0,199,3,0,0,203,3,0,0,209,3,0,0,215,3,0,0,223,3,0,0,229,3,0,0,153,255,255,255,2,0,0,0,80,76,0,0,3,0,0,0,112,76,0,0,4,0,0,0,144,76,0,0,5,0,0,0,176,76,0,0,6,0,0,0,208,76,0,0,7,0,0,0,240,76,0,0,14,0,0,0,16,77,0,0,15,0,0,0,48,77,0,0,16,0,0,0,80,77,0,0,43,0,0,0,112,77,0,0,44,0,0,0,144,77,0,0,45,0,0,0,176,77,0,0,32,0,0,0,208,77,0,0,34,0,0,0,240,77,0,0,36,0,0,0,16,78,0,0,33,0,0,0,48,78,0,0,35,0,0,0,80,78,0,0,37,0,0,0,112,78,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,128,0,0,0,216,79,0,0,16,0,0,0,0,0,0,0,16,0,0,0,152,79,0,0,3,0,0,0,1,0,0,0,192,0,0,0,200,79,0,0,16,0,0,0,0,0,0,0,16,0,0,0,152,79,0,0,4,0,0,0,1,0,0,0,0,1,0,0,184,79,0,0,16,0,0,0,0,0,0,0,16,0,0,0,152,79,0,0,5,0,0,0,2,0,0,0,128,0,0,0,248,129,0,0,16,0,0,0,0,0,0,0,16,0,0,0,152,79,0,0,6,0,0,0,2,0,0,0,192,0,0,0,24,130,0,0,16,0,0,0,0,0,0,0,16,0,0,0,152,79,0,0,7,0,0,0,2,0,0,0,0,1,0,0,56,130,0,0,16,0,0,0,0,0,0,0,16,0,0,0,152,79,0,0,14,0,0,0,6,0,0,0,128,0,0,0,88,130,0,0,12,0,0,0,1,0,0,0,16,0,0,0,120,79,0,0,15,0,0,0,6,0,0,0,192,0,0,0,120,130,0,0,12,0,0,0,1,0,0,0,16,0,0,0,120,79,0,0,16,0,0,0,6,0,0,0,0,1,0,0,152,130,0,0,12,0,0,0,1,0,0,0,16,0,0,0,120,79,0,0,43,0,0,0,8,0,0,0,128,0,0,0,104,79,0,0,12,0,0,0,1,0,0,0,16,0,0,0,56,79,0,0,44,0,0,0,8,0,0,0,192,0,0,0,88,79,0,0,12,0,0,0,1,0,0,0,16,0,0,0,56,79,0,0,45,0,0,0,8,0,0,0,0,1,0,0,40,79,0,0,12,0,0,0,1,0,0,0,16,0,0,0,56,79,0,0,32,0,0,0,1,0,0,0,64,0,0,0,32,79,0,0,8,0,0,0,0,0,0,0,8,0,0,0,224,78,0,0,34,0,0,0,1,0,0,0,128,0,0,0,16,79,0,0,8,0,0,0,0,0,0,0,8,0,0,0,192,78,0,0,36,0,0,0,1,0,0,0,192,0,0,0,0,79,0,0,8,0,0,0,0,0,0,0,8,0,0,0,144,78,0,0,33,0,0,0,2,0,0,0,64,0,0,0,192,129,0,0,8,0,0,0,0,0,0,0,8,0,0,0,224,78,0,0,35,0,0,0,2,0,0,0,128,0,0,0,176,78,0,0,8,0,0,0,0,0,0,0,8,0,0,0,192,78,0,0,37,0,0,0,2,0,0,0,192,0,0,0,216,129,0,0,8,0,0,0,0,0,0,0,8,0,0,0,144,78,0,0,4,0,0,0,1,0,0,0,1,0,0,0,17,0,0,0,18,0,0,0,1,0,0,0,61,0,0,0,0,0,0,0,68,69,83,45,69,68,69,45,67,66,67,0,0,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,19,0,0,0,20,0,0,0,1,0,0,0,61,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,21,0,0,0,22,0,0,0,2,0,0,0,62,0,0,0,0,0,0,0,68,69,83,45,69,68,69,51,45,69,67,66,0,0,0,0,68,69,83,45,69,68,69,45,69,67,66,0,0,0,0,0,68,69,83,45,69,67,66,0,65,69,83,45,50,53,54,45,67,67,77,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,23,0,0,0,3,0,0,0,63,0,0,0,0,0,0,0,65,69,83,45,49,57,50,45,67,67,77,0,0,0,0,0,65,69,83,45,49,50,56,45,67,67,77,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,24,0,0,0,4,0,0,0,64,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,25,0,0,0,26,0,0,0,5,0,0,0,65,0,0,0,0,0,0,0,65,69,83,45,50,53,54,45,69,67,66,0,0,0,0,0,65,69,83,45,49,57,50,45,69,67,66,0,0,0,0,0,65,69,83,45,49,50,56,45,69,67,66,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,0,0,0,1,1,0,0,1,0,1,0,1,1,1,0,1,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,1,0,0,0,1,0,1,0,1,1,0,0,1,1,1,1,0,0,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,1,1,1,64,16,0,16,0,16,0,0,0,0,4,0,64,16,4,16,0,0,0,16,64,16,0,16,64,0,0,0,0,0,0,16,64,0,4,0,0,0,4,16,64,16,4,16,0,16,4,0,0,16,4,16,64,16,4,0,0,16,0,0,64,0,0,0,0,0,4,16,64,0,0,16,0,16,0,16,64,16,0,0,0,16,4,0,64,0,4,0,64,0,4,16,0,16,4,16,64,16,0,0,0,0,0,0,0,0,0,0,64,0,4,16,64,0,0,16,0,16,0,16,64,16,4,0,0,0,4,0,64,16,4,0,0,0,4,0,0,16,4,16,0,16,0,0,64,0,0,0,64,0,4,16,0,16,0,0,64,16,4,0,0,16,0,16,64,0,0,0,64,0,0,16,0,0,4,16,64,0,4,16,0,0,0,16,0,0,4,0,64,16,0,16,0,0,0,0,64,16,4,16,64,0,4,0,64,0,0,16,0,0,4,16,0,16,0,16,64,16,0,16,0,0,0,0,64,16,4,16,0,16,4,0,0,16,4,0,64,16,0,0,64,16,0,0,64,0,4,0,0,0,0,16,0,16,4,16,16,0,0,32,0,0,64,32,0,64,0,0,16,64,64,32,0,0,64,32,16,0,0,0,16,64,64,32,0,0,64,0,0,64,0,32,16,64,64,0,0,0,64,0,16,0,0,32,16,0,64,0,0,64,0,32,0,0,0,32,16,64,0,0,0,0,0,0,16,0,64,0,16,64,0,32,0,64,0,0,0,64,64,0,16,64,0,32,16,0,0,0,16,0,64,32,16,0,64,32,0,0,0,0,16,64,64,0,0,64,64,32,16,64,0,0,0,64,64,0,0,64,64,32,0,0,0,32,0,64,0,32,16,0,0,0,16,0,64,32,0,64,64,0,16,64,64,32,0,0,64,0,16,64,0,0,16,0,0,32,0,0,64,0,0,64,0,32,0,0,0,32,16,64,0,0,16,0,0,32,16,64,64,32,0,64,64,0,0,0,64,32,16,64,64,0,0,64,64,32,0,0,0,0,16,0,64,32,16,0,0,0,0,64,0,0,0,0,64,32,16,64,64,0,0,64,0,0,16,0,64,0,16,64,0,32,0,0,0,0,0,64,64,32,0,0,0,32,16,0,64,0,16,64,0,32,1,32,128,0,129,32,0,0,129,32,0,0,128,0,0,0,128,32,128,0,129,0,128,0,1,0,128,0,1,32,0,0,0,0,0,0,0,32,128,0,0,32,128,0,129,32,128,0,129,0,0,0,0,0,0,0,128,0,128,0,1,0,128,0,1,0,0,0,0,32,0,0,0,0,128,0,1,32,128,0,128,0,0,0,0,0,128,0,1,32,0,0,128,32,0,0,129,0,128,0,1,0,0,0,128,32,0,0,128,0,128,0,0,32,0,0,128,32,128,0,129,32,128,0,129,0,0,0,128,0,128,0,1,0,128,0,0,32,128,0,129,32,128,0,129,0,0,0,0,0,0,0,0,0,0,0,0,32,128,0,128,32,0,0,128,0,128,0,129,0,128,0,1,0,0,0,1,32,128,0,129,32,0,0,129,32,0,0,128,0,0,0,129,32,128,0,129,0,0,0,1,0,0,0,0,32,0,0,1,0,128,0,1,32,0,0,128,32,128,0,129,0,128,0,1,32,0,0,128,32,0,0,0,0,128,0,1,32,128,0,128,0,0,0,0,0,128,0,0,32,0,0,128,32,128,0,32,128,16,128,0,128,0,128,0,128,0,0,32,128,16,0,0,0,16,0,32,0,0,0,32,0,16,128,32,128,0,128,32,0,0,128,32,128,16,128,0,128,16,128,0,0,0,128,0,128,0,128,0,0,16,0,32,0,0,0,32,0,16,128,0,128,16,0,32,0,16,0,32,128,0,128,0,0,0,0,0,0,0,128,0,128,0,0,32,128,16,0,0,0,16,128,32,0,16,0,32,0,0,128,0,0,0,0,0,128,16,0,32,128,0,0,0,128,16,128,0,0,16,128,32,128,0,0,0,0,0,0,32,128,16,0,32,0,16,128,0,0,16,0,32,128,0,128,0,0,16,128,0,128,16,128,0,128,0,0,0,0,16,128,0,128,0,128,32,0,0,0,32,128,16,128,32,128,16,0,32,0,0,0,0,128,0,0,0,0,0,128,32,128,0,0,0,128,16,128,0,0,16,0,32,0,0,128,32,0,16,0,32,128,0,128,32,0,0,128,32,0,16,0,0,128,16,0,0,0,0,0,0,128,0,128,32,128,0,0,0,0,0,128,32,0,16,128,32,128,16,128,0,128,16,0,0,0,32,0,2,0,32,4,2,8,0,4,0,0,0,0,0,8,0,0,2,8,0,4,2,8,32,0,0,8,32,4,2,8,32,4,0,0,32,0,0,0,0,0,2,0,0,4,2,0,0,0,0,0,0,4,2,0,32,4,2,8,0,0,0,8,0,4,2,8,32,0,2,0,32,0,0,8,0,4,2,0,0,4,0,0,32,4,0,8,32,4,2,0,32,0,0,0,32,4,0,8,0,0,2,8,0,0,2,8,32,4,0,8,32,0,2,0,0,0,0,0,0,4,0,8,32,0,0,0,0,4,0,8,32,0,0,0,32,0,2,8,0,4,2,8,0,4,2,0,32,4,2,0,32,4,2,0,0,0,2,0,32,0,0,0,0,4,0,8,0,4,0,0,32,0,0,8,32,4,2,8,0,0,2,8,32,0,0,8,32,4,2,8,0,0,2,0,0,4,2,8,32,4,0,0,32,4,0,8,32,0,0,0,0,0,2,0,0,0,2,8,32,4,0,0,0,0,2,8,32,0,0,0,32,4,0,8,0,0,2,0,0,4,0,8,0,4,0,8,0,0,2,0,32,0,0,1,0,0,0,1,8,2,0,0,8,2,0,1,0,66,0,0,8,0,0,1,0,0,0,0,0,64,0,0,8,2,0,1,8,64,0,0,8,0,0,1,0,2,0,1,8,64,0,1,0,66,0,0,8,66,0,1,8,0,0,0,0,64,0,0,0,2,0,0,8,64,0,0,8,64,0,0,0,0,0,1,0,64,0,1,8,66,0,1,8,66,0,1,0,2,0,0,8,66,0,1,0,64,0,0,0,0,0,0,0,66,0,1,8,2,0,0,0,2,0,0,0,66,0,1,8,0,0,0,8,0,0,1,0,66,0,1,0,0,0,0,0,2,0,0,0,64,0,0,8,2,0,1,0,66,0,1,8,64,0,1,0,2,0,0,0,64,0,0,8,66,0,1,8,2,0,1,8,64,0,1,0,0,0,0,0,2,0,0,8,66,0,1,8,66,0,1,8,0,0,0,0,66,0,1,8,66,0,0,8,2,0,0,0,0,0,0,8,64,0,0,0,66,0,1,8,0,0,1,0,2,0,1,0,64,0,0,8,0,0,0,0,0,0,0,8,64,0,1,8,2,0,1,0,64,8,2,0,0,0,2,2,8,0,0,0,0,8,0,2,8,0,2,0,8,0,0,0,0,8,2,2,0,0,2,0,8,8,0,2,0,8,0,0,8,8,0,0,8,0,0,2,0,8,2,2,8,8,0,2,0,0,0,2,8,8,2,0,0,0,0,0,8,8,0,0,0,0,2,2,8,0,2,0,0,0,2,2,0,0,0,2,8,8,0,2,8,8,2,2,0,8,2,0,8,0,2,2,0,0,0,2,0,8,2,0,8,8,0,0,0,8,2,2,8,0,2,0,0,0,0,0,8,0,2,2,8,0,0,0,8,8,0,2,0,8,2,0,0,0,0,2,0,0,2,2,8,0,2,0,8,0,0,0,0,0,2,0,0,8,0,2,0,8,2,2,8,0,2,0,8,8,0,0,8,0,2,0,0,0,0,0,0,8,0,2,8,8,2,0,8,0,0,2,0,0,0,0,8,8,2,2,8,8,0,0,0,8,2,2,0,0,2,2,0,8,0,0,8,0,0,2,8,8,2,0,8,8,2,0,0,0,0,2,8,8,2,2,0,8,0,0,0,8,0,2,8,0,2,2,0,0,4,1,1,0,0,0,0,0,0,1,0,4,4,1,1,4,0,1,1,4,4,1,0,4,0,0,0,0,0,1,0,0,4,0,0,0,4,1,1,4,4,1,1,0,4,0,0,4,4,0,1,4,0,1,1,0,0,0,1,4,0,0,0,4,4,0,0,0,4,0,1,0,4,0,1,0,4,1,0,0,4,1,0,0,0,1,1,0,0,1,1,4,4,0,1,4,0,1,0,4,0,0,1,4,0,0,1,4,0,1,0,0,0,0,0,4,4,0,0,4,4,1,0,0,0,0,1,0,0,1,0,4,4,1,1,4,0,0,0,0,0,1,1,0,4,1,1,0,0,0,1,0,0,0,1,0,4,0,0,4,0,1,1,0,0,1,0,0,4,1,0,4,0,0,1,0,4,0,0,4,0,0,0,4,4,0,1,4,4,1,0,4,4,1,1,4,0,1,0,0,0,1,1,4,4,0,1,4,0,0,1,4,4,0,0,4,4,1,0,0,4,1,1,4,4,0,0,0,4,0,1,0,4,0,1,0,0,0,0,4,0,1,0,0,4,1,0,0,0,0,0,4,0,1,1,255,255,255,255,255,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,177,185,70,193,236,222,184,254,73,48,36,114,171,233,167,15,231,128,156,229,25,5,33,100,49,40,210,180,177,201,107,20,54,248,222,153,255,255,255,255,255,255,255,255,255,255,255,255,18,16,255,130,253,10,255,244,0,136,161,67,235,32,191,124,246,144,48,176,14,168,141,24,17,72,121,30,161,119,249,115,213,205,36,107,237,17,16,99,120,218,200,255,149,43,25,7,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,180,255,85,35,67,57,11,39,186,216,191,215,183,176,68,80,86,50,65,245,171,179,4,12,133,10,5,180,0,0,0,0,61,42,92,92,69,41,221,19,62,240,184,224,162,22,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,33,29,92,17,214,128,50,52,34,17,194,86,211,193,3,74,185,144,19,50,127,191,180,107,189,12,14,183,0,0,0,0,52,126,0,133,153,129,213,68,100,71,7,90,160,117,67,205,230,223,34,76,251,35,247,181,136,99,55,189,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,255,255,255,255,75,96,210,39,62,60,206,59,246,176,83,204,176,6,29,101,188,134,152,118,85,189,235,179,231,147,58,170,216,53,198,90,81,37,99,252,194,202,185,243,132,158,23,167,173,250,230,188,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,255,150,194,152,216,69,57,161,244,160,51,235,45,129,125,3,119,242,64,164,99,229,230,188,248,71,66,44,225,242,209,23,107,245,81,191,55,104,64,182,203,206,94,49,107,87,51,206,43,22,158,15,124,74,235,231,142,155,127,26,254,226,66,227,79,255,255,255,255,0,0,0,0,0,0,0,0,255,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,239,42,236,211,237,200,133,42,157,209,46,138,141,57,86,198,90,135,19,80,143,8,20,3,18,65,129,254,110,156,29,24,25,45,248,227,107,5,142,152,228,231,62,226,167,47,49,179,115,41,197,204,106,25,236,236,122,167,176,72,178,13,26,88,223,45,55,244,129,77,99,199,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,183,10,118,114,56,94,84,58,108,41,85,191,93,242,2,85,56,42,84,130,224,65,247,89,152,155,167,139,98,59,29,110,116,173,32,243,30,199,177,142,55,5,139,190,34,202,135,170,95,14,234,144,124,29,67,122,157,129,126,29,206,177,96,10,192,184,240,181,19,49,218,233,124,20,154,40,189,29,244,248,41,220,146,146,191,152,158,93,111,44,38,150,74,222,23,54,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,63,80,107,212,31,69,239,241,52,44,61,136,223,115,53,7,191,177,59,189,192,82,22,123,147,126,236,81,57,25,86,225,9,241,142,145,137,180,184,243,21,179,153,91,114,218,162,238,64,133,182,160,33,154,146,31,154,28,142,97,185,62,149,81,0,0,0,0,0,0,0,9,100,56,145,30,183,111,187,174,71,156,137,184,201,181,59,208,165,9,247,72,1,204,127,107,150,47,191,131,135,134,81,250,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,102,189,229,194,49,126,126,249,155,66,106,133,193,179,72,51,222,168,255,162,39,193,29,254,40,89,231,239,119,94,75,161,186,61,77,107,96,175,40,248,33,181,63,5,57,129,100,156,66,180,149,35,102,203,62,158,205,233,4,4,183,6,142,133,198,0,0,0,0,0,0,0,80,102,209,159,118,148,190,136,64,194,114,162,134,112,60,53,97,7,173,63,1,185,80,197,64,38,244,94,153,114,238,151,44,102,62,39,23,189,175,23,104,68,155,87,73,68,245,152,217,27,125,44,180,95,138,92,4,192,59,154,120,106,41,57,24,1,0,0,0,0,0,0,55,238,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,141,253,222,116,106,70,105,15,23,252,242,38,254,255,255,255,255,255,255,255,255,255,255,255,125,108,224,234,177,209,165,29,52,244,183,128,2,125,176,38,174,233,87,192,14,241,79,219,157,47,94,217,136,170,130,64,52,134,190,21,208,99,65,132,167,40,86,156,109,47,47,155,109,229,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,247,177,159,118,113,169,240,202,132,97,236,210,232,220,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,92,164,183,182,14,101,126,15,169,117,112,228,233,103,164,105,161,40,252,48,223,153,240,77,51,91,69,161,0,0,0,0,165,97,109,85,219,75,202,226,89,189,176,192,247,25,227,247,214,251,202,130,66,52,186,127,237,159,8,126,0,0,0,0,47,252,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,65,65,54,208,140,94,210,191,59,160,72,175,230,220,174,186,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,152,23,248,22,91,129,242,89,217,40,206,45,219,252,155,2,7,11,135,206,149,98,160,85,172,187,220,249,126,102,190,121,184,212,16,251,143,208,71,156,25,84,133,166,72,180,23,253,168,8,17,14,252,251,164,93,101,196,163,38,119,218,58,72,119,83,110,31,29,72,19,32,40,32,38,213,35,246,59,110,114,141,131,157,144,10,102,62,188,169,238,161,219,87,251,169,217,181,48,243,68,75,74,233,108,92,220,38,193,85,128,251,231,255,122,65,48,117,246,238,87,48,44,252,117,9,90,125,182,7,140,255,24,220,204,107,206,225,247,92,41,22,132,149,191,124,215,187,217,181,48,243,68,75,74,233,108,92,220,38,167,86,72,151,130,14,30,144,247,166,97,181,163,122,57,140,113,141,131,157,144,10,102,62,188,169,238,161,219,87,251,169,98,50,206,154,189,83,68,58,194,35,189,227,225,39,222,185,175,183,129,252,47,72,75,44,203,87,126,203,185,174,210,139,151,105,4,47,199,84,29,92,84,142,237,45,19,69,119,194,201,29,97,20,26,70,248,151,253,196,218,195,53,248,126,84,83,236,7,49,19,0,71,135,113,26,29,144,41,167,211,172,35,17,183,127,25,218,177,18,180,86,84,237,9,113,47,21,223,65,230,80,126,111,93,15,40,109,56,163,130,30,185,140,38,40,206,34,221,199,168,4,235,212,58,80,74,129,165,138,15,249,145,186,239,101,145,19,135,39,178,79,142,162,190,194,160,175,5,206,10,8,114,60,12,21,140,61,198,130,195,123,17,76,80,250,150,134,183,58,148,201,219,149,2,57,180,124,213,98,235,62,165,14,136,46,166,210,220,7,225,125,183,47,124,68,240,22,84,181,57,139,38,40,206,34,221,199,168,4,101,101,4,233,2,50,136,59,16,195,127,107,175,182,58,207,167,37,4,172,108,110,22,31,179,86,84,237,9,113,47,21,223,65,230,80,126,111,93,15,40,109,56,163,130,30,185,140,30,175,212,71,226,178,135,239,170,70,214,54,52,224,38,232,232,16,189,12,254,202,127,219,227,79,241,126,231,163,71,136,107,63,193,183,129,58,166,162,255,69,207,104,240,100,28,29,21,83,60,38,65,3,130,66,17,129,145,119,33,70,70,14,40,41,145,249,79,5,156,225,100,88,236,254,41,11,183,98,82,213,207,149,142,235,177,92,164,194,249,32,117,29,190,138,243,72,58,88,86,96,170,40,133,198,130,45,47,255,129,40,230,128,163,230,42,161,205,174,66,104,198,155,0,155,77,125,113,8,51,112,202,156,99,214,14,210,201,179,179,141,48,203,7,252,201,51,174,230,212,63,139,196,233,219,184,157,221,170,202,148,252,119,77,172,193,231,185,199,242,43,167,23,17,127,181,200,154,139,201,241,46,10,161,58,37,168,90,93,237,45,188,99,152,234,202,65,52,168,16,22,249,61,141,221,203,148,197,76,35,172,69,113,50,226,137,59,96,139,49,163,48,120,35,247,22,128,99,189,9,40,221,229,186,94,183,80,64,152,103,62,8,220,202,148,252,119,77,172,193,231,185,199,242,43,167,23,17,127,181,200,154,139,201,241,46,10,161,58,37,168,90,93,237,45,188,99,152,234,202,65,52,168,16,22,249,61,105,0,169,156,130,150,135,181,221,218,93,8,129,211,177,29,71,16,172,127,25,97,134,65,25,38,169,76,65,92,62,85,112,8,51,112,202,156,99,214,14,210,201,179,179,141,48,203,7,252,201,51,174,230,212,63,139,196,233,219,184,157,221,170,34,248,185,188,9,34,53,139,104,94,106,64,71,80,109,124,95,125,185,147,123,104,209,80,141,212,208,226,120,31,59,255,142,9,208,244,238,98,59,180,193,22,217,181,112,159,237,133,147,106,76,156,46,50,33,90,100,217,46,216,189,228,174,129,146,8,216,58,15,30,205,120,6,84,240,168,47,43,202,209,174,99,39,138,216,75,202,91,94,72,95,74,73,222,220,178,17,129,31,136,91,197,0,160,26,123,165,36,0,247,9,242,253,34,120,207,169,191,234,192,236,50,99,86,93,56,222,125,48,49,68,66,52,50,0,0,209,3,0,0,1,0,0,0,147,26,0,0,1,0,0,0,201,17,0,0,1,0,0,0,47,100,101,118,47,117,114,97,110,100,111,109,0,0,0,0,114,98,0,0,0,0,0,0,88,53,48,57,32,45,32,73,110,112,117,116,32,105,110,118,97,108,105,100,0,0,0,0,88,53,48,57,32,45,32,67,82,84,47,67,82,76,47,67,83,82,32,104,97,115,32,97,110,32,117,110,115,117,112,112,111,114,116,101,100,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,0,0,0,0,88,53,48,57,32,45,32,84,104,101,32,101,120,116,101,110,115,105,111,110,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,88,53,48,57,32,45,32,84,104,101,32,115,105,103,110,97,116,117,114,101,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,88,53,48,57,32,45,32,84,104,101,32,100,97,116,101,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,115,32,105,110,118,97,108,105,100,0,88,53,48,57,32,45,32,84,104,101,32,110,97,109,101,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,115,32,105,110,118,97,108,105,100,0,82,83,65,32,45,32,84,104,101,32,114,97,110,100,111,109,32,103,101,110,101,114,97,116,111,114,32,102,97,105,108,101,100,32,116,111,32,103,101,110,101,114,97,116,101,32,110,111,110,45,122,101,114,111,115,0,82,83,65,32,45,32,84,104,101,32,111,117,116,112,117,116,32,98,117,102,102,101,114,32,102,111,114,32,100,101,99,114,121,112,116,105,111,110,32,105,115,32,110,111,116,32,108,97,114,103,101,32,101,110,111,117,103,104,0,0,0,0,0,0,82,83,65,32,45,32,84,104,101,32,80,75,67,83,35,49,32,118,101,114,105,102,105,99,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,82,83,65,32,45,32,84,104,101,32,112,114,105,118,97,116,101,32,107,101,121,32,111,112,101,114,97,116,105,111,110,32,102,97,105,108,101,100,0,0,82,83,65,32,45,32,84,104,101,32,112,117,98,108,105,99,32,107,101,121,32,111,112,101,114,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,82,83,65,32,45,32,75,101,121,32,102,97,105,108,101,100,32,116,111,32,112,97,115,115,32,116,104,101,32,108,105,98,114,97,114,121,39,115,32,118,97,108,105,100,105,116,121,32,99,104,101,99,107,0,0,0,80,75,67,83,53,32,45,32,85,110,101,120,112,101,99,116,101,100,32,65,83,78,46,49,32,100,97,116,97,0,0,0,80,75,67,83,49,50,32,45,32,71,105,118,101,110,32,112,114,105,118,97,116,101,32,107,101,121,32,112,97,115,115,119,111,114,100,32,100,111,101,115,32,110,111,116,32,97,108,108,111,119,32,102,111,114,32,99,111,114,114,101,99,116,32,100,101,99,114,121,112,116,105,111,110,0,0,0,0,0,0,0,80,75,67,83,49,50,32,45,32,80,66,69,32,65,83,78,46,49,32,100,97,116,97,32,110,111,116,32,97,115,32,101,120,112,101,99,116,101,100,0,80,75,67,83,49,50,32,45,32,70,101,97,116,117,114,101,32,110,111,116,32,97,118,97,105,108,97,98,108,101,44,32,101,46,103,46,32,117,110,115,117,112,112,111,114,116,101,100,32,101,110,99,114,121,112,116,105,111,110,32,115,99,104,101,109,101,0,0,0,0,0,0,80,75,32,45,32,84,104,101,32,115,105,103,110,97,116,117,114,101,32,105,115,32,118,97,108,105,100,32,98,117,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,108,101,115,115,32,116,104,97,110,32,101,120,112,101,99,116,101,100,0,0,0,0,0,0,0,0,80,75,32,45,32,69,108,108,105,112,116,105,99,32,99,117,114,118,101,32,105,115,32,117,110,115,117,112,112,111,114,116,101,100,32,40,111,110,108,121,32,78,73,83,84,32,99,117,114,118,101,115,32,97,114,101,32,115,117,112,112,111,114,116,101,100,41,0,0,0,0,0,80,75,32,45,32,84,104,101,32,97,108,103,111,114,105,116,104,109,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,80,75,32,45,32,84,104,101,32,112,117,98,107,101,121,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,115,32,105,110,118,97,108,105,100,32,40,111,110,108,121,32,82,83,65,32,97,110,100,32,69,67,32,97,114,101,32,115,117,112,112,111,114,116,101,100,41,0,80,75,32,45,32,71,105,118,101,110,32,112,114,105,118,97,116,101,32,107,101,121,32,112,97,115,115,119,111,114,100,32,100,111,101,115,32,110,111,116,32,97,108,108,111,119,32,102,111,114,32,99,111,114,114,101,99,116,32,100,101,99,114,121,112,116,105,111,110,0,0,0,80,75,32,45,32,75,101,121,32,97,108,103,111,114,105,116,104,109,32,105,115,32,117,110,115,117,112,112,111,114,116,101,100,32,40,111,110,108,121,32,82,83,65,32,97,110,100,32,69,67,32,97,114,101,32,115,117,112,112,111,114,116,101,100,41,0,0,0,0,0,0,0,80,75,32,45,32,85,110,115,117,112,112,111,114,116,101,100,32,107,101,121,32,118,101,114,115,105,111,110,0,0,0,0,80,75,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,0,80,75,32,45,32,84,121,112,101,32,109,105,115,109,97,116,99,104,44,32,101,103,32,97,116,116,101,109,112,116,32,116,111,32,101,110,99,114,121,112,116,32,119,105,116,104,32,97,110,32,69,67,68,83,65,32,107,101,121,0,0,0,0,0,80,75,32,45,32,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,80,69,77,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,80,69,77,32,45,32,85,110,97,118,97,105,108,97,98,108,101,32,102,101,97,116,117,114,101,44,32,101,46,103,46,32,104,97,115,104,105,110,103,47,101,110,99,114,121,112,116,105,111,110,32,99,111,109,98,105,110,97,116,105,111,110,0,0,80,69,77,32,45,32,80,114,105,118,97,116,101,32,107,101,121,32,112,97,115,115,119,111,114,100,32,99,97,110,39,116,32,98,101,32,101,109,112,116],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+16248);allocate([121,0,0,0,0,0,0,0,80,69,77,32,45,32,85,110,115,117,112,112,111,114,116,101,100,32,107,101,121,32,101,110,99,114,121,112,116,105,111,110,32,97,108,103,111,114,105,116,104,109,0,0,0,0,0,0,67,73,80,72,69,82,32,45,32,84,104,101,32,115,101,108,101,99,116,101,100,32,102,101,97,116,117,114,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,0,67,73,80,72,69,82,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,67,73,80,72,69,82,32,45,32,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,0,0,0,0,0,0,67,73,80,72,69,82,32,45,32,73,110,112,117,116,32,100,97,116,97,32,99,111,110,116,97,105,110,115,32,105,110,118,97,108,105,100,32,112,97,100,100,105,110,103,32,97,110,100,32,105,115,32,114,101,106,101,99,116,101,100,0,0,0,0,67,73,80,72,69,82,32,45,32,68,101,99,114,121,112,116,105,111,110,32,111,102,32,98,108,111,99,107,32,114,101,113,117,105,114,101,115,32,97,32,102,117,108,108,32,98,108,111,99,107,0,0,0,0,0,0,67,73,80,72,69,82,32,45,32,65,117,116,104,101,110,116,105,99,97,116,105,111,110,32,102,97,105,108,101,100,32,40,102,111,114,32,65,69,65,68,32,109,111,100,101,115,41,0,69,67,73,69,83,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,69,67,73,69,83,32,45,32,79,117,116,112,117,116,32,98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,0,69,67,73,69,83,32,45,32,69,110,99,114,121,112,116,101,100,32,100,97,116,97,32,105,115,32,109,97,108,102,111,114,109,101,100,0,0,0,0,0,69,67,73,69,83,32,45,32,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,69,67,80,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,69,67,80,32,45,32,84,104,101,32,98,117,102,102,101,114,32,105,115,32,116,111,111,32,115,109,97,108,108,32,116,111,32,119,114,105,116,101,32,116,111,0,0,0,0,0,0,0,69,67,80,32,45,32,82,101,113,117,101,115,116,101,100,32,99,117,114,118,101,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,0,0,0,0,69,67,80,32,45,32,84,104,101,32,115,105,103,110,97,116,117,114,101,32,105,115,32,110,111,116,32,118,97,108,105,100,0,0,0,0,0,0,0,0,69,67,80,32,45,32,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,0,0,69,67,80,32,45,32,71,101,110,101,114,97,116,105,111,110,32,111,102,32,114,97,110,100,111,109,32,118,97,108,117,101,44,32,115,117,99,104,32,97,115,32,40,101,112,104,101,109,101,114,97,108,41,32,107,101,121,44,32,102,97,105,108,101,100,0,0,0,0,0,0,0,69,67,80,32,45,32,73,110,118,97,108,105,100,32,112,114,105,118,97,116,101,32,111,114,32,112,117,98,108,105,99,32,107,101,121,0,0,0,0,0,69,67,80,32,45,32,83,105,103,110,97,116,117,114,101,32,105,115,32,118,97,108,105,100,32,98,117,116,32,115,104,111,114,116,101,114,32,116,104,97,110,32,116,104,101,32,117,115,101,114,45,115,117,112,112,108,105,101,100,32,108,101,110,103,116,104,0,0,0,0,0,0,75,68,70,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,77,68,32,45,32,84,104,101,32,115,101,108,101,99,116,101,100,32,102,101,97,116,117,114,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,0,0,0,0,0,77,68,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,0,77,68,32,45,32,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,0,0,77,68,32,45,32,79,112,101,110,105,110,103,32,111,114,32,114,101,97,100,105,110,103,32,111,102,32,102,105,108,101,32,102,97,105,108,101,100,0,0,80,69,77,32,45,32,78,111,32,80,69,77,32,104,101,97,100,101,114,32,111,114,32,102,111,111,116,101,114,32,102,111,117,110,100,0,0,0,0,0,80,69,77,32,45,32,80,69,77,32,115,116,114,105,110,103,32,105,115,32,110,111,116,32,97,115,32,101,120,112,101,99,116,101,100,0,0,0,0,0,80,69,77,32,45,32,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,0,80,69,77,32,45,32,82,83,65,32,73,86,32,105,115,32,110,111,116,32,105,110,32,104,101,120,45,102,111,114,109,97,116,0,0,0,0,0,0,0,80,69,77,32,45,32,71,105,118,101,110,32,112,114,105,118,97,116,101,32,107,101,121,32,112,97,115,115,119,111,114,100,32,100,111,101,115,32,110,111,116,32,97,108,108,111,119,32,102,111,114,32,99,111,114,114,101,99,116,32,100,101,99,114,121,112,116,105,111,110,0,0,80,75,32,45,32,82,101,97,100,47,119,114,105,116,101,32,111,102,32,102,105,108,101,32,102,97,105,108,101,100,0,0,80,75,32,45,32,73,110,118,97,108,105,100,32,107,101,121,32,116,97,103,32,111,114,32,118,97,108,117,101,0,0,0,80,75,32,45,32,80,114,105,118,97,116,101,32,107,101,121,32,112,97,115,115,119,111,114,100,32,99,97,110,39,116,32,98,101,32,101,109,112,116,121,0,0,0,0,0,0,0,0,80,75,32,45,32,85,110,97,118,97,105,108,97,98,108,101,32,102,101,97,116,117,114,101,44,32,101,46,103,46,32,82,83,65,32,100,105,115,97,98,108,101,100,32,102,111,114,32,82,83,65,32,107,101,121,0,80,75,67,83,49,50,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,80,75,67,83,53,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,80,75,67,83,53,32,45,32,82,101,113,117,101,115,116,101,100,32,101,110,99,114,121,112,116,105,111,110,32,111,114,32,100,105,103,101,115,116,32,97,108,103,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,0,0,0,0,0,0,0,80,75,67,83,53,32,45,32,71,105,118,101,110,32,112,114,105,118,97,116,101,32,107,101,121,32,112,97,115,115,119,111,114,100,32,100,111,101,115,32,110,111,116,32,97,108,108,111,119,32,102,111,114,32,99,111,114,114,101,99,116,32,100,101,99,114,121,112,116,105,111,110,0,0,0,0,0,0,0,0,82,83,65,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,82,83,65,32,45,32,73,110,112,117,116,32,100,97,116,97,32,99,111,110,116,97,105,110,115,32,105,110,118,97,108,105,100,32,112,97,100,100,105,110,103,32,97,110,100,32,105,115,32,114,101,106,101,99,116,101,100,0,0,0,0,0,0,0,82,83,65,32,45,32,83,111,109,101,116,104,105,110,103,32,102,97,105,108,101,100,32,100,117,114,105,110,103,32,103,101,110,101,114,97,116,105,111,110,32,111,102,32,97,32,107,101,121,0,0,0,0,0,0,0,88,53,48,57,32,45,32,85,110,97,118,97,105,108,97,98,108,101,32,102,101,97,116,117,114,101,44,32,101,46,103,46,32,82,83,65,32,104,97,115,104,105,110,103,47,101,110,99,114,121,112,116,105,111,110,32,99,111,109,98,105,110,97,116,105,111,110,0,0,0,0,0,88,53,48,57,32,45,32,82,101,113,117,101,115,116,101,100,32,79,73,68,32,105,115,32,117,110,107,110,111,119,110,0,88,53,48,57,32,45,32,84,104,101,32,67,82,84,47,67,82,76,47,67,83,82,32,102,111,114,109,97,116,32,105,115,32,105,110,118,97,108,105,100,44,32,101,46,103,46,32,100,105,102,102,101,114,101,110,116,32,116,121,112,101,32,101,120,112,101,99,116,101,100,0,0,88,53,48,57,32,45,32,84,104,101,32,67,82,84,47,67,82,76,47,67,83,82,32,118,101,114,115,105,111,110,32,101,108,101,109,101,110,116,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,88,53,48,57,32,45,32,84,104,101,32,115,101,114,105,97,108,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,0,0,0,88,53,48,57,32,45,32,84,104,101,32,97,108,103,111,114,105,116,104,109,32,116,97,103,32,111,114,32,118,97,108,117,101,32,105,115,32,105,110,118,97,108,105,100,0,0,0,0,88,53,48,57,32,45,32,83,105,103,110,97,116,117,114,101,32,97,108,103,111,114,105,116,104,109,32,40,111,105,100,41,32,105,115,32,117,110,115,117,112,112,111,114,116,101,100,0,88,53,48,57,32,45,32,83,105,103,110,97,116,117,114,101,32,97,108,103,111,114,105,116,104,109,115,32,100,111,32,110,111,116,32,109,97,116,99,104,46,32,40,115,101,101,32,92,99,32,58,58,109,98,101,100,116,108,115,95,120,53,48,57,95,99,114,116,32,115,105,103,95,111,105,100,41,0,0,0,88,53,48,57,32,45,32,67,101,114,116,105,102,105,99,97,116,101,32,118,101,114,105,102,105,99,97,116,105,111,110,32,102,97,105,108,101,100,44,32,101,46,103,46,32,67,82,76,44,32,67,65,32,111,114,32,115,105,103,110,97,116,117,114,101,32,99,104,101,99,107,32,102,97,105,108,101,100,0,0,88,53,48,57,32,45,32,70,111,114,109,97,116,32,110,111,116,32,114,101,99,111,103,110,105,122,101,100,32,97,115,32,68,69,82,32,111,114,32,80,69,77,0,0,0,0,0,0,88,53,48,57,32,45,32,65,108,108,111,99,97,116,105,111,110,32,111,102,32,109,101,109,111,114,121,32,102,97,105,108,101,100,0,0,0,0,0,0,88,53,48,57,32,45,32,82,101,97,100,47,119,114,105,116,101,32,111,102,32,102,105,108,101,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,88,53,48,57,32,45,32,68,101,115,116,105,110,97,116,105,111,110,32,98,117,102,102,101,114,32,105,115,32,116,111,111,32,115,109,97,108,108,0,0,85,78,75,78,79,87,78,32,69,82,82,79,82,32,67,79,68,69,32,40,37,48,52,88,41,0,0,0,0,0,0,0,32,58,32,0,0,0,0,0,79,73,68,32,45,32,79,73,68,32,105,115,32,110,111,116,32,102,111,117,110,100,0,0,75,68,70,50,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,75,68,70,49,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,72,77,65,67,95,68,82,66,71,32,45,32,84,104,101,32,101,110,116,114,111,112,121,32,115,111,117,114,99,101,32,102,97,105,108,101,100,0,0,0,72,77,65,67,95,68,82,66,71,32,45,32,73,110,112,117,116,32,116,111,111,32,108,97,114,103,101,32,40,69,110,116,114,111,112,121,32,43,32,97,100,100,105,116,105,111,110,97,108,41,0,0,0,0,0,0,72,77,65,67,95,68,82,66,71,32,45,32,84,111,111,32,109,97,110,121,32,114,97,110,100,111,109,32,114,101,113,117,101,115,116,101,100,32,105,110,32,115,105,110,103,108,101,32,99,97,108,108,0,0,0,0,71,67,77,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,71,67,77,32,45,32,65,117,116,104,101,110,116,105,99,97,116,101,100,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,0,0,0,69,78,84,82,79,80,89,32,45,32,82,101,97,100,47,119,114,105,116,101,32,101,114,114,111,114,32,105,110,32,102,105,108,101,0,0,0,0,0,0,69,78,84,82,79,80,89,32,45,32,78,111,32,115,111,117,114,99,101,115,32,104,97,118,101,32,98,101,101,110,32,97,100,100,101,100,32,116,111,32,112,111,108,108,0,0,0,0,69,78,84,82,79,80,89,32,45,32,78,111,32,109,111,114,101,32,115,111,117,114,99,101,115,32,99,97,110,32,98,101,32,97,100,100,101,100,0,0,65,69,83,32,45,32,73,110,118,97,108,105,100,32,107,101,121,32,108,101,110,103,116,104,0,0,0,0,0,0,0,0,65,69,83,32,45,32,73,110,118,97,108,105,100,32,100,97,116,97,32,105,110,112,117,116,32,108,101,110,103,116,104,0,65,83,78,49,32,45,32,79,117,116,32,111,102,32,100,97,116,97,32,119,104,101,110,32,112,97,114,115,105,110,103,32,97,110,32,65,83,78,49,32,100,97,116,97,32,115,116,114,117,99,116,117,114,101,0,0,65,83,78,49,32,45,32,65,83,78,49,32,116,97,103,32,119,97,115,32,111,102,32,97,110,32,117,110,101,120,112,101,99,116,101,100,32,118,97,108,117,101,0,0,0,0,0,0,65,83,78,49,32,45,32,69,114,114,111,114,32,119,104,101,110,32,116,114,121,105,110,103,32,116,111,32,100,101,116,101,114,109,105,110,101,32,116,104,101,32,108,101,110,103,116,104,32,111,114,32,105,110,118,97,108,105,100,32,108,101,110,103,116,104,0,0,0,0,0,0,65,83,78,49,32,45,32,65,99,116,117,97,108,32,108,101,110,103,116,104,32,100,105,102,102,101,114,115,32,102,114,111,109,32,101,120,112,101,99,116,101,100,32,108,101,110,103,116,104,0,0,0,0,0,0,0,65,83,78,49,32,45,32,68,97,116,97,32,105,115,32,105,110,118,97,108,105,100,46,32,40,110,111,116,32,117,115,101,100,41,0,0,0,0,0,0,65,83,78,49,32,45,32,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,0,65,83,78,49,32,45,32,66,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,32,119,104,101,110,32,119,114,105,116,105,110,103,32,65,83,78,46,49,32,100,97,116,97,32,115,116,114,117,99,116,117,114,101,0,0,0,0,0,0,0,66,65,83,69,54,52,32,45,32,79,117,116,112,117,116,32,98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,0,0,0,0,0,0,0,0,66,65,83,69,54,52,32,45,32,73,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,32,105,110,32,105,110,112,117,116,0,0,0,0,0,66,73,71,78,85,77,32,45,32,65,110,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,32,119,104,105,108,101,32,114,101,97,100,105,110,103,32,102,114,111,109,32,111,114,32,119,114,105,116,105,110,103,32,116,111,32,97,32,102,105,108,101,0,0,0,0,0,0,66,73,71,78,85,77,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,0,66,73,71,78,85,77,32,45,32,84,104,101,114,101,32,105,115,32,97,110,32,105,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,32,105,110,32,116,104,101,32,100,105,103,105,116,32,115,116,114,105,110,103,0,0,0,0,0,0,66,73,71,78,85,77,32,45,32,84,104,101,32,98,117,102,102,101,114,32,105,115,32,116,111,111,32,115,109,97,108,108,32,116,111,32,119,114,105,116,101,32,116,111,0,0,0,0,66,73,71,78,85,77,32,45,32,84,104,101,32,105,110,112,117,116,32,97,114,103,117,109,101,110,116,115,32,97,114,101,32,110,101,103,97,116,105,118,101,32,111,114,32,114,101,115,117,108,116,32,105,110,32,105,108,108,101,103,97,108,32,111,117,116,112,117,116,0,0,0,66,73,71,78,85,77,32,45,32,84,104,101,32,105,110,112,117,116,32,97,114,103,117,109,101,110,116,32,102,111,114,32,100,105,118,105,115,105,111,110,32,105,115,32,122,101,114,111,44,32,119,104,105,99,104,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,0,0,66,73,71,78,85,77,32,45,32,84,104,101,32,105,110,112,117,116,32,97,114,103,117,109,101,110,116,115,32,97,114,101,32,110,111,116,32,97,99,99,101,112,116,97,98,108,101,0,66,73,71,78,85,77,32,45,32,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,0,0,0,67,67,77,32,45,32,66,97,100,32,105,110,112,117,116,32,112,97,114,97,109,101,116,101,114,115,32,116,111,32,102,117,110,99,116,105,111,110,0,0,67,67,77,32,45,32,65,117,116,104,101,110,116,105,99,97,116,101,100,32,100,101,99,114,121,112,116,105,111,110,32,102,97,105,108,101,100,0,0,0,67,84,82,95,68,82,66,71,32,45,32,84,104,101,32,101,110,116,114,111,112,121,32,115,111,117,114,99,101,32,102,97,105,108,101,100,0,0,0,0,67,84,82,95,68,82,66,71,32,45,32,84,111,111,32,109,97,110,121,32,114,97,110,100,111,109,32,114,101,113,117,101,115,116,101,100,32,105,110,32,115,105,110,103,108,101,32,99,97,108,108,0,0,0,0,0,67,84,82,95,68,82,66,71,32,45,32,73,110,112,117,116,32,116,111,111,32,108,97,114,103,101,32,40,69,110,116,114,111,112,121,32,43,32,97,100,100,105,116,105,111,110,97,108,41,0,0,0,0,0,0,0,67,84,82,95,68,82,66,71,32,45,32,82,101,97,100,47,119,114,105,116,101,32,101,114,114,111,114,32,105,110,32,102,105,108,101,0,0,0,0,0,68,69,83,32,45,32,84,104,101,32,100,97,116,97,32,105,110,112,117,116,32,104,97,115,32,97,110,32,105,110,118,97,108,105,100,32,108,101,110,103,116,104,0,0,0,0,0,0,69,78,84,82,79,80,89,32,45,32,67,114,105,116,105,99,97,108,32,101,110,116,114,111,112,121,32,115,111,117,114,99,101,32,102,97,105,108,117,114,101,0,0,0,0,0,0,0,69,78,84,82,79,80,89,32,45,32,78,111,32,115,116,114,111,110,103,32,115,111,117,114,99,101,115,32,104,97,118,101,32,98,101,101,110,32,97,100,100,101,100,32,116,111,32,112,111,108,108,0,0,0,0,0,72,77,65,67,95,68,82,66,71,32,45,32,82,101,97,100,47,119,114,105,116,101,32,101,114,114,111,114,32,105,110,32,102,105,108,101,0,0,0,0,79,73,68,32,45,32,111,117,116,112,117,116,32,98,117,102,102,101,114,32,105,115,32,116,111,111,32,115,109,97,108,108,0,0,0,0,0,0,0,0,80,65,68,76,79,67,75,32,45,32,73,110,112,117,116,32,100,97,116,97,32,115,104,111,117,108,100,32,98,101,32,97,108,105,103,110,101,100,0,0,0,0,0,0,0,0,0,0,32,28,0,0,0,0,0,0,64,56,0,0,0,0,0,0,96,36,0,0,0,0,0,0,128,112,0,0,0,0,0,0,160,108,0,0,0,0,0,0,192,72,0,0,0,0,0,0,224,84,0,0,0,0,0,0,0,225,0,0,0,0,0,0,32,253,0,0,0,0,0,0,64,217,0,0,0,0,0,0,96,197,0,0,0,0,0,0,128,145,0,0,0,0,0,0,160,141,0,0,0,0,0,0,192,169,0,0,0,0,0,0,224,181,0,0,0,0,0,0,3,0,0,0,64,129,0,0,16,0,0,0,64,0,0,0,66,0,0,0,2,0,0,0,15,0,0,0,3,0,0,0,6,0,0,0,67,0,0,0,16,0,0,0,17,0,0,0,4,0,0,0,48,123,0,0,20,0,0,0,64,0,0,0,68,0,0,0,4,0,0,0,18,0,0,0,5,0,0,0,7,0,0,0,69,0,0,0,19,0,0,0,20,0,0,0,5,0,0,0,56,123,0,0,28,0,0,0,64,0,0,0,70,0,0,0,6,0,0,0,21,0,0,0,7,0,0,0,8,0,0,0,71,0,0,0,22,0,0,0,23,0,0,0,6,0,0,0,64,123,0,0,32,0,0,0,64,0,0,0,72,0,0,0,6,0,0,0,21,0,0,0,8,0,0,0,8,0,0,0,71,0,0,0,22,0,0,0,23,0,0,0,7,0,0,0,72,123,0,0,48,0,0,0,128,0,0,0,73,0,0,0,9,0,0,0,24,0,0,0,10,0,0,0,9,0,0,0,74,0,0,0,25,0,0,0,26,0,0,0,8,0,0,0,80,123,0,0,64,0,0,0,128,0,0,0,75,0,0,0,9,0,0,0,24,0,0,0,11,0,0,0,9,0,0,0,74,0,0,0,25,0,0,0,26,0,0,0,83,72,65,49,0,0,0,0,83,72,65,50,50,52,0,0,83,72,65,50,53,54,0,0,83,72,65,51,56,52,0,0,83,72,65,53,49,50,0,0,42,134,72,134,247,13,1,1,1,0,0,0,0,0,0,0,42,134,72,206,61,2,1,0,43,129,4,1,12,0,0,0,88,123,0,0,9,0,0,0,152,131,0,0,160,132,0,0,1,0,0,0,104,123,0,0,7,0,0,0,168,131,0,0,184,131,0,0,2,0,0,0,112,123,0,0,5,0,0,0,200,131,0,0,208,131,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,134,72,206,61,3,1,1,0,0,0,0,0,0,0,0,43,129,4,0,33,0,0,0,42,134,72,206,61,3,1,7,0,0,0,0,0,0,0,0,43,129,4,0,34,0,0,0,43,129,4,0,35,0,0,0,43,129,4,0,31,0,0,0,43,129,4,0,32,0,0,0,43,129,4,0,10,0,0,0,43,36,3,3,2,8,1,1,7,0,0,0,0,0,0,0,43,36,3,3,2,8,1,1,11,0,0,0,0,0,0,0,43,36,3,3,2,8,1,1,13,0,0,0,0,0,0,0,43,6,1,4,1,151,85,1,5,1,0,0,0,0,0,0,200,123,0,0,8,0,0,0,168,130,0,0,168,130,0,0,1,0,0,0,216,123,0,0,5,0,0,0,184,130,0,0,184,130,0,0,2,0,0,0,224,123,0,0,8,0,0,0,200,130,0,0,200,130,0,0,3,0,0,0,240,123,0,0,5,0,0,0,216,130,0,0,216,130,0,0,4,0,0,0,248,123,0,0,5,0,0,0,232,130,0,0,232,130,0,0,5,0,0,0,0,124,0,0,5,0,0,0,248,130,0,0,248,130,0,0,10,0,0,0,8,124,0,0,5,0,0,0,8,131,0,0,8,131,0,0,11,0,0,0,16,124,0,0,5,0,0,0,24,131,0,0,24,131,0,0,12,0,0,0,24,124,0,0,9,0,0,0,40,131,0,0,56,131,0,0,6,0,0,0,40,124,0,0,9,0,0,0,72,131,0,0,88,131,0,0,7,0,0,0,56,124,0,0,9,0,0,0,104,131,0,0,120,131,0,0,8,0,0,0,72,124,0,0,10,0,0,0,136,131,0,0,136,131,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,14,3,2,7,0,0,0,42,134,72,134,247,13,3,7,0,0,0,0,0,0,0,0,96,134,72,1,101,3,4,1,2,0,0,0,0,0,0,0,96,134,72,1,101,3,4,1,22,0,0,0,0,0,0,0,96,134,72,1,101,3,4,1,42,0,0,0,0,0,0,0,96,134,72,1,101,3,4,1,6,0,0,0,0,0,0,0,96,134,72,1,101,3,4,1,26,0,0,0,0,0,0,0,96,134,72,1,101,3,4,1,46,0,0,0,0,0,0,0,96,125,0,0,5,0,0,0,184,129,0,0,192,129,0,0,33,0,0,0,104,125,0,0,8,0,0,0,200,129,0,0,216,129,0,0,37,0,0,0,120,125,0,0,9,0,0,0,232,129,0,0,248,129,0,0,5,0,0,0,136,125,0,0,9,0,0,0,8,130,0,0,24,130,0,0,6,0,0,0,152,125,0,0,9,0,0,0,40,130,0,0,56,130,0,0,7,0,0,0,168,125,0,0,9,0,0,0,72,130,0,0,88,130,0,0,14,0,0,0,184,125,0,0,9,0,0,0,104,130,0,0,120,130,0,0,15,0,0,0,200,125,0,0,9,0,0,0,136,130,0,0,152,130,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,134,72,134,247,13,2,2,0,0,0,0,0,0,0,0,42,134,72,134,247,13,2,4,0,0,0,0,0,0,0,0,42,134,72,134,247,13,2,5,0,0,0,0,0,0,0,0,43,14,3,2,26,0,0,0,96,134,72,1,101,3,4,2,4,0,0,0,0,0,0,0,96,134,72,1,101,3,4,2,1,0,0,0,0,0,0,0,96,134,72,1,101,3,4,2,2,0,0,0,0,0,0,0,96,134,72,1,101,3,4,2,3,0,0,0,0,0,0,0,144,126,0,0,8,0,0,0,24,129,0,0,32,129,0,0,1,0,0,0,160,126,0,0,8,0,0,0,40,129,0,0,48,129,0,0,2,0,0,0,176,126,0,0,8,0,0,0,56,129,0,0,64,129,0,0,3,0,0,0,192,126,0,0,5,0,0,0,72,129,0,0,80,129,0,0,4,0,0,0,200,126,0,0,9,0,0,0,88,129,0,0,104,129,0,0,5,0,0,0,216,126,0,0,9,0,0,0,112,129,0,0,128,129,0,0,6,0,0,0,232,126,0,0,9,0,0,0,136,129,0,0,152,129,0,0,7,0,0,0,248,126,0,0,9,0,0,0,160,129,0,0,176,129,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,134,72,134,247,13,1,12,1,3,0,0,0,0,0,0,42,134,72,134,247,13,1,12,1,4,0,0,0,0,0,0,192,127,0,0,10,0,0,0,152,128,0,0,184,128,0,0,4,0,0,0,37,0,0,0,208,127,0,0,10,0,0,0,216,128,0,0,248,128,0,0,4,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,129,140,113,2,5,1,0,40,129,140,113,2,5,2,0,40,128,0,0,7,0,0,0,120,128,0,0,48,138,0,0,1,0,0,0,48,128,0,0,7,0,0,0,136,128,0,0,56,138,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,105,100,45,107,100,102,45,107,100,102,49,0,0,0,0,0,105,100,45,107,100,102,45,107,100,102,50,0,0,0,0,0,112,98,101,87,105,116,104,83,72,65,65,110,100,51,45,75,101,121,84,114,105,112,108,101,68,69,83,45,67,66,67,0,80,66,69,32,119,105,116,104,32,83,72,65,49,32,97,110,100,32,51,45,75,101,121,32,51,68,69,83,0,0,0,0,112,98,101,87,105,116,104,83,72,65,65,110,100,50,45,75,101,121,84,114,105,112,108,101,68,69,83,45,67,66,67,0,80,66,69,32,119,105,116,104,32,83,72,65,49,32,97,110,100,32,50,45,75,101,121,32,51,68,69,83,0,0,0,0,105,100,45,109,100,50,0,0,77,68,50,0,0,0,0,0,105,100,45,109,100,52,0,0,77,68,52,0,0,0,0,0,105,100,45,109,100,53,0,0,77,68,53,0,0,0,0,0,105,100,45,115,104,97,49,0,83,72,65,45,49,0,0,0,105,100,45,115,104,97,50,50,52,0,0,0,0,0,0,0,83,72,65,45,50,50,52,0,105,100,45,115,104,97,50,53,54,0,0,0,0,0,0,0,83,72,65,45,50,53,54,0,105,100,45,115,104,97,51,56,52,0,0,0,0,0,0,0,83,72,65,45,51,56,52,0,105,100,45,115,104,97,53,49,50,0,0,0,0,0,0,0,83,72,65,45,53,49,50,0,100,101,115,67,66,67,0,0,68,69,83,45,67,66,67,0,100,101,115,45,101,100,101,51,45,99,98,99,0,0,0,0,68,69,83,45,69,68,69,51,45,67,66,67,0,0,0,0,97,101,115,49,50,56,45,67,66,67,0,0,0,0,0,0,65,69,83,45,49,50,56,45,67,66,67,0,0,0,0,0,97,101,115,49,57,50,45,67,66,67,0,0,0,0,0,0,65,69,83,45,49,57,50,45,67,66,67,0,0,0,0,0,97,101,115,50,53,54,45,67,66,67,0,0,0,0,0,0,65,69,83,45,50,53,54,45,67,66,67,0,0,0,0,0,97,101,115,49,50,56,45,71,67,77,0,0,0,0,0,0,65,69,83,45,49,50,56,45,71,67,77,0,0,0,0,0,97,101,115,49,57,50,45,71,67,77,0,0,0,0,0,0,65,69,83,45,49,57,50,45,71,67,77,0,0,0,0,0,97,101,115,50,53,54,45,71,67,77,0,0,0,0,0,0,65,69,83,45,50,53,54,45,71,67,77,0,0,0,0,0,115,101,99,112,49,57,50,114,49,0,0,0,0,0,0,0,115,101,99,112,50,50,52,114,49,0,0,0,0,0,0,0,115,101,99,112,50,53,54,114,49,0,0,0,0,0,0,0,115,101,99,112,51,56,52,114,49,0,0,0,0,0,0,0,115,101,99,112,53,50,49,114,49,0,0,0,0,0,0,0,115,101,99,112,49,57,50,107,49,0,0,0,0,0,0,0,115,101,99,112,50,50,52,107,49,0,0,0,0,0,0,0,115,101,99,112,50,53,54,107,49,0,0,0,0,0,0,0,98,114,97,105,110,112,111,111,108,80,50,53,54,114,49,0,98,114,97,105,110,112,111,111,108,50,53,54,114,49,0,0,98,114,97,105,110,112,111,111,108,80,51,56,52,114,49,0,98,114,97,105,110,112,111,111,108,51,56,52,114,49,0,0,98,114,97,105,110,112,111,111,108,80,53,49,50,114,49,0,98,114,97,105,110,112,111,111,108,53,49,50,114,49,0,0,99,117,114,118,101,50,53,53,49,57,0,0,0,0,0,0,114,115,97,69,110,99,114,121,112,116,105,111,110,0,0,0,105,100,45,101,99,80,117,98,108,105,99,75,101,121,0,0,71,101,110,101,114,105,99,32,69,67,32,107,101,121,0,0,105,100,45,101,99,68,72,0,69,67,32,107,101,121,32,102,111,114,32,69,67,68,72,0,1,0,0,0,160,132,0,0,6,0,0,0,7,0,0,0,4,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,76,0,0,0,27,0,0,0,2,0,0,0,168,132,0,0,8,0,0,0,9,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,11,0,0,0,77,0,0,0,28,0,0,0,3,0,0,0,176,132,0,0,8,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,11,0,0,0,77,0,0,0,28,0,0,0,4,0,0,0,184,132,0,0,8,0,0,0,11,0,0,0,6,0,0,0,7,0,0,0,5,0,0,0,6,0,0,0,5,0,0,0,12,0,0,0,78,0,0,0,28,0,0,0,82,83,65,0,0,0,0,0,69,67,0,0,0,0,0,0,69,67,95,68,72,0,0,0,69,67,68,83,65,0,0,0,101,99,107,101,121,46,81,0,114,115,97,46,78,0,0,0,114,115,97,46,69,0,0,0,42,134,72,134,247,13,1,5,12,0,0,0,0,0,0,0,42,134,72,134,247,13,2,7,0,0,0,0,0,0,0,0,42,134,72,134,247,13,2,8,0,0,0,0,0,0,0,0,42,134,72,134,247,13,2,9,0,0,0,0,0,0,0,0,42,134,72,134,247,13,2,10,0,0,0,0,0,0,0,0,42,134,72,134,247,13,2,11,0,0,0,0,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,82,83,65,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,45,45,45,45,45,69,78,68,32,82,83,65,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,0,0,45,45,45,45,45,66,69,71,73,78,32,69,67,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,0,45,45,45,45,45,69,78,68,32,69,67,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,0,0,0,0,45,45,45,45,45,69,78,68,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,0,0,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,69,78,67,82,89,80,84,69,68,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,0,0,45,45,45,45,45,69,78,68,32,69,78,67,82,89,80,84,69,68,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,0,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,80,85,66,76,73,67,32,75,69,89,45,45,45,45,45,0,0,0,0,0,0,45,45,45,45,45,69,78,68,32,80,85,66,76,73,67,32,75,69,89,45,45,45,45,45,0,0,0,0,0,0,0,0,42,134,72,134,247,13,1,12,1,1,0,0,0,0,0,0,42,134,72,134,247,13,1,5,13,0,0,0,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,80,85,66,76,73,67,32,75,69,89,45,45,45,45,45,10,0,0,0,0,0,45,45,45,45,45,69,78,68,32,80,85,66,76,73,67,32,75,69,89,45,45,45,45,45,10,0,0,0,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,82,83,65,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,0,0,0,0,0,0,0,45,45,45,45,45,66,69,71,73,78,32,69,67,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,45,45,45,45,45,69,78,68,32,82,83,65,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,0,45,45,45,45,45,69,78,68,32,69,67,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,0,0,45,45,45,45,45,66,69,71,73,78,32,69,78,67,82,89,80,84,69,68,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,0,45,45,45,45,45,66,69,71,73,78,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,0,0,0,45,45,45,45,45,69,78,68,32,69,78,67,82,89,80,84,69,68,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,0,0,0,45,45,45,45,45,69,78,68,32,80,82,73,86,65,84,69,32,75,69,89,45,45,45,45,45,10,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,47,138,66,145,68,55,113,207,251,192,181,165,219,181,233,91,194,86,57,241,17,241,89,164,130,63,146,213,94,28,171,152,170,7,216,1,91,131,18,190,133,49,36,195,125,12,85,116,93,190,114,254,177,222,128,167,6,220,155,116,241,155,193,193,105,155,228,134,71,190,239,198,157,193,15,204,161,12,36,111,44,233,45,170,132,116,74,220,169,176,92,218,136,249,118,82,81,62,152,109,198,49,168,200,39,3,176,199,127,89,191,243,11,224,198,71,145,167,213,81,99,202,6,103,41,41,20,133,10,183,39,56,33,27,46,252,109,44,77,19,13,56,83,84,115,10,101,187,10,106,118,46,201,194,129,133,44,114,146,161,232,191,162,75,102,26,168,112,139,75,194,163,81,108,199,25,232,146,209,36,6,153,214,133,53,14,244,112,160,106,16,22,193,164,25,8,108,55,30,76,119,72,39,181,188,176,52,179,12,28,57,74,170,216,78,79,202,156,91,243,111,46,104,238,130,143,116,111,99,165,120,20,120,200,132,8,2,199,140,250,255,190,144,235,108,80,164,247,163,249,190,242,120,113,198,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,48,138,0,0,1,0,0,0,0,0,0,0,2,0,0,0,56,138,0,0,2,0,0,0,0,0,0,0,75,68,70,49,0,0,0,0,75,68,70,50],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+26488);allocate([128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,114,111,99,45,84,121,112,101,58,32,52,44,69,78,67,82,89,80,84,69,68,0,0,68,69,75,45,73,110,102,111,58,32,68,69,83,45,69,68,69,51,45,67,66,67,44,0,68,69,75,45,73,110,102,111,58,32,68,69,83,45,67,66,67,44,0,0,0,0,0,0,68,69,75,45,73,110,102,111,58,32,65,69,83,45,0,0,68,69,75,45,73,110,102,111,58,32,65,69,83,45,49,50,56,45,67,66,67,44,0,0,68,69,75,45,73,110,102,111,58,32,65,69,83,45,49,57,50,45,67,66,67,44,0,0,68,69,75,45,73,110,102,111,58,32,65,69,83,45,50,53,54,45,67,66,67,44,0,0,89,241,178,254,10,229,166,255,123,221,42,254,30,20,212,0,82,128,3,0,48,209,243,0,119,121,64,255,50,227,156,255,0,110,197,1,103,27,144,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,47,99,168,254,170,226,153,255,102,179,216,0,226,141,122,255,122,66,153,254,182,245,134,0,227,228,25,1,214,57,235,255,216,173,56,255,181,231,210,0,119,128,157,255,129,95,136,255,110,126,51,0,2,169,183,255,7,130,98,254,69,176,94,255,116,4,227,1,217,242,145,255,202,173,31,1,105,1,39,255,46,175,69,0,228,47,58,255,215,224,69,254,207,56,69,255,16,254,139,255,23,207,212,255,202,20,126,255,95,213,96,255,9,176,33,0,200,5,207,255,241,42,128,254,35,33,192,255,248,229,196,1,129,17,120,0,251,103,151,255,7,52,112,255,140,56,66,255,40,226,245,255,217,70,37,254,172,214,9,255,72,67,134,1,146,192,214,255,44,38,112,0,68,184,75,255,206,90,251,0,149,235,141,0,181,170,58,0,116,244,239,0,92,157,2,0,102,173,98,0,233,137,96,1,127,49,203,0,5,155,148,0,23,148,9,255,211,122,12,0,34,134,26,255,219,204,136,0,134,8,41,255,224,83,43,254,85,25,247,0,109,127,0,254,169,136,48,0,238,119,219,255,231,173,213,0,206,18,254,254,8,186,7,255,126,9,7,1,111,42,72,0,111,52,236,254,96,63,141,0,147,191,127,254,205,78,192,255,14,106,237,1,187,219,76,0,175,243,187,254,105,89,173,0,85,25,89,1,162,243,148,0,2,118,209,254,33,158,9,0,139,163,46,255,93,70,40,0,108,42,142,254,111,252,142,255,155,223,144,0,51,229,167,255,73,252,155,255,94,116,12,255,152,160,218,255,156,238,37,255,179,234,207,255,197,0,179,255,154,164,141,0,225,196,104,0,10,35,25,254,209,212,242,255,97,253,222,254,184,101,229,0,222,18,127,1,164,136,135,255,30,207,140,254,146,97,243,0,129,192,26,254,201,84,33,255,111,10,78,255,147,81,178,255,4,4,24,0,161,238,215,255,6,141,33,0,53,215,14,255,41,181,208,255,231,139,157,0,179,203,221,255,255,185,113,0,189,226,172,255,113,66,214,255,202,62,45,255,102,64,8,255,78,174,16,254,133,117,68,255,182,120,89,255,133,114,211,0,189,110,21,255,15,10,106,0,41,192,1,0,152,232,121,255,188,60,160,255,153,113,206,255,0,183,226,254,180,13,72,255,176,160,14,254,211,201,134,255,158,24,143,0,127,105,53,0,96,12,189,0,167,215,251,255,159,76,128,254,106,101,225,255,30,252,4,0,146,12,174,0,133,59,140,1,189,241,36,255,248,37,195,1,96,220,55,0,183,76,62,255,195,66,61,0,50,76,164,1,225,164,76,255,76,61,163,255,117,62,31,0,81,145,64,255,118,65,14,0,162,115,214,255,6,138,46,0,124,230,244,255,10,138,143,0,52,26,194,0,184,244,76,0,129,143,41,1,190,244,19,255,123,170,122,255,98,129,68,0,121,213,147,0,86,101,30,255,161,103,155,0,140,89,67,255,239,229,190,1,67,11,181,0,198,240,137,254,238,69,188,255,234,113,60,255,37,255,57,255,69,178,182,254,128,208,179,0,118,26,125,254,3,7,214,255,241,50,77,255,85,203,197,255,211,135,250,255,25,48,100,255,187,213,180,254,17,88,105,0,83,209,158,1,5,115,98,0,4,174,60,254,171,55,110,255,217,181,17,255,20,188,170,0,146,156,102,254,87,214,174,255,114,122,155,1,233,44,170,0,127,8,239,1,214,236,234,0,175,5,219,0,49,106,61,255,6,66,208,255,2,106,110,255,81,234,19,255,215,107,192,255,67,151,238,0,19,42,108,255,229,85,113,1,50,68,135,255,17,106,9,0,50,103,1,255,80,1,168,1,35,152,30,255,16,168,185,1,56,89,232,255,101,210,252,0,41,250,71,0,204,170,79,255,14,46,239,255,80,77,239,0,189,214,75,255,17,141,249,0,38,80,76,255,190,85,117,0,86,228,170,0,156,216,208,1,195,207,164,255,150,66,76,255,175,225,16,255,141,80,98,1,76,219,242,0,198,162,114,0,46,218,152,0,155,43,241,254,155,160,104,255,178,9,252,254,100,110,212,0,14,5,167,0,233,239,163,255,28,151,157,1,101,146,10,255,254,158,70,254,71,249,228,0,88,30,50,0,68,58,160,255,191,24,104,1,129,66,129,255,192,50,85,255,8,179,138,255,38,250,201,0,115,80,160,0,131,230,113,0,125,88,147,0,90,68,199,0,253,76,158,0,28,255,118,0,113,250,254,0,66,75,46,0,230,218,43,0,229,120,186,1,148,68,43,0,136,124,238,1,187,107,197,255,84,53,246,255,51,116,254,255,51,187,165,0,2,17,175,0,66,84,160,1,247,58,30,0,35,65,53,254,69,236,191,0,45,134,245,1,163,123,221,0,32,110,20,255,52,23,165,0,186,214,71,0,233,176,96,0,242,239,54,1,57,89,138,0,83,0,84,255,136,160,100,0,92,142,120,254,104,124,190,0,181,177,62,255,250,41,85,0,152,130,42,1,96,252,246,0,151,151,63,254,239,133,62,0,32,56,156,0,45,167,189,255,142,133,179,1,131,86,211,0,187,179,150,254,250,170,14,255,68,113,21,255,222,186,59,255,66,7,241,1,69,6,72,0,86,156,108,254,55,167,89,0,109,52,219,254,13,176,23,255,196,44,106,255,239,149,71,255,164,140,125,255,159,173,1,0,51,41,231,0,145,62,33,0,138,111,93,1,185,83,69,0,144,115,46,0,97,151,16,255,24,228,26,0,49,217,226,0,113,75,234,254,193,153,12,255,182,48,96,255,14,13,26,0,128,195,249,254,69,193,59,0,132,37,81,254,125,106,60,0,214,240,169,1,164,227,66,0,210,163,78,0,37,52,151,0,99,77,26,0,238,156,213,255,213,192,209,1,73,46,84,0,20,65,41,1,54,206,79,0,201,131,146,254,170,111,24,255,177,33,50,254,171,38,203,255,78,247,116,0,209,221,153,0,133,128,178,1,58,44,25,0,201,39,59,1,189,19,252,0,49,229,210,1,117,187,117,0,181,179,184,1,0,114,219,0,48,94,147,0,245,41,56,0,125,13,204,254,244,173,119,0,44,221,32,254,84,234,20,0,249,160,198,1,236,126,234,255,143,62,221,0,129,89,214,255,55,139,5,254,68,20,191,255,14,204,178,1,35,195,217,0,47,51,206,1,38,246,165,0,206,27,6,254,158,87,36,0,217,52,146,255,125,123,215,255,85,60,31,255,171,13,7,0,218,245,88,254,252,35,60,0,55,214,160,255,133,101,56,0,224,32,19,254,147,64,234,0,26,145,162,1,114,118,125,0,248,252,250,0,101,94,196,255,198,141,226,254,51,42,182,0,135,12,9,254,109,172,210,255,197,236,194,1,241,65,154,0,48,156,47,255,153,67,55,255,218,165,34,254,74,180,179,0,218,66,71,1,88,122,99,0,212,181,219,255,92,42,231,255,239,0,154,0,245,77,183,255,94,81,170,1,18,213,216,0,171,93,71,0,52,94,248,0,18,151,161,254,197,209,66,255,174,244,15,254,162,48,183,0,49,61,240,254,182,93,195,0,199,228,6,1,200,5,17,255,137,45,237,255,108,148,4,0,90,79,237,255,39,63,77,255,53,82,207,1,142,22,118,255,101,232,18,1,92,26,67,0,5,200,88,255,33,168,138,255,149,225,72,0,2,209,27,255,44,245,168,1,220,237,17,255,30,211,105,254,141,238,221,0,128,80,245,254,111,254,14,0,222,95,190,1,223,9,241,0,146,76,212,255,108,205,104,255,63,117,153,0,144,69,48,0,35,228,111,0,192,33,193,255,112,214,190,254,115,152,151,0,23,102,88,0,51,74,248,0,226,199,143,254,204,162,101,255,208,97,189,1,245,104,18,0,230,246,30,255,23,148,69,0,110,88,52,254,226,181,89,255,208,47,90,254,114,161,80,255,33,116,248,0,179,152,87,255,69,144,177,1,88,238,26,255,58,32,113,1,1,77,69,0,59,121,52,255,152,238,83,0,52,8,193,0,231,39,233,255,199,34,138,0,222,68,173,0,91,57,242,254,220,210,127,255,192,7,246,254,151,35,187,0,195,236,165,0,111,93,206,0,212,247,133,1,154,133,209,255,155,231,10,0,64,78,38,0,122,249,100,1,30,19,97,255,62,91,249,1,248,133,77,0,197,63,168,254,116,10,82,0,184,236,113,254,212,203,194,255,61,100,252,254,36,5,202,255,119,91,153,255,129,79,29,0,103,103,171,254,237,215,111,255,216,53,69,0,239,240,23,0,194,149,221,255,38,225,222,0,232,255,180,254,118,82,133,255,57,209,177,1,139,232,133,0,158,176,46,254,194,115,46,0,88,247,229,1,28,103,191,0,221,222,175,254,149,235,44,0,151,228,25,254,218,105,103,0,142,85,210,0,149,129,190,255,213,65,94,254,117,134,224,255,82,198,117,0,157,221,220,0,163,101,36,0,197,114,37,0,104,172,166,254,11,182,0,0,81,72,188,255,97,188,16,255,69,6,10,0,199,147,145,255,8,9,115,1,65,214,175,255,217,173,209,0,80,127,166,0,247,229,4,254,167,183,124,255,90,28,204,254,175,59,240,255,11,41,248,1,108,40,51,255,144,177,195,254,150,250,126,0,138,91,65,1,120,60,222,255,245,193,239,0,29,214,189,255,128,2,25,0,80,154,162,0,77,220,107,1,234,205,74,255,54,166,103,255,116,72,9,0,228,94,47,255,30,200,25,255,35,214,89,255,61,176,140,255,83,226,163,255,75,130,172,0,128,38,17,0,95,137,152,255,215,124,159,1,79,93,0,0,148,82,157,254,195,130,251,255,40,202,76,255,251,126,224,0,157,99,62,254,207,7,225,255,96,68,195,0,140,186,157,255,131,19,231,255,42,128,254,0,52,219,61,254,102,203,72,0,141,7,11,255,186,164,213,0,31,122,119,0,133,242,145,0,208,252,232,255,91,213,182,255,143,4,250,254,249,215,74,0,165,30,111,1,171,9,223,0,229,123,34,1,92,130,26,255,77,155,45,1,195,139,28,255,59,224,78,0,136,17,247,0,108,121,32,0,79,250,189,255,96,227,252,254,38,241,62,0,62,174,125,255,155,111,93,255,10,230,206,1,97,197,40,255,0,49,57,254,65,250,13,0,18,251,150,255,220,109,210,255,5,174,166,254,44,129,189,0,235,35,147,255,37,247,141,255,72,141,4,255,103,107,255,0,247,90,4,0,53,44,42,0,2,30,240,0,4,59,63,0,88,78,36,0,113,167,180,0,190,71,193,255,199,158,164,255,58,8,172,0,77,33,12,0,65,63,3,0,153,77,33,255,172,254,102,1,228,221,4,255,87,30,254,1,146,41,86,255,138,204,239,254,108,141,17,255,187,242,135,0,210,208,127,0,68,45,14,254,73,96,62,0,81,60,24,255,170,6,36,255,3,249,26,0,35,213,109,0,22,129,54,255,21,35,225,255,234,61,56,255,58,217,6,0,143,124,88,0,236,126,66,0,209,38,183,255,34,238,6,255,174,145,102,0,95,22,211,0,196,15,153,254,46,84,232,255,117,34,146,1,231,250,74,255,27,134,100,1,92,187,195,255,170,198,112,0,120,28,42,0,209,70,67,0,29,81,31,0,29,168,100,1,169,173,160,0,107,35,117,0,62,96,59,255,81,12,69,1,135,239,190,255,220,252,18,0,163,220,58,255,137,137,188,255,83,102,109,0,96,6,76,0,234,222,210,255,185,174,205,1,60,158,213,255,13,241,214,0,172,129,140,0,93,104,242,0,192,156,251,0,43,117,30,0,225,81,158,0,127,232,218,0,226,28,203,0,233,27,151,255,117,43,5,255,242,14,47,255,33,20,6,0,137,251,44,254,27,31,245,255,183,214,125,254,40,121,149,0,186,158,213,255,89,8,227,0,69,88,0,254,203,135,225,0,201,174,203,0,147,71,184,0,18,121,41,254,94,5,78,0,224,214,240,254,36,5,180,0,251,135,231,1,163,138,212,0,210,249,116,254,88,129,187,0,19,8,49,254,62,14,144,255,159,76,211,0,214,51,82,0,109,117,228,254,103,223,203,255,75,252,15,1,154,71,220,255,23,13,91,1,141,168,96,255,181,182,133,0,250,51,55,0,234,234,212,254,175,63,158,0,39,240,52,1,158,189,36,255,213,40,85,1,32,180,247,255,19,102,26,1,84,24,97,255,69,21,222,0,148,139,122,255,220,213,235,1,232,203,255,0,121,57,147,0,227,7,154,0,53,22,147,1,72,1,225,0,82,134,48,254,83,60,157,255,145,72,169,0,34,103,239,0,198,233,47,0,116,19,4,255,184,106,9,255,183,129,83,0,36,176,230,1,34,103,72,0,219,162,134,0,245,42,158,0,32,149,96,254,165,44,144,0,202,239,72,254,215,150,5,0,42,66,36,1,132,215,175,0,86,174,86,255,26,197,156,255,49,232,135,254,103,182,82,0,253,128,176,1,153,178,122,0,245,250,10,0,236,24,178,0,137,106,132,0,40,29,41,0,50,30,152,255,124,105,38,0,230,191,75,0,143,43,170,0,44,131,20,255,44,13,23,255,237,255,155,1,159,109,100,255,112,181,24,255,104,220,108,0,55,211,131,0,99,12,213,255,152,151,145,255,238,5,159,0,97,155,8,0,33,108,81,0,1,3,103,0,62,109,34,255,250,155,180,0,32,71,195,255,38,70,145,1,159,95,245,0,69,229,101,1,136,28,240,0,79,224,25,0,78,110,121,255,248,168,124,0,187,128,247,0,2,147,235,254,79,11,132,0,70,58,12,1,181,8,163,255,79,137,133,255,37,170,11,255,141,243,85,255,176,231,215,255,204,150,164,255,239,215,39,255,46,87,156,254,8,163,88,255,172,34,232,0,66,44,102,255,27,54,41,254,236,99,87,255,41,123,169,1,52,114,43,0,117,134,40,0,155,134,26,0,231,207,91,254,35,132,38,255,19,102,125,254,36,227,133,255,118,3,113,255,29,13,124,0,152,96,74,1,88,146,206,255,167,191,220,254,162,18,88,255,182,100,23,0,31,117,52,0,81,46,106,1,12,2,7,0,69,80,201,1,209,246,172,0,12,48,141,1,224,211,88,0,116,226,159,0,122,98,130,0,65,236,234,1,225,226,9,255,207,226,123,1,89,214,59,0,112,135,88,1,90,244,203,255,49,11,38,1,129,108,186,0,89,112,15,1,101,46,204,255,127,204,45,254,79,255,221,255,51,73,18,255,127,42,101,255,241,21,202,0,160,227,7,0,105,50,236,0,79,52,197,255,104,202,208,1,180,15,16,0,101,197,78,255,98,77,203,0,41,185,241,1,35,193,124,0,35,155,23,255,207,53,192,0,11,125,163,1,249,158,185,255,4,131,48,0,21,93,111,255,61,121,231,1,69,200,36,255,185,48,185,255,111,238,21,255,39,50,25,255,99,215,163,255,87,212,30,255,164,147,5,255,128,6,35,1,108,223,110,255,194,76,178,0,74,101,180,0,243,47,48,0,174,25,43,255,82,173,253,1,54,114,192,255,40,55,91,0,215,108,176,255,11,56,7,0,224,233,76,0,209,98,202,254,242,25,125,0,44,193,93,254,203,8,177,0,135,176,19,0,112,71,213,255,206,59,176,1,4,67,26,0,14,143,213,254,42,55,208,255,60,67,120,0,193,21,163,0,99,164,115,0,10,20,118,0,156,212,222,254,160,7,217,255,114,245,76,1,117,59,123,0,176,194,86,254,213,15,176,0,78,206,207,254,213,129,59,0,233,251,22,1,96,55,152,255,236,255,15,255,197,89,84,255,93,149,133,0,174,160,113,0,234,99,169,255,152,116,88,0,144,164,83,255,95,29,198,255,34,47,15,255,99,120,134,255,5,236,193,0,249,247,126,255,147,187,30,0,50,230,117,255,108,217,219,255,163,81,166,255,72,25,169,254,155,121,79,255,28,155,89,254,7,126,17,0,147,65,33,1,47,234,253,0,26,51,18,0,105,83,199,255,163,196,230,0,113,248,164,0,226,254,218,0,189,209,203,255,164,247,222,254,255,35,165,0,4,188,243,1,127,179,71,0,37,237,254,255,100,186,240,0,5,57,71,254,103,72,73,255,244,18,81,254,229,210,132,255,238,6,180,255,11,229,174,255,227,221,192,1,17,49,28,0,163,215,196,254,9,118,4,255,51,240,71,0,113,129,109,255,76,240,231,0,188,177,127,0,125,71,44,1,26,175,243,0,94,169,25,254,27,230,29,0,15,139,119,1,168,170,186,255,172,197,76,255,252,75,188,0,137,124,196,0,72,22,96,255,45,151,249,1,220,145,100,0,64,192,159,255,120,239,226,0,129,178,146,0,0,192,125,0,235,138,234,0,183,157,146,0,83,199,192,255,184,172,72,255,73,225,128,0,77,6,250,255,186,65,67,0,104,246,207,0,188,32,138,255,218,24,242,0,67,138,81,254,237,129,121,255,20,207,150,1,41,199,16,255,6,20,128,0,159,118,5,0,181,16,143,255,220,38,15,0,23,64,147,254,73,26,13,0,87,228,57,1,204,124,128,0,43,24,223,0,219,99,199,0,22,75,20,255,19,27,126,0,157,62,215,0,110,29,230,0,179,167,255,1,54,252,190,0,221,204,182,254,179,158,65,255,81,157,3,0,194,218,159,0,170,223,0,0,224,11,32,255,38,197,98,0,168,164,37,0,23,88,7,1,164,186,110,0,96,36,134,0,234,242,229,0,250,121,19,0,242,254,112,255,3,47,94,1,9,239,6,255,81,134,153,254,214,253,168,255,67,124,224,0,245,95,74,0,28,30,44,254,1,109,220,255,178,89,89,0,252,36,76,0,24,198,46,255,76,77,111,0,134,234,136,255,39,94,29,0,185,72,234,255,70,68,135,255,231,102,7,254,77,231,140,0,167,47,58,1,148,97,118,255,16,27,225,1,166,206,143,255,110,178,214,255,180,131,162,0,143,141,225,1,13,218,78,255,114,153,33,1,98,104,204,0,175,114,117,1,167,206,75,0,202,196,83,1,58,64,67,0,138,47,111,1,196,247,128,255,137,224,224,254,158,112,207,0,154,100,255,1,134,37,107,0,198,128,79,255,127,209,155,255,163,254,185,254,60,14,243,0,31,219,112,254,29,217,65,0,200,13,116,254,123,60,196,255,224,59,184,254,242,89,196,0,123,16,75,254,149,16,206,0,69,254,48,1,231,116,223,255,209,160,65,1,200,80,98,0,37,194,184,254,148,63,34,0,139,240,65,255,217,144,132,255,56,38,45,254,199,120,210,0,108,177,166,255,160,222,4,0,220,126,119,254,165,107,160,255,82,220,248,1,241,175,136,0,144,141,23,255,169,138,84,0,160,137,78,255,226,118,80,255,52,27,132,255,63,96,139,255,152,250,39,0,188,155,15,0,232,51,150,254,40,15,232,255,240,229,9,255,137,175,27,255,75,73,97,1,218,212,11,0,135,5,162,1,107,185,213,0,2,249,107,255,40,242,70,0,219,200,25,0,25,157,13,0,67,82,80,255,196,249,23,255,145,20,149,0,50,72,146,0,94,76,148,1,24,251,65,0,31,192,23,0,184,212,201,255,123,233,162,1,247,173,72,0,162,87,219,254,126,134,89,0,159,11,12,254,166,105,29,0,73,27,228,1,113,120,183,255,66,163,109,1,212,143,11,255,159,231,168,1,255,128,90,0,57,14,58,254,89,52,10,255,253,8,163,1,0,145,210,255,10,129,85,1,46,181,27,0,103,136,160,254,126,188,209,255,34,35,111,0,215,219,24,255,212,11,214,254,101,5,118,0,232,197,133,255,223,167,109,255,237,80,86,255,70,139,94,0,158,193,191,1,155,15,51,255,15,190,115,0,78,135,207,255,249,10,27,1,181,125,233,0,95,172,13,254,170,213,161,255,39,236,138,255,95,93,87,255,190,128,95,0,125,15,206,0,166,150,159,0,227,15,158,255,206,158,120,255,42,141,128,0,101,178,120,1,156,109,131,0,218,14,44,254,247,168,206,255,212,112,28,0,112,17,228,255,90,16,37,1,197,222,108,0,254,207,83,255,9,90,243,255,243,244,172,0,26,88,115,255,205,116,122,0,191,230,193,0,180,100,11,1,217,37,96,255,154,78,156,0,235,234,31,255,206,178,178,255,149,192,251,0,182,250,135,0,246,22,105,0,124,193,109,255,2,210,149,255,169,17,170,0,0,96,110,255,117,9,8,1,50,123,40,255,193,189,99,0,34,227,160,0,48,80,70,254,211,51,236,0,45,122,245,254,44,174,8,0,173,37,233,255,158,65,171,0,122,69,215,255,90,80,2,255,131,106,96,254,227,114,135,0,205,49,119,254,176,62,64,255,82,51,17,255,241,20,243,255,130,13,8,254,128,217,243,255,162,27,1,254,90,118,241,0,246,198,246,255,55,16,118,255,200,159,157,0,163,17,1,0,140,107,121,0,85,161,118,255,38,0,149,0,156,47,238,0,9,166,166,1,75,98,181,255,50,74,25,0,66,15,47,0,139,225,159,0,76,3,142,255,14,238,184,0,11,207,53,255,183,192,186,1,171,32,174,255,191,76,221,1,247,170,219,0,25,172,50,254,217,9,233,0,203,126,68,255,183,92,48,0,127,167,183,1,65,49,254,0,16,63,127,1,254,21,170,255,59,224,127,254,22,48,63,255,27,78,130,254,40,195,29,0,250,132,112,254,35,203,144,0,104,169,168,0,207,253,30,255,104,40,38,254,94,228,88,0,206,16,128,255,212,55,122,255,223,22,234,0,223,197,127,0,253,181,181,1,145,102,118,0,236,153,36,255,212,217,72,255,20,38,24,254,138,62,62,0,152,140,4,0,230,220,99,255,1,21,212,255,148,201,231,0,244,123,9,254,0,171,210,0,51,58,37,255,1,255,14,255,244,183,145,254,0,242,166,0,22,74,132,0,121,216,41,0,95,195,114,254,133,24,151,255,156,226,231,255,247,5,77,255,246,148,115,254,225,92,81,255,222,80,246,254,170,123,89,255,74,199,141,0,29,20,8,255,138,136,70,255,93,75,92,0,221,147,49,254,52,126,226,0,229,124,23,0,46,9,181,0,205,64,52,1,131,254,28,0,151,158,212,0,131,64,78,0,206,25,171,0,0,230,139,0,191,253,110,254,103,247,167,0,64,40,40,1,42,165,241,255,59,75,228,254,124,243,189,255,196,92,178,255,130,140,86,255,141,89,56,1,147,198,5,255,203,248,158,254,144,162,141,0,11,172,226,0,130,42,21,255,1,167,143,255,144,36,36,255,48,88,164,254,168,170,220,0,98,71,214,0,91,208,79,0,159,76,201,1,166,42,214,255,69,255,0,255,6,128,125,255,190,1,140,0,146,83,218,255,215,238,72,1,122,127,53,0,189,116,165,255,84,8,66,255,214,3,208,255,213,110,133,0,195,168,44,1,158,231,69,0,162,64,200,254,91,58,104,0,182,58,187,254,249,228,136,0,203,134,76,254,99,221,233,0,75,254,214,254,80,69,154,0,64,152,248,254,236,136,202,255,157,105,153,254,149,175,20,0,22,35,19,255,124,121,233,0,186,250,198,254,132,229,139,0,137,80,174,255,165,125,68,0,144,202,148,254,235,239,248,0,135,184,118,0,101,94,17,255,122,72,70,254,69,130,146,0,127,222,248,1,69,127,118,255,30,82,215,254,188,74,19,255,229,167,194,254,117,25,66,255,65,234,56,254,213,22,156,0,151,59,93,254,45,28,27,255,186,126,164,255,32,6,239,0,127,114,99,1,219,52,2,255,99,96,166,254,62,190,126,255,108,222,168,1,75,226,174,0,230,226,199,0,60,117,218,255,252,248,20,1,214,188,204,0,31,194,134,254,123,69,192,255,169,173,36,254,55,98,91,0,223,42,102,254,137,1,102,0,157,90,25,0,239,122,64,255,252,6,233,0,7,54,20,255,82,116,174,0,135,37,54,255,15,186,125,0,227,112,175,255,100,180,225,255,42,237,244,255,244,173,226,254,248,18,33,0,171,99,150,255,74,235,50,255,117,82,32,254,106,168,237,0,207,109,208,1,228,9,186,0,135,60,169,254,179,92,143,0,244,170,104,255,235,45,124,255,70,99,186,0,117,137,183,0,224,31,215,0,40,9,100,0,26,16,95,1,68,217,87,0,8,151,20,255,26,100,58,255,176,165,203,1,52,118,70,0,7,32,254,254,244,254,245,255,167,144,194,255,125,113,23,255,176,121,181,0,136,84,209,0,138,6,30,255,89,48,28,0,33,155,14,255,25,240,154,0,141,205,109,1,70,115,62,255,20,40,107,254,138,154,199,255,94,223,226,255,157,171,38,0,163,177,25,254,45,118,3,255,14,222,23,1,209,190,81,255,118,123,232,1,13,213,101,255,123,55,123,254,27,246,165,0,50,99,76,255,140,214,32,255,97,65,67,255,24,12,28,0,174,86,78,1,64,247,96,0,160,135,67,0,66,55,243,255,147,204,96,255,26,6,33,255,98,51,83,1,153,213,208,255,2,184,54,255,25,218,11,0,49,67,246,254,18,149,72,255,13,25,72,0,42,79,214,0,42,4,38,1,27,139,144,255,149,187,23,0,18,164,132,0,245,84,184,254,120,198,104,255,126,218,96,0,56,117,234,255,13,29,214,254,68,47,10,255,167,154,132,254,152,38,198,0,66,178,89,255,200,46,171,255,13,99,83,255,210,187,253,255,170,45,42,1,138,209,124,0,214,162,141,0,12,230,156,0,102,36,112,254,3,147,67,0,52,215,123,255,233,171,54,255,98,137,62,0,247,218,39,255,231,218,236,0,247,191,127,0,195,146,84,0,165,176,92,255,19,212,94,255,17,74,227,0,88,40,153,1,198,147,1,255,206,67,245,254,240,3,218,255,61,141,213,255,97,183,106,0,195,232,235,254,95,86,154,0,209,48,205,254,118,209,241,255,240,120,223,1,213,29,159,0,163,127,147,255,13,218,93,0,85,24,68,254,70,20,80,255,189,5,140,1,82,97,254,255,99,99,191,255,132,84,133,255,107,218,116,255,112,122,46,0,105,17,32,0,194,160,63,255,68,222,39,1,216,253,92,0,177,105,205,255,149,201,195,0,42,225,11,255,40,162,115,0,9,7,81,0,165,218,219,0,180,22,0,254,29,146,252,255,146,207,225,1,180,135,96,0,31,163,112,0,177,11,219,255,133,12,193,254,43,78,50,0,65,113,121,1,59,217,6,255,110,94,24,1,112,172,111,0,7,15,96,0,36,85,123,0,71,150,21,255,208,73,188,0,192,11,167,1,213,245,34,0,9,230,92,0,162,142,39,255,215,90,27,0,98,97,89,0,94,79,211,0,90,157,240,0,95,220,126,1,102,176,226,0,36,30,224,254,35,31,127,0,231,232,115,1,85,83,130,0,210,73,245,255,47,143,114,255,68,65,197,0,59,72,62,255,183,133,173,254,93,121,118,255,59,177,81,255,234,69,173,255,205,128,177,0,220,244,51,0,26,244,209,1,73,222,77,255,163,8,96,254,150,149,211,0,158,254,203,1,54,127,139,0,161,224,59,0,4,109,22,255,222,42,45,255,208,146,102,255,236,142,187,0,50,205,245,255,10,74,89,254,48,79,142,0,222,76,130,255,30,166,63,0,236,12,13,255,49,184,244,0,187,113,102,0,218,101,253,0,153,57,182,254,32,150,42,0,25,198,146,1,237,241,56,0,140,68,5,0,91,164,172,255,78,145,186,254,67,52,205,0,219,207,129,1,109,115,17,0,54,143,58,1,21,248,120,255,179,255,30,0,193,236,66,255,1,255,7,255,253,192,48,255,19,69,217,1,3,214,0,255,64,101,146,1,223,125,35,255,235,73,179,255,249,167,226,0,225,175,10,1,97,162,58,0,106,112,171,1,84,172,5,255,133,140,178,255,134,245,142,0,97,90,125,255,186,203,185,255,223,77,23,255,192,92,106,0,15,198,115,255,217,152,248,0,171,178,120,255,228,134,53,0,176,54,193,1,250,251,53,0,213,10,100,1,34,199,106,0,151,31,244,254,172,224,87,255,14,237,23,255,253,85,26,255,127,39,116,255,172,104,100,0,251,14,70,255,212,208,138,255,253,211,250,0,176,49,165,0,15,76,123,255,37,218,160,255,92,135,16,1,10,126,114,255,70,5,224,255,247,249,141,0,68,20,60,1,241,210,189,255,195,217,187,1,151,3,113,0,151,92,174,0,231,62,178,255,219,183,225,0,23,23,33,255,205,181,80,0,57,184,248,255,67,180,1,255,90,123,93,255,39,0,162,255,96,248,52,255,84,66,140,0,34,127,228,255,194,138,7,1,166,110,188,0,21,17,155,1,154,190,198,255,214,80,59,255,18,7,143,0,72,29,226,1,199,217,249,0,232,161,71,1,149,190,201,0,217,175,95,254,113,147,67,255,138,143,199,255,127,204,1,0,29,182,83,1,206,230,155,255,186,204,60,0,10,125,85,255,232,96,25,255,255,89,247,255,213,254,175,1,232,193,81,0,28,43,156,254,12,69,8,0,147,24,248,0,18,198,49,0,134,60,35,0,118,246,18,255,49,88,254,254,228,21,186,255,182,65,112,1,219,22,1,255,22,126,52,255,189,53,49,255,112,25,143,0,38,127,55,255,226,101,163,254,208,133,61,255,137,69,174,1,190,118,145,255,60,98,219,255,217,13,245,255,250,136,10,0,84,254,226,0,201,31,125,1,240,51,251,255,31,131,130,255,2,138,50,255,215,215,177,1,223,12,238,255,252,149,56,255,124,91,68,255,72,126,170,254,119,255,100,0,130,135,232,255,14,79,178,0,250,131,197,0,138,198,208,0,121,216,139,254,119,18,36,255,29,193,122,0,16,42,45,255,213,240,235,1,230,190,169,255,198,35,228,254,110,173,72,0,214,221,241,255,56,148,135,0,192,117,78,254,141,93,207,255,143,65,149,0,21,18,98,255,95,44,244,1,106,191,77,0,254,85,8,254,214,110,176,255,73,173,19,254,160,196,199,255,237,90,144,0,193,172,113,255,200,155,136,254,228,90,221,0,137,49,74,1,164,221,215,255,209,189,5,255,105,236,55,255,42,31,129,1,193,255,236,0,46,217,60,0,138,88,187,255,226,82,236,255,81,69,151,255,142,190,16,1,13,134,8,0,127,122,48,255,81,64,156,0,171,243,139,0,237,35,246,0,122,143,193,254,212,122,146,0,95,41,255,1,87,132,77,0,4,212,31,0,17,31,78,0,39,45,173,254,24,142,217,255,95,9,6,255,227,83,6,0,98,59,130,254,62,30,33,0,8,115,211,1,162,97,128,255,7,184,23,254,116,28,168,255,248,138,151,255,98,244,240,0,186,118,130,0,114,248,235,255,105,173,200,1,160,124,71,255,94,36,164,1,175,65,146,255,238,241,170,254,202,198,197,0,228,71,138,254,45,246,109,255,194,52,158,0,133,187,176,0,83,252,154,254,89,189,221,255,170,73,252,0,148,58,125,0,36,68,51,254,42,69,177,255,168,76,86,255,38,100,204,255,38,53,35,0,175,19,97,0,225,238,253,255,81,81,135,0,210,27,255,254,235,73,107,0,8,207,115,0,82,127,136,0,84,99,21,254,207,19,136,0,100,164,101,0,80,208,77,255,132,207,237,255,15,3,15,255,33,166,110,0,156,95,85,255,37,185,111,1,150,106,35,255,166,151,76,0,114,87,135,255,159,194,64,0,12,122,31,255,232,7,101,254,173,119,98,0,154,71,220,254,191,57,53,255,168,232,160,255,224,32,99,255,218,156,165,0,151,153,163,0,217,13,148,1,197,113,89,0,149,28,161,254,207,23,30,0,105,132,227,255,54,230,94,255,133,173,204,255,92,183,157,255,88,144,252,254,102,33,90,0,159,97,3,0,181,218,155,255,240,114,119,0,106,214,53,255,165,190,115,1,152,91,225,255,88,106,44,255,208,61,113,0,151,52,124,0,191,27,156,255,110,54,236,1,14,30,166,255,39,127,207,1,229,199,28,0,188,228,188,254,100,157,235,0,246,218,183,1,107,22,193,255,206,160,95,0,76,239,147,0,207,161,117,0,51,166,2,255,52,117,10,254,73,56,227,255,152,193,225,0,132,94,136,255,101,191,209,0,32,107,229,255,198,43,180,1,100,210,118,0,114,67,153,255,23,88,26,255,89,154,92,1,220,120,140,255,144,114,207,255,252,115,250,255,34,206,72,0,138,133,127,255,8,178,124,1,87,75,97,0,15,229,92,254,240,67,131,255,118,123,227,254,146,120,104,255,145,213,255,1,129,187,70,255,219,119,54,0,1,19,173,0,45,150,148,1,248,83,72,0,203,233,169,1,142,107,56,0,247,249,38,1,45,242,80,255,30,233,103,0,96,82,70,0,23,201,111,0,81,39,30,255,161,183,78,255,194,234,33,255,68,227,140,254,216,206,116,0,70,27,235,255,104,144,79,0,164,230,93,254,214,135,156,0,154,187,242,254,188,20,131,255,36,109,174,0,159,112,241,0,5,110,149,1,36,165,218,0,166,29,19,1,178,46,73,0,93,43,32,254,248,189,237,0,102,155,141,0,201,93,195,255,241,139,253,255,15,111,98,255,108,65,163,254,155,79,190,255,73,174,193,254,246,40,48,255,107,88,11,254,202,97,85,255,253,204,18,255,113,242,66,0,110,160,194,254,208,18,186,0,81,21,60,0,188,104,167,255,124,166,97,254,210,133,142,0,56,242,137,254,41,111,130,0,111,151,58,1,111,213,141,255,183,172,241,255,38,6,196,255,185,7,123,255,46,11,246,0,245,105,119,1,15,2,161,255,8,206,45,255,18,202,74,255,83,124,115,1,212,141,157,0,83,8,209,254,139,15,232,255,172,54,173,254,50,247,132,0,214,189,213,0,144,184,105,0,223,254,248,0,255,147,240,255,23,188,72,0,7,51,54,0,188,25,180,254,220,180,0,255,83,160,20,0,163,189,243,255,58,209,194,255,87,73,60,0,106,24,49,0,245,249,220,0,22,173,167,0,118,11,195,255,19,126,237,0,110,159,37,255,59,82,47,0,180,187,86,0,188,148,208,1,100,37,133,255,7,112,193,0,129,188,156,255,84,106,129,255,133,225,202,0,14,236,111,255,40,20,101,0,172,172,49,254,51,54,74,255,251,185,184,255,93,155,224,255,180,249,224,1,230,178,146,0,72,57,54,254,178,62,184,0,119,205,72,0,185,239,253,255,61,15,218,0,196,67,56,255,234,32,171,1,46,219,228,0,208,108,234,255,20,63,232,255,165,53,199,1,133,228,5,255,52,205,107,0,74,238,140,255,150,156,219,254,239,172,178,255,251,189,223,254,32,142,211,255,218,15,138,1,241,196,80,0,28,36,98,254,22,234,199,0,61,237,220,255,246,57,37,0,142,17,142,255,157,62,26,0,43,238,95,254,3,217,6,255,213,25,240,1,39,220,174,255,154,205,48,254,19,13,192,255,244,34,54,254,140,16,155,0,240,181,5,254,155,193,60,0,166,128,4,255,36,145,56,255,150,240,219,0,120,51,145,0,82,153,42,1,140,236,146,0,107,92,248,1,189,10,3,0,63,136,242,0,211,39,24,0,19,202,161,1,173,27,186,255,210,204,239,254,41,209,162,255,182,254,159,255,172,116,52,0,195,103,222,254,205,69,59,0,53,22,41,1,218,48,194,0,80,210,242,0,210,188,207,0,187,161,161,254,216,17,1,0,136,225,113,0,250,184,63,0,223,30,98,254,77,168,162,0,59,53,175,0,19,201,10,255,139,224,194,0,147,193,154,255,212,189,12,254,1,200,174,255,50,133,113,1,94,179,90,0,173,182,135,0,94,177,113,0,43,89,215,255,136,252,106,255,123,134,83,254,5,245,66,255,82,49,39,1,220,2,224,0,97,129,177,0,77,59,89,0,61,29,155,1,203,171,220,255,92,78,139,0,145,33,181,255,169,24,141,1,55,150,179,0,139,60,80,255,218,39,97,0,2,147,107,255,60,248,72,0,173,230,47,1,6,83,182,255,16,105,162,254,137,212,81,255,180,184,134,1,39,222,164,255,221,105,251,1,239,112,125,0,63,7,97,0,63,104,227,255,148,58,12,0,90,60,224,255,84,212,252,0,79,215,168,0,248,221,199,1,115,121,1,0,36,172,120,0,32,162,187,255,57,107,49,255,147,42,21,0,106,198,43,1,57,74,87,0,126,203,81,255,129,135,195,0,140,31,177,0,221,139,194,0,3,222,215,0,131,68,231,0,177,86,178,254,124,151,180,0,184,124,38,1,70,163,17,0,249,251,181,1,42,55,227,0,226,161,44,0,23,236,110,0,51,149,142,1,93,5,236,0,218,183,106,254,67,24,77,0,40,245,209,255,222,121,153,0,165,57,30,0,83,125,60,0,70,38,82,1,229,6,188,0,109,222,157,255,55,118,63,255,205,151,186,0,227,33,149,255,254,176,246,1,227,177,227,0,34,106,163,254,176,43,79,0,106,95,78,1,185,241,122,255,185,14,61,0,36,1,202,0,13,178,162,255,247,11,132,0,161,230,92,1,65,1,185,255,212,50,165,1,141,146,64,255,158,242,218,0,21,164,125,0,213,139,122,1,67,71,87,0,203,158,178,1,151,92,43,0,152,111,5,255,39,3,239,255,217,255,250,255,176,63,71,255,74,245,77,1,250,174,18,255,34,49,227,255,246,46,251,255,154,35,48,1,125,157,61,255,106,36,78,255,97,236,153,0,136,187,120,255,113,134,171,255,19,213,217,254,216,94,209,255,252,5,61,0,94,3,202,0,3,26,183,255,64,191,43,255,30,23,21,0,129,141,77,255,102,120,7,1,194,76,140,0,188,175,52,255,17,81,148,0,232,86,55,1,225,48,172,0,134,42,42,255,238,50,47,0,169,18,254,0,20,147,87,255,14,195,239,255,69,247,23,0,238,229,128,255,177,49,112,0,168,98,251,255,121,71,248,0,243,8,145,254,246,227,153,255,219,169,177,254,251,139,165,255,12,163,185,255,164,40,171,255,153,159,27,254,243,109,91,255,222,24,112,1,18,214,231,0,107,157,181,254,195,147,0,255,194,99,104,255,89,140,190,255,177,66,126,254,106,185,66,0,49,218,31,0,252,174,158,0,188,79,230,1,238,41,224,0,212,234,8,1,136,11,181,0,166,117,83,255,68,195,94,0,46,132,201,0,240,152,88,0,164,57,69,254,160,224,42,255,59,215,67,255,119,195,141,255,36,180,121,254,207,47,8,255,174,210,223,0,101,197,68,255,255,82,141,1,250,137,233,0,97,86,133,1,16,80,69,0,132,131,159,0,116,93,100,0,45,141,139,0,152,172,157,255,90,43,91,0,71,153,46,0,39,16,112,255,217,136,97,255,220,198,25,254,177,53,49,0,222,88,134,255,128,15,60,0,207,192,169,255,192,116,209,255,106,78,211,1,200,213,183,255,7,12,122,254,222,203,60,255,33,110,199,254,251,106,117,0,228,225,4,1,120,58,7,255,221,193,84,254,112,133,27,0,189,200,201,255,139,135,150,0,234,55,176,255,61,50,65,0,152,108,169,255,220,85,1,255,112,135,227,0,162,26,186,0,207,96,185,254,244,136,107,0,93,153,50,1,198,97,151,0,110,11,86,255,143,117,174,255,115,212,200,0,5,202,183,0,237,164,10,254,185,239,62,0,236,120,18,254,98,123,99,255,168,201,194,254,46,234,214,0,191,133,49,255,99,169,119,0,190,187,35,1,115,21,45,255,249,131,72,0,112,6,123,255,214,49,181,254,166,233,34,0,92,197,102,254,253,228,205,255,3,59,201,1,42,98,46,0,219,37,35,255,169,195,38,0,94,124,193,1,156,43,223,0,95,72,133,254,120,206,191,0,122,197,239,255,177,187,79,255,254,46,2,1,250,167,190,0,84,129,19,0,203,113,166,255,249,31,189,254,72,157,202,255,208,71,73,255,207,24,72,0,10,16,18,1,210,81,76,255,88,208,192,255,126,243,107,255,238,141,120,255,199,121,234,255,137,12,59,255,36,220,123,255,148,179,60,254,240,12,29,0,66,0,97,1,36,30,38,255,115,1,93,255,96,103,231,255,197,158,59,1,192,164,240,0,202,202,57,255,24,174,48,0,89,77,155,1,42,76,215,0,244,151,233,0,23,48,81,0,239,127,52,254,227,130,37,255,248,116,93,1,124,132,118,0,173,254,192,1,6,235,83,255,110,175,231,1,251,28,182,0,129,249,93,254,84,184,128,0,76,181,62,0,175,128,186,0,100,53,136,254,109,29,226,0,221,233,58,1,20,99,74,0,0,22,160,0,134,13,21,0,9,52,55,255,17,89,140,0,175,34,59,0,84,165,119,255,224,226,234,255,7,72,166,255,123,115,255,1,18,214,246,0,250,7,71,1,217,220,185,0,212,35,76,255,38,125,175,0,189,97,210,0,114,238,44,255,41,188,169,254,45,186,154,0,81,92,22,0,132,160,193,0,121,208,98,255,13,81,44,255,203,156,82,0,71,58,21,255,208,114,191,254,50,38,147,0,154,216,195,0,101,25,18,0,60,250,215,255,233,132,235,255,103,175,142,1,16,14,92,0,141,31,110,254,238,241,45,255,153,217,239,1,97,168,47,255,249,85,16,1,28,175,62,255,57,254,54,0,222,231,126,0,166,45,117,254,18,189,96,255,228,76,50,0,200,244,94,0,198,152,120,1,68,34,69,255,12,65,160,254,101,19,90,0,167,197,120,255,68,54,185,255,41,218,188,0,113,168,48,0,88,105,189,1,26,82,32,255,185,93,164,1,228,240,237,255,66,182,53,0,171,197,92,255,107,9,233,1,199,120,144,255,78,49,10,255,109,170,105,255,90,4,31,255,28,244,113,255,74,58,11,0,62,220,246,255,121,154,200,254,144,210,178,255,126,57,129,1,43,250,14,255,101,111,28,1,47,86,241,255,61,70,150,255,53,73,5,255,30,26,158,0,209,26,86,0,138,237,74,0,164,95,188,0,142,60,29,254,162,116,248,255,187,175,160,0,151,18,16,0,209,111,65,254,203,134,39,255,88,108,49,255,131,26,71,255,221,27,215,254,104,105,93,255,31,236,31,254,135,0,211,255,143,127,110,1,212,73,229,0,233,67,167,254,195,1,208,255,132,17,221,255,51,217,90],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+44136);allocate([67,235,50,255,223,210,143,0,179,53,130,1,233,106,198,0,217,173,220,255,112,229,24,255,175,154,93,254,71,203,246,255,48,66,133,255,3,136,230,255,23,221,113,254,235,111,213,0,170,120,95,254,251,221,2,0,45,130,158,254,105,94,217,255,242,52,180,254,213,68,45,255,104,38,28,0,244,158,76,0,161,200,96,255,207,53,13,255,187,67,148,0,170,54,248,0,119,162,178,255,83,20,11,0,42,42,192,1,146,159,163,255,183,232,111,0,77,229,21,255,71,53,143,0,27,76,34,0,246,136,47,255,219,39,182,255,92,224,201,1,19,142,14,255,69,182,241,255,163,118,245,0,9,109,106,1,170,181,247,255,78,47,238,255,84,210,176,255,213,107,139,0,39,38,11,0,72,21,150,0,72,130,69,0,205,77,155,254,142,133,21,0,71,111,172,254,226,42,59,255,179,0,215,1,33,128,241,0,234,252,13,1,184,79,8,0,110,30,73,255,246,141,189,0,170,207,218,1,74,154,69,255,138,246,49,255,155,32,100,0,125,74,105,255,90,85,61,255,35,229,177,255,62,125,193,255,153,86,188,1,73,120,212,0,209,123,246,254,135,209,38,255,151,58,44,1,92,69,214,255,14,12,88,255,252,153,166,255,253,207,112,255,60,78,83,255,227,124,110,0,180,96,252,255,53,117,33,254,164,220,82,255,41,1,27,255,38,164,166,255,164,99,169,254,61,144,70,255,192,166,18,0,107,250,66,0,197,65,50,0,1,179,18,255,255,104,1,255,43,153,35,255,80,111,168,0,110,175,168,0,41,105,45,255,219,14,205,255,164,233,140,254,43,1,118,0,233,67,195,0,178,82,159,255,138,87,122,255,212,238,90,255,144,35,124,254,25,140,164,0,251,215,44,254,133,70,107,255,101,227,80,254,92,169,55,0,215,42,49,0,114,180,85,255,33,232,27,1,172,213,25,0,62,176,123,254,32,133,24,255,225,191,62,0,93,70,153,0,181,42,104,1,22,191,224,255,200,200,140,255,249,234,37,0,149,57,141,0,195,56,208,255,254,130,70,255,32,173,240,255,29,220,199,0,110,100,115,255,132,229,249,0,228,233,223,255,37,216,209,254,178,177,209,255,183,45,165,254,224,97,114,0,137,97,168,255,225,222,172,0,165,13,49,1,210,235,204,255,252,4,28,254,70,160,151,0,232,190,52,254,83,248,93,255,62,215,77,1,175,175,179,255,160,50,66,0,121,48,208,0,63,169,209,255,0,210,200,0,224,187,44,1,73,162,82,0,9,176,143,255,19,76,193,255,29,59,167,1,24,43,154,0,28,190,190,0,141,188,129,0,232,235,203,255,234,0,109,255,54,65,159,0,60,88,232,255,121,253,150,254,252,233,131,255,198,110,41,1,83,77,71,255,200,22,59,254,106,253,242,255,21,12,207,255,237,66,189,0,90,198,202,1,225,172,127,0,53,22,202,0,56,230,132,0,1,86,183,0,109,190,42,0,243,68,174,1,109,228,154,0,200,177,122,1,35,160,183,255,177,48,85,255,90,218,169,255,248,152,78,0,202,254,110,0,6,52,43,0,142,98,65,255,63,145,22,0,70,106,93,0,232,138,107,1,110,179,61,255,211,129,218,1,242,209,92,0,35,90,217,1,182,143,106,255,116,101,217,255,114,250,221,255,173,204,6,0,60,150,163,0,73,172,44,255,239,110,80,255,237,76,153,254,161,140,249,0,149,232,229,0,133,31,40,255,174,164,119,0,113,51,214,0,129,228,2,254,64,34,243,0,107,227,244,255,174,106,200,255,84,153,70,1,50,35,16,0,250,74,216,254,236,189,66,255,153,249,13,0,230,178,4,255,221,41,238,0,118,227,121,255,94,87,140,254,254,119,92,0,73,239,246,254,117,87,128,0,19,211,145,255,177,46,252,0,229,91,246,1,69,128,247,255,202,77,54,1,8,11,9,255,153,96,166,0,217,214,173,255,134,192,2,1,0,207,0,0,189,174,107,1,140,134,100,0,158,193,243,1,182,102,171,0,235,154,51,0,142,5,123,255,60,168,89,1,217,14,92,255,19,214,5,1,211,167,254,0,44,6,202,254,120,18,236,255,15,113,184,255,184,223,139,0,40,177,119,254,182,123,90,255,176,165,176,0,247,77,194,0,27,234,120,0,231,0,214,255,59,39,30,0,125,99,145,255,150,68,68,1,141,222,248,0,153,123,210,255,110,127,152,255,229,33,214,1,135,221,197,0,137,97,2,0,12,143,204,255,81,41,188,0,115,79,130,255,94,3,132,0,152,175,187,255,124,141,10,255,126,192,179,255,11,103,198,0,149,6,45,0,219,85,187,1,230,18,178,255,72,182,152,0,3,198,184,255,128,112,224,1,97,161,230,0,254,99,38,255,58,159,197,0,151,66,219,0,59,69,143,255,185,112,249,0,119,136,47,255,123,130,132,0,168,71,95,255,113,176,40,1,232,185,173,0,207,93,117,1,68,157,108,255,102,5,147,254,49,97,33,0,89,65,111,254,247,30,163,255,124,217,221,1,102,250,216,0,198,174,75,254,57,55,18,0,227,5,236,1,229,213,173,0,201,109,218,1,49,233,239,0,30,55,158,1,25,178,106,0,155,111,188,1,94,126,140,0,215,31,238,1,77,240,16,0,213,242,25,1,38,71,168,0,205,186,93,254,49,211,140,255,219,0,180,255,134,118,165,0,160,147,134,255,110,186,35,255,198,243,42,0,243,146,119,0,134,235,163,1,4,241,135,255,193,46,193,254,103,180,79,255,225,4,184,254,242,118,130,0,146,135,176,1,234,111,30,0,69,66,213,254,41,96,123,0,121,94,42,255,178,191,195,255,46,130,42,0,117,84,8,255,233,49,214,254,238,122,109,0,6,71,89,1,236,211,123,0,244,13,48,254,119,148,14,0,114,28,86,255,75,237,25,255,145,229,16,254,129,100,53,255,134,150,120,254,168,157,50,0,23,72,104,255,224,49,14,0,255,123,22,255,151,185,151,255,170,80,184,1,134,182,20,0,41,100,101,1,153,33,16,0,76,154,111,1,86,206,234,255,192,160,164,254,165,123,93,255,1,216,164,254,67,17,175,255,169,11,59,255,158,41,61,255,73,188,14,255,195,6,137,255,22,147,29,255,20,103,3,255,246,130,227,255,122,40,128,0,226,47,24,254,35,36,32,0,152,186,183,255,69,202,20,0,195,133,195,0,222,51,247,0,169,171,94,1,183,0,160,255,64,205,18,1,156,83,15,255,197,58,249,254,251,89,110,255,50,10,88,254,51,43,216,0,98,242,198,1,245,151,113,0,171,236,194,1,197,31,199,255,229,81,38,1,41,59,20,0,253,104,230,0,152,93,14,255,246,242,146,254,214,169,240,255,240,102,108,254,160,167,236,0,154,218,188,0,150,233,202,255,27,19,250,1,2,71,133,255,175,12,63,1,145,183,198,0,104,120,115,255,130,251,247,0,17,212,167,255,62,123,132,255,247,100,189,0,155,223,152,0,143,197,33,0,155,59,44,255,150,93,240,1,127,3,87,255,95,71,207,1,167,85,1,255,188,152,116,255,10,23,23,0,137,195,93,1,54,98,97,0,240,0,168,255,148,188,127,0,134,107,151,0,76,253,171,0,90,132,192,0,146,22,54,0,224,66,54,254,230,186,229,255,39,182,196,0,148,251,130,255,65,131,108,254,128,1,160,0,169,49,167,254,199,254,148,255,251,6,131,0,187,254,129,255,85,82,62,0,178,23,58,255,254,132,5,0,164,213,39,0,134,252,146,254,37,53,81,255,155,134,82,0,205,167,238,255,94,45,180,255,132,40,161,0,254,111,112,1,54,75,217,0,179,230,221,1,235,94,191,255,23,243,48,1,202,145,203,255,39,118,42,255,117,141,253,0,254,0,222,0,43,251,50,0,54,169,234,1,80,68,208,0,148,203,243,254,145,7,135,0,6,254,0,0,252,185,127,0,98,8,129,255,38,35,72,255,211,36,220,1,40,26,89,0,168,64,197,254,3,222,239,255,2,83,215,254,180,159,105,0,58,115,194,0,186,116,106,255,229,247,219,255,129,118,193,0,202,174,183,1,166,161,72,0,201,107,147,254,237,136,74,0,233,230,106,1,105,111,168,0,64,224,30,1,1,229,3,0,102,151,175,255,194,238,228,255,254,250,212,0,187,237,121,0,67,251,96,1,197,30,11,0,183,95,204,0,205,89,138,0,64,221,37,1,255,223,30,255,178,48,211,255,241,200,90,255,167,209,96,255,57,130,221,0,46,114,200,255,61,184,66,0,55,182,24,254,110,182,33,0,171,190,232,255,114,94,31,0,18,221,8,0,47,231,254,0,255,112,83,0,118,15,215,255,173,25,40,254,192,193,31,255,238,21,146,255,171,193,118,255,101,234,53,254,131,212,112,0,89,192,107,1,8,208,27,0,181,217,15,255,231,149,232,0,140,236,126,0,144,9,199,255,12,79,181,254,147,182,202,255,19,109,182,255,49,212,225,0,74,163,203,0,175,233,148,0,26,112,51,0,193,193,9,255,15,135,249,0,150,227,130,0,204,0,219,1,24,242,205,0,238,208,117,255,22,244,112,0,26,229,34,0,37,80,188,255,38,45,206,254,240,90,225,255,29,3,47,255,42,224,76,0,186,243,167,0,32,132,15,255,5,51,125,0,139,135,24,0,6,241,219,0,172,229,133,255,246,214,50,0,231,11,207,255,191,126,83,1,180,163,170,255,245,56,24,1,178,164,211,255,3,16,202,1,98,57,118,255,141,131,89,254,33,51,24,0,243,149,91,255,253,52,14,0,35,169,67,254,49,30,88,255,179,27,36,255,165,140,183,0,58,189,151,0,88,31,0,0,75,169,66,0,66,101,199,255,24,216,199,1,121,196,26,255,14,79,203,254,240,226,81,255,94,28,10,255,83,193,240,255,204,193,131,255,94,15,86,0,218,40,157,0,51,193,209,0,0,242,177,0,102,185,247,0,158,109,116,0,38,135,91,0,223,175,149,0,220,66,1,255,86,60,232,0,25,96,37,255,225,122,162,1,215,187,168,255,158,157,46,0,56,171,162,0,232,240,101,1,122,22,9,0,51,9,21,255,53,25,238,255,217,30,232,254,125,169,148,0,13,232,102,0,148,9,37,0,165,97,141,1,228,131,41,0,222,15,243,255,254,18,17,0,6,60,237,1,106,3,113,0,59,132,189,0,92,112,30,0,105,208,213,0,48,84,179,255,187,121,231,254,27,216,109,255,162,221,107,254,73,239,195,255,250,31,57,255,149,135,89,255,185,23,115,1,3,163,157,255,18,112,250,0,25,57,187,255,161,96,164,0,47,16,243,0,12,141,251,254,67,234,184,255,41,18,161,0,175,6,96,255,160,172,52,254,24,176,183,255,198,193,85,1,124,121,137,255,151,50,114,255,220,203,60,255,207,239,5,1,0,38,107,255,55,238,94,254,70,152,94,0,213,220,77,1,120,17,69,255,85,164,190,255,203,234,81,0,38,49,37,254,61,144,124,0,137,78,49,254,168,247,48,0,95,164,252,0,105,169,135,0,253,228,134,0,64,166,75,0,81,73,20,255,207,210,10,0,234,106,150,255,94,34,90,255,254,159,57,254,220,133,99,0,139,147,180,254,24,23,185,0,41,57,30,255,189,97,76,0,65,187,223,255,224,172,37,255,34,62,95,1,231,144,240,0,77,106,126,254,64,152,91,0,29,98,155,0,226,251,53,255,234,211,5,255,144,203,222,255,164,176,221,254,5,231,24,0,179,122,205,0,36,1,134,255,125,70,151,254,97,228,252,0,172,129,23,254,48,90,209,255,150,224,82,1,84,134,30,0,241,196,46,0,103,113,234,255,46,101,121,254,40,124,250,255,135,45,242,254,9,249,168,255,140,108,131,255,143,163,171,0,50,173,199,255,88,222,142,255,200,95,158,0,142,192,163,255,7,117,135,0,111,124,22,0,236,12,65,254,68,38,65,255,227,174,254,0,244,245,38,0,240,50,208,255,161,63,250,0,60,209,239,0,122,35,19,0,14,33,230,254,2,159,113,0,106,20,127,255,228,205,96,0,137,210,174,254,180,212,144,255,89,98,154,1,34,88,139,0,167,162,112,1,65,110,197,0,241,37,169,0,66,56,131,255,10,201,83,254,133,253,187,255,177,112,45,254,196,251,0,0,196,250,151,255,238,232,214,255,150,209,205,0,28,240,118,0,71,76,83,1,236,99,91,0,42,250,131,1,96,18,64,255,118,222,35,0,113,214,203,255,122,119,184,255,66,19,36,0,204,64,249,0,146,89,139,0,134,62,135,1,104,233,101,0,188,84,26,0,49,249,129,0,208,214,75,255,207,130,77,255,115,175,235,0,171,2,137,255,175,145,186,1,55,245,135,255,154,86,181,1,100,58,246,255,109,199,60,255,82,204,134,255,215,49,230,1,140,229,192,255,222,193,251,255,81,136,15,255,179,149,162,255,23,39,29,255,7,95,75,254,191,81,222,0,241,81,90,255,107,49,201,255,244,211,157,0,222,140,149,255,65,219,56,254,189,246,90,255,178,59,157,1,48,219,52,0,98,34,215,0,28,17,187,255,175,169,24,0,92,79,161,255,236,200,194,1,147,143,234,0,229,225,7,1,197,168,14,0,235,51,53,1,253,120,174,0,197,6,168,255,202,117,171,0,163,21,206,0,114,85,90,255,15,41,10,255,194,19,99,0,65,55,216,254,162,146,116,0,50,206,212,255,64,146,29,255,158,158,131,1,100,165,130,255,172,23,129,255,125,53,9,255,15,193,18,1,26,49,11,255,181,174,201,1,135,201,14,255,100,19,149,0,219,98,79,0,42,99,143,254,96,0,48,255,197,249,83,254,104,149,79,255,235,110,136,254,82,128,44,255,65,41,36,254,88,211,10,0,187,121,187,0,98,134,199,0,171,188,179,254,210,11,238,255,66,123,130,254,52,234,61,0,48,113,23,254,6,86,120,255,119,178,245,0,87,129,201,0,242,141,209,0,202,114,85,0,148,22,161,0,103,195,48,0,25,49,171,255,138,67,130,0,182,73,122,254,148,24,130,0,211,229,154,0,32,155,158,0,84,105,61,0,177,194,9,255,166,89,86,1,54,83,187,0,249,40,117,255,109,3,215,255,53,146,44,1,63,47,179,0,194,216,3,254,14,84,136,0,136,177,13,255,72,243,186,255,117,17,125,255,211,58,211,255,93,79,223,0,90,88,245,255,139,209,111,255,70,222,47,0,10,246,79,255,198,217,178,0,227,225,11,1,78,126,179,255,62,43,126,0,103,148,35,0,129,8,165,254,245,240,148,0,61,51,142,0,81,208,134,0,15,137,115,255,211,119,236,255,159,245,248,255,2,134,136,255,230,139,58,1,160,164,254,0,114,85,141,255,49,166,182,255,144,70,84,1,85,182,7,0,46,53,93,0,9,166,161,255,55,162,178,255,45,184,188,0,146,28,44,254,169,90,49,0,120,178,241,1,14,123,127,255,7,241,199,1,189,66,50,255,198,143,101,254,189,243,135,255,141,24,24,254,75,97,87,0,118,251,154,1,237,54,156,0,171,146,207,255,131,196,246,255,136,64,113,1,151,232,57,0,240,218,115,0,49,61,27,255,64,129,73,1,252,169,27,255,40,132,10,1,90,201,193,255,252,121,240,1,186,206,41,0,43,198,97,0,145,100,183,0,204,216,80,254,172,150,65,0,249,229,196,254,104,123,73,255,77,104,96,254,130,180,8,0,104,123,57,0,220,202,229,255,102,249,211,0,86,14,232,255,182,78,209,0,239,225,164,0,106,13,32,255,120,73,17,255,134,67,233,0,83,254,181,0,183,236,112,1,48,64,131,255,241,216,243,255,65,193,226,0,206,241,100,254,100,134,166,255,237,202,197,0,55,13,81,0,32,124,102,255,40,228,177,0,118,181,31,1,231,160,134,255,119,187,202,0,0,142,60,255,128,38,189,255,166,201,150,0,207,120,26,1,54,184,172,0,12,242,204,254,133,66,230,0,34,38,31,1,184,112,80,0,32,51,165,254,191,243,55,0,58,73,146,254,155,167,205,255,100,104,152,255,197,254,207,255,173,19,247,0,238,10,202,0,239,151,242,0,94,59,39,255,240,29,102,255,10,92,154,255,229,84,219,255,161,129,80,0,208,90,204,1,240,219,174,255,158,102,145,1,53,178,76,255,52,108,168,1,83,222,107,0,211,36,109,0,118,58,56,0,8,29,22,0,237,160,199,0,170,209,157,0,137,71,47,0,143,86,32,0,198,242,2,0,212,48,136,1,92,172,186,0,230,151,105,1,96,191,229,0,138,80,191,254,240,216,130,255,98,43,6,254,168,196,49,0,253,18,91,1,144,73,121,0,61,146,39,1,63,104,24,255,184,165,112,254,126,235,98,0,80,213,98,255,123,60,87,255,82,140,245,1,223,120,173,255,15,198,134,1,206,60,239,0,231,234,92,255,33,238,19,255,165,113,142,1,176,119,38,0,160,43,166,254,239,91,105,0,107,61,194,1,25,4,68,0,15,139,51,0,164,132,106,255,34,116,46,254,168,95,197,0,137,212,23,0,72,156,58,0,137,112,69,254,150,105,154,255,236,201,157,0,23,212,154,255,136,82,227,254,226,59,221,255,95,149,192,0,81,118,52,255,33,43,215,1,14,147,75,255,89,156,121,254,14,18,79,0,147,208,139,1,151,218,62,255,156,88,8,1,210,184,98,255,20,175,123,255,102,83,229,0,220,65,116,1,150,250,4,255,92,142,220,255,34,247,66,255,204,225,179,254,151,81,151,0,71,40,236,255,138,63,62,0,6,79,240,255,183,185,181,0,118,50,27,0,63,227,192,0,123,99,58,1,50,224,155,255,17,225,223,254,220,224,77,255,14,44,123,1,141,128,175,0,248,212,200,0,150,59,183,255,147,97,29,0,150,204,181,0,253,37,71,0,145,85,119,0,154,200,186,0,2,128,249,255,83,24,124,0,14,87,143,0,168,51,245,1,124,151,231,255,208,240,197,1,124,190,185,0,48,58,246,0,20,233,232,0,125,18,98,255,13,254,31,255,245,177,130,255,108,142,35,0,171,125,242,254,140,12,34,255,165,161,162,0,206,205,101,0,247,25,34,1,100,145,57,0,39,70,57,0,118,204,203,255,242,0,162,0,165,244,30,0,198,116,226,0,128,111,153,255,140,54,182,1,60,122,15,255,155,58,57,1,54,50,198,0,171,211,29,255,107,138,167,255,173,107,199,255,109,161,193,0,89,72,242,255,206,115,89,255,250,254,142,254,177,202,94,255,81,89,50,0,7,105,66,255,25,254,255,254,203,64,23,255,79,222,108,255,39,249,75,0,241,124,50,0,239,152,133,0,221,241,105,0,147,151,98,0,213,161,121,254,242,49,137,0,233,37,249,254,42,183,27,0,184,119,230,255,217,32,163,255,208,251,228,1,137,62,131,255,79,64,9,254,94,48,113,0,17,138,50,254,193,255,22,0,247,18,197,1,67,55,104,0,16,205,95,255,48,37,66,0,55,156,63,1,64,82,74,255,200,53,71,254,239,67,125,0,26,224,222,0,223,137,93,255,30,224,202,255,9,220,132,0,198,38,235,1,102,141,86,0,60,43,81,1,136,28,26,0,233,36,8,254,207,242,148,0,164,162,63,0,51,46,224,255,114,48,79,255,9,175,226,0,222,3,193,255,47,160,232,255,255,93,105,254,14,42,230,0,26,138,82,1,208,43,244,0,27,39,38,255,98,208,127,255,64,149,182,255,5,250,209,0,187,60,28,254,49,25,218,255,169,116,205,255,119,18,120,0,156,116,147,255,132,53,109,255,13,10,202,0,110,83,167,0,157,219,137,255,6,3,130,255,50,167,30,255,60,159,47,255,129,128,157,254,94,3,189,0,3,166,68,0,83,223,215,0,150,90,194,1,15,168,65,0,227,83,51,255,205,171,66,255,54,187,60,1,152,102,45,255,119,154,225,0,240,247,136,0,100,197,178,255,139,71,223,255,204,82,16,1,41,206,42,255,156,192,221,255,216,123,244,255,218,218,185,255,187,186,239,255,252,172,160,255,195,52,22,0,144,174,181,254,187,100,115,255,211,78,176,255,27,7,193,0,147,213,104,255,90,201,10,255,80,123,66,1,22,33,186,0,1,7,99,254,30,206,10,0,229,234,5,0,53,30,210,0,138,8,220,254,71,55,167,0,72,225,86,1,118,190,188,0,254,193,101,1,171,249,172,255,94,158,183,254,93,2,108,255,176,93,76,255,73,99,79,255,74,64,129,254,246,46,65,0,99,241,127,254,246,151,102,255,44,53,208,254,59,102,234,0,154,175,164,255,88,242,32,0,111,38,1,0,255,182,190,255,115,176,15,254,169,60,129,0,122,237,241,0,90,76,63,0,62,74,120,255,122,195,110,0,119,4,178,0,222,242,210,0,130,33,46,254,156,40,41,0,167,146,112,1,49,163,111,255,121,176,235,0,76,207,14,255,3,25,198,1,41,235,213,0,85,36,214,1,49,92,109,255,200,24,30,254,168,236,195,0,145,39,124,1,236,195,149,0,90,36,184,255,67,85,170,255,38,35,26,254,131,124,68,255,239,155,35,255,54,201,164,0,196,22,117,255,49,15,205,0,24,224,29,1,126,113,144,0,117,21,182,0,203,159,141,0,223,135,77,0,176,230,176,255,190,229,215,255,99,37,181,255,51,21,138,255,25,189,89,255,49,48,165,254,152,45,247,0,170,108,222,0,80,202,5,0,27,69,103,254,204,22,129,255,180,252,62,254,210,1,91,255,146,110,254,255,219,162,28,0,223,252,213,1,59,8,33,0,206,16,244,0,129,211,48,0,107,160,208,0,112,59,209,0,109,77,216,254,34,21,185,255,246,99,56,255,179,139,19,255,185,29,50,255,84,89,19,0,74,250,98,255,225,42,200,255,192,217,205,255,210,16,167,0,99,132,95,1,43,230,57,0,254,11,203,255,99,188,63,255,119,193,251,254,80,105,54,0,232,181,189,1,183,69,112,255,208,171,165,255,47,109,180,255,123,83,165,0,146,162,52,255,154,11,4,255,151,227,90,255,146,137,97,254,61,233,41,255,94,42,55,255,108,164,236,0,152,68,254,0,10,140,131,255,10,106,79,254,243,158,137,0,67,178,66,254,177,123,198,255,15,62,34,0,197,88,42,255,149,95,177,255,152,0,198,255,149,254,113,255,225,90,163,255,125,217,247,0,18,17,224,0,128,66,120,254,192,25,9,255,50,221,205,0,49,212,70,0,233,255,164,0,2,209,9,0,221,52,219,254,172,224,244,255,94,56,206,1,242,179,2,255,31,91,164,1,230,46,138,255,189,230,220,0,57,47,61,255,111,11,157,0,177,91,152,0,28,230,98,0,97,87,126,0,198,89,145,255,167,79,107,0,249,77,160,1,29,233,230,255,150,21,86,254,60,11,193,0,151,37,36,254,185,150,243,255,228,212,83,1,172,151,180,0,201,169,155,0,244,60,234,0,142,235,4,1,67,218,60,0,192,113,75,1,116,243,207,255,65,172,155,0,81,30,156,255,80,72,33,254,18,231,109,255,142,107,21,254,125,26,132,255,176,16,59,255,150,201,58,0,206,169,201,0,208,121,226,0,40,172,14,255,150,61,94,255,56,57,156,255,141,60,145,255,45,108,149,255,238,145,155,255,209,85,31,254,192,12,210,0,99,98,93,254,152,16,151,0,225,185,220,0,141,235,44,255,160,172,21,254,71,26,31,255,13,64,93,254,28,56,198,0,177,62,248,1,182,8,241,0,166,101,148,255,78,81,133,255,129,222,215,1,188,169,129,255,232,7,97,0,49,112,60,255,217,229,251,0,119,108,138,0,39,19,123,254,131,49,235,0,132,84,145,0,130,230,148,255,25,74,187,0,5,245,54,255,185,219,241,1,18,194,228,255,241,202,102,0,105,113,202,0,155,235,79,0,21,9,178,255,156,1,239,0,200,148,61,0,115,247,210,255,49,221,135,0,58,189,8,1,35,46,9,0,81,65,5,255,52,158,185,255,125,116,46,255,74,140,13,255,210,92,172,254,147,23,71,0,217,224,253,254,115,108,180,255,145,58,48,254,219,177,24,255,156,255,60,1,154,147,242,0,253,134,87,0,53,75,229,0,48,195,222,255,31,175,50,255,156,210,120,255,208,35,222,255,18,248,179,1,2,10,101,255,157,194,248,255,158,204,101,255,104,254,197,255,79,62,4,0,178,172,101,1,96,146,251,255,65,10,156,0,2,137,165,255,116,4,231,0,242,215,1,0,19,35,29,255,43,161,79,0,59,149,246,1,251,66,176,0,200,33,3,255,80,110,142,255,195,161,17,1,228,56,66,255,123,47,145,254,132,4,164,0,67,174,172,0,25,253,114,0,87,97,87,1,250,220,84,0,96,91,200,255,37,125,59,0,19,65,118,0,161,52,241,255,237,172,6,255,176,191,255,255,1,65,130,254,223,190,230,0,101,253,231,255,146,35,109,0,250,29,77,1,49,0,19,0,123,90,155,1,22,86,32,255,218,213,65,0,111,93,127,0,60,93,169,255,8,127,182,0,17,186,14,254,253,137,246,255,213,25,48,254,76,238,0,255,248,92,70,255,99,224,139,0,184,9,255,1,7,164,208,0,205,131,198,1,87,214,199,0,130,214,95,0,221,149,222,0,23,38,171,254,197,110,213,0,43,115,140,254,215,177,118,0,96,52,66,1,117,158,237,0,14,64,182,255,46,63,174,255,158,95,190,255,225,205,177,255,43,5,142,255,172,99,212,255,244,187,147,0,29,51,153,255,228,116,24,254,30,101,207,0,19,246,150,255,134,231,5,0,125,134,226,1,77,65,98,0,236,130,33,255,5,110,62,0,69,108,127,255,7,113,22,0,145,20,83,254,194,161,231,255,131,181,60,0,217,209,177,255,229,148,212,254,3,131,184,0,117,177,187,1,28,14,31,255,176,102,80,0,50,84,151,255,125,31,54,255,21,157,133,255,19,179,139,1,224,232,26,0,34,117,170,255,167,252,171,255,73,141,206,254,129,250,35,0,72,79,236,1,220,229,20,255,41,202,173,255,99,76,238,255,198,22,224,255,108,198,195,255,36,141,96,1,236,158,59,255,106,100,87,0,110,226,2,0,227,234,222,0,154,93,119,255,74,112,164,255,67,91,2,255,21,145,33,255,102,214,137,255,175,230,103,254,163,246,166,0,93,247,116,254,167,224,28,255,220,2,57,1,171,206,84,0,123,228,17,255,27,120,119,0,119,11,147,1,180,47,225,255,104,200,185,254,165,2,114,0,77,78,212,0,45,154,177,255,24,196,121,254,82,157,182,0,90,16,190,1,12,147,197,0,95,239,152,255,11,235,71,0,86,146,119,255,172,134,214,0,60,131,196,0,161,225,129,0,31,130,120,254,95,200,51,0,105,231,210,255,58,9,148,255,43,168,221,255,124,237,142,0,198,211,50,254,46,245,103,0,164,248,84,0,152,70,208,255,180,117,177,0,70,79,185,0,243,74,32,0,149,156,207,0,197,196,161,1,245,53,239,0,15,93,246,254,139,240,49,255,196,88,36,255,162,38,123,0,128,200,157,1,174,76,103,255,173,169,34,254,216,1,171,255,114,51,17,0,136,228,194,0,110,150,56,254,106,246,159,0,19,184,79,255,150,77,240,255,155,80,162,0,0,53,169,255,29,151,86,0,68,94,16,0,92,7,110,254,98,117,149,255,249,77,230,255,253,10,140,0,214,124,92,254,35,118,235,0,89,48,57,1,22,53,166,0,184,144,61,255,179,255,194,0,214,248,61,254,59,110,246,0,121,21,81,254,166,3,228,0,106,64,26,255,69,232,134,255,242,220,53,254,46,220,85,0,113,149,247,255,97,179,103,255,190,127,11,0,135,209,182,0,95,52,129,1,170,144,206,255,122,200,204,255,168,100,146,0,60,144,149,254,70,60,40,0,122,52,177,255,246,211,101,255,174,237,8,0,7,51,120,0,19,31,173,0,126,239,156,255,143,189,203,0,196,128,88,255,233,133,226,255,30,125,173,255,201,108,50,0,123,100,59,255,254,163,3,1,221,148,181,255,214,136,57,254,222,180,137,255,207,88,54,255,28,33,251,255,67,214,52,1,210,208,100,0,81,170,94,0,145,40,53,0,224,111,231,254,35,28,244,255,226,199,195,254,238,17,230,0,217,217,164,254,169,157,221,0,218,46,162,1,199,207,163,255,108,115,162,1,14,96,187,255,118,60,76,0,184,159,152,0,209,231,71,254,42,164,186,255,186,153,51,254,221,171,182,255,162,142,173,0,235,47,193,0,7,139,16,1,95,164,64,255,16,221,166,0,219,197,16,0,132,29,44,255,100,69,117,255,60,235,88,254,40,81,173,0,71,190,61,255,187,88,157,0,231,11,23,0,237,117,164,0,225,168,223,255,154,114,116,255,163,152,242,1,24,32,170,0,125,98,113,254,168,19,76,0,17,157,220,254,155,52,5,0,19,111,161,255,71,90,252,255,173,110,240,0,10,198,121,255,253,255,240,255,66,123,210,0,221,194,215,254,121,163,17,255,225,7,99,0,190,49,182,0,115,9,133,1,232,26,138,255,213,68,132,0,44,119,122,255,179,98,51,0,149,90,106,0,71,50,230,255,10,153,118,255,177,70,25,0,165,87,205,0,55,138,234,0,238,30,97,0,113,155,207,0,98,153,127,0,34,107,219,254,117,114,172,255,76,180,255,254,242,57,179,255,221,34,172,254,56,162,49,255,83,3,255,255,113,221,189,255,188,25,228,254,16,88,89,255,71,28,198,254,22,17,149,255,243,121,254,255,107,202,99,255,9,206,14,1,220,47,153,0,107,137,39,1,97,49,194,255,149,51,197,254,186,58,11,255,107,43,232,1,200,6,14,255,181,133,65,254,221,228,171,255,123,62,231,1,227,234,179,255,34,189,212,254,244,187,249,0,190,13,80,1,130,89,1,0,223,133,173,0,9,222,198,255,66,127,74,0,167,216,93,255,155,168,198,1,66,145,0,0,68,102,46,1,172,90,154,0,216,128,75,255,160,40,51,0,158,17,27,1,124,240,49,0,236,202,176,255,151,124,192,255,38,193,190,0,95,182,61,0,163,147,124,255,255,165,51,255,28,40,17,254,215,96,78,0,86,145,218,254,31,36,202,255,86,9,5,0,111,41,200,255,237,108,97,0,57,62,44,0,117,184,15,1,45,241,116,0,152,1,220,255,157,165,188,0,250,15,131,1,60,44,125,255,65,220,251,255,75,50,184,0,53,90,128,255,231,80,194,255,136,129,127,1,21,18,187,255,45,58,161,255,71,147,34,0,174,249,11,254,35,141,29,0,239,68,177,255,115,110,58,0,238,190,177,1,87,245,166,255,190,49,247,255,146,83,184,255,173,14,39,255,146,215,104,0,142,223,120,0,149,200,155,255,212,207,145,1,16,181,217,0,173,32,87,255,255,35,181,0,119,223,161,1,200,223,94,255,70,6,186,255,192,67,85,255,50,169,152,0,144,26,123,255,56,243,179,254,20,68,136,0,39,140,188,254,253,208,5,255,200,115,135,1,43,172,229,255,156,104,187,0,151,251,167,0,52,135,23,0,151,153,72,0,147,197,107,254,148,158,5,255,238,143,206,0,126,153,137,255,88,152,197,254,7,68,167,0,252,159,165,255,239,78,54,255,24,63,55,255,38,222,94,0,237,183,12,255,206,204,210,0,19,39,246,254,30,74,231,0,135,108,29,1,179,115,0,0,117,118,116,1,132,6,252,255,145,129,161,1,105,67,141,0,82,37,226,255,238,226,228,255,204,214,129,254,162,123,100,255,185,121,234,0,45,108,231,0,66,8,56,255,132,136,128,0,172,224,66,254,175,157,188,0,230,223,226,254,242,219,69,0,184,14,119,1,82,162,56,0,114,123,20,0,162,103,85,255,49,239,99,254,156,135,215,0,111,255,167,254,39,196,214,0,144,38,79,1,249,168,125,0,155,97,156,255,23,52,219,255,150,22,144,0,44,149,165,255,40,127,183,0,196,77,233,255,118,129,210,255,170,135,230,255,214,119,198,0,233,240,35,0,253,52,7,255,117,102,48,255,21,204,154,255,179,136,177,255,23,2,3,1,149,130,89,255,252,17,159,1,70,60,26,0,144,107,17,0,180,190,60,255,56,182,59,255,110,71,54,255,198,18,129,255,149,224,87,255,223,21,152,255,138,22,182,255,250,156,205,0,236,45,208,255,79,148,242,1,101,70,209,0,103,78,174,0,101,144,172,255,152,136,237,1,191,194,136,0,113,80,125,1,152,4,141,0,155,150,53,255,196,116,245,0,239,114,73,254,19,82,17,255,124,125,234,255,40,52,191,0,42,210,158,255,155,132,165,0,178,5,42,1,64,92,40,255,36,85,77,255,178,228,118,0,137,66,96,254,115,226,66,0,110,240,69,254,151,111,80,0,167,174,236,255,227,108,107,255,188,242,65,255,183,81,255,0,57,206,181,255,47,34,181,255,213,240,158,1,71,75,95,0,156,40,24,255,102,210,81,0,171,199,228,255,154,34,41,0,227,175,75,0,21,239,195,0,138,229,95,1,76,192,49,0,117,123,87,1,227,225,130,0,125,62,63,255,2,198,171,0,254,36,13,254,145,186,206,0,148,255,244,255,35,0,166,0,30,150,219,1,92,228,212,0,92,198,60,254,62,133,200,255,201,41,59,0,125,238,109,255,180,163,238,1,140,122,82,0,9,22,88,255,197,157,47,255,153,94,57,0,88,30,182,0,84,161,85,0,178,146,124,0,166,166,7,255,21,208,223,0,156,182,242,0,155,121,185,0,83,156,174,254,154,16,118,255,186,83,232,1,223,58,121,255,29,23,88,0,35,125,127,255,170,5,149,254,164,12,130,255,155,196,29,0,161,96,136,0,7,35,29,1,162,37,251,0,3,46,242,255,0,217,188,0,57,174,226,1,206,233,2,0,57,187,136,254,123,189,9,255,201,117,127,255,186,36,204,0,231,25,216,0,80,78,105,0,19,134,129,255,148,203,68,0,141,81,125,254,248,165,200,255,214,144,135,0,151,55,166,255,38,235,91,0,21,46,154,0,223,254,150,255,35,153,180,255,125,176,29,1,43,98,30,255,216,122,230,255,233,160,12,0,57,185,12,254,240,113,7,255,5,9,16,254,26,91,108,0,109,198,203,0,8,147,40,0,129,134,228,255,124,186,40,255,114,98,132,254,166,132,23,0,99,69,44,0,9,242,238,255,184,53,59,0,132,129,102,255,52,32,243,254,147,223,200,255,123,83,179,254,135,144,201,255,141,37,56,1,151,60,227,255,90,73,156,1,203,172,187,0,80,151,47,255,94,137,231,255,36,191,59,255,225,209,181,255,74,215,213,254,6,118,179,255,153,54,193,1,50,0,231,0,104,157,72,1,140,227,154,255,182,226,16,254,96,225,92,255,115,20,170,254,6,250,78,0,248,75,173,255,53,89,6,255,0,180,118,0,72,173,1,0,64,8,206,1,174,133,223,0,185,62,133,255,214,11,98,0,197,31,208,0,171,167,244,255,22,231,181,1,150,218,185,0,247,169,97,1,165,139,247,255,47,120,149,1,103,248,51,0,60,69,28,254,25,179,196,0,124,7,218,254,58,107,81,0,184,233,156,255,252,74,36,0,118,188,67,0,141,95,53,255,222,94,165,254,46,61,53,0,206,59,115,255,47,236,250,255,74,5,32,1,129,154,238,255,106,32,226,0,121,187,61,255,3,166,241,254,67,170,172,255,29,216,178,255,23,201,252,0,253,110,243,0,200,125,57,0,109,192,96,255,52,115,238,0,38,121,243,255,201,56,33,0,194,118,130,0,75,96,25,255,170,30,230,254,39,63,253,0,36,45,250,255,251,1,239,0,160,212,92,1,45,209,237,0,243,33,87,254,237,84,201,255,212,18,157,254,212,99,127,255,217,98,16,254,139,172,239,0,168,201,130,255,143,193,169,255,238,151,193,1,215,104,41,0,239,61,165,254,2,3,242,0,22,203,177,254,177,204,22,0,149,129,213,254,31,11,41,255,0,159,121,254,160,25,114,255,162,80,200,0,157,151,11,0,154,134,78,1,216,54,252,0,48,103,133,0,105,220,197,0,253,168,77,254,53,179,23,0,24,121,240,1,255,46,96,255,107,60,135,254,98,205,249,255,63,249,119,255,120,59,211,255,114,180,55,254,91,85,237,0,149,212,77,1,56,73,49,0,86,198,150,0,93,209,160,0,69,205,182,255,244,90,43,0,20,36,176,0,122,116,221,0,51,167,39,1,231,1,63,255,13,197,134,0,3,209,34,255,135,59,202,0,167,100,78,0,47,223,76,0,185,60,62,0,178,166,123,1,132,12,161,255,61,174,43,0,195,69,144,0,127,47,191,1,34,44,78,0,57,234,52,1,255,22,40,255,246,94,146,0,83,228,128,0,60,78,224,255,0,96,210,255,153,175,236,0,159,21,73,0,180,115,196,254,131,225,106,0,255,167,134,0,159,8,112,255,120,68,194,255,176,196,198,255,118,48,168,255,93,169,1,0,112,200,102,1,74,24,254,0,19,141,4,254,142,62,63,0,131,179,187,255,77,156,155,255,119,86,164,0,170,208,146,255,208,133,154,255,148,155,58,255,162,120,232,254,252,213,155,0,241,13,42,0,94,50,131,0,179,170,112,0,140,83,151,255,55,119,84,1,140,35,239,255,153,45,67,1,236,175,39,0,54,151,103,255,158,42,65,255,196,239,135,254,86,53,203,0,149,97,47,254,216,35,17,255,70,3,70,1,103,36,90,255,40,26,173,0,184,48,13,0,163,219,217,255,81,6,1,255,221,170,108,254,233,208,93,0,100,201,249,254,86,36,35,255,209,154,30,1,227,201,251,255,2,189,167,254,100,57,3,0,13,128,41,0,197,100,75,0,150,204,235,255,145,174,59,0,120,248,149,255,85,55,225,0,114,210,53,254,199,204,119,0,14,247,74,1,63,251,129,0,67,104,151,1,135,130,80,0,79,89,55,255,117,230,157,255,25,96,143,0,213,145,5,0,69,241,120,1,149,243,95,255,114,42,20,0,131,72,2,0,154,53,20,255,73,62,109,0,196,102,152,0,41,12,204,255,122,38,11,1,250,10,145,0,207,125,148,0,246,244,222,255,41,32,85,1,112,213,126,0,162,249,86,1,71,198,127,255,81,9,21,1,98,39,4,255,204,71,45,1,75,111,137,0,234,59,231,0,32,48,95,255,204,31,114,1,29,196,181,255,51,241,167,254,93,109,142,0,104,144,45,0,235,12,181,255,52,112,164,0,76,254,202,255,174,14,162,0,61,235,147,255,43,64,185,254,233,125,217,0,243,88,167,254,74,49,8,0,156,204,66,0,124,214,123,0,38,221,118,1,146,112,236,0,114,98,177,0,151,89,199,0,87,197,112,0,185,149,161,0,44,96,165,0,248,179,20,255,188,219,216,254,40,62,13,0,243,142,141,0,229,227,206,255,172,202,35,255,117,176,225,255,82,110,38,1,42,245,14,255,20,83,97,0,49,171,10,0,242,119,120,0,25,232,61,0,212,240,147,255,4,115,56,255,145,17,239,254,202,17,251,255,249,18,245,255,99,117,239,0,184,4,179,255,246,237,51,255,37,239,137,255,166,112,166,255,81,188,33,255,185,250,142,255,54,187,173,0,208,112,201,0,246,43,228,1,104,184,88,255,212,52,196,255,51,117,108,255,254,117,155,0,46,91,15,255,87,14,144,255,87,227,204,0,83,26,83,1,159,76,227,0,159,27,213,1,24,151,108,0,117,144,179,254,137,209,82,0,38,159,10,0,115,133,201,0,223,182,156,1,110,196,93,255,57,60,233,0,5,167,105,255,154,197,164,0,96,34,186,255,147,133,37,1,220,99,190,0,1,167,84,255,20,145,171,0,194,197,251,254,95,78,133,255,252,248,243,255,225,93,131,255,187,134,196,255,216,153,170,0,20,118,158,254,140,1,118,0,86,158,15,1,45,211,41,255,147,1,100,254,113,116,76,255,211,127,108,1,103,15,48,0,193,16,102,1,69,51,95,255,107,128,157,0,137,171,233,0,90,124,144,1,106,161,182,0,175,76,236,1,200,141,172,255,163,58,104,0,233,180,52,255,240,253,14,255,162,113,254,255,38,239,138,254,52,46,166,0,241,101,33,254,131,186,156,0,111,208,62,255,124,94,160,255,31,172,254,0,112,174,56,255,188,99,27,255,67,138,251,0,125,58,128,1,156,152,174,255,178,12,247,255,252,84,158,0,82,197,14,254,172,200,83,255,37,39,46,1,106,207,167,0,24,189,34,0,131,178,144,0,206,213,4,0,161,226,210,0,72,51,105,255,97,45,187,255,78,184,223,255,176,29,251,0,79,160,86,255,116,37,178,0,82,77,213,1,82,84,141,255,226,101,212,1,175,88,199,255,245,94,247,1,172,118,109,255,166,185,190,0,131,181,120,0,87,254,93,255,134,240,73,255,32,245,143,255,139,162,103,255,179,98,18,254,217,204,112,0,147,223,120,255,53,10,243,0,166,140,150,0,125,80,200,255,14,109,219,255,91,218,1,255,252,252,47,254,109,156,116,255,115,49,127,1,204,87,211,255,148,202,217,255,26,85,249,255,14,245,134,1,76,89,169,255,242,45,230,0,59,98,172,255,114,73,132,254,78,155,49,255,158,126,84,0,49,175,43,255,16,182,84,255,157,103,35,0,104,193,109,255,67,221,154,0,201,172,1,254,8,162,88,0,165,1,29,255,125,155,229,255,30,154,220,1,103,239,92,0,220,1,109,255,202,198,1,0,94,2,142,1,36,54,44,0,235,226,158,255,170,251,214,255,185,77,9,0,97,74,242,0,219,163,149,255,240,35,118,255,223,114,88,254,192,199,3,0,106,37,24,255,201,161,118,255,97,89,99,1,224,58,103,255,101,199,147,254,222,60,99,0,234,25,59,1,52,135,27,0,102,3,91,254,168,216,235,0,229,232,136,0,104,60,129,0,46,168,238,0,39,191,67,0,75,163,47,0,143,97,98,255,56,216,168,1,168,233,252,255,35,111,22,255,92,84,43,0,26,200,87,1,91,253,152,0,202,56,70,0,142,8,77,0,80,10,175,1,252,199,76,0,22,110,82,255,129,1,194,0,11,128,61,1,87,14,145,255,253,222,190,1,15,72,174,0,85,163,86,254,58,99,44,255,45,24,188,254,26,205,15,0,19,229,210,254,248,67,195,0,99,71,184,0,154,199,37,255,151,243,121,255,38,51,75,255,201,85,130,254,44,65,250,0,57,147,243,254,146,43,59,255,89,28,53,0,33,84,24,255,179,51,18,254,189,70,83,0,11,156,179,1,98,134,119,0,158,111,111,0,119,154,73,255,200,63,140,254,45,13,13,255,154,192,2,254,81,72,42,0,46,160,185,254,44,112,6,0,146,215,149,1,26,176,104,0,68,28,87,1,236,50,153,255,179,128,250,254,206,193,191,255,166,92,137,254,53,40,239,0,210,1,204,254,168,173,35,0,141,243,45,1,36,50,109,255,15,242,194,255,227,159,122,255,176,175,202,254,70,57,72,0,40,223,56,0,208,162,58,255,183,98,93,0,15,111,12,0,30,8,76,255,132,127,246,255,45,242,103,0,69,181,15,255,10,209,30,0,3,179,121,0,241,232,218,1,123,199,88,255,2,210,202,1,188,130,81,255,94,101,208,1,103,36,45,0,76,193,24,1,95,26,241,255,165,162,187,0,36,114,140,0,202,66,5,255,37,56,147,0,152,11,243,1,127,85,232,255,250,135,212,1,185,177,113,0,90,220,75,255,69,248,146,0,50,111,50,0,92,22,80,0,244,36,115,254,163,100,82,255,25,193,6,1,127,61,36,0,253,67,30,254,65,236,170,255,161,17,215,254,63,175,140,0,55,127,4,0,79,112,233,0,109,160,40,0,143,83,7,255,65,26,238,255,217,169,140,255,78,94,189,255,0,147,190,255,147,71,186,254,106,77,127,255,233,157,233,1,135,87,237,255,208,13,236,1,155,109,36,255,180,100,218,0,180,163,18,0,190,110,9,1,17,63,123,255,179,136,180,255,165,123,123,255,144,188,81,254,71,240,108,255,25,112,11,255,227,218,51,255,167,50,234,255,114,79,108,255,31,19,115,255,183,240,99,0,227,87,143,255,72,217,248,255,102,169,95,1,129,149,149,0,238,133,12,1,227,204,35,0,208,115,26,1,102,8,234,0,112,88,143,1,144,249,14,0,240,158,172,254,100,112,119,0,194,141,153,254,40,56,83,255,121,176,46,0,42,53,76,255,158,191,154,0,91,209,92,0,173,13,16,1,5,72,226,255,204,254,149,0,80,184,207,0,100,9,122,254,118,101,171,255,252,203,0,254,160,207,54,0,56,72,249,1,56,140,13,255,10,64,107,254,91,101,52,255,225,181,248,1,139,255,132,0,230,145,17,0,233,56,23,0,119,1,241,255,213,169,151,255,99,99,9,254,185,15,191,255,173,103,109,1,174,13,251,255,178,88,7,254,27,59,68,255,10,33,2,255,248,97,59,0,26,30,146,1,176,147,10,0,95,121,207,1,188,88,24,0,185,94,254,254,115,55,201,0,24,50,70,0,120,53,6,0,142,66,146,0,228,226,249,255,104,192,222,1,173,68,219,0,162,184,36,255,143,102,137,255,157,11,23,0,125,45,98,0,235,93,225,254,56,112,160,255,70,116,243,1,153,249,55,255,129,39,17,1,241,80,244,0,87,69,21,1,94,228,73,255,78,66,65,255,194,227,231],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+54376);allocate([61,146,87,255,173,155,23,255,112,116,219,254,216,38,11,255,131,186,133,0,94,212,187,0,100,47,91,0,204,254,175,255,222,18,215,254,173,68,108,255,227,228,79,255,38,221,213,0,163,227,150,254,31,190,18,0,160,179,11,1,10,90,94,255,220,174,88,0,163,211,229,255,199,136,52,0,130,95,221,255,140,188,231,254,139,113,128,255,117,171,236,254,49,220,20,255,59,20,171,255,228,109,188,0,20,225,32,254,195,16,174,0,227,254,136,1,135,39,105,0,150,77,206,255,210,238,226,0,55,212,132,254,239,57,124,0,170,194,93,255,249,16,247,255,24,151,62,255,10,151,10,0,79,139,178,255,120,242,202,0,26,219,213,0,62,125,35,255,144,2,108,255,230,33,83,255,81,45,216,1,224,62,17,0,214,217,125,0,98,153,153,255,179,176,106,254,131,93,138,255,109,62,36,255,178,121,32,255,120,252,70,0,220,248,37,0,204,88,103,1,128,220,251,255,236,227,7,1,106,49,198,255,60,56,107,0,99,114,238,0,220,204,94,1,73,187,1,0,89,154,34,0,78,217,165,255,14,195,249,255,9,230,253,255,205,135,245,0,26,252,7,255,84,205,27,1,134,2,112,0,37,158,32,0,231,91,237,255,191,170,204,255,152,7,222,0,109,192,49,0,193,166,146,255,232,19,181,255,105,142,52,255,103,16,27,1,253,200,165,0,195,217,4,255,52,189,144,255,123,155,160,254,87,130,54,255,78,120,61,255,14,56,41,0,25,41,125,255,87,168,245,0,214,165,70,0,212,169,6,255,219,211,194,254,72,93,164,255,197,33,103,255,43,142,141,0,131,225,172,0,244,105,28,0,68,68,225,0,136,84,13,255,130,57,40,254,139,77,56,0,84,150,53,0,54,95,157,0,144,13,177,254,95,115,186,0,117,23,118,255,244,166,241,255,11,186,135,0,178,106,203,255,97,218,93,0,43,253,45,0,164,152,4,0,139,118,239,0,96,1,24,254,235,153,211,255,168,110,20,255,50,239,176,0,114,41,232,0,193,250,53,0,254,160,111,254,136,122,41,255,97,108,67,0,215,152,23,255,140,209,212,0,42,189,163,0,202,42,50,255,106,106,189,255,190,68,217,255,233,58,117,0,229,220,243,1,197,3,4,0,37,120,54,254,4,156,134,255,36,61,171,254,165,136,100,255,212,232,14,0,90,174,10,0,216,198,65,255,12,3,64,0,116,113,115,255,248,103,8,0,231,125,18,255,160,28,197,0,30,184,35,1,223,73,249,255,123,20,46,254,135,56,37,255,173,13,229,1,119,161,34,255,245,61,73,0,205,125,112,0,137,104,134,0,217,246,30,255,237,142,143,0,65,159,102,255,108,164,190,0,219,117,173,255,34,37,120,254,200,69,80,0,31,124,218,254,74,27,160,255,186,154,199,255,71,199,252,0,104,81,159,1,17,200,39,0,211,61,192,1,26,238,91,0,148,217,12,0,59,91,213,255,11,81,183,255,129,230,122,255,114,203,145,1,119,180,66,255,72,138,180,0,224,149,106,0,119,82,104,255,208,140,43,0,98,9,182,255,205,101,134,255,18,101,38,0,95,197,166,255,203,241,147,0,62,208,145,255,133,246,251,0,2,169,14,0,13,247,184,0,142,7,254,0,36,200,23,255,88,205,223,0,91,129,52,255,21,186,30,0,143,228,210,1,247,234,248,255,230,69,31,254,176,186,135,255,238,205,52,1,139,79,43,0,17,176,217,254,32,243,67,0,242,111,233,0,44,35,9,255,227,114,81,1,4,71,12,255,38,105,191,0,7,117,50,255,81,79,16,0,63,68,65,255,157,36,110,255,77,241,3,255,226,45,251,1,142,25,206,0,120,123,209,1,28,254,238,255,5,128,126,255,91,222,215,255,162,15,191,0,86,240,73,0,135,185,81,254,44,241,163,0,212,219,210,255,112,162,155,0,207,101,118,0,168,72,56,255,196,5,52,0,72,172,242,255,126,22,157,255,146,96,59,255,162,121,152,254,140,16,95,0,195,254,200,254,82,150,162,0,119,43,145,254,204,172,78,255,166,224,159,0,104,19,237,255,245,126,208,255,226,59,213,0,117,217,197,0,152,72,237,0,220,31,23,254,14,90,231,255,188,212,64,1,60,101,246,255,85,24,86,0,1,177,109,0,146,83,32,1,75,182,192,0,119,241,224,0,185,237,27,255,184,101,82,1,235,37,77,255,253,134,19,0,232,246,122,0,60,106,179,0,195,11,12,0,109,66,235,1,125,113,59,0,61,40,164,0,175,104,240,0,2,47,187,255,50,12,141,0,194,139,181,255,135,250,104,0,97,92,222,255,217,149,201,255,203,241,118,255,79,151,67,0,122,142,218,255,149,245,239,0,138,42,200,254,80,37,97,255,124,112,167,255,36,138,87,255,130,29,147,255,241,87,78,255,204,97,19,1,177,209,22,255,247,227,127,254,99,119,83,255,212,25,198,1,16,179,179,0,145,77,172,254,89,153,14,255,218,189,167,0,107,233,59,255,35,33,243,254,44,112,112,255,161,127,79,1,204,175,10,0,40,21,138,254,104,116,228,0,199,95,137,255,133,190,168,255,146,165,234,1,183,99,39,0,183,220,54,254,255,222,133,0,162,219,121,254,63,239,6,0,225,102,54,255,251,18,246,0,4,34,129,1,135,36,131,0,206,50,59,1,15,97,183,0,171,216,135,255,101,152,43,255,150,251,91,0,38,145,95,0,34,204,38,254,178,140,83,255,25,129,243,255,76,144,37,0,106,36,26,254,118,144,172,255,68,186,229,255,107,161,213,255,46,163,68,255,149,170,253,0,187,17,15,0,218,160,165,255,171,35,246,1,96,13,19,0,165,203,117,0,214,107,192,255,244,123,177,1,100,3,104,0,178,242,97,255,251,76,130,255,211,77,42,1,250,79,70,255,63,244,80,1,105,101,246,0,61,136,58,1,238,91,213,0,14,59,98,255,167,84,77,0,17,132,46,254,57,175,197,255,185,62,184,0,76,64,207,0,172,175,208,254,175,74,37,0,138,27,211,254,148,125,194,0,10,89,81,0,168,203,101,255,43,213,209,1,235,245,54,0,30,35,226,255,9,126,70,0,226,125,94,254,156,117,20,255,57,248,112,1,230,48,64,255,164,92,166,1,224,214,230,255,36,120,143,0,55,8,43,255,251,1,245,1,106,98,165,0,74,107,106,254,53,4,54,255,90,178,150,1,3,120,123,255,244,5,89,1,114,250,61,255,254,153,82,1,77,15,17,0,57,238,90,1,95,223,230,0,236,52,47,254,103,148,164,255,121,207,36,1,18,16,185,255,75,20,74,0,187,11,101,0,46,48,129,255,22,239,210,255,77,236,129,255,111,77,204,255,61,72,97,255,199,217,251,255,42,215,204,0,133,145,201,255,57,230,146,1,235,100,198,0,146,73,35,254,108,198,20,255,182,79,210,255,82,103,136,0,246,108,176,0,34,17,60,255,19,74,114,254,168,170,78,255,157,239,20,255,149,41,168,0,58,121,28,0,79,179,134,255,231,121,135,255,174,209,98,255,243,122,190,0,171,166,205,0,212,116,48,0,29,108,66,255,162,222,182,1,14,119,21,0,213,39,249,255,254,223,228,255,183,165,198,0,133,190,48,0,124,208,109,255,119,175,85,255,9,209,121,1,48,171,189,255,195,71,134,1,136,219,51,255,182,91,141,254,49,159,72,0,35,118,245,255,112,186,227,255,59,137,31,0,137,44,163,0,114,103,60,254,8,213,150,0,162,10,113,255,194,104,72,0,220,131,116,255,178,79,92,0,203,250,213,254,93,193,189,255,130,255,34,254,212,188,151,0,136,17,20,255,20,101,83,255,212,206,166,0,229,238,73,255,151,74,3,255,168,87,215,0,155,188,133,255,166,129,73,0,240,79,133,255,178,211,81,255,203,72,163,254,193,168,165,0,14,164,199,254,30,255,204,0,65,72,91,1,166,74,102,255,200,42,0,255,194,113,227,255,66,23,208,0,229,216,100,255,24,239,26,0,10,233,62,255,123,10,178,1,26,36,174,255,119,219,199,1,45,163,190,0,16,168,42,0,166,57,198,255,28,26,26,0,126,165,231,0,251,108,100,255,61,229,121,255,58,118,138,0,76,207,17,0,13,34,112,254,89,16,168,0,37,208,105,255,35,201,215,255,40,106,101,254,6,239,114,0,40,103,226,254,246,127,110,255,63,167,58,0,132,240,142,0,5,158,88,255,129,73,158,255,94,89,146,0,230,54,146,0,8,45,173,0,79,169,1,0,115,186,247,0,84,64,131,0,67,224,253,255,207,189,64,0,154,28,81,1,45,184,54,255,87,212,224,255,0,96,73,255,129,33,235,1,52,66,80,255,251,174,155,255,4,179,37,0,234,164,93,254,93,175,253,0,198,69,87,255,224,106,46,0,99,29,210,0,62,188,114,255,44,234,8,0,169,175,247,255,23,109,137,255,229,182,39,0,192,165,94,254,245,101,217,0,191,88,96,0,196,94,99,255,106,238,11,254,53,126,243,0,94,1,101,255,46,147,2,0,201,124,124,255,141,12,218,0,13,166,157,1,48,251,237,255,155,250,124,255,106,148,146,255,182,13,202,0,28,61,167,0,217,152,8,254,220,130,45,255,200,230,255,1,55,65,87,255,93,191,97,254,114,251,14,0,32,105,92,1,26,207,141,0,24,207,13,254,21,50,48,255,186,148,116,255,211,43,225,0,37,34,162,254,164,210,42,255,68,23,96,255,182,214,8,255,245,117,137,255,66,195,50,0,75,12,83,254,80,140,164,0,9,165,36,1,228,110,227,0,241,17,90,1,25,52,212,0,6,223,12,255,139,243,57,0,12,113,75,1,246,183,191,255,213,191,69,255,230,15,142,0,1,195,196,255,138,171,47,255,64,63,106,1,16,169,214,255,207,174,56,1,88,73,133,255,182,133,140,0,177,14,25,255,147,184,53,255,10,227,161,255,120,216,244,255,73,77,233,0,157,238,139,1,59,65,233,0,70,251,216,1,41,184,153,255,32,203,112,0,146,147,253,0,87,101,109,1,44,82,133,255,244,150,53,255,94,152,232,255,59,93,39,255,88,147,220,255,78,81,13,1,32,47,252,255,160,19,114,255,93,107,39,255,118,16,211,1,185,119,209,255,227,219,127,254,88,105,236,255,162,110,23,255,36,166,110,255,91,236,221,255,66,234,116,0,111,19,244,254,10,233,26,0,32,183,6,254,2,191,242,0,218,156,53,254,41,60,70,255,168,236,111,0,121,185,126,255,238,142,207,255,55,126,52,0,220,129,208,254,80,204,164,255,67,23,144,254,218,40,108,255,127,202,164,0,203,33,3,255,2,158,0,0,37,96,188,255,192,49,74,0,109,4,0,0,111,167,10,254,91,218,135,255,203,66,173,255,150,194,226,0,201,253,6,255,174,102,121,0,205,191,110,0,53,194,4,0,81,40,45,254,35,102,143,255,12,108,198,255,16,27,232,255,252,71,186,1,176,110,114,0,142,3,117,1,113,77,142,0,19,156,197,1,92,47,252,0,53,232,22,1,54,18,235,0,46,35,189,255,236,212,129,0,2,96,208,254,200,238,199,255,59,175,164,255,146,43,231,0,194,217,52,255,3,223,12,0,138,54,178,254,85,235,207,0,232,207,34,0,49,52,50,255,166,113,89,255,10,45,216,255,62,173,28,0,111,165,246,0,118,115,91,255,128,84,60,0,167,144,203,0,87,13,243,0,22,30,228,1,177,113,146,255,129,170,230,254,252,153,129,255,145,225,43,0,70,231,5,255,122,105,126,254,86,246,148,255,110,37,154,254,209,3,91,0,68,145,62,0,228,16,165,255,55,221,249,254,178,210,91,0,83,146,226,254,69,146,186,0,93,210,104,254,16,25,173,0,231,186,38,0,189,122,140,255,251,13,112,255,105,110,93,0,251,72,170,0,192,23,223,255,24,3,202,1,225,93,228,0,153,147,199,254,109,170,22,0,248,101,246,255,178,124,12,255,178,254,102,254,55,4,65,0,125,214,180,0,183,96,147,0,45,117,23,254,132,191,249,0,143,176,203,254,136,183,54,255,146,234,177,0,146,101,86,255,44,123,143,1,33,209,152,0,192,90,41,254,83,15,125,255,213,172,82,0,215,169,144,0,16,13,34,0,32,209,100,255,84,18,249,1,197,17,236,255,217,186,230,0,49,160,176,255,111,118,97,255,237,104,235,0,79,59,92,254,69,249,11,255,35,172,74,1,19,118,68,0,222,124,165,255,180,66,35,255,86,174,246,0,43,74,111,255,126,144,86,255,228,234,91,0,242,213,24,254,69,44,235,255,220,180,35,0,8,248,7,255,102,47,92,255,240,205,102,255,113,230,171,1,31,185,201,255,194,246,70,255,122,17,187,0,134,70,199,255,149,3,150,255,117,63,103,0,65,104,123,255,212,54,19,1,6,141,88,0,83,134,243,255,136,53,103,0,169,27,180,0,177,49,24,0,111,54,167,0,195,61,215,255,31,1,108,1,60,42,70,0,185,3,162,255,194,149,40,255,246,127,38,254,190,119,38,255,61,119,8,1,96,161,219,255,42,203,221,1,177,242,164,255,245,159,10,0,116,196,0,0,5,93,205,254,128,127,179,0,125,237,246,255,149,162,217,255,87,37,20,254,140,238,192,0,9,9,193,0,97,1,226,0,29,38,10,0,0,136,63,255,229,72,210,254,38,134,92,255,78,218,208,1,104,36,84,255,12,5,193,255,242,175,61,255,191,169,46,1,179,147,147,255,113,190,139,254,125,172,31,0,3,75,252,254,215,36,15,0,193,27,24,1,255,69,149,255,110,129,118,0,203,93,249,0,138,137,64,254,38,70,6,0,153,116,222,0,161,74,123,0,193,99,79,255,118,59,94,255,61,12,43,1,146,177,157,0,46,147,191,0,16,255,38,0,11,51,31,1,60,58,98,255,111,194,77,1,154,91,244,0,140,40,144,1,173,10,251,0,203,209,50,254,108,130,78,0,228,180,90,0,174,7,250,0,31,174,60,0,41,171,30,0,116,99,82,255,118,193,139,255,187,173,198,254,218,111,56,0,185,123,216,0,249,158,52,0,52,180,93,255,201,9,91,255,56,45,166,254,132,155,203,255,58,232,110,0,52,211,89,255,253,0,162,1,9,87,183,0,145,136,44,1,94,122,245,0,85,188,171,1,147,92,198,0,0,8,104,0,30,95,174,0,221,230,52,1,247,247,235,255,137,174,53,255,35,21,204,255,71,227,214,1,232,82,194,0,11,48,227,255,170,73,184,255,198,251,252,254,44,112,34,0,131,101,131,255,72,168,187,0,132,135,125,255,138,104,97,255,238,184,168,255,243,104,84,255,135,216,226,255,139,144,237,0,188,137,150,1,80,56,140,255,86,169,167,255,194,78,25,255,220,17,180,255,17,13,193,0,117,137,212,255,141,224,151,0,49,244,175,0,193,99,175,255,19,99,154,1,255,65,62,255,156,210,55,255,242,244,3,255,250,14,149,0,158,88,217,255,157,207,134,254,251,232,28,0,46,156,251,255,171,56,184,255,239,51,234,0,142,138,131,255,25,254,243,1,10,201,194,0,63,97,75,0,210,239,162,0,192,200,31,1,117,214,243,0,24,71,222,254,54,40,232,255,76,183,111,254,144,14,87,255,214,79,136,255,216,196,212,0,132,27,140,254,131,5,253,0,124,108,19,255,28,215,75,0,76,222,55,254,233,182,63,0,68,171,191,254,52,111,222,255,10,105,77,255,80,170,235,0,143,24,88,255,45,231,121,0,148,129,224,1,61,246,84,0,253,46,219,255,239,76,33,0,49,148,18,254,230,37,69,0,67,134,22,254,142,155,94,0,31,157,211,254,213,42,30,255,4,228,247,254,252,176,13,255,39,0,31,254,241,244,255,255,170,45,10,254,253,222,249,0,222,114,132,0,255,47,6,255,180,163,179,1,84,94,151,255,89,209,82,254,229,52,169,255,213,236,0,1,214,56,228,255,135,119,151,255,112,201,193,0,83,160,53,254,6,151,66,0,18,162,17,0,233,97,91,0,131,5,78,1,181,120,53,255,117,95,63,255,237,117,185,0,191,126,136,255,144,119,233,0,183,57,97,1,47,201,187,255,167,165,119,1,45,100,126,0,21,98,6,254,145,150,95,255,120,54,152,0,209,98,104,0,143,111,30,254,184,148,249,0,235,216,46,0,248,202,148,255,57,95,22,0,242,225,163,0,233,247,232,255,71,171,19,255,103,244,49,255,84,103,93,255,68,121,244,1,82,224,13,0,41,79,43,255,249,206,167,255,215,52,21,254,192,32,22,255,247,111,60,0,101,74,38,255,22,91,84,254,29,28,13,255,198,231,215,254,244,154,200,0,223,137,237,0,211,132,14,0,95,64,206,255,17,62,247,255,233,131,121,1,93,23,77,0,205,204,52,254,81,189,136,0,180,219,138,1,143,18,94,0,204,43,140,254,188,175,219,0,111,98,143,255,151,63,162,255,211,50,71,254,19,146,53,0,146,45,83,254,178,82,238,255,16,133,84,255,226,198,93,255,201,97,20,255,120,118,35,255,114,50,231,255,162,229,156,255,211,26,12,0,114,39,115,255,206,212,134,0,197,217,160,255,116,129,94,254,199,215,219,255,75,223,249,1,253,116,181,255,232,215,104,255,228,130,246,255,185,117,86,0,14,5,8,0,239,29,61,1,237,87,133,255,125,146,137,254,204,168,223,0,46,168,245,0,154,105,22,0,220,212,161,255,107,69,24,255,137,218,181,255,241,84,198,255,130,122,211,255,141,8,153,255,190,177,118,0,96,89,178,0,255,16,48,254,122,96,105,255,117,54,232,255,34,126,105,255,204,67,166,0,232,52,138,255,211,147,12,0,25,54,7,0,44,15,215,254,51,236,45,0,190,68,129,1,106,147,225,0,28,93,45,254,236,141,15,255,17,61,161,0,220,115,192,0,236,145,24,254,111,168,169,0,224,58,63,255,127,164,188,0,82,234,75,1,224,158,134,0,209,68,110,1,217,166,217,0,70,225,166,1,187,193,143,255,16,7,88,255,10,205,140,0,117,192,156,1,17,56,38,0,27,124,108,1,171,215,55,255,95,253,212,0,155,135,168,255,246,178,153,254,154,68,74,0,232,61,96,254,105,132,59,0,33,76,199,1,189,176,130,255,9,104,25,254,75,198,102,255,233,1,112,0,108,220,20,255,114,230,70,0,140,194,133,255,57,158,164,254,146,6,80,255,169,196,97,1,85,183,130,0,70,158,222,1,59,237,234,255,96,25,26,255,232,175,97,255,11,121,248,254,88,35,194,0,219,180,252,254,74,8,227,0,195,227,73,1,184,110,161,255,49,233,164,1,128,53,47,0,82,14,121,255,193,190,58,0,48,174,117,255,132,23,32,0,40,10,134,1,22,51,25,255,240,11,176,255,110,57,146,0,117,143,239,1,157,101,118,255,54,84,76,0,205,184,18,255,47,4,72,255,78,112,85,255,193,50,66,1,93,16,52,255,8,105,134,0,12,109,72,255,58,156,251,0,144,35,204,0,44,160,117,254,50,107,194,0,1,68,165,255,111,110,162,0,158,83,40,254,76,214,234,0,58,216,205,255,171,96,147,255,40,227,114,1,176,227,241,0,70,249,183,1,136,84,139,255,60,122,247,254,143,9,117,255,177,174,137,254,73,247,143,0,236,185,126,255,62,25,247,255,45,64,56,255,161,244,6,0,34,57,56,1,105,202,83,0,128,147,208,0,6,103,10,255,74,138,65,255,97,80,100,255,214,174,33,255,50,134,74,255,110,151,130,254,111,84,172,0,84,199,75,254,248,59,112,255,8,216,178,1,9,183,95,0,238,27,8,254,170,205,220,0,195,229,135,0,98,76,237,255,226,91,26,1,82,219,39,255,225,190,199,1,217,200,121,255,81,179,8,255,140,65,206,0,178,207,87,254,250,252,46,255,104,89,110,1,253,189,158,255,144,214,158,255,160,245,54,255,53,183,92,1,21,200,194,255,146,33,113,1,209,1,255,0,235,106,43,255,167,52,232,0,157,229,221,0,51,30,25,0,250,221,27,1,65,147,87,255,79,123,196,0,65,196,223,255,76,44,17,1,85,241,68,0,202,183,249,255,65,212,212,255,9,33,154,1,71,59,80,0,175,194,59,255,141,72,9,0,100,160,244,0,230,208,56,0,59,25,75,254,80,194,194,0,18,3,200,254,160,159,115,0,132,143,247,1,111,93,57,255,58,237,11,1,134,222,135,255,122,163,108,1,123,43,190,255,251,189,206,254,80,182,72,255,208,246,224,1,17,60,9,0,161,207,38,0,141,109,91,0,216,15,211,255,136,78,110,0,98,163,104,255,21,80,121,255,173,178,183,1,127,143,4,0,104,60,82,254,214,16,13,255,96,238,33,1,158,148,230,255,127,129,62,255,51,255,210,255,62,141,236,254,157,55,224,255,114,39,244,0,192,188,250,255,228,76,53,0,98,84,81,255,173,203,61,254,147,50,55,255,204,235,191,0,52,197,244,0,88,43,211,254,27,191,119,0,188,231,154,0,66,81,161,0,92,193,160,1,250,227,120,0,123,55,226,0,184,17,72,0,133,168,10,254,22,135,156,255,41,25,103,255,48,202,58,0,186,149,81,255,188,134,239,0,235,181,189,254,217,139,188,255,74,48,82,0,46,218,229,0,189,253,251,0,50,229,12,255,211,141,191,1,128,244,25,255,169,231,122,254,86,47,189,255,132,183,23,255,37,178,150,255,51,137,253,0,200,78,31,0,22,105,50,0,130,60,0,0,132,163,91,254,23,231,187,0,192,79,239,0,157,102,164,255,192,82,20,1,24,181,103,255,240,9,234,0,1,123,164,255,133,233,0,255,202,242,242,0,60,186,245,0,241,16,199,255,224,116,158,254,191,125,91,255,224,86,207,0,121,37,231,255,227,9,198,255,15,153,239,255,121,232,217,254,75,112,82,0,95,12,57,254,51,214,105,255,148,220,97,1,199,98,36,0,156,209,12,254,10,212,52,0,217,180,55,254,212,170,232,255,216,20,84,255,157,250,135,0,157,99,127,254,1,206,41,0,149,36,70,1,54,196,201,255,87,116,0,254,235,171,150,0,27,163,234,0,202,135,180,0,208,95,0,254,123,156,93,0,183,62,75,0,137,235,182,0,204,225,255,255,214,139,210,255,2,115,8,255,29,12,111,0,52,156,1,0,253,21,251,255,37,165,31,254,12,130,211,0,106,18,53,254,42,99,154,0,14,217,61,254,216,11,92,255,200,197,112,254,147,38,199,0,36,252,120,254,107,169,77,0,1,123,159,255,207,75,102,0,163,175,196,0,44,1,240,0,120,186,176,254,13,98,76,255,237,124,241,255,232,146,188,255,200,96,224,0,204,31,41,0,208,200,13,0,21,225,96,255,175,156,196,0,247,208,126,0,62,184,244,254,2,171,81,0,85,115,158,0,54,64,45,255,19,138,114,0,135,71,205,0,227,47,147,1,218,231,66,0,253,209,28,0,244,15,173,255,6,15,118,254,16,150,208,255,185,22,50,255,86,112,207,255,75,113,215,1,63,146,43,255,4,225,19,254,227,23,62,255,14,255,214,254,45,8,205,255,87,197,151,254,210,82,215,255,245,248,247,255,128,248,70,0,225,247,87,0,90,120,70,0,213,245,92,0,13,133,226,0,47,181,5,1,92,163,105,255,6,30,133,254,232,178,61,255,230,149,24,255,18,49,158,0,228,100,61,254,116,243,251,255,77,75,92,1,81,219,147,255,76,163,254,254,141,213,246,0,232,37,152,254,97,44,100,0,201,37,50,1,212,244,57,0,174,171,183,255,249,74,112,0,166,156,30,0,222,221,97,255,243,93,73,254,251,101,100,255,216,217,93,255,254,138,187,255,142,190,52,255,59,203,177,255,200,94,52,0,115,114,158,255,165,152,104,1,126,99,226,255,118,157,244,1,107,200,16,0,193,90,229,0,121,6,88,0,156,32,93,254,125,241,211,255,14,237,157,255,165,154,21,255,184,224,22,255,250,24,152,255,113,77,31,0,247,171,23,255,237,177,204,255,52,137,145,255,194,182,114,0,224,234,149,0,10,111,103,1,201,129,4,0,238,142,78,0,52,6,40,255,110,213,165,254,60,207,253,0,62,215,69,0,96,97,0,255,49,45,202,0,120,121,22,255,235,139,48,1,198,45,34,255,182,50,27,1,131,210,91,255,46,54,128,0,175,123,105,255,198,141,78,254,67,244,239,255,245,54,103,254,78,38,242,255,2,92,249,254,251,174,87,255,139,63,144,0,24,108,27,255,34,102,18,1,34,22,152,0,66,229,118,254,50,143,99,0,144,169,149,1,118,30,152,0,178,8,121,1,8,159,18,0,90,101,230,255,129,29,119,0,68,36,11,1,232,183,55,0,23,255,96,255,161,41,193,255,63,139,222,0,15,179,243,0,255,100,15,255,82,53,135,0,137,57,149,1,99,240,170,255,22,230,228,254,49,180,82,255,61,82,43,0,110,245,217,0,199,125,61,0,46,253,52,0,141,197,219,0,211,159,193,0,55,121,105,254,183,20,129,0,169,119,170,255,203,178,139,255,135,40,182,255,172,13,202,255,65,178,148,0,8,207,43,0,122,53,127,1,74,161,48,0,227,214,128,254,86,11,243,255,100,86,7,1,245,68,134,255,61,43,21,1,152,84,94,255,190,60,250,254,239,118,232,255,214,136,37,1,113,76,107,255,93,104,100,1,144,206,23,255,110,150,154,1,228,103,185,0,218,49,50,254,135,77,139,255,185,1,78,0,0,161,148,255,97,29,233,255,207,148,149,255,160,168,0,0,91,128,171,255,6,28,19,254,11,111,247,0,39,187,150,255,138,232,149,0,117,62,68,255,63,216,188,255,235,234,32,254,29,57,160,255,25,12,241,1,169,60,191,0,32,131,141,255,237,159,123,255,94,197,94,254,116,254,3,255,92,179,97,254,121,97,92,255,170,112,14,0,21,149,248,0,248,227,3,0,80,96,109,0,75,192,74,1,12,90,226,255,161,106,68,1,208,114,127,255,114,42,255,254,74,26,74,255,247,179,150,254,121,140,60,0,147,70,200,255,214,40,161,255,161,188,201,255,141,65,135,255,242,115,252,0,62,47,202,0,180,149,255,254,130,55,237,0,165,17,186,255,10,169,194,0,156,109,218,255,112,140,123,255,104,128,223,254,177,142,108,255,121,37,219,255,128,77,18,255,111,108,23,1,91,192,75,0,174,245,22,255,4,236,62,255,43,64,153,1,227,173,254,0,237,122,132,1,127,89,186,255,142,82,128,254,252,84,174,0,90,179,177,1,243,214,87,255,103,60,162,255,208,130,14,255,11,130,139,0,206,129,219,255,94,217,157,255,239,230,230,255,116,115,159,254,164,107,95,0,51,218,2,1,216,125,198,255,140,202,128,254,11,95,68,255,55,9,93,254,174,153,6,255,204,172,96,0,69,160,110,0,213,38,49,254,27,80,213,0,118,125,114,0,70,70,67,255,15,142,73,255,131,122,185,255,243,20,50,254,130,237,40,0,210,159,140,1,197,151,65,255,84,153,66,0,195,126,90,0,16,238,236,1,118,187,102,255,3,24,133,255,187,69,230,0,56,197,92,1,213,69,94,255,80,138,229,1,206,7,230,0,222,111,230,1,91,233,119,255,9,89,7,1,2,98,1,0,148,74,133,255,51,246,180,255,228,177,112,1,58,189,108,255,194,203,237,254,21,209,195,0,147,10,35,1,86,157,226,0,31,163,139,254,56,7,75,255,62,90,116,0,181,60,169,0,138,162,212,254,81,167,31,0,205,90,112,255,33,112,227,0,83,151,117,1,177,224,73,255,174,144,217,255,230,204,79,255,22,77,232,255,114,78,234,0,224,57,126,254,9,49,141,0,242,147,165,1,104,182,140,255,167,132,12,1,123,68,127,0,225,87,39,1,251,108,8,0,198,193,143,1,121,135,207,255,172,22,70,0,50,68,116,255,101,175,40,255,248,105,233,0,166,203,7,0,110,197,218,0,215,254,26,254,168,226,253,0,31,143,96,0,11,103,41,0,183,129,203,254,100,247,74,255,213,126,132,0,210,147,44,0,199,234,27,1,148,47,181,0,155,91,158,1,54,105,175,255,2,78,145,254,102,154,95,0,128,207,127,254,52,124,236,255,130,84,71,0,221,243,211,0,152,170,207,0,222,106,199,0,183,84,94,254,92,200,56,255,138,182,115,1,142,96,146,0,133,136,228,0,97,18,150,0,55,251,66,0,140,102,4,0,202,103,151,0,30,19,248,255,51,184,207,0,202,198,89,0,55,197,225,254,169,95,249,255,66,65,68,255,188,234,126,0,166,223,100,1,112,239,244,0,144,23,194,0,58,39,182,0,244,44,24,254,175,68,179,255,152,118,154,1,176,162,130,0,217,114,204,254,173,126,78,255,33,222,30,255,36,2,91,255,2,143,243,0,9,235,215,0,3,171,151,1,24,215,245,255,168,47,164,254,241,146,207,0,69,129,180,0,68,243,113,0,144,53,72,254,251,45,14,0,23,110,168,0,68,68,79,255,110,70,95,254,174,91,144,255,33,206,95,255,137,41,7,255,19,187,153,254,35,255,112,255,9,145,185,254,50,157,37,0,11,112,49,1,102,8,190,255,234,243,169,1,60,85,23,0,74,39,189,0,116,49,239,0,173,213,210,0,46,161,108,255,159,150,37,0,196,120,185,255,34,98,6,255,153,195,62,255,97,230,71,255,102,61,76,0,26,212,236,255,164,97,16,0,198,59,146,0,163,23,196,0,56,24,61,0,181,98,193,0,251,147,229,255,98,189,24,255,46,54,206,255,234,82,246,0,183,103,38,1,109,62,204,0,10,240,224,0,146,22,117,255,142,154,120,0,69,212,35,0,208,99,118,1,121,255,3,255,72,6,194,0,117,17,197,255,125,15,23,0,154,79,153,0,214,94,197,255,185,55,147,255,62,254,78,254,127,82,153,0,110,102,63,255,108,82,161,255,105,187,212,1,80,138,39,0,60,255,93,255,72,12,186,0,210,251,31,1,190,167,144,255,228,44,19,254,128,67,232,0,214,249,107,254,136,145,86,255,132,46,176,0,189,187,227,255,208,22,140,0,217,211,116,0,50,81,186,254,139,250,31,0,30,64,198,1,135,155,100,0,160,206,23,254,187,162,211,255,16,188,63,0,254,208,49,0,85,84,191,0,241,192,242,255,153,126,145,1,234,162,162,255,230,97,216,1,64,135,126,0,190,148,223,1,52,0,43,255,28,39,189,1,64,136,238,0,175,196,185,0,98,226,213,255,127,159,244,1,226,175,60,0,160,233,142,1,180,243,207,255,69,152,89,1,31,101,21,0,144,25,164,254,139,191,209,0,91,25,121,0,32,147,5,0,39,186,123,255,63,115,230,255,93,167,198,255,143,213,220,255,179,156,19,255,25,66,122,0,214,160,217,255,2,45,62,255,106,79,146,254,51,137,99,255,87,100,231,255,175,145,232,255,101,184,1,255,174,9,125,0,82,37,161,1,36,114,141,255,48,222,142,255,245,186,154,0,5,174,221,254,63,114,155,255,135,55,160,1,80,31,135,0,126,250,179,1,236,218,45,0,20,28,145,1,16,147,73,0,249,189,132,1,17,189,192,255,223,142,198,255,72,20,15,255,250,53,237,254,15,11,18,0,27,211,113,254,213,107,56,255,174,147,146,255,96,126,48,0,23,193,109,1,37,162,94,0,199,157,249,254,24,128,187,255,205,49,178,254,93,164,42,255,43,119,235,1,88,183,237,255,218,210,1,255,107,254,42,0,230,10,99,255,162,0,226,0,219,237,91,0,129,178,203,0,208,50,95,254,206,208,95,255,247,191,89,254,110,234,79,255,165,61,243,0,20,122,112,255,246,246,185,254,103,4,123,0,233,99,230,1,219,91,252,255,199,222,22,255,179,245,233,255,211,241,234,0,111,250,192,255,85,84,136,0,101,58,50,255,131,173,156,254,119,45,51,255,118,233,16,254,242,90,214,0,94,159,219,1,3,3,234,255,98,76,92,254,80,54,230,0,5,228,231,254,53,24,223,255,113,56,118,1,20,132,1,255,171,210,236,0,56,241,158,255,186,115,19,255,8,229,174,0,48,44,0,1,114,114,166,255,6,73,226,255,205,89,244,0,137,227,75,1,248,173,56,0,74,120,246,254,119,3,11,255,81,120,198,255,136,122,98,255,146,241,221,1,109,194,78,255,223,241,70,1,214,200,169,255,97,190,47,255,47,103,174,255,99,92,72,254,118,233,180,255,193,35,233,254,26,229,32,255,222,252,198,0,204,43,71,255,199,84,172,0,134,102,190,0,111,238,97,254,230,40,230,0,227,205,64,254,200,12,225,0,166,25,222,0,113,69,51,255,143,159,24,0,167,184,74,0,29,224,116,254,158,208,233,0,193,116,126,255,212,11,133,255,22,58,140,1,204,36,51,255,232,30,43,0,235,70,181,255,64,56,146,254,169,18,84,255,226,1,13,255,200,50,176,255,52,213,245,254,168,209,97,0,191,71,55,0,34,78,156,0,232,144,58,1,185,74,189,0,186,142,149,254,64,69,127,255,161,203,147,255,176,151,191,0,136,231,203,254,163,182,137,0,161,126,251,254,233,32,66,0,68,207,66,0,30,28,37,0,93,114,96,1,254,92,247,255,44,171,69,0,202,119,11,255,188,118,50,1,255,83,136,255,71,82,26,0,70,227,2,0,32,235,121,1,181,41,154,0,71,134,229,254,202,255,36,0,41,152,5,0,154,63,73,255,34,182,124,0,121,221,150,255,26,204,213,1,41,172,87,0,90,157,146,255,109,130,20,0,71,107,200,255,243,102,189,0,1,195,145,254,46,88,117,0,8,206,227,0,191,110,253,255,109,128,20,254,134,85,51,255,137,177,112,1,216,34,22,255,131,16,208,255,121,149,170,0,114,19,23,1,166,80,31,255,113,240,122,0,232,179,250,0,68,110,180,254,210,170,119,0,223,108,164,255,207,79,233,255,27,229,226,254,209,98,81,255,79,68,7,0,131,185,100,0,170,29,162,255,17,162,107,255,57,21,11,1,100,200,181,255,127,65,166,1,165,134,204,0,104,167,168,0,1,164,79,0,146,135,59,1,70,50,128,255,102,119,13,254,227,6,135,0,162,142,179,255,160,100,222,0,27,224,219,1,158,93,195,255,234,141,137,0,16,24,125,255,238,206,47,255,97,17,98,255,116,110,12,255,96,115,77,0,91,227,232,255,248,254,79,255,92,229,6,254,88,198,139,0,206,75,129,0,250,77,206,255,141,244,123,1,138,69,220,0,32,151,6,1,131,167,22,255,237,68,167,254,199,189,150,0,163,171,138,255,51,188,6,255,95,29,137,254,148,226,179,0,181,107,208,255,134,31,82,255,151,101,45,255,129,202,225,0,224,72,147,0,48,138,151,255,195,64,206,254,237,218,158,0,106,29,137,254,253,189,233,255,103,15,17,255,194,97,255,0,178,45,169,254,198,225,155,0,39,48,117,255,135,106,115,0,97,38,181,0,150,47,65,255,83,130,229,254,246,38,129,0,92,239,154,254,91,99,127,0,161,111,33,255,238,217,242,255,131,185,195,255,213,191,158,255,41,150,218,0,132,169,131,0,89,84,252,1,171,70,128,255,163,248,203,254,1,50,180,255,124,76,85,1,251,111,80,0,99,66,239,255,154,237,182,255,221,126,133,254,74,204,99,255,65,147,119,255,99,56,167,255,79,248,149,255,116,155,228,255,237,43,14,254,69,137,11,255,22,250,241,1,91,122,143,255,205,249,243,0,212,26,60,255,48,182,176,1,48,23,191,255,203,121,152,254,45,74,213,255,62,90,18,254,245,163,230,255,185,106,116,255,83,35,159,0,12,33,2,255,80,34,62,0,16,87,174,255,173,101,85,0,202,36,81,254,160,69,204,255,64,225,187,0,58,206,94,0,86,144,47,0,229,86,245,0,63,145,190,1,37,5,39,0,109,251,26,0,137,147,234,0,162,121,145,255,144,116,206,255,197,232,185,255,183,190,140,255,73,12,254,255,139,20,242,255,170,90,239,255,97,66,187,255,245,181,135,254,222,136,52,0,245,5,51,254,203,47,78,0,152,101,216,0,73,23,125,0,254,96,33,1,235,210,73,255,43,209,88,1,7,129,109,0,122,104,228,254,170,242,203,0,242,204,135,255,202,28,233,255,65,6,127,0,159,144,71,0,100,140,95,0,78,150,13,0,251,107,118,1,182,58,125,255,1,38,108,255,141,189,209,255,8,155,125,1,113,163,91,255,121,79,190,255,134,239,108,255,76,47,248,0,163,228,239,0,17,111,10,0,88,149,75,255,215,235,239,0,167,159,24,255,47,151,108,255,107,209,188,0,233,231,99,254,28,202,148,255,174,35,138,255,110,24,68,255,2,69,181,0,107,102,82,0,102,237,7,0,92,36,237,255,221,162,83,1,55,202,6,255,135,234,135,255,24,250,222,0,65,94,168,254,245,248,210,255,167,108,201,254,255,161,111,0,205,8,254,0,136,13,116,0,100,176,132,255,43,215,126,255,177,133,130,255,158,79,148,0,67,224,37,1,12,206,21,255,62,34,110,1,237,104,175,255,80,132,111,255,142,174,72,0,84,229,180,254,105,179,140,0,64,248,15,255,233,138,16,0,245,67,123,254,218,121,212,255,63,95,218,1,213,133,137,255,143,182,82,255,48,28,11,0,244,114,141,1,209,175,76,255,157,181,150,255,186,229,3,255,164,157,111,1,231,189,139,0,119,202,190,255,218,106,64,255,68,235,63,254,96,26,172,255,187,47,11,1,215,18,251,255,81,84,89,0,68,58,128,0,94,113,5,1,92,129,208,255,97,15,83,254,9,28,188,0,239,9,164,0,60,205,152,0,192,163,98,255,184,18,60,0,217,182,139,0,109,59,120,255,4,192,251,0,169,210,240,255,37,172,92,254,148,211,245,255,179,65,52,0,253,13,115,0,185,174,206,1,114,188,149,255,237,90,173,0,43,199,192,255,88,108,113,0,52,35,76,0,66,25,148,255,221,4,7,255,151,241,114,255,190,209,232,0,98,50,199,0,151,150,213,255,18,74,36,1,53,40,7,0,19,135,65,255,26,172,69,0,174,237,85,0,99,95,41,0,3,56,16,0,39,160,177,255,200,106,218,254,185,68,84,255,91,186,61,254,67,143,141,255,13,244,166,255,99,114,198,0,199,110,163,255,193,18,186,0,124,239,246,1,110,68,22,0,2,235,46,1,212,60,107,0,105,42,105,1,14,230,152,0,7,5,131,0,141,104,154,255,213,3,6,0,131,228,162,255,179,100,28,1,231,123,85,255,206,14,223,1,253,96,230,0,38,152,149,1,98,137,122,0,214,205,3,255,226,152,179,255,6,133,137,0,158,69,140,255,113,162,154,255,180,243,172,255,27,189,115,255,143,46,220,255,213,134,225,255,126,29,69,0,188,43,137,1,242,70,9,0,90,204,255,255,231,170,147,0,23,56,19,254,56,125,157,255,48,179,218,255,79,182,253,255,38,212,191,1,41,235,124,0,96,151,28,0,135,148,190,0,205,249,39,254,52,96,136,255,212,44,136,255,67,209,131,255,252,130,23,255,219,128,20,255,198,129,118,0,108,101,11,0,178,5,146,1,62,7,100,255,181,236,94,254,28,26,164,0,76,22,112,255,120,102,79,0,202,192,229,1,200,176,215,0,41,64,244,255,206,184,78,0,167,45,63,1,160,35,0,255,59,12,142,255,204,9,144,255,219,94,229,1,122,27,112,0,189,105,109,255,64,208,74,255,251,127,55,1,2,226,198,0,44,76,209,0,151,152,77,255,210,23,46,1,201,171,69,255,44,211,231,0,190,37,224,255,245,196,62,255,169,181,222,255,34,211,17,0,119,241,197,255,229,35,152,1,21,69,40,255,178,226,161,0,148,179,193,0,219,194,254,1,40,206,51,255,231,92,250,1,67,153,170,0,21,148,241,0,170,69,82,255,121,18,231,255,92,114,3,0,184,62,230,0,225,201,87,255,146,96,162,255,181,242,220,0,173,187,221,1,226,62,170,255,56,126,217,1,117,13,227,255,179,44,239,0,157,141,155,255,144,221,83,0,235,209,208,0,42,17,165,1,251,81,133,0,124,245,201,254,97,211,24,255,83,214,166,0,154,36,9,255,248,47,127,0,90,219,140,255,161,217,38,254,212,147,63,255,66,84,148,1,207,3,1,0,230,134,89,1,127,78,122,255,224,155,1,255,82,136,74,0,178,156,208,255,186,25,49,255,222,3,210,1,229,150,190,255,85,162,52,255,41,84,141,255,73,123,84,254,93,17,150,0,119,19,28,1,32,22,215,255,28,23,204,255,142,241,52,255,228,52,125,0,29,76,207,0,215,167,250,254,175,164,230,0,55,207,105,1,109,187,245,255,161,44,220,1,41,101,128,255,167,16,94,0,93,214,107,255,118,72,0,254,80,61,234,255,121,175,125,0,139,169,251,0,97,39,147,254,250,196,49,255,165,179,110,254,223,70,187,255,22,142,125,1,154,179,138,255,118,176,42,1,10,174,153,0,156,92,102,0,168,13,161,255,143,16,32,0,250,197,180,255,203,163,44,1,87,32,36,0,161,153,20,255,123,252,15,0,25,227,80,0,60,88,142,0,17,22,201,1,154,205,77,255,39,63,47,0,8,122,141,0,128,23,182,254,204,39,19,255,4,112,29,255,23,36,140,255,210,234,116,254,53,50,63,255,121,171,104,255,160,219,94,0,87,82,14,254,231,42,5,0,165,139,127,254,86,78,38,0,130,60,66,254,203,30,45,255,46,196,122,1,249,53,162,255,136,143,103,254,215,210,114,0,231,7,160,254,169,152,42,255,111,45,246,0,142,131,135,255,131,71,204,255,36,226,11,0,0,28,242,255,225,138,213,255,247,46,216,254,245,3,183,0,108,252,74,1,206,26,48,255,205,54,246,255,211,198,36,255,121,35,50,0,52,216,202,255,38,139,129,254,242,73,148,0,67,231,141,255,42,47,204,0,78,116,25,1,4,225,191,255,6,147,228,0,58,88,177,0,122,165,229,255,252,83,201,255,224,167,96,1,177,184,158,255,242,105,179,1,248,198,240,0,133,66,203,1,254,36,47,0,45,24,115,255,119,62,254,0,196,225,186,254,123,141,172,0,26,85,41,255,226,111,183,0,213,231,151,0,4,59,7,255,238,138,148,0,66,147,33,255,31,246,141,255,209,141,116,255,104,112,31,0,88,161,172,0,83,215,230,254,47,111,151,0,45,38,52,1,132,45,204,0,138,128,109,254,233,117,134,255,243,190,173,254,241,236,240,0,82,127,236,254,40,223,161,255,110,182,225,255,123,174,239,0,135,242,145,1,51,209,154,0,150,3,115,254,217,164,252,255,55,156,69,1,84,94,255,255,232,73,45,1,20,19,212,255,96,197,59,254,96,251,33,0,38,199,73,1,64,172,247,255,117,116,56,255,228,17,18,0,62,138,103,1,246,229,164,255,244,118,201,254,86,32,159,255,109,34,137,1,85,211,186,0,10,193,193,254,122,194,177,0,122,238,102,255,162,218,171,0,108,217,161,1,158,170,34,0,176,47,155,1,181,228,11,255,8,156,0,0,16,75,93,0,206,98,255,1,58,154,35,0,12,243,184,254,67,117,66,255,230,229,123,0,201,42,110,0,134,228,178,254,186,108,118,255,58,19,154,255,82,169,62,255,114,143,115,1,239,196,50,255,173,48,193,255,147,2,84,255,150,134,147,254,95,232,73,0,109,227,52,254,191,137,10,0,40,204,30,254,76,52,97,255,164,235,126,0,254,124,188,0,74,182,21,1,121,29,35,255,241,30,7,254,85,218,214,255,7,84,150,254,81,27,117,255,160,159,152,254,66,24,221,255,227,10,60,1,141,135,102,0,208,189,150,1,117,179,92,0,132,22,136,255,120,199,28,0,21,129,79,254,182,9,65,0,218,163,169,0,246,147,198,255,107,38,144,1,78,175,205,255,214,5,250,254,47,88,29,255,164,47,204,255,43,55,6,255,131,134,207,254,116,100,214,0,96,140,75,1,106,220,144,0,195,32,28,1,172,81,5,255,199,179,52,255,37,84,203,0,170,112,174,0,11,4,91,0,69,244,27,1,117,131,92,0,33,152,175,255,140,153,107,255,251,135,43,254,87,138,4,255,198,234,147,254,121,152,84,255,205,101,155,1,157,9,25,0,72,106,17,254,108,153,0,255,189,229,186,0,193,8,176,255,174,149,209,0,238,130,29,0,233,214,126,1,61,226,102,0,57,163,4,1,198,111,51,255,45,79,78,1,115,210,10,255,218,9,25,255,158,139,198,255,211,82,187,254,80,133,83,0,157,129,230,1,243,133,134,255,40,136,16,0,77,107,79,255,183,85,92,1,177,204,202,0,163,71,147,255,152,69,190,0,172,51,188,1,250,210,172,255,211,242,113,1,89,89,26,255,64,66,111,254,116,152,42,0,161,39,27,255,54,80,254,0,106,209,115,1,103,124,97,0,221,230,98,255,31,231,6,0,178,192,120,254,15,217,203,255,124,158,79,0,112,145,247,0,92,250,48,1,163,181,193,255,37,47,142,254,144,189,165,255,46,146,240,0,6,75,128,0,41,157,200,254,87,121,213,0,1,113,236,0,5,45,250,0,144,12,82,0,31,108,231,0,225,239,119,255,167,7,189,255,187,228,132,255,110,189,34,0,94,44,204,1,162,52,197,0,78,188,241,254,57,20,141],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+64616);allocate([244,146,47,1,206,100,51,0,125,107,148,254,27,195,77,0,152,253,90,1,7,143,144,255,51,37,31,0,34,119,38,255,7,197,118,0,153,188,211,0,151,20,116,254,245,65,52,255,180,253,110,1,47,177,209,0,161,99,17,255,118,222,202,0,125,179,252,1,123,54,126,255,145,57,191,0,55,186,121,0,10,243,138,0,205,211,229,255,125,156,241,254,148,156,185,255,227,19,188,255,124,41,32,255,31,34,206,254,17,57,83,0,204,22,37,255,42,96,98,0,119,102,184,1,3,190,28,0,110,82,218,255,200,204,192,255,201,145,118,0,117,204,146,0,132,32,98,1,192,194,121,0,106,161,248,1,237,88,124,0,23,212,26,0,205,171,90,255,248,48,216,1,141,37,230,255,124,203,0,254,158,168,30,255,214,248,21,0,112,187,7,255,75,133,239,255,74,227,243,255,250,147,70,0,214,120,162,0,167,9,179,255,22,158,18,0,218,77,209,1,97,109,81,255,244,33,179,255,57,52,57,255,65,172,210,255,249,71,209,255,142,169,238,0,158,189,153,255,174,254,103,254,98,33,14,0,141,76,230,255,113,139,52,255,15,58,212,0,168,215,201,255,248,204,215,1,223,68,160,255,57,154,183,254,47,231,121,0,106,166,137,0,81,136,138,0,165,43,51,0,231,139,61,0,57,95,59,254,118,98,25,255,151,63,236,1,94,190,250,255,169,185,114,1,5,250,58,255,75,105,97,1,215,223,134,0,113,99,163,1,128,62,112,0,99,106,147,0,163,195,10,0,33,205,182,0,214,14,174,255,129,38,231,255,53,182,223,0,98,42,159,255,247,13,40,0,188,210,177,1,6,21,0,255,255,61,148,254,137,45,129,255,89,26,116,254,126,38,114,0,251,50,242,254,121,134,128,255,204,249,167,254,165,235,215,0,202,177,243,0,133,141,62,0,240,130,190,1,110,175,255,0,0,20,146,1,37,210,121,255,7,39,130,0,142,250,84,255,141,200,207,0,9,95,104,255,11,244,174,0,134,232,126,0,167,1,123,254,16,193,149,255,232,233,239,1,213,70,112,255,252,116,160,254,242,222,220,255,205,85,227,0,7,185,58,0,118,247,63,1,116,77,177,255,62,245,200,254,63,18,37,255,107,53,232,254,50,221,211,0,162,219,7,254,2,94,43,0,182,62,182,254,160,78,200,255,135,140,170,0,235,184,228,0,175,53,138,254,80,58,77,255,152,201,2,1,63,196,34,0,5,30,184,0,171,176,154,0,121,59,206,0,38,99,39,0,172,80,77,254,0,134,151,0,186,33,241,254,94,253,223,255,44,114,252,0,108,126,57,255,201,40,13,255,39,229,27,255,39,239,23,1,151,121,51,255,153,150,248,0,10,234,174,255,118,246,4,254,200,245,38,0,69,161,242,1,16,178,150,0,113,56,130,0,171,31,105,0,26,88,108,255,49,42,106,0,251,169,66,0,69,93,149,0,20,57,254,0,164,25,111,0,90,188,90,255,204,4,197,0,40,213,50,1,212,96,132,255,88,138,180,254,228,146,124,255,184,246,247,0,65,117,86,255,253,102,210,254,254,121,36,0,137,115,3,255,60,24,216,0,134,18,29,0,59,226,97,0,176,142,71,0,7,209,161,0,189,84,51,254,155,250,72,0,213,84,235,255,45,222,224,0,238,148,143,255,170,42,53,255,78,167,117,0,186,0,40,255,125,177,103,255,69,225,66,0,227,7,88,1,75,172,6,0,169,45,227,1,16,36,70,255,50,2,9,255,139,193,22,0,143,183,231,254,218,69,50,0,236,56,161,1,213,131,42,0,138,145,44,254,136,229,40,255,49,63,35,255,61,145,245,255,101,192,2,254,232,167,113,0,152,104,38,1,121,185,218,0,121,139,211,254,119,240,35,0,65,189,217,254,187,179,162,255,160,187,230,0,62,248,14,255,60,78,97,0,255,247,163,255,225,59,91,255,107,71,58,255,241,47,33,1,50,117,236,0,219,177,63,254,244,90,179,0,35,194,215,255,189,67,50,255,23,135,129,0,104,189,37,255,185,57,194,0,35,62,231,255,220,248,108,0,12,231,178,0,143,80,91,1,131,93,101,255,144,39,2,1,255,250,178,0,5,17,236,254,139,32,46,0,204,188,38,254,245,115,52,255,191,113,73,254,191,108,69,255,22,69,245,1,23,203,178,0,170,99,170,0,65,248,111,0,37,108,153,255,64,37,69,0,0,88,62,254,89,148,144,255,191,68,224,1,241,39,53,0,41,203,237,255,145,126,194,255,221,42,253,255,25,99,151,0,97,253,223,1,74,115,49,255,6,175,72,255,59,176,203,0,124,183,249,1,228,228,99,0,129,12,207,254,168,192,195,255,204,176,16,254,152,234,171,0,77,37,85,255,33,120,135,255,142,194,227,1,31,214,58,0,213,187,125,255,232,46,60,255,190,116,42,254,151,178,19,255,51,62,237,254,204,236,193,0,194,232,60,0,172,34,157,255,189,16,184,254,103,3,95,255,141,233,36,254,41,25,11,255,21,195,166,0,118,245,45,0,67,213,149,255,159,12,18,255,187,164,227,1,160,25,5,0,12,78,195,1,43,197,225,0,48,142,41,254,196,155,60,255,223,199,18,1,145,136,156,0,252,117,169,254,145,226,238,0,239,23,107,0,109,181,188,255,230,112,49,254,73,170,237,255,231,183,227,255,80,220,20,0,194,107,127,1,127,205,101,0,46,52,197,1,210,171,36,255,88,3,90,255,56,151,141,0,96,187,255,255,42,78,200,0,254,70,70,1,244,125,168,0,204,68,138,1,124,215,70,0,102,66,200,254,17,52,228,0,117,220,143,254,203,248,123,0,56,18,174,255,186,151,164,255,51,232,208,1,160,228,43,255,249,29,25,1,68,190,63,0,34,174,40,215,152,47,138,66,205,101,239,35,145,68,55,113,47,59,77,236,207,251,192,181,188,219,137,129,165,219,181,233,56,181,72,243,91,194,86,57,25,208,5,182,241,17,241,89,155,79,25,175,164,130,63,146,24,129,109,218,213,94,28,171,66,2,3,163,152,170,7,216,190,111,112,69,1,91,131,18,140,178,228,78,190,133,49,36,226,180,255,213,195,125,12,85,111,137,123,242,116,93,190,114,177,150,22,59,254,177,222,128,53,18,199,37,167,6,220,155,148,38,105,207,116,241,155,193,210,74,241,158,193,105,155,228,227,37,79,56,134,71,190,239,181,213,140,139,198,157,193,15,101,156,172,119,204,161,12,36,117,2,43,89,111,44,233,45,131,228,166,110,170,132,116,74,212,251,65,189,220,169,176,92,181,83,17,131,218,136,249,118,171,223,102,238,82,81,62,152,16,50,180,45,109,198,49,168,63,33,251,152,200,39,3,176,228,14,239,190,199,127,89,191,194,143,168,61,243,11,224,198,37,167,10,147,71,145,167,213,111,130,3,224,81,99,202,6,112,110,14,10,103,41,41,20,252,47,210,70,133,10,183,39,38,201,38,92,56,33,27,46,237,42,196,90,252,109,44,77,223,179,149,157,19,13,56,83,222,99,175,139,84,115,10,101,168,178,119,60,187,10,106,118,230,174,237,71,46,201,194,129,59,53,130,20,133,44,114,146,100,3,241,76,161,232,191,162,1,48,66,188,75,102,26,168,145,151,248,208,112,139,75,194,48,190,84,6,163,81,108,199,24,82,239,214,25,232,146,209,16,169,101,85,36,6,153,214,42,32,113,87,133,53,14,244,184,209,187,50,112,160,106,16,200,208,210,184,22,193,164,25,83,171,65,81,8,108,55,30,153,235,142,223,76,119,72,39,168,72,155,225,181,188,176,52,99,90,201,197,179,12,28,57,203,138,65,227,74,170,216,78,115,227,99,119,79,202,156,91,163,184,178,214,243,111,46,104,252,178,239,93,238,130,143,116,96,47,23,67,111,99,165,120,114,171,240,161,20,120,200,132,236,57,100,26,8,2,199,140,40,30,99,35,250,255,190,144,233,189,130,222,235,108,80,164,21,121,198,178,247,163,249,190,43,83,114,227,242,120,113,198,156,97,38,234,206,62,39,202,7,194,192,33,199,184,134,209,30,235,224,205,214,125,218,234,120,209,110,238,127,79,125,245,186,111,23,114,170,103,240,6,166,152,200,162,197,125,99,10,174,13,249,190,4,152,63,17,27,71,28,19,53,11,113,27,132,125,4,35,245,119,219,40,147,36,199,64,123,171,202,50,188,190,201,21,10,190,158,60,76,13,16,156,196,103,29,67,182,66,62,203,190,212,197,76,42,126,101,252,156,41,127,89,236,250,214,58,171,111,203,95,23,88,71,74,140,25,68,108,118,111,105,100,0,0,0,0,98,111,111,108,0,0,0,0,99,104,97,114,0,0,0,0,115,105,103,110,101,100,32,99,104,97,114,0,0,0,0,0,117,110,115,105,103,110,101,100,32,99,104,97,114,0,0,0,115,104,111,114,116,0,0,0,117,110,115,105,103,110,101,100,32,115,104,111,114,116,0,0,105,110,116,0,0,0,0,0,117,110,115,105,103,110,101,100,32,105,110,116,0,0,0,0,108,111,110,103,0,0,0,0,117,110,115,105,103,110,101,100,32,108,111,110,103,0,0,0,102,108,111,97,116,0,0,0,100,111,117,98,108,101,0,0,115,116,100,58,58,115,116,114,105,110,103,0,0,0,0,0,248,54,1,0,176,49,1,0,0,0,0,0,1,0,0,0,16,20,0,0,0,0,0,0,115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,0,0,0,0,0,0,0,248,54,1,0,112,49,1,0,0,0,0,0,1,0,0,0,16,20,0,0,0,0,0,0,115,116,100,58,58,119,115,116,114,105,110,103,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,118,97,108,0,112,54,1,0,80,49,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,99,104,97,114,62,0,0,0,112,54,1,0,48,49,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,105,103,110,101,100,32,99,104,97,114,62,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,99,104,97,114,62,0,0,112,54,1,0,16,49,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,115,104,111,114,116,62,0,0,112,54,1,0,240,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,115,104,111,114,116,62,0,112,54,1,0,208,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,62,0,0,0,0,112,54,1,0,176,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,105,110,116,62,0,0,0,112,54,1,0,144,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,62,0,0,0,112,54,1,0,112,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,110,115,105,103,110,101,100,32,108,111,110,103,62,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,56,95,116,62,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,56,95,116,62,0,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,49,54,95,116,62,0,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,49,54,95,116,62,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,105,110,116,51,50,95,116,62,0,0,0,0,0,0,0,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,117,105,110,116,51,50,95,116,62,0,0,0,0,0,0,0,112,54,1,0,80,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,102,108,111,97,116,62,0,0,112,54,1,0,48,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,100,111,117,98,108,101,62,0,112,54,1,0,16,48,1,0,101,109,115,99,114,105,112,116,101,110,58,58,109,101,109,111,114,121,95,118,105,101,119,60,108,111,110,103,32,100,111,117,98,108,101,62,0,0,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,101,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,100,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,102,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,109,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,108,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,106,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,105,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,116,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,115,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,97,69,69,0,0,78,49,48,101,109,115,99,114,105,112,116,101,110,49,49,109,101,109,111,114,121,95,118,105,101,119,73,99,69,69,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,98,97,115,105,99,95,115,116,114,105,110,103,73,104,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,104,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,104,69,69,69,69,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,51,1,0,79,0,0,0,80,0,0,0,12,0,0,0,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,152,54,1,0,240,50,1,0,40,51,1,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,112,54,1,0,24,51,1,0,0,0,0,0,88,51,1,0,39,0,0,0,81,0,0,0,5,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,152,54,1,0,72,51,1,0,40,51,1,0,0,0,0,0,0,0,0,0,152,51,1,0,39,0,0,0,82,0,0,0,5,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,152,54,1,0,128,51,1,0,88,51,1,0,0,0,0,0,0,0,0,0,216,51,1,0,39,0,0,0,83,0,0,0,5,0,0,0,0,0,0,0,83,116,49,50,111,117,116,95,111,102,95,114,97,110,103,101,0,0,0,0,0,0,0,0,152,54,1,0,192,51,1,0,88,51,1,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,112,54,1,0,232,51,1,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,152,54,1,0,0,52,1,0,248,51,1,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,152,54,1,0,56,52,1,0,40,52,1,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,152,54,1,0,152,52,1,0,40,52,1,0,0,0,0,0,152,54,1,0,112,52,1,0,192,52,1,0,0,0,0,0,0,0,0,0,40,53,1,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,27,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,51,95,95,102,117,110,100,97,109,101,110,116,97,108,95,116,121,112,101,95,105,110,102,111,69,0,152,54,1,0,0,53,1,0,40,52,1,0,0,0,0,0,118,0,0,0,0,0,0,0,232,52,1,0,56,53,1,0,68,110,0,0,0,0,0,0,232,52,1,0,72,53,1,0,98,0,0,0,0,0,0,0,232,52,1,0,88,53,1,0,99,0,0,0,0,0,0,0,232,52,1,0,104,53,1,0,104,0,0,0,0,0,0,0,232,52,1,0,120,53,1,0,97,0,0,0,0,0,0,0,232,52,1,0,136,53,1,0,115,0,0,0,0,0,0,0,232,52,1,0,152,53,1,0,116,0,0,0,0,0,0,0,232,52,1,0,168,53,1,0,105,0,0,0,0,0,0,0,232,52,1,0,184,53,1,0,106,0,0,0,0,0,0,0,232,52,1,0,200,53,1,0,232,52,1,0,168,82,1,0,109,0,0,0,0,0,0,0,232,52,1,0,224,53,1,0,102,0,0,0,0,0,0,0,232,52,1,0,240,53,1,0,100,0,0,0,0,0,0,0,232,52,1,0,0,54,1,0,0,0,0,0,88,54,1,0,84,0,0,0,88,0,0,0,86,0,0,0,87,0,0,0,28,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,101,110,117,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,152,54,1,0,48,54,1,0,40,52,1,0,0,0,0,0,0,0,0,0,96,52,1,0,84,0,0,0,89,0,0,0,86,0,0,0,87,0,0,0,29,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,224,54,1,0,84,0,0,0,90,0,0,0,86,0,0,0,87,0,0,0,29,0,0,0,3,0,0,0,2,0,0,0,3,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,152,54,1,0,184,54,1,0,96,52,1,0,0,0,0,0,0,0,0,0,64,55,1,0,84,0,0,0,91,0,0,0,86,0,0,0,87,0,0,0,29,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,152,54,1,0,24,55,1,0,96,52,1,0,0,0,0,0,0,0,0,0,208,52,1,0,84,0,0,0,92,0,0,0,86,0,0,0,87,0,0,0,30,0,0,0,0,0,0,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,0,0,47,85,115,101,114,115,47,118,105,114,103,105,108,47,76,105,98,114,97,114,121,47,86,105,114,103,105,108,69,110,118,105,114,111,109,101,110,116,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,49,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,0,0,0,0,0,0,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,0,47,85,115,101,114,115,47,118,105,114,103,105,108,47,76,105,98,114,97,114,121,47,86,105,114,103,105,108,69,110,118,105,114,111,109,101,110,116,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,49,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,0,0,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,0,0,0,48,58,1,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,0,0,0,0,0,0,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,0,0,116,101,114,109,105,110,97,116,105,110,103,0,0,0,0,0,117,110,99,97,117,103,104,116,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,1,2,4,7,3,6,5,0,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,0,0,0,0,0,0,40,110,117,108,108,41,0,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,0,0,0,0,0,105,110,102,0,0,0,0,0,73,78,70,0,0,0,0,0,110,97,110,0,0,0,0,0,78,65,78,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,112,54,1,0,32,64,1,0,78,83,116,51,95,95,49,49,57,95,95,115,104,97,114,101,100,95,119,101,97,107,95,99,111,117,110,116,69,0,0,0,248,54,1,0,72,64,1,0,0,0,0,0,1,0,0,0,64,64,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,65,1,0,93,0,0,0,94,0,0,0,1,0,0,0,1,0,0,0,5,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,13,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,0,0,0,0,56,65,1,0,95,0,0,0,96,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,112,54,1,0,32,65,1,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,152,54,1,0,64,65,1,0,56,65,1,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,112,54,1,0,128,65,1,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,248,54,1,0,192,65,1,0,0,0,0,0,1,0,0,0,112,65,1,0,3,244,255,255,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,248,54,1,0,8,66,1,0,0,0,0,0,1,0,0,0,112,65,1,0,3,244,255,255,0,0,0,0,96,75,1,0,97,0,0,0,98,0,0,0,99,0,0,0,3,0,0,0,6,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,75,1,0,100,0,0,0,101,0,0,0,99,0,0,0,4,0,0,0,7,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,76,1,0,102,0,0,0,103,0,0,0,99,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,0,0,0,0,208,76,1,0,104,0,0,0,105,0,0,0,99,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,77,1,0,106,0,0,0,107,0,0,0,99,0,0,0,5,0,0,0,6,0,0,0,29,0,0,0,7,0,0,0,30,0,0,0,1,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,77,1,0,108,0,0,0,109,0,0,0,99,0,0,0,9,0,0,0,10,0,0,0,31,0,0,0,11,0,0,0,32,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,78,1,0,110,0,0,0,111,0,0,0,99,0,0,0,14,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,8,0,0,0,248,255,255,255,8,78,1,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,78,1,0,112,0,0,0,113,0,0,0,99,0,0,0,22,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,9,0,0,0,248,255,255,255,120,78,1,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,78,1,0,114,0,0,0,115,0,0,0,99,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,79,1,0,116,0,0,0,117,0,0,0,99,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,79,1,0,118,0,0,0,119,0,0,0,99,0,0,0,30,0,0,0,31,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,79,1,0,120,0,0,0,121,0,0,0,99,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,35,0,0,0,39,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,80,1,0,122,0,0,0,123,0,0,0,99,0,0,0,36,0,0,0,37,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,38,0,0,0,45,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,1,0,124,0,0,0,125,0,0,0,99,0,0,0,39,0,0,0,40,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,41,0,0,0,51,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,80,1,0,126,0,0,0,127,0,0,0,99,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,81,1,0,128,0,0,0,129,0,0,0,99,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,81,1,0,130,0,0,0,131,0,0,0,99,0,0,0,1,0,0,0,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,81,1,0,132,0,0,0,133,0,0,0,99,0,0,0,2,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,82,1,0,134,0,0,0,135,0,0,0,99,0,0,0,34,0,0,0,6,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,82,1,0,136,0,0,0,137,0,0,0,99,0,0,0,35,0,0,0,7,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,75,1,0,138,0,0,0,139,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,75,1,0,140,0,0,0,141,0,0,0,99,0,0,0,8,0,0,0,36,0,0,0,9,0,0,0,37,0,0,0,10,0,0,0,4,0,0,0,38,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,1,0,142,0,0,0,143,0,0,0,99,0,0,0,10,0,0,0,11,0,0,0,14,0,0,0,42,0,0,0,43,0,0,0,15,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,75,1,0,144,0,0,0,145,0,0,0,99,0,0,0,45,0,0,0,46,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,0,0,0,0,16,76,1,0,146,0,0,0,147,0,0,0,99,0,0,0,47,0,0,0,48,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,0,0,0,0,16,72,1,0,148,0,0,0,149,0,0,0,99,0,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,152,54,1,0,248,71,1,0,64,64,1,0,0,0,0,0,0,0,0,0,128,72,1,0,148,0,0,0,150,0,0,0,99,0,0,0,39,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,11,0,0,0,40,0,0,0,12,0,0,0,41,0,0,0,13,0,0,0,8,0,0,0,42,0,0,0,16,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,248,54,1,0,104,72,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,160,99,1,0,2,0,0,0,0,0,0,0,248,72,1,0,148,0,0,0,151,0,0,0,99,0,0,0,12,0,0,0,13,0,0,0,17,0,0,0,49,0,0,0,50,0,0,0,18,0,0,0,51,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,248,54,1,0,208,72,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,168,99,1,0,2,0,0,0,0,0,0,0,112,73,1,0,148,0,0,0,152,0,0,0,99,0,0,0,14,0,0,0,15,0,0,0,19,0,0,0,52,0,0,0,53,0,0,0,20,0,0,0,54,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,248,54,1,0,72,73,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,168,99,1,0,2,0,0,0,0,0,0,0,232,73,1,0,148,0,0,0,153,0,0,0,99,0,0,0,16,0,0,0,17,0,0,0,21,0,0,0,55,0,0,0,56,0,0,0,22,0,0,0,57,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,248,54,1,0,192,73,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,168,99,1,0,2,0,0,0,0,0,0,0,96,74,1,0,148,0,0,0,154,0,0,0,99,0,0,0,16,0,0,0,17,0,0,0,21,0,0,0,55,0,0,0,56,0,0,0,22,0,0,0,57,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,152,54,1,0,56,74,1,0,232,73,1,0,0,0,0,0,0,0,0,0,200,74,1,0,148,0,0,0,155,0,0,0,99,0,0,0,16,0,0,0,17,0,0,0,21,0,0,0,55,0,0,0,56,0,0,0,22,0,0,0,57,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,152,54,1,0,160,74,1,0,232,73,1,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,248,54,1,0,216,74,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,168,99,1,0,2,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,152,54,1,0,32,75,1,0,16,72,1,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,152,54,1,0,72,75,1,0,16,72,1,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,152,54,1,0,112,75,1,0,16,72,1,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,248,54,1,0,152,75,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,160,99,1,0,2,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,152,54,1,0,208,75,1,0,16,72,1,0,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,152,54,1,0,248,75,1,0,16,72,1,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,248,54,1,0,32,76,1],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+74856);allocate([2,0,0,0,16,72,1,0,2,0,0,0,176,99,1,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,248,54,1,0,136,76,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,200,99,1,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,248,54,1,0,240,76,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,224,99,1,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,248,54,1,0,88,77,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,248,99,1,0,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,248,54,1,0,192,77,1,0,0,0,0,0,3,0,0,0,16,72,1,0,2,0,0,0,16,100,1,0,2,0,0,0,24,100,1,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,248,54,1,0,48,78,1,0,0,0,0,0,3,0,0,0,16,72,1,0,2,0,0,0,16,100,1,0,2,0,0,0,32,100,1,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,248,54,1,0,160,78,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,40,100,1,0,0,8,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,248,54,1,0,8,79,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,40,100,1,0,0,8,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,248,54,1,0,112,79,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,48,100,1,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,248,54,1,0,176,79,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,48,100,1,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,248,54,1,0,240,79,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,48,100,1,0,2,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,248,54,1,0,48,80,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,48,100,1,0,2,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,248,54,1,0,112,80,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,56,100,1,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,248,54,1,0,216,80,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,64,100,1,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,248,54,1,0,64,81,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,72,100,1,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,248,54,1,0,168,81,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,80,100,1,0,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,248,54,1,0,16,82,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,88,100,1,0,2,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,248,54,1,0,72,82,1,0,0,0,0,0,2,0,0,0,16,72,1,0,2,0,0,0,88,100,1,0,2,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,72,58,37,77,0,0,0,37,72,58,37,77,58,37,83,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,76,102,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,46,48,76,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,117,110,100,97,121,0,0,77,111,110,100,97,121,0,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,83,117,110,0,0,0,0,0,77,111,110,0,0,0,0,0,84,117,101,0,0,0,0,0,87,101,100,0,0,0,0,0,84,104,117,0,0,0,0,0,70,114,105,0,0,0,0,0,83,97,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,65,112,114,105,108,0,0,0,77,97,121,0,0,0,0,0,74,117,110,101,0,0,0,0,74,117,108,121,0,0,0,0,65,117,103,117,115,116,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,74,97,110,0,0,0,0,0,70,101,98,0,0,0,0,0,77,97,114,0,0,0,0,0,65,112,114,0,0,0,0,0,74,117,110,0,0,0,0,0,74,117,108,0,0,0,0,0,65,117,103,0,0,0,0,0,83,101,112,0,0,0,0,0,79,99,116,0,0,0,0,0,78,111,118,0,0,0,0,0,68,101,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,54,1,0,88,102,1,0,112,54,1,0,64,102,1,0,248,54,1,0,40,102,1,0,0,0,0,0,1,0,0,0,0,102,1,0,0,0,0,0,248,54,1,0,232,101,1,0,0,0,0,0,1,0,0,0,0,102,1,0,0,0,0,0,248,54,1,0,208,101,1,0,0,0,0,0,1,0,0,0,168,101,1,0,0,0,0,0,248,54,1,0,144,101,1,0,0,0,0,0,1,0,0,0,168,101,1,0,0,0,0,0,112,54,1,0,120,101,1,0,112,54,1,0,80,101,1,0,112,54,1,0,40,101,1,0,112,54,1,0,16,101,1,0,112,54,1,0,248,100,1,0,112,54,1,0,216,100,1,0,112,54,1,0,184,100,1,0,112,54,1,0,152,100,1,0,112,54,1,0,120,100,1,0,112,54,1,0,96,100,1,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,112,54,1,0,176,101,1,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,112,54,1,0,8,102,1,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0],\"i8\",ALLOC_NONE,Runtime.GLOBAL_BASE+85100);var tempDoublePtr=Runtime.alignMemory(allocate(12,\"i8\",ALLOC_STATIC),8);assert(tempDoublePtr%8==0);function copyTempFloat(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3]}function copyTempDouble(ptr){HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1]=HEAP8[ptr+1];HEAP8[tempDoublePtr+2]=HEAP8[ptr+2];HEAP8[tempDoublePtr+3]=HEAP8[ptr+3];HEAP8[tempDoublePtr+4]=HEAP8[ptr+4];HEAP8[tempDoublePtr+5]=HEAP8[ptr+5];HEAP8[tempDoublePtr+6]=HEAP8[ptr+6];HEAP8[tempDoublePtr+7]=HEAP8[ptr+7]}function _atexit(func,arg){__ATEXIT__.unshift({func:func,arg:arg})}function ___cxa_atexit(){return _atexit.apply(null,arguments)}var emval_symbols={};function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}else{return symbol}}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=1;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __emval_new_cstring(v){return __emval_register(getStringOrSymbol(v))}Module[\"_i64Subtract\"]=_i64Subtract;var ___errno_state=0;function ___setErrNo(value){HEAP32[___errno_state>>2]=value;return value}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:return totalMemory/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator===\"object\")return navigator[\"hardwareConcurrency\"]||1;return 1}}___setErrNo(ERRNO_CODES.EINVAL);return-1}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var ptr in EXCEPTIONS.infos){var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0){if(info.destructor){Runtime.dynCall(\"vi\",info.destructor,[ptr])}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(asm[\"setTempRet0\"](0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(asm[\"setTempRet0\"](0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module[\"___cxa_is_pointer_type\"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module[\"___cxa_can_catch\"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(asm[\"setTempRet0\"](typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(asm[\"setTempRet0\"](throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0};EXCEPTIONS.last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}function _pthread_mutex_unlock(){}var ERRNO_MESSAGES={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};var PATH={splitPath:(function(filename){var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up--;up){parts.unshift(\"..\")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)===\"/\",trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path===\"/\")return\"/\";var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join(\"/\"))}),join2:(function(l,r){return PATH.normalize(l+\"/\"+r)}),resolve:(function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!==\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path.charAt(0)===\"/\"}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter((function(p){return!!p})),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var fd=process.stdin.fd;var usingDevice=false;try{fd=fs.openSync(\"/dev/stdin\",\"r\");usingDevice=true}catch(e){}bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null);if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module[\"print\"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\"print\"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module[\"printErr\"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\"printErr\"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.buffer.byteLength:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!==\"undefined\")return indexedDB;var ret=null;if(typeof window===\"object\")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\"IDBFS used, but indexedDB not supported\");return ret}),DB_VERSION:21,DB_STORE_NAME:\"FILE_DATA\",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\"timestamp\")){fileStore.createIndex(\"timestamp\",\"timestamp\",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!==\".\"&&p!==\"..\"}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:\"local\",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readonly\");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index(\"timestamp\");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:\"remote\",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error(\"node type not supported\"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:\"binary\",canOwn:true})}else{return callback(new Error(\"node type not supported\"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var errored=false;var completed=0;var db=src.type===\"remote\"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],\"readwrite\");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type===\"local\"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type===\"local\"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,\"/\",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:\"r\",1:\"r+\",2:\"r+\",64:\"r\",65:\"r+\",66:\"r+\",129:\"rx+\",193:\"rx+\",514:\"w+\",577:\"w\",578:\"w+\",705:\"wx\",706:\"wx+\",1024:\"a\",1025:\"a\",1026:\"a+\",1089:\"a\",1090:\"a+\",1153:\"ax\",1154:\"ax+\",1217:\"ax\",1218:\"ax+\",4096:\"rs\",4098:\"rs+\"},flagsToPermissionString:(function(flags){if(flags in NODEFS.flagsToPermissionStringMap){return NODEFS.flagsToPermissionStringMap[flags]}else{return flags}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\"\",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;var nbuffer=new Buffer(length);var res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return res}),write:(function(stream,buffer,offset,length,position){var nbuffer=new Buffer(buffer.subarray(offset,offset+length));var res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}return res}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var _stdin=allocate(1,\"i32*\",ALLOC_STATIC);var _stdout=allocate(1,\"i32*\",ALLOC_STATIC);var _stderr=allocate(1,\"i32*\",ALLOC_STATIC);function _fflush(stream){}var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+\" : \"+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split(\"/\").filter((function(p){return!!p})),false);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{\"r\":0,\"rs\":1052672,\"r+\":2,\"w\":577,\"wx\":705,\"xw\":705,\"w+\":578,\"wx+\":706,\"xw+\":706,\"a\":1089,\"ax\":1217,\"xa\":1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags===\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags}),flagsToPermissionString:(function(flag){var accmode=flag&2097155;var perms=[\"r\",\"w\",\"rw\"][accmode];if(flag&512){perms+=\"w\"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf(\"r\")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"w\")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf(\"x\")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,\"x\");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,\"wx\")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,\"wx\");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if((flags&2097155)!==0||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),getStreamFromPtr:(function(ptr){return FS.streams[ptr-1]}),getPtrForStream:(function(stream){return stream?stream.fd+1:0}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate===\"function\"){callback=populate;populate=false}var mounts=FS.getMounts(FS.root.mount);var completed=0;function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=mounts.length){callback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdev:(function(path,mode,dev){if(typeof dev===\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\"w\");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\"willMovePath\"]){FS.trackingDelegate[\"willMovePath\"](old_path,new_path)}}catch(e){console.log(\"FS.trackingDelegate['willMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\"onMovePath\"])FS.trackingDelegate[\"onMovePath\"](old_path,new_path)}catch(e){console.log(\"FS.trackingDelegate['onMovePath']('\"+old_path+\"', '\"+new_path+\"') threw an exception: \"+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){if(err===ERRNO_CODES.EISDIR)err=ERRNO_CODES.EPERM;throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\"willDeletePath\"]){FS.trackingDelegate[\"willDeletePath\"](path)}}catch(e){console.log(\"FS.trackingDelegate['willDeletePath']('\"+path+\"') threw an exception: \"+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\"onDeletePath\"])FS.trackingDelegate[\"onDeletePath\"](path)}catch(e){console.log(\"FS.trackingDelegate['onDeletePath']('\"+path+\"') threw an exception: \"+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(lookup.node.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path===\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,\"w\");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===\"\"){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags===\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode===\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path===\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module[\"printErr\"](\"read file: \"+path)}}try{if(FS.trackingDelegate[\"onOpenFile\"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\"onOpenFile\"](path,trackingFlags)}}catch(e){console.log(\"FS.trackingDelegate['onOpenFile']('\"+path+\"', flags) threw an exception: \"+e.message)}return stream}),close:(function(stream){try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=true;if(typeof position===\"undefined\"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=true;if(typeof position===\"undefined\"){position=stream.position;seeking=false}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\"onWriteToFile\"])FS.trackingDelegate[\"onWriteToFile\"](stream.path)}catch(e){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \"+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||\"r\";opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\"w\";opts.encoding=opts.encoding||\"utf8\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding===\"utf8\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,0,opts.canOwn)}else if(opts.encoding===\"binary\"){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,\"x\");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")}),createDefaultDevices:(function(){FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device;if(typeof crypto!==\"undefined\"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return require(\"crypto\").randomBytes(1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")}),createStandardStreams:(function(){if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",\"r\");HEAP32[_stdin>>2]=FS.getPtrForStream(stdin);assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");var stdout=FS.open(\"/dev/stdout\",\"w\");HEAP32[_stdout>>2]=FS.getPtrForStream(stdout);assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");var stderr=FS.open(\"/dev/stderr\",\"w\");HEAP32[_stderr>>2]=FS.getPtrForStream(stderr);assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno]};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices()}),init:(function(input,output,error){assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\"/\")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent===\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data===\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,\"w\");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent===\"string\"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!==\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(Module[\"read\"]){try{obj.contents=intArrayFromString(Module[\"read\"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);if(typeof Uint8Array!=\"undefined\")xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||\"\",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]===\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]===\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]}));this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!==\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperty(lazyArray,\"length\",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})});Object.defineProperty(lazyArray,\"chunkSize\",{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperty(node,\"usedBytes\",{get:(function(){return this.contents.length})});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module[\"preloadPlugins\"].forEach((function(plugin){if(handled)return;if(plugin[\"canHandle\"](fullname)){plugin[\"handle\"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return\"EM_FS_\"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};function _close(fildes){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{FS.close(stream);return 0}catch(e){FS.handleFSError(e);return-1}}function _fileno(stream){stream=FS.getStreamFromPtr(stream);if(!stream)return-1;return stream.fd}function _fclose(stream){var fd=_fileno(stream);return _close(fd)}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}function _pthread_mutex_lock(){}function _free(){}Module[\"_free\"]=_free;function _malloc(bytes){var ptr=Runtime.dynamicAlloc(bytes+8);return ptr+8&4294967288}Module[\"_malloc\"]=_malloc;function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function __embind_register_std_string(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}function getTAElement(ta,index){return ta[index]}function getStringElement(string,index){return string.charCodeAt(index)}var getElement;if(value instanceof Uint8Array){getElement=getTAElement}else if(value instanceof Int8Array){getElement=getTAElement}else if(typeof value===\"string\"){getElement=getStringElement}else{throwBindingError(\"Cannot pass non-string to std::string\")}var length=value.length;var ptr=_malloc(4+length);HEAPU32[ptr>>2]=length;for(var i=0;i<length;++i){var charCode=getElement(value,i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function _open(path,oflag,varargs){var mode=HEAP32[varargs>>2];path=Pointer_stringify(path);try{var stream=FS.open(path,oflag,mode);return stream.fd}catch(e){FS.handleFSError(e);return-1}}function _fopen(filename,mode){var flags;mode=Pointer_stringify(mode);if(mode[0]==\"r\"){if(mode.indexOf(\"+\")!=-1){flags=2}else{flags=0}}else if(mode[0]==\"w\"){if(mode.indexOf(\"+\")!=-1){flags=2}else{flags=1}flags|=64;flags|=512}else if(mode[0]==\"a\"){if(mode.indexOf(\"+\")!=-1){flags=2}else{flags=1}flags|=64;flags|=1024}else{___setErrNo(ERRNO_CODES.EINVAL);return 0}var fd=_open(filename,flags,allocate([511,0,0,0],\"i32\",ALLOC_STACK));return fd===-1?0:FS.getPtrForStream(FS.getStream(fd))}function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function _mkport(){throw\"TODO\"}var SOCKFS={mount:(function(mount){Module[\"websocket\"]=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"]?Module[\"websocket\"]:{};Module[\"websocket\"]._callbacks={};Module[\"websocket\"][\"on\"]=(function(event,callback){if(\"function\"===typeof callback){this._callbacks[event]=callback}return this});Module[\"websocket\"].emit=(function(event,param){if(\"function\"===typeof this._callbacks[event]){this._callbacks[event].call(this,param)}});return FS.createNode(null,\"/\",16384|511,0)}),createSocket:(function(family,type,protocol){var streaming=type==1;if(protocol){assert(streaming==(protocol==6))}var sock={family:family,type:type,protocol:protocol,server:null,error:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};var name=SOCKFS.nextname();var node=FS.createNode(SOCKFS.root,name,49152,0);node.sock=sock;var stream=FS.createStream({path:name,node:node,flags:FS.modeStringToFlags(\"r+\"),seekable:false,stream_ops:SOCKFS.stream_ops});sock.stream=stream;return sock}),getSocket:(function(fd){var stream=FS.getStream(fd);if(!stream||!FS.isSocket(stream.node.mode)){return null}return stream.node.sock}),stream_ops:{poll:(function(stream){var sock=stream.node.sock;return sock.sock_ops.poll(sock)}),ioctl:(function(stream,request,varargs){var sock=stream.node.sock;return sock.sock_ops.ioctl(sock,request,varargs)}),read:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;var msg=sock.sock_ops.recvmsg(sock,length);if(!msg){return 0}buffer.set(msg.buffer,offset);return msg.buffer.length}),write:(function(stream,buffer,offset,length,position){var sock=stream.node.sock;return sock.sock_ops.sendmsg(sock,buffer,offset,length)}),close:(function(stream){var sock=stream.node.sock;sock.sock_ops.close(sock)})},nextname:(function(){if(!SOCKFS.nextname.current){SOCKFS.nextname.current=0}return\"socket[\"+SOCKFS.nextname.current++ +\"]\"}),websocket_sock_ops:{createPeer:(function(sock,addr,port){var ws;if(typeof addr===\"object\"){ws=addr;addr=null;port=null}if(ws){if(ws._socket){addr=ws._socket.remoteAddress;port=ws._socket.remotePort}else{var result=/ws[s]?:\\/\\/([^:]+):(\\d+)/.exec(ws.url);if(!result){throw new Error(\"WebSocket URL must be in the format ws(s)://address:port\")}addr=result[1];port=parseInt(result[2],10)}}else{try{var runtimeConfig=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"];var url=\"ws:#\".replace(\"#\",\"//\");if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"url\"]){url=Module[\"websocket\"][\"url\"]}}if(url===\"ws://\"||url===\"wss://\"){var parts=addr.split(\"/\");url=url+parts[0]+\":\"+port+\"/\"+parts.slice(1).join(\"/\")}var subProtocols=\"binary\";if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"subprotocol\"]){subProtocols=Module[\"websocket\"][\"subprotocol\"]}}subProtocols=subProtocols.replace(/^ +| +$/g,\"\").split(/ *, */);var opts=ENVIRONMENT_IS_NODE?{\"protocol\":subProtocols.toString()}:subProtocols;var WebSocket=ENVIRONMENT_IS_NODE?require(\"ws\"):window[\"WebSocket\"];ws=new WebSocket(url,opts);ws.binaryType=\"arraybuffer\"}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH)}}var peer={addr:addr,port:port,socket:ws,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(sock,peer);SOCKFS.websocket_sock_ops.handlePeerEvents(sock,peer);if(sock.type===2&&typeof sock.sport!==\"undefined\"){peer.dgram_send_queue.push(new Uint8Array([255,255,255,255,\"p\".charCodeAt(0),\"o\".charCodeAt(0),\"r\".charCodeAt(0),\"t\".charCodeAt(0),(sock.sport&65280)>>8,sock.sport&255]))}return peer}),getPeer:(function(sock,addr,port){return sock.peers[addr+\":\"+port]}),addPeer:(function(sock,peer){sock.peers[peer.addr+\":\"+peer.port]=peer}),removePeer:(function(sock,peer){delete sock.peers[peer.addr+\":\"+peer.port]}),handlePeerEvents:(function(sock,peer){var first=true;var handleOpen=(function(){Module[\"websocket\"].emit(\"open\",sock.stream.fd);try{var queued=peer.dgram_send_queue.shift();while(queued){peer.socket.send(queued);queued=peer.dgram_send_queue.shift()}}catch(e){peer.socket.close()}});function handleMessage(data){assert(typeof data!==\"string\"&&data.byteLength!==undefined);data=new Uint8Array(data);var wasfirst=first;first=false;if(wasfirst&&data.length===10&&data[0]===255&&data[1]===255&&data[2]===255&&data[3]===255&&data[4]===\"p\".charCodeAt(0)&&data[5]===\"o\".charCodeAt(0)&&data[6]===\"r\".charCodeAt(0)&&data[7]===\"t\".charCodeAt(0)){var newport=data[8]<<8|data[9];SOCKFS.websocket_sock_ops.removePeer(sock,peer);peer.port=newport;SOCKFS.websocket_sock_ops.addPeer(sock,peer);return}sock.recv_queue.push({addr:peer.addr,port:peer.port,data:data});Module[\"websocket\"].emit(\"message\",sock.stream.fd)}if(ENVIRONMENT_IS_NODE){peer.socket.on(\"open\",handleOpen);peer.socket.on(\"message\",(function(data,flags){if(!flags.binary){return}handleMessage((new Uint8Array(data)).buffer)}));peer.socket.on(\"close\",(function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)}));peer.socket.on(\"error\",(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])}))}else{peer.socket.onopen=handleOpen;peer.socket.onclose=(function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)});peer.socket.onmessage=function peer_socket_onmessage(event){handleMessage(event.data)};peer.socket.onerror=(function(error){sock.error=ERRNO_CODES.ECONNREFUSED;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])})}}),poll:(function(sock){if(sock.type===1&&sock.server){return sock.pending.length?64|1:0}var mask=0;var dest=sock.type===1?SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport):null;if(sock.recv_queue.length||!dest||dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=64|1}if(!dest||dest&&dest.socket.readyState===dest.socket.OPEN){mask|=4}if(dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=16}return mask}),ioctl:(function(sock,request,arg){switch(request){case 21531:var bytes=0;if(sock.recv_queue.length){bytes=sock.recv_queue[0].data.length}HEAP32[arg>>2]=bytes;return 0;default:return ERRNO_CODES.EINVAL}}),close:(function(sock){if(sock.server){try{sock.server.close()}catch(e){}sock.server=null}var peers=Object.keys(sock.peers);for(var i=0;i<peers.length;i++){var peer=sock.peers[peers[i]];try{peer.socket.close()}catch(e){}SOCKFS.websocket_sock_ops.removePeer(sock,peer)}return 0}),bind:(function(sock,addr,port){if(typeof sock.saddr!==\"undefined\"||typeof sock.sport!==\"undefined\"){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}sock.saddr=addr;sock.sport=port||_mkport();if(sock.type===2){if(sock.server){sock.server.close();sock.server=null}try{sock.sock_ops.listen(sock,0)}catch(e){if(!(e instanceof FS.ErrnoError))throw e;if(e.errno!==ERRNO_CODES.EOPNOTSUPP)throw e}}}),connect:(function(sock,addr,port){if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(typeof sock.daddr!==\"undefined\"&&typeof sock.dport!==\"undefined\"){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(dest){if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EALREADY)}else{throw new FS.ErrnoError(ERRNO_CODES.EISCONN)}}}var peer=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port);sock.daddr=peer.addr;sock.dport=peer.port;throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS)}),listen:(function(sock,backlog){if(!ENVIRONMENT_IS_NODE){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}if(sock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var WebSocketServer=require(\"ws\").Server;var host=sock.saddr;sock.server=new WebSocketServer({host:host,port:sock.sport});Module[\"websocket\"].emit(\"listen\",sock.stream.fd);sock.server.on(\"connection\",(function(ws){if(sock.type===1){var newsock=SOCKFS.createSocket(sock.family,sock.type,sock.protocol);var peer=SOCKFS.websocket_sock_ops.createPeer(newsock,ws);newsock.daddr=peer.addr;newsock.dport=peer.port;sock.pending.push(newsock);Module[\"websocket\"].emit(\"connection\",newsock.stream.fd)}else{SOCKFS.websocket_sock_ops.createPeer(sock,ws);Module[\"websocket\"].emit(\"connection\",sock.stream.fd)}}));sock.server.on(\"closed\",(function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd);sock.server=null}));sock.server.on(\"error\",(function(error){sock.error=ERRNO_CODES.EHOSTUNREACH;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"EHOSTUNREACH: Host is unreachable\"])}))}),accept:(function(listensock){if(!listensock.server){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var newsock=listensock.pending.shift();newsock.stream.flags=listensock.stream.flags;return newsock}),getname:(function(sock,peer){var addr,port;if(peer){if(sock.daddr===undefined||sock.dport===undefined){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}addr=sock.daddr;port=sock.dport}else{addr=sock.saddr||0;port=sock.sport||0}return{addr:addr,port:port}}),sendmsg:(function(sock,buffer,offset,length,addr,port){if(sock.type===2){if(addr===undefined||port===undefined){addr=sock.daddr;port=sock.dport}if(addr===undefined||port===undefined){throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ)}}else{addr=sock.daddr;port=sock.dport}var dest=SOCKFS.websocket_sock_ops.getPeer(sock,addr,port);if(sock.type===1){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var data;if(buffer instanceof Array||buffer instanceof ArrayBuffer){data=buffer.slice(offset,offset+length)}else{data=buffer.buffer.slice(buffer.byteOffset+offset,buffer.byteOffset+offset+length)}if(sock.type===2){if(!dest||dest.socket.readyState!==dest.socket.OPEN){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){dest=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port)}dest.dgram_send_queue.push(data);return length}}try{dest.socket.send(data);return length}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),recvmsg:(function(sock,length){if(sock.type===1&&sock.server){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}var queued=sock.recv_queue.shift();if(!queued){if(sock.type===1){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(!dest){throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN)}else if(dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){return null}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}else{throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}}var queuedLength=queued.data.byteLength||queued.data.length;var queuedOffset=queued.data.byteOffset||0;var queuedBuffer=queued.data.buffer||queued.data;var bytesRead=Math.min(length,queuedLength);var res={buffer:new Uint8Array(queuedBuffer,queuedOffset,bytesRead),addr:queued.addr,port:queued.port};if(sock.type===1&&bytesRead<queuedLength){var bytesRemaining=queuedLength-bytesRead;queued.data=new Uint8Array(queuedBuffer,queuedOffset+bytesRead,bytesRemaining);sock.recv_queue.unshift(queued)}return res})}};function _send(fd,buf,len,flags){var sock=SOCKFS.getSocket(fd);if(!sock){___setErrNo(ERRNO_CODES.EBADF);return-1}return _write(fd,buf,len)}function _pwrite(fildes,buf,nbyte,offset){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.write(stream,slab,buf,nbyte,offset)}catch(e){FS.handleFSError(e);return-1}}function _write(fildes,buf,nbyte){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.write(stream,slab,buf,nbyte)}catch(e){FS.handleFSError(e);return-1}}function _fputc(c,stream){var chr=unSign(c&255);HEAP8[_fputc.ret>>0]=chr;var fd=_fileno(stream);var ret=_write(fd,_fputc.ret,1);if(ret==-1){var streamObj=FS.getStreamFromPtr(stream);if(streamObj)streamObj.error=true;return-1}else{return chr}}var _log=Math_log;var PTHREAD_SPECIFIC={};var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}var _UItoD=true;Module[\"_bitshift64Ashr\"]=_bitshift64Ashr;Module[\"_bitshift64Lshr\"]=_bitshift64Lshr;function _recv(fd,buf,len,flags){var sock=SOCKFS.getSocket(fd);if(!sock){___setErrNo(ERRNO_CODES.EBADF);return-1}return _read(fd,buf,len)}function _pread(fildes,buf,nbyte,offset){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.read(stream,slab,buf,nbyte,offset)}catch(e){FS.handleFSError(e);return-1}}function _read(fildes,buf,nbyte){var stream=FS.getStream(fildes);if(!stream){___setErrNo(ERRNO_CODES.EBADF);return-1}try{var slab=HEAP8;return FS.read(stream,slab,buf,nbyte)}catch(e){FS.handleFSError(e);return-1}}function _fread(ptr,size,nitems,stream){var bytesToRead=nitems*size;if(bytesToRead==0){return 0}var bytesRead=0;var streamObj=FS.getStreamFromPtr(stream);if(!streamObj){___setErrNo(ERRNO_CODES.EBADF);return 0}while(streamObj.ungotten.length&&bytesToRead>0){HEAP8[ptr++>>0]=streamObj.ungotten.pop();bytesToRead--;bytesRead++}var err=_read(streamObj.fd,ptr,bytesToRead);if(err==-1){if(streamObj)streamObj.error=true;return 0}bytesRead+=err;if(bytesRead<bytesToRead)streamObj.eof=true;return bytesRead/size|0}var _BDtoIHigh=true;function _pthread_cond_broadcast(){return 0}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}var returns=argTypes[0].name!==\"void\";invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=asm[\"dynCall_\"+signature];if(dc===undefined){dc=asm[\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){proto[methodName]=func}else{proto[methodName].overloadTable[argCount-1]=func}return[]}));return[]}))}var _ceil=Math_ceil;function _gettimeofday(ptr){var now=Date.now();HEAP32[ptr>>2]=now/1e3|0;HEAP32[ptr+4>>2]=now%1e3*1e3|0;return 0}function _fwrite(ptr,size,nitems,stream){var bytesToWrite=nitems*size;if(bytesToWrite==0)return 0;var fd=_fileno(stream);var bytesWritten=_write(fd,ptr,bytesToWrite);if(bytesWritten==-1){var streamObj=FS.getStreamFromPtr(stream);if(streamObj)streamObj.error=true;return 0}else{return bytesWritten/size|0}}Module[\"_strlen\"]=_strlen;function __reallyNegative(x){return x<0||x===0&&1/x===-Infinity}function __formatString(format,varargs){assert((varargs&3)===0);var textIndex=format;var argIndex=0;function getNextArg(type){var ret;argIndex=Runtime.prepVararg(argIndex,type);if(type===\"double\"){ret=(HEAP32[tempDoublePtr>>2]=HEAP32[varargs+argIndex>>2],HEAP32[tempDoublePtr+4>>2]=HEAP32[varargs+(argIndex+4)>>2],+HEAPF64[tempDoublePtr>>3]);argIndex+=8}else if(type==\"i64\"){ret=[HEAP32[varargs+argIndex>>2],HEAP32[varargs+(argIndex+4)>>2]];argIndex+=8}else{assert((argIndex&3)===0);type=\"i32\";ret=HEAP32[varargs+argIndex>>2];argIndex+=4}return ret}var ret=[];var curr,next,currArg;while(1){var startTextIndex=textIndex;curr=HEAP8[textIndex>>0];if(curr===0)break;next=HEAP8[textIndex+1>>0];if(curr==37){var flagAlwaysSigned=false;var flagLeftAlign=false;var flagAlternative=false;var flagZeroPad=false;var flagPadSign=false;flagsLoop:while(1){switch(next){case 43:flagAlwaysSigned=true;break;case 45:flagLeftAlign=true;break;case 35:flagAlternative=true;break;case 48:if(flagZeroPad){break flagsLoop}else{flagZeroPad=true;break};case 32:flagPadSign=true;break;default:break flagsLoop}textIndex++;next=HEAP8[textIndex+1>>0]}var width=0;if(next==42){width=getNextArg(\"i32\");textIndex++;next=HEAP8[textIndex+1>>0]}else{while(next>=48&&next<=57){width=width*10+(next-48);textIndex++;next=HEAP8[textIndex+1>>0]}}var precisionSet=false,precision=-1;if(next==46){precision=0;precisionSet=true;textIndex++;next=HEAP8[textIndex+1>>0];if(next==42){precision=getNextArg(\"i32\");textIndex++}else{while(1){var precisionChr=HEAP8[textIndex+1>>0];if(precisionChr<48||precisionChr>57)break;precision=precision*10+(precisionChr-48);textIndex++}}next=HEAP8[textIndex+1>>0]}if(precision<0){precision=6;precisionSet=false}var argSize;switch(String.fromCharCode(next)){case\"h\":var nextNext=HEAP8[textIndex+2>>0];if(nextNext==104){textIndex++;argSize=1}else{argSize=2}break;case\"l\":var nextNext=HEAP8[textIndex+2>>0];if(nextNext==108){textIndex++;argSize=8}else{argSize=4}break;case\"L\":case\"q\":case\"j\":argSize=8;break;case\"z\":case\"t\":case\"I\":argSize=4;break;default:argSize=null}if(argSize)textIndex++;next=HEAP8[textIndex+1>>0];switch(String.fromCharCode(next)){case\"d\":case\"i\":case\"u\":case\"o\":case\"x\":case\"X\":case\"p\":{var signed=next==100||next==105;argSize=argSize||4;var currArg=getNextArg(\"i\"+argSize*8);var origArg=currArg;var argText;if(argSize==8){currArg=Runtime.makeBigInt(currArg[0],currArg[1],next==117)}if(argSize<=4){var limit=Math.pow(256,argSize)-1;currArg=(signed?reSign:unSign)(currArg&limit,argSize*8)}var currAbsArg=Math.abs(currArg);var prefix=\"\";if(next==100||next==105){if(argSize==8&&i64Math)argText=i64Math.stringify(origArg[0],origArg[1],null);else argText=reSign(currArg,8*argSize,1).toString(10)}else if(next==117){if(argSize==8&&i64Math)argText=i64Math.stringify(origArg[0],origArg[1],true);else argText=unSign(currArg,8*argSize,1).toString(10);currArg=Math.abs(currArg)}else if(next==111){argText=(flagAlternative?\"0\":\"\")+currAbsArg.toString(8)}else if(next==120||next==88){prefix=flagAlternative&&currArg!=0?\"0x\":\"\";if(argSize==8&&i64Math){if(origArg[1]){argText=(origArg[1]>>>0).toString(16);var lower=(origArg[0]>>>0).toString(16);while(lower.length<8)lower=\"0\"+lower;argText+=lower}else{argText=(origArg[0]>>>0).toString(16)}}else if(currArg<0){currArg=-currArg;argText=(currAbsArg-1).toString(16);var buffer=[];for(var i=0;i<argText.length;i++){buffer.push((15-parseInt(argText[i],16)).toString(16))}argText=buffer.join(\"\");while(argText.length<argSize*2)argText=\"f\"+argText}else{argText=currAbsArg.toString(16)}if(next==88){prefix=prefix.toUpperCase();argText=argText.toUpperCase()}}else if(next==112){if(currAbsArg===0){argText=\"(nil)\"}else{prefix=\"0x\";argText=currAbsArg.toString(16)}}if(precisionSet){while(argText.length<precision){argText=\"0\"+argText}}if(currArg>=0){if(flagAlwaysSigned){prefix=\"+\"+prefix}else if(flagPadSign){prefix=\" \"+prefix}}if(argText.charAt(0)==\"-\"){prefix=\"-\"+prefix;argText=argText.substr(1)}while(prefix.length+argText.length<width){if(flagLeftAlign){argText+=\" \"}else{if(flagZeroPad){argText=\"0\"+argText}else{prefix=\" \"+prefix}}}argText=prefix+argText;argText.split(\"\").forEach((function(chr){ret.push(chr.charCodeAt(0))}));break};case\"f\":case\"F\":case\"e\":case\"E\":case\"g\":case\"G\":{var currArg=getNextArg(\"double\");var argText;if(isNaN(currArg)){argText=\"nan\";flagZeroPad=false}else if(!isFinite(currArg)){argText=(currArg<0?\"-\":\"\")+\"inf\";flagZeroPad=false}else{var isGeneral=false;var effectivePrecision=Math.min(precision,20);if(next==103||next==71){isGeneral=true;precision=precision||1;var exponent=parseInt(currArg.toExponential(effectivePrecision).split(\"e\")[1],10);if(precision>exponent&&exponent>=-4){next=(next==103?\"f\":\"F\").charCodeAt(0);precision-=exponent+1}else{next=(next==103?\"e\":\"E\").charCodeAt(0);precision--}effectivePrecision=Math.min(precision,20)}if(next==101||next==69){argText=currArg.toExponential(effectivePrecision);if(/[eE][-+]\\d$/.test(argText)){argText=argText.slice(0,-1)+\"0\"+argText.slice(-1)}}else if(next==102||next==70){argText=currArg.toFixed(effectivePrecision);if(currArg===0&&__reallyNegative(currArg)){argText=\"-\"+argText}}var parts=argText.split(\"e\");if(isGeneral&&!flagAlternative){while(parts[0].length>1&&parts[0].indexOf(\".\")!=-1&&(parts[0].slice(-1)==\"0\"||parts[0].slice(-1)==\".\")){parts[0]=parts[0].slice(0,-1)}}else{if(flagAlternative&&argText.indexOf(\".\")==-1)parts[0]+=\".\";while(precision>effectivePrecision++)parts[0]+=\"0\"}argText=parts[0]+(parts.length>1?\"e\"+parts[1]:\"\");if(next==69)argText=argText.toUpperCase();if(currArg>=0){if(flagAlwaysSigned){argText=\"+\"+argText}else if(flagPadSign){argText=\" \"+argText}}}while(argText.length<width){if(flagLeftAlign){argText+=\" \"}else{if(flagZeroPad&&(argText[0]==\"-\"||argText[0]==\"+\")){argText=argText[0]+\"0\"+argText.slice(1)}else{argText=(flagZeroPad?\"0\":\" \")+argText}}}if(next<97)argText=argText.toUpperCase();argText.split(\"\").forEach((function(chr){ret.push(chr.charCodeAt(0))}));break};case\"s\":{var arg=getNextArg(\"i8*\");var argLength=arg?_strlen(arg):\"(null)\".length;if(precisionSet)argLength=Math.min(argLength,precision);if(!flagLeftAlign){while(argLength<width--){ret.push(32)}}if(arg){for(var i=0;i<argLength;i++){ret.push(HEAPU8[arg++>>0])}}else{ret=ret.concat(intArrayFromString(\"(null)\".substr(0,argLength),true))}if(flagLeftAlign){while(argLength<width--){ret.push(32)}}break};case\"c\":{if(flagLeftAlign)ret.push(getNextArg(\"i8\"));while(--width>0){ret.push(32)}if(!flagLeftAlign)ret.push(getNextArg(\"i8\"));break};case\"n\":{var ptr=getNextArg(\"i32*\");HEAP32[ptr>>2]=ret.length;break};case\"%\":{ret.push(curr);break};default:{for(var i=startTextIndex;i<textIndex+2;i++){ret.push(HEAP8[i>>0])}}}textIndex+=2}else{ret.push(curr);textIndex+=1}}return ret}function _fprintf(stream,format,varargs){var result=__formatString(format,varargs);var stack=Runtime.stackSave();var ret=_fwrite(allocate(result,\"i8\",ALLOC_STACK),1,result.length,stream);Runtime.stackRestore(stack);return ret}function _vfprintf(s,f,va_arg){return _fprintf(s,f,HEAP32[va_arg>>2])}function __emval_run_destructors(handle){var destructors=emval_handle_array[handle].value;runDestructors(destructors);__emval_decref(handle)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}Module[\"_memcpy\"]=_memcpy;function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,(function(){}))}});Enum.values[enumValue]=Value;Enum[name]=Value}function _sbrk(bytes){var self=_sbrk;if(!self.called){DYNAMICTOP=alignMemoryPage(DYNAMICTOP);self.called=true;assert(Runtime.dynamicAlloc);self.alloc=Runtime.dynamicAlloc;Runtime.dynamicAlloc=(function(){abort(\"cannot dynamically allocate, sbrk now has control\")})}var ret=DYNAMICTOP;if(bytes!=0){var success=self.alloc(bytes);if(!success)return-1>>>0}return ret}Module[\"_memmove\"]=_memmove;var LOCALE={curr:0,check:(function(locale){if(locale)locale=Pointer_stringify(locale);return locale===\"C\"||locale===\"POSIX\"||!locale})};function _calloc(n,s){var ret=_malloc(n*s);_memset(ret,0,n*s);return ret}function _newlocale(mask,locale,base){if(!LOCALE.check(locale)){___setErrNo(ERRNO_CODES.ENOENT);return 0}if(!base)base=_calloc(1,4);return base}function ___errno_location(){return ___errno_state}var _BItoD=true;function _catclose(catd){return 0}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function ___cxa_guard_release(){}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return(function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])});case 1:return(function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])});case 2:return(function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])});default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function constructor(){}constructor.values={};registerType(rawType,{name:name,constructor:constructor,\"fromWireType\":(function(c){return this.constructor.values[c]}),\"toWireType\":(function(destructors,c){return c.value}),\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,constructor)}function _uselocale(locale){var old=LOCALE.curr;if(locale)LOCALE.curr=locale;return old}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function ___assert_fail(condition,filename,line,func){ABORT=true;throw\"Assertion failed: \"+Pointer_stringify(condition)+\", at: \"+[filename?Pointer_stringify(filename):\"unknown filename\",line,func?Pointer_stringify(func):\"unknown function\"]+\" at \"+stackTrace()}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}Module[\"_memset\"]=_memset;var _BDtoILow=true;function _strerror_r(errnum,strerrbuf,buflen){if(errnum in ERRNO_MESSAGES){if(ERRNO_MESSAGES[errnum].length>buflen-1){return ___setErrNo(ERRNO_CODES.ERANGE)}else{var msg=ERRNO_MESSAGES[errnum];writeAsciiToMemory(msg,strerrbuf);return 0}}else{return ___setErrNo(ERRNO_CODES.EINVAL)}}function _strerror(errnum){if(!_strerror.buffer)_strerror.buffer=_malloc(256);_strerror_r(errnum,_strerror.buffer,256);return _strerror.buffer}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?Pointer_stringify(tm_zone):\"\"};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),\"%A\":(function(date){return WEEKDAYS[date.tm_wday]}),\"%b\":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),\"%B\":(function(date){return MONTHS[date.tm_mon]}),\"%C\":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),\"%d\":(function(date){return leadingNulls(date.tm_mday,2)}),\"%e\":(function(date){return leadingSomething(date.tm_mday,2,\" \")}),\"%g\":(function(date){return getWeekBasedYear(date).toString().substring(2)}),\"%G\":(function(date){return getWeekBasedYear(date)}),\"%H\":(function(date){return leadingNulls(date.tm_hour,2)}),\"%I\":(function(date){return leadingNulls(date.tm_hour<13?date.tm_hour:date.tm_hour-12,2)}),\"%j\":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),\"%m\":(function(date){return leadingNulls(date.tm_mon+1,2)}),\"%M\":(function(date){return leadingNulls(date.tm_min,2)}),\"%n\":(function(){return\"\\n\"}),\"%p\":(function(date){if(date.tm_hour>0&&date.tm_hour<13){return\"AM\"}else{return\"PM\"}}),\"%S\":(function(date){return leadingNulls(date.tm_sec,2)}),\"%t\":(function(){return\"\\t\"}),\"%u\":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),\"%U\":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"}),\"%V\":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),\"%w\":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),\"%W\":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"}),\"%y\":(function(date){return(date.tm_year+1900).toString().substring(2)}),\"%Y\":(function(date){return date.tm_year+1900}),\"%z\":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)}),\"%Z\":(function(date){return date.tm_zone}),\"%%\":(function(){return\"%\"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _abort(){Module[\"abort\"]()}function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value}function __emval_as(handle,returnType,destructorsRef){handle=requireHandle(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=__emval_register(destructors);HEAP32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Runtime.dynCall(\"v\",func);_pthread_once.seen[ptr]=1}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){var ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register((function(){clonedHandle[\"delete\"]()})));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}var _throwInternalError=undefined;function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value}}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=requireFunction(upcastSignature,upcast)}if(downcast){downcast=requireFunction(downcastSignature,downcast)}rawDestructor=requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,(function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])}));whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],(function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,(function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)}));var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]}))}function _pthread_cond_wait(){return 0}function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var _fabs=Math_abs;function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function _emscripten_set_main_loop_timing(mode,value){Browser.mainLoop.timingMode=mode;Browser.mainLoop.timingValue=value;if(!Browser.mainLoop.func){return 1}if(mode==0){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler(){setTimeout(Browser.mainLoop.runner,value)};Browser.mainLoop.method=\"timeout\"}else if(mode==1){Browser.mainLoop.scheduler=function Browser_mainLoop_scheduler(){Browser.requestAnimationFrame(Browser.mainLoop.runner)};Browser.mainLoop.method=\"rAF\"}return 0}function _emscripten_set_main_loop(func,fps,simulateInfiniteLoop,arg,noSetTiming){Module[\"noExitRuntime\"]=true;assert(!Browser.mainLoop.func,\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");Browser.mainLoop.func=func;Browser.mainLoop.arg=arg;var thisMainLoopId=Browser.mainLoop.currentlyRunningMainloop;Browser.mainLoop.runner=function Browser_mainLoop_runner(){if(ABORT)return;if(Browser.mainLoop.queue.length>0){var start=Date.now();var blocker=Browser.mainLoop.queue.shift();blocker.func(blocker.arg);if(Browser.mainLoop.remainingBlockers){var remaining=Browser.mainLoop.remainingBlockers;var next=remaining%1==0?remaining-1:Math.floor(remaining);if(blocker.counted){Browser.mainLoop.remainingBlockers=next}else{next=next+.5;Browser.mainLoop.remainingBlockers=(8*remaining+next)/9}}console.log('main loop blocker \"'+blocker.name+'\" took '+(Date.now()-start)+\" ms\");Browser.mainLoop.updateStatus();setTimeout(Browser.mainLoop.runner,0);return}if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0;if(Browser.mainLoop.timingMode==1&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0){Browser.mainLoop.scheduler();return}if(Browser.mainLoop.method===\"timeout\"&&Module.ctx){Module.printErr(\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\");Browser.mainLoop.method=\"\"}Browser.mainLoop.runIter((function(){if(typeof arg!==\"undefined\"){Runtime.dynCall(\"vi\",func,[arg])}else{Runtime.dynCall(\"v\",func)}}));if(thisMainLoopId<Browser.mainLoop.currentlyRunningMainloop)return;if(typeof SDL===\"object\"&&SDL.audio&&SDL.audio.queueNewAudioData)SDL.audio.queueNewAudioData();Browser.mainLoop.scheduler()};if(!noSetTiming){if(fps&&fps>0)_emscripten_set_main_loop_timing(0,1e3/fps);else _emscripten_set_main_loop_timing(1,1);Browser.mainLoop.scheduler()}if(simulateInfiniteLoop){throw\"SimulateInfiniteLoop\"}}var Browser={mainLoop:{scheduler:null,method:\"\",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:(function(){Browser.mainLoop.scheduler=null;Browser.mainLoop.currentlyRunningMainloop++}),resume:(function(){Browser.mainLoop.currentlyRunningMainloop++;var timingMode=Browser.mainLoop.timingMode;var timingValue=Browser.mainLoop.timingValue;var func=Browser.mainLoop.func;Browser.mainLoop.func=null;_emscripten_set_main_loop(func,0,false,Browser.mainLoop.arg,true);_emscripten_set_main_loop_timing(timingMode,timingValue);Browser.mainLoop.scheduler()}),updateStatus:(function(){if(Module[\"setStatus\"]){var message=Module[\"statusMessage\"]||\"Please wait...\";var remaining=Browser.mainLoop.remainingBlockers;var expected=Browser.mainLoop.expectedBlockers;if(remaining){if(remaining<expected){Module[\"setStatus\"](message+\" (\"+(expected-remaining)+\"/\"+expected+\")\")}else{Module[\"setStatus\"](message)}}else{Module[\"setStatus\"](\"\")}}}),runIter:(function(func){if(ABORT)return;if(Module[\"preMainLoop\"]){var preRet=Module[\"preMainLoop\"]();if(preRet===false){return}}try{func()}catch(e){if(e instanceof ExitStatus){return}else{if(e&&typeof e===\"object\"&&e.stack)Module.printErr(\"exception thrown: \"+[e,e.stack]);throw e}}if(Module[\"postMainLoop\"])Module[\"postMainLoop\"]()})},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:(function(){if(!Module[\"preloadPlugins\"])Module[\"preloadPlugins\"]=[];if(Browser.initted)return;Browser.initted=true;try{new Blob;Browser.hasBlobConstructor=true}catch(e){Browser.hasBlobConstructor=false;console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\")}Browser.BlobBuilder=typeof MozBlobBuilder!=\"undefined\"?MozBlobBuilder:typeof WebKitBlobBuilder!=\"undefined\"?WebKitBlobBuilder:!Browser.hasBlobConstructor?console.log(\"warning: no BlobBuilder\"):null;Browser.URLObject=typeof window!=\"undefined\"?window.URL?window.URL:window.webkitURL:undefined;if(!Module.noImageDecoding&&typeof Browser.URLObject===\"undefined\"){console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\");Module.noImageDecoding=true}var imagePlugin={};imagePlugin[\"canHandle\"]=function imagePlugin_canHandle(name){return!Module.noImageDecoding&&/\\.(jpg|jpeg|png|bmp)$/i.test(name)};imagePlugin[\"handle\"]=function imagePlugin_handle(byteArray,name,onload,onerror){var b=null;if(Browser.hasBlobConstructor){try{b=new Blob([byteArray],{type:Browser.getMimetype(name)});if(b.size!==byteArray.length){b=new Blob([(new Uint8Array(byteArray)).buffer],{type:Browser.getMimetype(name)})}}catch(e){Runtime.warnOnce(\"Blob constructor present but fails: \"+e+\"; falling back to blob builder\")}}if(!b){var bb=new Browser.BlobBuilder;bb.append((new Uint8Array(byteArray)).buffer);b=bb.getBlob()}var url=Browser.URLObject.createObjectURL(b);var img=new Image;img.onload=function img_onload(){assert(img.complete,\"Image \"+name+\" could not be decoded\");var canvas=document.createElement(\"canvas\");canvas.width=img.width;canvas.height=img.height;var ctx=canvas.getContext(\"2d\");ctx.drawImage(img,0,0);Module[\"preloadedImages\"][name]=canvas;Browser.URLObject.revokeObjectURL(url);if(onload)onload(byteArray)};img.onerror=function img_onerror(event){console.log(\"Image \"+url+\" could not be decoded\");if(onerror)onerror()};img.src=url};Module[\"preloadPlugins\"].push(imagePlugin);var audioPlugin={};audioPlugin[\"canHandle\"]=function audioPlugin_canHandle(name){return!Module.noAudioDecoding&&name.substr(-4)in{\".ogg\":1,\".wav\":1,\".mp3\":1}};audioPlugin[\"handle\"]=function audioPlugin_handle(byteArray,name,onload,onerror){var done=false;function finish(audio){if(done)return;done=true;Module[\"preloadedAudios\"][name]=audio;if(onload)onload(byteArray)}function fail(){if(done)return;done=true;Module[\"preloadedAudios\"][name]=new Audio;if(onerror)onerror()}if(Browser.hasBlobConstructor){try{var b=new Blob([byteArray],{type:Browser.getMimetype(name)})}catch(e){return fail()}var url=Browser.URLObject.createObjectURL(b);var audio=new Audio;audio.addEventListener(\"canplaythrough\",(function(){finish(audio)}),false);audio.onerror=function audio_onerror(event){if(done)return;console.log(\"warning: browser could not fully decode audio \"+name+\", trying slower base64 approach\");function encode64(data){var BASE=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var PAD=\"=\";var ret=\"\";var leftchar=0;var leftbits=0;for(var i=0;i<data.length;i++){leftchar=leftchar<<8|data[i];leftbits+=8;while(leftbits>=6){var curr=leftchar>>leftbits-6&63;leftbits-=6;ret+=BASE[curr]}}if(leftbits==2){ret+=BASE[(leftchar&3)<<4];ret+=PAD+PAD}else if(leftbits==4){ret+=BASE[(leftchar&15)<<2];ret+=PAD}return ret}audio.src=\"data:audio/x-\"+name.substr(-3)+\";base64,\"+encode64(byteArray);finish(audio)};audio.src=url;Browser.safeSetTimeout((function(){finish(audio)}),1e4)}else{return fail()}};Module[\"preloadPlugins\"].push(audioPlugin);var canvas=Module[\"canvas\"];function pointerLockChange(){Browser.pointerLock=document[\"pointerLockElement\"]===canvas||document[\"mozPointerLockElement\"]===canvas||document[\"webkitPointerLockElement\"]===canvas||document[\"msPointerLockElement\"]===canvas}if(canvas){canvas.requestPointerLock=canvas[\"requestPointerLock\"]||canvas[\"mozRequestPointerLock\"]||canvas[\"webkitRequestPointerLock\"]||canvas[\"msRequestPointerLock\"]||(function(){});canvas.exitPointerLock=document[\"exitPointerLock\"]||document[\"mozExitPointerLock\"]||document[\"webkitExitPointerLock\"]||document[\"msExitPointerLock\"]||(function(){});canvas.exitPointerLock=canvas.exitPointerLock.bind(document);document.addEventListener(\"pointerlockchange\",pointerLockChange,false);document.addEventListener(\"mozpointerlockchange\",pointerLockChange,false);document.addEventListener(\"webkitpointerlockchange\",pointerLockChange,false);document.addEventListener(\"mspointerlockchange\",pointerLockChange,false);if(Module[\"elementPointerLock\"]){canvas.addEventListener(\"click\",(function(ev){if(!Browser.pointerLock&&canvas.requestPointerLock){canvas.requestPointerLock();ev.preventDefault()}}),false)}}}),createContext:(function(canvas,useWebGL,setInModule,webGLContextAttributes){if(useWebGL&&Module.ctx&&canvas==Module.canvas)return Module.ctx;var ctx;var contextHandle;if(useWebGL){var contextAttributes={antialias:false,alpha:false};if(webGLContextAttributes){for(var attribute in webGLContextAttributes){contextAttributes[attribute]=webGLContextAttributes[attribute]}}contextHandle=GL.createContext(canvas,contextAttributes);if(contextHandle){ctx=GL.getContext(contextHandle).GLctx}canvas.style.backgroundColor=\"black\"}else{ctx=canvas.getContext(\"2d\")}if(!ctx)return null;if(setInModule){if(!useWebGL)assert(typeof GLctx===\"undefined\",\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\");Module.ctx=ctx;if(useWebGL)GL.makeContextCurrent(contextHandle);Module.useWebGL=useWebGL;Browser.moduleContextCreatedCallbacks.forEach((function(callback){callback()}));Browser.init()}return ctx}),destroyContext:(function(canvas,useWebGL,setInModule){}),fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:(function(lockPointer,resizeCanvas,vrDevice){Browser.lockPointer=lockPointer;Browser.resizeCanvas=resizeCanvas;Browser.vrDevice=vrDevice;if(typeof Browser.lockPointer===\"undefined\")Browser.lockPointer=true;if(typeof Browser.resizeCanvas===\"undefined\")Browser.resizeCanvas=false;if(typeof Browser.vrDevice===\"undefined\")Browser.vrDevice=null;var canvas=Module[\"canvas\"];function fullScreenChange(){Browser.isFullScreen=false;var canvasContainer=canvas.parentNode;if((document[\"webkitFullScreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"mozFullscreenElement\"]||document[\"fullScreenElement\"]||document[\"fullscreenElement\"]||document[\"msFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvasContainer){canvas.cancelFullScreen=document[\"cancelFullScreen\"]||document[\"mozCancelFullScreen\"]||document[\"webkitCancelFullScreen\"]||document[\"msExitFullscreen\"]||document[\"exitFullscreen\"]||(function(){});canvas.cancelFullScreen=canvas.cancelFullScreen.bind(document);if(Browser.lockPointer)canvas.requestPointerLock();Browser.isFullScreen=true;if(Browser.resizeCanvas)Browser.setFullScreenCanvasSize()}else{canvasContainer.parentNode.insertBefore(canvas,canvasContainer);canvasContainer.parentNode.removeChild(canvasContainer);if(Browser.resizeCanvas)Browser.setWindowedCanvasSize()}if(Module[\"onFullScreen\"])Module[\"onFullScreen\"](Browser.isFullScreen);Browser.updateCanvasDimensions(canvas)}if(!Browser.fullScreenHandlersInstalled){Browser.fullScreenHandlersInstalled=true;document.addEventListener(\"fullscreenchange\",fullScreenChange,false);document.addEventListener(\"mozfullscreenchange\",fullScreenChange,false);document.addEventListener(\"webkitfullscreenchange\",fullScreenChange,false);document.addEventListener(\"MSFullscreenChange\",fullScreenChange,false)}var canvasContainer=document.createElement(\"div\");canvas.parentNode.insertBefore(canvasContainer,canvas);canvasContainer.appendChild(canvas);canvasContainer.requestFullScreen=canvasContainer[\"requestFullScreen\"]||canvasContainer[\"mozRequestFullScreen\"]||canvasContainer[\"msRequestFullscreen\"]||(canvasContainer[\"webkitRequestFullScreen\"]?(function(){canvasContainer[\"webkitRequestFullScreen\"](Element[\"ALLOW_KEYBOARD_INPUT\"])}):null);if(vrDevice){canvasContainer.requestFullScreen({vrDisplay:vrDevice})}else{canvasContainer.requestFullScreen()}}),nextRAF:0,fakeRequestAnimationFrame:(function(func){var now=Date.now();if(Browser.nextRAF===0){Browser.nextRAF=now+1e3/60}else{while(now+2>=Browser.nextRAF){Browser.nextRAF+=1e3/60}}var delay=Math.max(Browser.nextRAF-now,0);setTimeout(func,delay)}),requestAnimationFrame:function requestAnimationFrame(func){if(typeof window===\"undefined\"){Browser.fakeRequestAnimationFrame(func)}else{if(!window.requestAnimationFrame){window.requestAnimationFrame=window[\"requestAnimationFrame\"]||window[\"mozRequestAnimationFrame\"]||window[\"webkitRequestAnimationFrame\"]||window[\"msRequestAnimationFrame\"]||window[\"oRequestAnimationFrame\"]||Browser.fakeRequestAnimationFrame}window.requestAnimationFrame(func)}},safeCallback:(function(func){return(function(){if(!ABORT)return func.apply(null,arguments)})}),allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=false}),resumeAsyncCallbacks:(function(){Browser.allowAsyncCallbacks=true;if(Browser.queuedAsyncCallbacks.length>0){var callbacks=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[];callbacks.forEach((function(func){func()}))}}),safeRequestAnimationFrame:(function(func){return Browser.requestAnimationFrame((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}))}),safeSetTimeout:(function(func,timeout){Module[\"noExitRuntime\"]=true;return setTimeout((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}else{Browser.queuedAsyncCallbacks.push(func)}}),timeout)}),safeSetInterval:(function(func,timeout){Module[\"noExitRuntime\"]=true;return setInterval((function(){if(ABORT)return;if(Browser.allowAsyncCallbacks){func()}}),timeout)}),getMimetype:(function(name){return{\"jpg\":\"image/jpeg\",\"jpeg\":\"image/jpeg\",\"png\":\"image/png\",\"bmp\":\"image/bmp\",\"ogg\":\"audio/ogg\",\"wav\":\"audio/wav\",\"mp3\":\"audio/mpeg\"}[name.substr(name.lastIndexOf(\".\")+1)]}),getUserMedia:(function(func){if(!window.getUserMedia){window.getUserMedia=navigator[\"getUserMedia\"]||navigator[\"mozGetUserMedia\"]}window.getUserMedia(func)}),getMovementX:(function(event){return event[\"movementX\"]||event[\"mozMovementX\"]||event[\"webkitMovementX\"]||0}),getMovementY:(function(event){return event[\"movementY\"]||event[\"mozMovementY\"]||event[\"webkitMovementY\"]||0}),getMouseWheelDelta:(function(event){var delta=0;switch(event.type){case\"DOMMouseScroll\":delta=event.detail;break;case\"mousewheel\":delta=event.wheelDelta;break;case\"wheel\":delta=event[\"deltaY\"];break;default:throw\"unrecognized mouse wheel event: \"+event.type}return delta}),mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:(function(event){if(Browser.pointerLock){if(event.type!=\"mousemove\"&&\"mozMovementX\"in event){Browser.mouseMovementX=Browser.mouseMovementY=0}else{Browser.mouseMovementX=Browser.getMovementX(event);Browser.mouseMovementY=Browser.getMovementY(event)}if(typeof SDL!=\"undefined\"){Browser.mouseX=SDL.mouseX+Browser.mouseMovementX;Browser.mouseY=SDL.mouseY+Browser.mouseMovementY}else{Browser.mouseX+=Browser.mouseMovementX;Browser.mouseY+=Browser.mouseMovementY}}else{var rect=Module[\"canvas\"].getBoundingClientRect();var cw=Module[\"canvas\"].width;var ch=Module[\"canvas\"].height;var scrollX=typeof window.scrollX!==\"undefined\"?window.scrollX:window.pageXOffset;var scrollY=typeof window.scrollY!==\"undefined\"?window.scrollY:window.pageYOffset;if(event.type===\"touchstart\"||event.type===\"touchend\"||event.type===\"touchmove\"){var touch=event.touch;if(touch===undefined){return}var adjustedX=touch.pageX-(scrollX+rect.left);var adjustedY=touch.pageY-(scrollY+rect.top);adjustedX=adjustedX*(cw/rect.width);adjustedY=adjustedY*(ch/rect.height);var coords={x:adjustedX,y:adjustedY};if(event.type===\"touchstart\"){Browser.lastTouches[touch.identifier]=coords;Browser.touches[touch.identifier]=coords}else if(event.type===\"touchend\"||event.type===\"touchmove\"){var last=Browser.touches[touch.identifier];if(!last)last=coords;Browser.lastTouches[touch.identifier]=last;Browser.touches[touch.identifier]=coords}return}var x=event.pageX-(scrollX+rect.left);var y=event.pageY-(scrollY+rect.top);x=x*(cw/rect.width);y=y*(ch/rect.height);Browser.mouseMovementX=x-Browser.mouseX;Browser.mouseMovementY=y-Browser.mouseY;Browser.mouseX=x;Browser.mouseY=y}}),xhrLoad:(function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)}),asyncLoad:(function(url,onload,onerror,noRunDep){Browser.xhrLoad(url,(function(arrayBuffer){assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(!noRunDep)removeRunDependency(\"al \"+url)}),(function(event){if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}}));if(!noRunDep)addRunDependency(\"al \"+url)}),resizeListeners:[],updateResizeListeners:(function(){var canvas=Module[\"canvas\"];Browser.resizeListeners.forEach((function(listener){listener(canvas.width,canvas.height)}))}),setCanvasSize:(function(width,height,noUpdates){var canvas=Module[\"canvas\"];Browser.updateCanvasDimensions(canvas,width,height);if(!noUpdates)Browser.updateResizeListeners()}),windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:(function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags|8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),setWindowedCanvasSize:(function(){if(typeof SDL!=\"undefined\"){var flags=HEAPU32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2];flags=flags&~8388608;HEAP32[SDL.screen+Runtime.QUANTUM_SIZE*0>>2]=flags}Browser.updateResizeListeners()}),updateCanvasDimensions:(function(canvas,wNative,hNative){if(wNative&&hNative){canvas.widthNative=wNative;canvas.heightNative=hNative}else{wNative=canvas.widthNative;hNative=canvas.heightNative}var w=wNative;var h=hNative;if(Module[\"forcedAspectRatio\"]&&Module[\"forcedAspectRatio\"]>0){if(w/h<Module[\"forcedAspectRatio\"]){w=Math.round(h*Module[\"forcedAspectRatio\"])}else{h=Math.round(w/Module[\"forcedAspectRatio\"])}}if((document[\"webkitFullScreenElement\"]||document[\"webkitFullscreenElement\"]||document[\"mozFullScreenElement\"]||document[\"mozFullscreenElement\"]||document[\"fullScreenElement\"]||document[\"fullscreenElement\"]||document[\"msFullScreenElement\"]||document[\"msFullscreenElement\"]||document[\"webkitCurrentFullScreenElement\"])===canvas.parentNode&&typeof screen!=\"undefined\"){var factor=Math.min(screen.width/w,screen.height/h);w=Math.round(w*factor);h=Math.round(h*factor)}if(Browser.resizeCanvas){if(canvas.width!=w)canvas.width=w;if(canvas.height!=h)canvas.height=h;if(typeof canvas.style!=\"undefined\"){canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\")}}else{if(canvas.width!=wNative)canvas.width=wNative;if(canvas.height!=hNative)canvas.height=hNative;if(typeof canvas.style!=\"undefined\"){if(w!=wNative||h!=hNative){canvas.style.setProperty(\"width\",w+\"px\",\"important\");canvas.style.setProperty(\"height\",h+\"px\",\"important\")}else{canvas.style.removeProperty(\"width\");canvas.style.removeProperty(\"height\")}}}}),wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:(function(){var handle=Browser.nextWgetRequestHandle;Browser.nextWgetRequestHandle++;return handle})};function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___ctype_b_loc(){var me=___ctype_b_loc;if(!me.ret){var values=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var i16size=2;var arr=_malloc(values.length*i16size);for(var i=0;i<values.length;i++){HEAP16[arr+i*i16size>>1]=values[i]}me.ret=allocate([arr+128*i16size],\"i16*\",ALLOC_NORMAL)}return me.ret}function _freelocale(locale){_free(locale)}function ___cxa_allocate_exception(size){return _malloc(size)}Module[\"_i64Add\"]=_i64Add;function _catgets(catd,set_id,msg_id,s){return s}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function _catopen(name,oflag){return-1}function ___ctype_toupper_loc(){var me=___ctype_toupper_loc;if(!me.ret){var values=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var i32size=4;var arr=_malloc(values.length*i32size);for(var i=0;i<values.length;i++){HEAP32[arr+i*i32size>>2]=values[i]}me.ret=allocate([arr+128*i32size],\"i32*\",ALLOC_NORMAL)}return me.ret}function ___cxa_guard_acquire(variable){if(!HEAP8[variable>>0]){HEAP8[variable>>0]=1;return 1}return 0}function ___ctype_tolower_loc(){var me=___ctype_tolower_loc;if(!me.ret){var values=[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255];var i32size=4;var arr=_malloc(values.length*i32size);for(var i=0;i<values.length;i++){HEAP32[arr+i*i32size>>2]=values[i]}me.ret=allocate([arr+128*i32size],\"i32*\",ALLOC_NORMAL)}return me.ret}function ___cxa_begin_catch(ptr){__ZSt18uncaught_exceptionv.uncaught_exception--;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}Module[\"_bitshift64Shl\"]=_bitshift64Shl;function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]}));return[]}))}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function __emval_get_property(handle,key){handle=requireHandle(handle);key=requireHandle(key);return __emval_register(handle[key])}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]}));return[]}))}var ___dso_handle=allocate(1,\"i32*\",ALLOC_STATIC);embind_init_charCodes();init_emval();___errno_state=Runtime.staticAlloc(4);HEAP32[___errno_state>>2]=0;FS.staticInit();__ATINIT__.unshift((function(){if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));Module[\"FS_createFolder\"]=FS.createFolder;Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_createLazyFile\"]=FS.createLazyFile;Module[\"FS_createLink\"]=FS.createLink;Module[\"FS_createDevice\"]=FS.createDevice;__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var NODEJS_PATH=require(\"path\");NODEFS.staticInit()}BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");_fputc.ret=allocate([0],\"i8\",ALLOC_STATIC);__ATINIT__.push((function(){SOCKFS.root=FS.mount(SOCKFS,{},null)}));UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_ClassHandle();init_RegisteredPointer();init_embind();Module[\"requestFullScreen\"]=function Module_requestFullScreen(lockPointer,resizeCanvas,vrDevice){Browser.requestFullScreen(lockPointer,resizeCanvas,vrDevice)};Module[\"requestAnimationFrame\"]=function Module_requestAnimationFrame(func){Browser.requestAnimationFrame(func)};Module[\"setCanvasSize\"]=function Module_setCanvasSize(width,height,noUpdates){Browser.setCanvasSize(width,height,noUpdates)};Module[\"pauseMainLoop\"]=function Module_pauseMainLoop(){Browser.mainLoop.pause()};Module[\"resumeMainLoop\"]=function Module_resumeMainLoop(){Browser.mainLoop.resume()};Module[\"getUserMedia\"]=function Module_getUserMedia(){Browser.getUserMedia()};Module[\"createContext\"]=function Module_createContext(canvas,useWebGL,setInModule,webGLContextAttributes){return Browser.createContext(canvas,useWebGL,setInModule,webGLContextAttributes)};STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=true;STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);assert(DYNAMIC_BASE<TOTAL_MEMORY,\"TOTAL_MEMORY not big enough for stack\");var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],\"i8\",ALLOC_DYNAMIC);function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{return Module[\"dynCall_iiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiii(index,a1,a2,a3){try{return Module[\"dynCall_iiii\"](index,a1,a2,a3)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module[\"dynCall_viiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module[\"dynCall_viiiii\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6){try{return Module[\"dynCall_iiiiiid\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_i(index){try{return Module[\"dynCall_i\"](index)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_vi(index,a1){try{Module[\"dynCall_vi\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_vii(index,a1,a2){try{Module[\"dynCall_vii\"](index,a1,a2)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module[\"dynCall_iiiiiii\"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_ii(index,a1){try{return Module[\"dynCall_ii\"](index,a1)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_viii(index,a1,a2,a3){try{Module[\"dynCall_viii\"](index,a1,a2,a3)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_v(index){try{Module[\"dynCall_v\"](index)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module[\"dynCall_iiiiiiiii\"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module[\"dynCall_iiiii\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module[\"dynCall_viiii\"](index,a1,a2,a3,a4)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iii(index,a1,a2){try{return Module[\"dynCall_iii\"](index,a1,a2)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiiid(index,a1,a2,a3,a4,a5){try{return Module[\"dynCall_iiiiid\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){try{return Module[\"dynCall_iiiiii\"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!==\"number\"&&e!==\"longjmp\")throw e;asm[\"setThrew\"](1,0)}}Module.asmGlobalArg={\"Math\":Math,\"Int8Array\":Int8Array,\"Int16Array\":Int16Array,\"Int32Array\":Int32Array,\"Uint8Array\":Uint8Array,\"Uint16Array\":Uint16Array,\"Uint32Array\":Uint32Array,\"Float32Array\":Float32Array,\"Float64Array\":Float64Array,\"NaN\":NaN,\"Infinity\":Infinity};Module.asmLibraryArg={\"abort\":abort,\"assert\":assert,\"invoke_iiiiiiii\":invoke_iiiiiiii,\"invoke_iiii\":invoke_iiii,\"invoke_viiiiii\":invoke_viiiiii,\"invoke_viiiii\":invoke_viiiii,\"invoke_iiiiiid\":invoke_iiiiiid,\"invoke_i\":invoke_i,\"invoke_vi\":invoke_vi,\"invoke_vii\":invoke_vii,\"invoke_iiiiiii\":invoke_iiiiiii,\"invoke_ii\":invoke_ii,\"invoke_viii\":invoke_viii,\"invoke_v\":invoke_v,\"invoke_iiiiiiiii\":invoke_iiiiiiiii,\"invoke_iiiii\":invoke_iiiii,\"invoke_viiii\":invoke_viiii,\"invoke_iii\":invoke_iii,\"invoke_iiiiid\":invoke_iiiiid,\"invoke_iiiiii\":invoke_iiiiii,\"_fabs\":_fabs,\"floatReadValueFromPointer\":floatReadValueFromPointer,\"simpleReadValueFromPointer\":simpleReadValueFromPointer,\"_pthread_key_create\":_pthread_key_create,\"throwInternalError\":throwInternalError,\"get_first_emval\":get_first_emval,\"___cxa_guard_acquire\":___cxa_guard_acquire,\"getLiveInheritedInstances\":getLiveInheritedInstances,\"___assert_fail\":___assert_fail,\"__ZSt18uncaught_exceptionv\":__ZSt18uncaught_exceptionv,\"ClassHandle\":ClassHandle,\"getShiftFromSize\":getShiftFromSize,\"__emval_get_property\":__emval_get_property,\"__addDays\":__addDays,\"_emscripten_set_main_loop_timing\":_emscripten_set_main_loop_timing,\"_sbrk\":_sbrk,\"___cxa_begin_catch\":___cxa_begin_catch,\"_emscripten_memcpy_big\":_emscripten_memcpy_big,\"runDestructor\":runDestructor,\"_sysconf\":_sysconf,\"throwInstanceAlreadyDeleted\":throwInstanceAlreadyDeleted,\"_close\":_close,\"init_RegisteredPointer\":init_RegisteredPointer,\"ClassHandle_isAliasOf\":ClassHandle_isAliasOf,\"_fileno\":_fileno,\"flushPendingDeletes\":flushPendingDeletes,\"_fread\":_fread,\"makeClassHandle\":makeClassHandle,\"whenDependentTypesAreResolved\":whenDependentTypesAreResolved,\"_write\":_write,\"__isLeapYear\":__isLeapYear,\"__embind_register_class_constructor\":__embind_register_class_constructor,\"___cxa_atexit\":___cxa_atexit,\"init_ClassHandle\":init_ClassHandle,\"_catclose\":_catclose,\"ClassHandle_clone\":ClassHandle_clone,\"___ctype_tolower_loc\":___ctype_tolower_loc,\"_send\":_send,\"throwBindingError\":throwBindingError,\"RegisteredClass\":RegisteredClass,\"___cxa_find_matching_catch\":___cxa_find_matching_catch,\"__embind_register_emval\":__embind_register_emval,\"__emval_as\":__emval_as,\"_strerror_r\":_strerror_r,\"__reallyNegative\":__reallyNegative,\"___setErrNo\":___setErrNo,\"readLatin1String\":readLatin1String,\"_newlocale\":_newlocale,\"__embind_register_bool\":__embind_register_bool,\"___resumeException\":___resumeException,\"_freelocale\":_freelocale,\"createNamedFunction\":createNamedFunction,\"embind_init_charCodes\":embind_init_charCodes,\"__emval_decref\":__emval_decref,\"_pthread_once\":_pthread_once,\"_pthread_mutex_unlock\":_pthread_mutex_unlock,\"___ctype_toupper_loc\":___ctype_toupper_loc,\"init_embind\":init_embind,\"constNoSmartPtrRawPointerToWireType\":constNoSmartPtrRawPointerToWireType,\"heap32VectorToArray\":heap32VectorToArray,\"__emval_run_destructors\":__emval_run_destructors,\"ClassHandle_delete\":ClassHandle_delete,\"_mkport\":_mkport,\"_read\":_read,\"RegisteredPointer_destructor\":RegisteredPointer_destructor,\"_fwrite\":_fwrite,\"_time\":_time,\"_fprintf\":_fprintf,\"_gettimeofday\":_gettimeofday,\"new_\":new_,\"downcastPointer\":downcastPointer,\"_catopen\":_catopen,\"replacePublicSymbol\":replacePublicSymbol,\"__embind_register_class\":__embind_register_class,\"ClassHandle_deleteLater\":ClassHandle_deleteLater,\"__embind_register_integer\":__embind_register_integer,\"___ctype_b_loc\":___ctype_b_loc,\"RegisteredPointer_deleteObject\":RegisteredPointer_deleteObject,\"ClassHandle_isDeleted\":ClassHandle_isDeleted,\"_vfprintf\":_vfprintf,\"__emval_incref\":__emval_incref,\"___cxa_allocate_exception\":___cxa_allocate_exception,\"__emval_take_value\":__emval_take_value,\"_pwrite\":_pwrite,\"_open\":_open,\"_uselocale\":_uselocale,\"enumReadValueFromPointer\":enumReadValueFromPointer,\"getTypeName\":getTypeName,\"_strftime\":_strftime,\"throwUnboundTypeError\":throwUnboundTypeError,\"craftInvokerFunction\":craftInvokerFunction,\"_fclose\":_fclose,\"runDestructors\":runDestructors,\"requireRegisteredType\":requireRegisteredType,\"makeLegalFunctionName\":makeLegalFunctionName,\"_log\":_log,\"upcastPointer\":upcastPointer,\"init_emval\":init_emval,\"_pthread_cond_broadcast\":_pthread_cond_broadcast,\"shallowCopyInternalPointer\":shallowCopyInternalPointer,\"nonConstNoSmartPtrRawPointerToWireType\":nonConstNoSmartPtrRawPointerToWireType,\"_recv\":_recv,\"getStringOrSymbol\":getStringOrSymbol,\"registerType\":registerType,\"_abort\":_abort,\"requireHandle\":requireHandle,\"_ceil\":_ceil,\"_fopen\":_fopen,\"__embind_register_std_string\":__embind_register_std_string,\"_pthread_getspecific\":_pthread_getspecific,\"_pthread_cond_wait\":_pthread_cond_wait,\"RegisteredPointer_fromWireType\":RegisteredPointer_fromWireType,\"__embind_register_memory_view\":__embind_register_memory_view,\"getInheritedInstance\":getInheritedInstance,\"setDelayFunction\":setDelayFunction,\"extendError\":extendError,\"ensureOverloadTable\":ensureOverloadTable,\"__embind_register_void\":__embind_register_void,\"_fflush\":_fflush,\"_strftime_l\":_strftime_l,\"_pthread_mutex_lock\":_pthread_mutex_lock,\"RegisteredPointer_getPointee\":RegisteredPointer_getPointee,\"__emval_register\":__emval_register,\"_catgets\":_catgets,\"__embind_register_std_wstring\":__embind_register_std_wstring,\"__embind_register_class_function\":__embind_register_class_function,\"_embind_repr\":_embind_repr,\"RegisteredPointer\":RegisteredPointer,\"__arraySum\":__arraySum,\"__embind_register_class_class_function\":__embind_register_class_class_function,\"getBasestPointer\":getBasestPointer,\"_pread\":_pread,\"getInheritedInstanceCount\":getInheritedInstanceCount,\"__embind_register_float\":__embind_register_float,\"integerReadValueFromPointer\":integerReadValueFromPointer,\"__embind_register_enum_value\":__embind_register_enum_value,\"_emscripten_set_main_loop\":_emscripten_set_main_loop,\"___errno_location\":___errno_location,\"___cxa_guard_release\":___cxa_guard_release,\"_pthread_setspecific\":_pthread_setspecific,\"genericPointerToWireType\":genericPointerToWireType,\"_fputc\":_fputc,\"___cxa_throw\":___cxa_throw,\"__embind_register_enum\":__embind_register_enum,\"__emval_new_cstring\":__emval_new_cstring,\"count_emval_handles\":count_emval_handles,\"requireFunction\":requireFunction,\"_strerror\":_strerror,\"__formatString\":__formatString,\"_atexit\":_atexit,\"exposePublicSymbol\":exposePublicSymbol,\"STACKTOP\":STACKTOP,\"STACK_MAX\":STACK_MAX,\"tempDoublePtr\":tempDoublePtr,\"ABORT\":ABORT,\"cttz_i8\":cttz_i8,\"___dso_handle\":___dso_handle,\"_stderr\":_stderr};// EMSCRIPTEN_START_ASM\nvar asm=(function(global,env,buffer) {\n\"use asm\";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.___dso_handle|0;var o=env._stderr|0;var p=0;var q=0;var r=0;var s=0;var t=global.NaN,u=global.Infinity;var v=0,w=0,x=0,y=0,z=0.0,A=0,B=0,C=0,D=0.0;var E=0;var F=0;var G=0;var H=0;var I=0;var J=0;var K=0;var L=0;var M=0;var N=0;var O=global.Math.floor;var P=global.Math.abs;var Q=global.Math.sqrt;var R=global.Math.pow;var S=global.Math.cos;var T=global.Math.sin;var U=global.Math.tan;var V=global.Math.acos;var W=global.Math.asin;var X=global.Math.atan;var Y=global.Math.atan2;var Z=global.Math.exp;var _=global.Math.log;var $=global.Math.ceil;var aa=global.Math.imul;var ba=global.Math.min;var ca=global.Math.clz32;var da=env.abort;var ea=env.assert;var fa=env.invoke_iiiiiiii;var ga=env.invoke_iiii;var ha=env.invoke_viiiiii;var ia=env.invoke_viiiii;var ja=env.invoke_iiiiiid;var ka=env.invoke_i;var la=env.invoke_vi;var ma=env.invoke_vii;var na=env.invoke_iiiiiii;var oa=env.invoke_ii;var pa=env.invoke_viii;var qa=env.invoke_v;var ra=env.invoke_iiiiiiiii;var sa=env.invoke_iiiii;var ta=env.invoke_viiii;var ua=env.invoke_iii;var va=env.invoke_iiiiid;var wa=env.invoke_iiiiii;var xa=env._fabs;var ya=env.floatReadValueFromPointer;var za=env.simpleReadValueFromPointer;var Aa=env._pthread_key_create;var Ba=env.throwInternalError;var Ca=env.get_first_emval;var Da=env.___cxa_guard_acquire;var Ea=env.getLiveInheritedInstances;var Fa=env.___assert_fail;var Ga=env.__ZSt18uncaught_exceptionv;var Ha=env.ClassHandle;var Ia=env.getShiftFromSize;var Ja=env.__emval_get_property;var Ka=env.__addDays;var La=env._emscripten_set_main_loop_timing;var Ma=env._sbrk;var Na=env.___cxa_begin_catch;var Oa=env._emscripten_memcpy_big;var Pa=env.runDestructor;var Qa=env._sysconf;var Ra=env.throwInstanceAlreadyDeleted;var Sa=env._close;var Ta=env.init_RegisteredPointer;var Ua=env.ClassHandle_isAliasOf;var Va=env._fileno;var Wa=env.flushPendingDeletes;var Xa=env._fread;var Ya=env.makeClassHandle;var Za=env.whenDependentTypesAreResolved;var _a=env._write;var $a=env.__isLeapYear;var ab=env.__embind_register_class_constructor;var bb=env.___cxa_atexit;var cb=env.init_ClassHandle;var db=env._catclose;var eb=env.ClassHandle_clone;var fb=env.___ctype_tolower_loc;var gb=env._send;var hb=env.throwBindingError;var ib=env.RegisteredClass;var jb=env.___cxa_find_matching_catch;var kb=env.__embind_register_emval;var lb=env.__emval_as;var mb=env._strerror_r;var nb=env.__reallyNegative;var ob=env.___setErrNo;var pb=env.readLatin1String;var qb=env._newlocale;var rb=env.__embind_register_bool;var sb=env.___resumeException;var tb=env._freelocale;var ub=env.createNamedFunction;var vb=env.embind_init_charCodes;var wb=env.__emval_decref;var xb=env._pthread_once;var yb=env._pthread_mutex_unlock;var zb=env.___ctype_toupper_loc;var Ab=env.init_embind;var Bb=env.constNoSmartPtrRawPointerToWireType;var Cb=env.heap32VectorToArray;var Db=env.__emval_run_destructors;var Eb=env.ClassHandle_delete;var Fb=env._mkport;var Gb=env._read;var Hb=env.RegisteredPointer_destructor;var Ib=env._fwrite;var Jb=env._time;var Kb=env._fprintf;var Lb=env._gettimeofday;var Mb=env.new_;var Nb=env.downcastPointer;var Ob=env._catopen;var Pb=env.replacePublicSymbol;var Qb=env.__embind_register_class;var Rb=env.ClassHandle_deleteLater;var Sb=env.__embind_register_integer;var Tb=env.___ctype_b_loc;var Ub=env.RegisteredPointer_deleteObject;var Vb=env.ClassHandle_isDeleted;var Wb=env._vfprintf;var Xb=env.__emval_incref;var Yb=env.___cxa_allocate_exception;var Zb=env.__emval_take_value;var _b=env._pwrite;var $b=env._open;var ac=env._uselocale;var bc=env.enumReadValueFromPointer;var cc=env.getTypeName;var dc=env._strftime;var ec=env.throwUnboundTypeError;var fc=env.craftInvokerFunction;var gc=env._fclose;var hc=env.runDestructors;var ic=env.requireRegisteredType;var jc=env.makeLegalFunctionName;var kc=env._log;var lc=env.upcastPointer;var mc=env.init_emval;var nc=env._pthread_cond_broadcast;var oc=env.shallowCopyInternalPointer;var pc=env.nonConstNoSmartPtrRawPointerToWireType;var qc=env._recv;var rc=env.getStringOrSymbol;var sc=env.registerType;var tc=env._abort;var uc=env.requireHandle;var vc=env._ceil;var wc=env._fopen;var xc=env.__embind_register_std_string;var yc=env._pthread_getspecific;var zc=env._pthread_cond_wait;var Ac=env.RegisteredPointer_fromWireType;var Bc=env.__embind_register_memory_view;var Cc=env.getInheritedInstance;var Dc=env.setDelayFunction;var Ec=env.extendError;var Fc=env.ensureOverloadTable;var Gc=env.__embind_register_void;var Hc=env._fflush;var Ic=env._strftime_l;var Jc=env._pthread_mutex_lock;var Kc=env.RegisteredPointer_getPointee;var Lc=env.__emval_register;var Mc=env._catgets;var Nc=env.__embind_register_std_wstring;var Oc=env.__embind_register_class_function;var Pc=env._embind_repr;var Qc=env.RegisteredPointer;var Rc=env.__arraySum;var Sc=env.__embind_register_class_class_function;var Tc=env.getBasestPointer;var Uc=env._pread;var Vc=env.getInheritedInstanceCount;var Wc=env.__embind_register_float;var Xc=env.integerReadValueFromPointer;var Yc=env.__embind_register_enum_value;var Zc=env._emscripten_set_main_loop;var _c=env.___errno_location;var $c=env.___cxa_guard_release;var ad=env._pthread_setspecific;var bd=env.genericPointerToWireType;var cd=env._fputc;var dd=env.___cxa_throw;var ed=env.__embind_register_enum;var fd=env.__emval_new_cstring;var gd=env.count_emval_handles;var hd=env.requireFunction;var id=env._strerror;var jd=env.__formatString;var kd=env._atexit;var ld=env.exposePublicSymbol;var md=0.0;\n// EMSCRIPTEN_START_FUNCS\nfunction Dv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0;e=c[b>>2]|0;f=c[b+4>>2]|0;g=c[b+8>>2]|0;h=c[b+12>>2]|0;i=c[b+16>>2]|0;j=c[b+20>>2]|0;k=c[b+24>>2]|0;l=c[b+28>>2]|0;m=c[b+32>>2]|0;n=c[b+36>>2]|0;b=c[d>>2]|0;o=c[d+4>>2]|0;p=c[d+8>>2]|0;q=c[d+12>>2]|0;r=c[d+16>>2]|0;s=c[d+20>>2]|0;t=c[d+24>>2]|0;u=c[d+28>>2]|0;v=c[d+32>>2]|0;w=c[d+36>>2]|0;d=o*19|0;x=p*19|0;y=q*19|0;z=r*19|0;A=s*19|0;B=t*19|0;C=u*19|0;D=v*19|0;F=w*19|0;G=f<<1;H=h<<1;I=j<<1;J=l<<1;K=n<<1;L=((e|0)<0)<<31>>31;M=((b|0)<0)<<31>>31;N=IH(b|0,M|0,e|0,L|0)|0;O=E;P=((o|0)<0)<<31>>31;Q=IH(o|0,P|0,e|0,L|0)|0;R=E;S=((p|0)<0)<<31>>31;T=IH(p|0,S|0,e|0,L|0)|0;U=E;V=((q|0)<0)<<31>>31;W=IH(q|0,V|0,e|0,L|0)|0;X=E;Y=((r|0)<0)<<31>>31;Z=IH(r|0,Y|0,e|0,L|0)|0;_=E;$=((s|0)<0)<<31>>31;aa=IH(s|0,$|0,e|0,L|0)|0;ba=E;ca=((t|0)<0)<<31>>31;da=IH(t|0,ca|0,e|0,L|0)|0;ea=E;fa=((u|0)<0)<<31>>31;ga=IH(u|0,fa|0,e|0,L|0)|0;ha=E;ia=((v|0)<0)<<31>>31;ja=IH(v|0,ia|0,e|0,L|0)|0;ka=E;la=IH(w|0,((w|0)<0)<<31>>31|0,e|0,L|0)|0;L=E;e=((f|0)<0)<<31>>31;w=IH(b|0,M|0,f|0,e|0)|0;ma=E;na=((G|0)<0)<<31>>31;oa=IH(o|0,P|0,G|0,na|0)|0;pa=E;qa=IH(p|0,S|0,f|0,e|0)|0;ra=E;sa=IH(q|0,V|0,G|0,na|0)|0;ta=E;ua=IH(r|0,Y|0,f|0,e|0)|0;va=E;wa=IH(s|0,$|0,G|0,na|0)|0;xa=E;ya=IH(t|0,ca|0,f|0,e|0)|0;za=E;Aa=IH(u|0,fa|0,G|0,na|0)|0;Ba=E;Ca=IH(v|0,ia|0,f|0,e|0)|0;e=E;f=((F|0)<0)<<31>>31;ia=IH(F|0,f|0,G|0,na|0)|0;na=E;G=((g|0)<0)<<31>>31;v=IH(b|0,M|0,g|0,G|0)|0;Da=E;Ea=IH(o|0,P|0,g|0,G|0)|0;Fa=E;Ga=IH(p|0,S|0,g|0,G|0)|0;Ha=E;Ia=IH(q|0,V|0,g|0,G|0)|0;Ja=E;Ka=IH(r|0,Y|0,g|0,G|0)|0;La=E;Ma=IH(s|0,$|0,g|0,G|0)|0;Na=E;Oa=IH(t|0,ca|0,g|0,G|0)|0;Pa=E;Qa=IH(u|0,fa|0,g|0,G|0)|0;fa=E;u=((D|0)<0)<<31>>31;Ra=IH(D|0,u|0,g|0,G|0)|0;Sa=E;Ta=IH(F|0,f|0,g|0,G|0)|0;G=E;g=((h|0)<0)<<31>>31;Ua=IH(b|0,M|0,h|0,g|0)|0;Va=E;Wa=((H|0)<0)<<31>>31;Xa=IH(o|0,P|0,H|0,Wa|0)|0;Ya=E;Za=IH(p|0,S|0,h|0,g|0)|0;_a=E;$a=IH(q|0,V|0,H|0,Wa|0)|0;ab=E;bb=IH(r|0,Y|0,h|0,g|0)|0;cb=E;db=IH(s|0,$|0,H|0,Wa|0)|0;eb=E;fb=IH(t|0,ca|0,h|0,g|0)|0;ca=E;t=((C|0)<0)<<31>>31;gb=IH(C|0,t|0,H|0,Wa|0)|0;hb=E;ib=IH(D|0,u|0,h|0,g|0)|0;g=E;h=IH(F|0,f|0,H|0,Wa|0)|0;Wa=E;H=((i|0)<0)<<31>>31;jb=IH(b|0,M|0,i|0,H|0)|0;kb=E;lb=IH(o|0,P|0,i|0,H|0)|0;mb=E;nb=IH(p|0,S|0,i|0,H|0)|0;ob=E;pb=IH(q|0,V|0,i|0,H|0)|0;qb=E;rb=IH(r|0,Y|0,i|0,H|0)|0;sb=E;tb=IH(s|0,$|0,i|0,H|0)|0;$=E;s=((B|0)<0)<<31>>31;ub=IH(B|0,s|0,i|0,H|0)|0;vb=E;wb=IH(C|0,t|0,i|0,H|0)|0;xb=E;yb=IH(D|0,u|0,i|0,H|0)|0;zb=E;Ab=IH(F|0,f|0,i|0,H|0)|0;H=E;i=((j|0)<0)<<31>>31;Bb=IH(b|0,M|0,j|0,i|0)|0;Cb=E;Db=((I|0)<0)<<31>>31;Eb=IH(o|0,P|0,I|0,Db|0)|0;Fb=E;Gb=IH(p|0,S|0,j|0,i|0)|0;Hb=E;Ib=IH(q|0,V|0,I|0,Db|0)|0;Jb=E;Kb=IH(r|0,Y|0,j|0,i|0)|0;Y=E;r=((A|0)<0)<<31>>31;Lb=IH(A|0,r|0,I|0,Db|0)|0;Mb=E;Nb=IH(B|0,s|0,j|0,i|0)|0;Ob=E;Pb=IH(C|0,t|0,I|0,Db|0)|0;Qb=E;Rb=IH(D|0,u|0,j|0,i|0)|0;i=E;j=IH(F|0,f|0,I|0,Db|0)|0;Db=E;I=((k|0)<0)<<31>>31;Sb=IH(b|0,M|0,k|0,I|0)|0;Tb=E;Ub=IH(o|0,P|0,k|0,I|0)|0;Vb=E;Wb=IH(p|0,S|0,k|0,I|0)|0;Xb=E;Yb=IH(q|0,V|0,k|0,I|0)|0;V=E;q=((z|0)<0)<<31>>31;Zb=IH(z|0,q|0,k|0,I|0)|0;_b=E;$b=IH(A|0,r|0,k|0,I|0)|0;ac=E;bc=IH(B|0,s|0,k|0,I|0)|0;cc=E;dc=IH(C|0,t|0,k|0,I|0)|0;ec=E;fc=IH(D|0,u|0,k|0,I|0)|0;gc=E;hc=IH(F|0,f|0,k|0,I|0)|0;I=E;k=((l|0)<0)<<31>>31;ic=IH(b|0,M|0,l|0,k|0)|0;jc=E;kc=((J|0)<0)<<31>>31;lc=IH(o|0,P|0,J|0,kc|0)|0;mc=E;nc=IH(p|0,S|0,l|0,k|0)|0;S=E;p=((y|0)<0)<<31>>31;oc=IH(y|0,p|0,J|0,kc|0)|0;pc=E;qc=IH(z|0,q|0,l|0,k|0)|0;rc=E;sc=IH(A|0,r|0,J|0,kc|0)|0;tc=E;uc=IH(B|0,s|0,l|0,k|0)|0;vc=E;wc=IH(C|0,t|0,J|0,kc|0)|0;xc=E;yc=IH(D|0,u|0,l|0,k|0)|0;k=E;l=IH(F|0,f|0,J|0,kc|0)|0;kc=E;J=((m|0)<0)<<31>>31;zc=IH(b|0,M|0,m|0,J|0)|0;Ac=E;Bc=IH(o|0,P|0,m|0,J|0)|0;P=E;o=((x|0)<0)<<31>>31;Cc=IH(x|0,o|0,m|0,J|0)|0;Dc=E;Ec=IH(y|0,p|0,m|0,J|0)|0;Fc=E;Gc=IH(z|0,q|0,m|0,J|0)|0;Hc=E;Ic=IH(A|0,r|0,m|0,J|0)|0;Jc=E;Kc=IH(B|0,s|0,m|0,J|0)|0;Lc=E;Mc=IH(C|0,t|0,m|0,J|0)|0;Nc=E;Oc=IH(D|0,u|0,m|0,J|0)|0;Pc=E;Qc=IH(F|0,f|0,m|0,J|0)|0;J=E;m=((n|0)<0)<<31>>31;Rc=IH(b|0,M|0,n|0,m|0)|0;M=E;b=((K|0)<0)<<31>>31;Sc=IH(d|0,((d|0)<0)<<31>>31|0,K|0,b|0)|0;d=E;Tc=IH(x|0,o|0,n|0,m|0)|0;o=E;x=IH(y|0,p|0,K|0,b|0)|0;p=E;y=IH(z|0,q|0,n|0,m|0)|0;q=E;z=IH(A|0,r|0,K|0,b|0)|0;r=E;A=IH(B|0,s|0,n|0,m|0)|0;s=E;B=IH(C|0,t|0,K|0,b|0)|0;t=E;C=IH(D|0,u|0,n|0,m|0)|0;m=E;n=IH(F|0,f|0,K|0,b|0)|0;b=E;K=CH(Sc|0,d|0,N|0,O|0)|0;O=CH(K|0,E|0,Cc|0,Dc|0)|0;Dc=CH(O|0,E|0,oc|0,pc|0)|0;pc=CH(Dc|0,E|0,Zb|0,_b|0)|0;_b=CH(pc|0,E|0,Lb|0,Mb|0)|0;Mb=CH(_b|0,E|0,ub|0,vb|0)|0;vb=CH(Mb|0,E|0,gb|0,hb|0)|0;hb=CH(vb|0,E|0,Ra|0,Sa|0)|0;Sa=CH(hb|0,E|0,ia|0,na|0)|0;na=E;ia=CH(Q|0,R|0,w|0,ma|0)|0;ma=E;w=CH(Xa|0,Ya|0,jb|0,kb|0)|0;kb=CH(w|0,E|0,Ga|0,Ha|0)|0;Ha=CH(kb|0,E|0,sa|0,ta|0)|0;ta=CH(Ha|0,E|0,Z|0,_|0)|0;_=CH(ta|0,E|0,z|0,r|0)|0;r=CH(_|0,E|0,Kc|0,Lc|0)|0;Lc=CH(r|0,E|0,wc|0,xc|0)|0;xc=CH(Lc|0,E|0,fc|0,gc|0)|0;gc=CH(xc|0,E|0,j|0,Db|0)|0;Db=E;j=CH(Sa|0,na|0,33554432,0)|0;xc=wH(j|0,E|0,26)|0;j=E;fc=CH(ia|0,ma|0,Tc|0,o|0)|0;o=CH(fc|0,E|0,Ec|0,Fc|0)|0;Fc=CH(o|0,E|0,qc|0,rc|0)|0;rc=CH(Fc|0,E|0,$b|0,ac|0)|0;ac=CH(rc|0,E|0,Nb|0,Ob|0)|0;Ob=CH(ac|0,E|0,wb|0,xb|0)|0;xb=CH(Ob|0,E|0,ib|0,g|0)|0;g=CH(xb|0,E|0,Ta|0,G|0)|0;G=CH(g|0,E|0,xc|0,j|0)|0;g=E;Ta=DH(xc|0,j|0,26)|0;j=vH(Sa|0,na|0,Ta|0,E|0)|0;Ta=E;na=CH(gc|0,Db|0,33554432,0)|0;Sa=wH(na|0,E|0,26)|0;na=E;xc=CH(lb|0,mb|0,Bb|0,Cb|0)|0;Cb=CH(xc|0,E|0,Za|0,_a|0)|0;_a=CH(Cb|0,E|0,Ia|0,Ja|0)|0;Ja=CH(_a|0,E|0,ua|0,va|0)|0;va=CH(Ja|0,E|0,aa|0,ba|0)|0;ba=CH(va|0,E|0,A|0,s|0)|0;s=CH(ba|0,E|0,Mc|0,Nc|0)|0;Nc=CH(s|0,E|0,yc|0,k|0)|0;k=CH(Nc|0,E|0,hc|0,I|0)|0;I=CH(k|0,E|0,Sa|0,na|0)|0;k=E;hc=DH(Sa|0,na|0,26)|0;na=vH(gc|0,Db|0,hc|0,E|0)|0;hc=E;Db=CH(G|0,g|0,16777216,0)|0;gc=wH(Db|0,E|0,25)|0;Db=E;Sa=CH(oa|0,pa|0,v|0,Da|0)|0;Da=CH(Sa|0,E|0,T|0,U|0)|0;U=CH(Da|0,E|0,x|0,p|0)|0;p=CH(U|0,E|0,Gc|0,Hc|0)|0;Hc=CH(p|0,E|0,sc|0,tc|0)|0;tc=CH(Hc|0,E|0,bc|0,cc|0)|0;cc=CH(tc|0,E|0,Pb|0,Qb|0)|0;Qb=CH(cc|0,E|0,yb|0,zb|0)|0;zb=CH(Qb|0,E|0,h|0,Wa|0)|0;Wa=CH(zb|0,E|0,gc|0,Db|0)|0;zb=E;h=DH(gc|0,Db|0,25)|0;Db=vH(G|0,g|0,h|0,E|0)|0;h=E;g=CH(I|0,k|0,16777216,0)|0;G=wH(g|0,E|0,25)|0;g=E;gc=CH(Eb|0,Fb|0,Sb|0,Tb|0)|0;Tb=CH(gc|0,E|0,nb|0,ob|0)|0;ob=CH(Tb|0,E|0,$a|0,ab|0)|0;ab=CH(ob|0,E|0,Ka|0,La|0)|0;La=CH(ab|0,E|0,wa|0,xa|0)|0;xa=CH(La|0,E|0,da|0,ea|0)|0;ea=CH(xa|0,E|0,B|0,t|0)|0;t=CH(ea|0,E|0,Oc|0,Pc|0)|0;Pc=CH(t|0,E|0,l|0,kc|0)|0;kc=CH(Pc|0,E|0,G|0,g|0)|0;Pc=E;l=DH(G|0,g|0,25)|0;g=vH(I|0,k|0,l|0,E|0)|0;l=E;k=CH(Wa|0,zb|0,33554432,0)|0;I=wH(k|0,E|0,26)|0;k=E;G=CH(Ea|0,Fa|0,Ua|0,Va|0)|0;Va=CH(G|0,E|0,qa|0,ra|0)|0;ra=CH(Va|0,E|0,W|0,X|0)|0;X=CH(ra|0,E|0,y|0,q|0)|0;q=CH(X|0,E|0,Ic|0,Jc|0)|0;Jc=CH(q|0,E|0,uc|0,vc|0)|0;vc=CH(Jc|0,E|0,dc|0,ec|0)|0;ec=CH(vc|0,E|0,Rb|0,i|0)|0;i=CH(ec|0,E|0,Ab|0,H|0)|0;H=CH(i|0,E|0,I|0,k|0)|0;i=E;Ab=DH(I|0,k|0,26)|0;k=vH(Wa|0,zb|0,Ab|0,E|0)|0;Ab=CH(kc|0,Pc|0,33554432,0)|0;zb=wH(Ab|0,E|0,26)|0;Ab=E;Wa=CH(Ub|0,Vb|0,ic|0,jc|0)|0;jc=CH(Wa|0,E|0,Gb|0,Hb|0)|0;Hb=CH(jc|0,E|0,pb|0,qb|0)|0;qb=CH(Hb|0,E|0,bb|0,cb|0)|0;cb=CH(qb|0,E|0,Ma|0,Na|0)|0;Na=CH(cb|0,E|0,ya|0,za|0)|0;za=CH(Na|0,E|0,ga|0,ha|0)|0;ha=CH(za|0,E|0,C|0,m|0)|0;m=CH(ha|0,E|0,Qc|0,J|0)|0;J=CH(m|0,E|0,zb|0,Ab|0)|0;m=E;Qc=DH(zb|0,Ab|0,26)|0;Ab=vH(kc|0,Pc|0,Qc|0,E|0)|0;Qc=CH(H|0,i|0,16777216,0)|0;Pc=wH(Qc|0,E|0,25)|0;Qc=E;kc=CH(Pc|0,Qc|0,na|0,hc|0)|0;hc=E;na=DH(Pc|0,Qc|0,25)|0;Qc=vH(H|0,i|0,na|0,E|0)|0;na=CH(J|0,m|0,16777216,0)|0;i=wH(na|0,E|0,25)|0;na=E;H=CH(lc|0,mc|0,zc|0,Ac|0)|0;Ac=CH(H|0,E|0,Wb|0,Xb|0)|0;Xb=CH(Ac|0,E|0,Ib|0,Jb|0)|0;Jb=CH(Xb|0,E|0,rb|0,sb|0)|0;sb=CH(Jb|0,E|0,db|0,eb|0)|0;eb=CH(sb|0,E|0,Oa|0,Pa|0)|0;Pa=CH(eb|0,E|0,Aa|0,Ba|0)|0;Ba=CH(Pa|0,E|0,ja|0,ka|0)|0;ka=CH(Ba|0,E|0,n|0,b|0)|0;b=CH(ka|0,E|0,i|0,na|0)|0;ka=E;n=DH(i|0,na|0,25)|0;na=vH(J|0,m|0,n|0,E|0)|0;n=CH(kc|0,hc|0,33554432,0)|0;m=wH(n|0,E|0,26)|0;n=E;J=CH(g|0,l|0,m|0,n|0)|0;l=DH(m|0,n|0,26)|0;n=vH(kc|0,hc|0,l|0,E|0)|0;l=CH(b|0,ka|0,33554432,0)|0;hc=wH(l|0,E|0,26)|0;l=E;kc=CH(Bc|0,P|0,Rc|0,M|0)|0;M=CH(kc|0,E|0,nc|0,S|0)|0;S=CH(M|0,E|0,Yb|0,V|0)|0;V=CH(S|0,E|0,Kb|0,Y|0)|0;Y=CH(V|0,E|0,tb|0,$|0)|0;$=CH(Y|0,E|0,fb|0,ca|0)|0;ca=CH($|0,E|0,Qa|0,fa|0)|0;fa=CH(ca|0,E|0,Ca|0,e|0)|0;e=CH(fa|0,E|0,la|0,L|0)|0;L=CH(e|0,E|0,hc|0,l|0)|0;e=E;la=DH(hc|0,l|0,26)|0;l=vH(b|0,ka|0,la|0,E|0)|0;la=CH(L|0,e|0,16777216,0)|0;ka=wH(la|0,E|0,25)|0;la=E;b=IH(ka|0,la|0,19,0)|0;hc=CH(b|0,E|0,j|0,Ta|0)|0;Ta=E;j=DH(ka|0,la|0,25)|0;la=vH(L|0,e|0,j|0,E|0)|0;j=CH(hc|0,Ta|0,33554432,0)|0;e=wH(j|0,E|0,26)|0;j=E;L=CH(Db|0,h|0,e|0,j|0)|0;h=DH(e|0,j|0,26)|0;j=vH(hc|0,Ta|0,h|0,E|0)|0;c[a>>2]=j;c[a+4>>2]=L;c[a+8>>2]=k;c[a+12>>2]=Qc;c[a+16>>2]=n;c[a+20>>2]=J;c[a+24>>2]=Ab;c[a+28>>2]=na;c[a+32>>2]=l;c[a+36>>2]=la;return}function Ev(a){a=a|0;var b=0,c=0;b=i;i=i+32|0;c=b;Fv(c,a);i=b;return (d[c>>0]|0)&1|0}function Fv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=c[d>>2]|0;f=c[d+4>>2]|0;g=c[d+8>>2]|0;h=c[d+12>>2]|0;i=c[d+16>>2]|0;j=c[d+20>>2]|0;k=c[d+24>>2]|0;l=c[d+28>>2]|0;m=c[d+32>>2]|0;n=c[d+36>>2]|0;d=(((((((((((((n*19|0)+16777216>>25)+e>>26)+f>>25)+g>>26)+h>>25)+i>>26)+j>>25)+k>>26)+l>>25)+m>>26)+n>>25)*19|0)+e|0;e=d>>26;o=e+f|0;f=d-(e<<26)|0;e=o>>25;d=e+g|0;g=o-(e<<25)|0;e=d>>26;o=e+h|0;h=d-(e<<26)|0;e=o>>25;d=e+i|0;i=o-(e<<25)|0;e=d>>26;o=e+j|0;j=d-(e<<26)|0;e=o>>25;d=e+k|0;k=o-(e<<25)|0;e=d>>26;o=e+l|0;l=d-(e<<26)|0;e=o>>25;d=e+m|0;m=o-(e<<25)|0;e=d>>26;o=e+n|0;n=d-(e<<26)|0;e=o&33554431;a[b>>0]=f;a[b+1>>0]=f>>>8;a[b+2>>0]=f>>>16;a[b+3>>0]=g<<2|f>>>24;a[b+4>>0]=g>>>6;a[b+5>>0]=g>>>14;a[b+6>>0]=h<<3|g>>>22;a[b+7>>0]=h>>>5;a[b+8>>0]=h>>>13;a[b+9>>0]=i<<5|h>>>21;a[b+10>>0]=i>>>3;a[b+11>>0]=i>>>11;a[b+12>>0]=j<<6|i>>>19;a[b+13>>0]=j>>>2;a[b+14>>0]=j>>>10;a[b+15>>0]=j>>>18;a[b+16>>0]=k;a[b+17>>0]=k>>>8;a[b+18>>0]=k>>>16;a[b+19>>0]=l<<1|k>>>24;a[b+20>>0]=l>>>7;a[b+21>>0]=l>>>15;a[b+22>>0]=m<<3|l>>>23;a[b+23>>0]=m>>>5;a[b+24>>0]=m>>>13;a[b+25>>0]=n<<4|m>>>21;a[b+26>>0]=n>>>4;a[b+27>>0]=n>>>12;a[b+28>>0]=n>>>20|e<<6;a[b+29>>0]=o>>>2;a[b+30>>0]=o>>>10;a[b+31>>0]=e>>>18;return}function Gv(b){b=b|0;var c=0,d=0;c=i;i=i+32|0;d=c;Fv(d,b);i=c;return (a[d+1>>0]|a[d>>0]|a[d+2>>0]|a[d+3>>0]|a[d+4>>0]|a[d+5>>0]|a[d+6>>0]|a[d+7>>0]|a[d+8>>0]|a[d+9>>0]|a[d+10>>0]|a[d+11>>0]|a[d+12>>0]|a[d+13>>0]|a[d+14>>0]|a[d+15>>0]|a[d+16>>0]|a[d+17>>0]|a[d+18>>0]|a[d+19>>0]|a[d+20>>0]|a[d+21>>0]|a[d+22>>0]|a[d+23>>0]|a[d+24>>0]|a[d+25>>0]|a[d+26>>0]|a[d+27>>0]|a[d+28>>0]|a[d+29>>0]|a[d+30>>0]|a[d+31>>0])<<24>>24!=0|0}function Hv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;d=c[b>>2]|0;e=c[b+4>>2]|0;f=c[b+8>>2]|0;g=c[b+12>>2]|0;h=c[b+16>>2]|0;i=c[b+20>>2]|0;j=c[b+24>>2]|0;k=c[b+28>>2]|0;l=c[b+32>>2]|0;m=c[b+36>>2]|0;b=IH(d|0,((d|0)<0)<<31>>31|0,121666,0)|0;d=E;n=IH(e|0,((e|0)<0)<<31>>31|0,121666,0)|0;e=E;o=IH(f|0,((f|0)<0)<<31>>31|0,121666,0)|0;f=E;p=IH(g|0,((g|0)<0)<<31>>31|0,121666,0)|0;g=E;q=IH(h|0,((h|0)<0)<<31>>31|0,121666,0)|0;h=E;r=IH(i|0,((i|0)<0)<<31>>31|0,121666,0)|0;i=E;s=IH(j|0,((j|0)<0)<<31>>31|0,121666,0)|0;j=E;t=IH(k|0,((k|0)<0)<<31>>31|0,121666,0)|0;k=E;u=IH(l|0,((l|0)<0)<<31>>31|0,121666,0)|0;l=E;v=IH(m|0,((m|0)<0)<<31>>31|0,121666,0)|0;m=E;w=CH(v|0,m|0,16777216,0)|0;x=wH(w|0,E|0,25)|0;w=E;y=IH(x|0,w|0,19,0)|0;z=CH(y|0,E|0,b|0,d|0)|0;d=E;b=DH(x|0,w|0,25)|0;w=vH(v|0,m|0,b|0,E|0)|0;b=E;m=CH(n|0,e|0,16777216,0)|0;v=wH(m|0,E|0,25)|0;m=E;x=CH(v|0,m|0,o|0,f|0)|0;f=E;o=DH(v|0,m|0,25)|0;m=vH(n|0,e|0,o|0,E|0)|0;o=E;e=CH(p|0,g|0,16777216,0)|0;n=wH(e|0,E|0,25)|0;e=E;v=CH(n|0,e|0,q|0,h|0)|0;h=E;q=DH(n|0,e|0,25)|0;e=vH(p|0,g|0,q|0,E|0)|0;q=E;g=CH(r|0,i|0,16777216,0)|0;p=wH(g|0,E|0,25)|0;g=E;n=CH(p|0,g|0,s|0,j|0)|0;j=E;s=DH(p|0,g|0,25)|0;g=vH(r|0,i|0,s|0,E|0)|0;s=E;i=CH(t|0,k|0,16777216,0)|0;r=wH(i|0,E|0,25)|0;i=E;p=CH(r|0,i|0,u|0,l|0)|0;l=E;u=DH(r|0,i|0,25)|0;i=vH(t|0,k|0,u|0,E|0)|0;u=E;k=CH(z|0,d|0,33554432,0)|0;t=wH(k|0,E|0,26)|0;k=E;r=CH(m|0,o|0,t|0,k|0)|0;o=DH(t|0,k|0,26)|0;k=vH(z|0,d|0,o|0,E|0)|0;o=CH(x|0,f|0,33554432,0)|0;d=wH(o|0,E|0,26)|0;o=E;z=CH(e|0,q|0,d|0,o|0)|0;q=DH(d|0,o|0,26)|0;o=vH(x|0,f|0,q|0,E|0)|0;q=CH(v|0,h|0,33554432,0)|0;f=wH(q|0,E|0,26)|0;q=E;x=CH(g|0,s|0,f|0,q|0)|0;s=DH(f|0,q|0,26)|0;q=vH(v|0,h|0,s|0,E|0)|0;s=CH(n|0,j|0,33554432,0)|0;h=wH(s|0,E|0,26)|0;s=E;v=CH(i|0,u|0,h|0,s|0)|0;u=DH(h|0,s|0,26)|0;s=vH(n|0,j|0,u|0,E|0)|0;u=CH(p|0,l|0,33554432,0)|0;j=wH(u|0,E|0,26)|0;u=E;n=CH(w|0,b|0,j|0,u|0)|0;b=DH(j|0,u|0,26)|0;u=vH(p|0,l|0,b|0,E|0)|0;c[a>>2]=k;c[a+4>>2]=r;c[a+8>>2]=o;c[a+12>>2]=z;c[a+16>>2]=q;c[a+20>>2]=x;c[a+24>>2]=s;c[a+28>>2]=v;c[a+32>>2]=u;c[a+36>>2]=n;return}function Iv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=0-(c[b+4>>2]|0)|0;e=0-(c[b+8>>2]|0)|0;f=0-(c[b+12>>2]|0)|0;g=0-(c[b+16>>2]|0)|0;h=0-(c[b+20>>2]|0)|0;i=0-(c[b+24>>2]|0)|0;j=0-(c[b+28>>2]|0)|0;k=0-(c[b+32>>2]|0)|0;l=0-(c[b+36>>2]|0)|0;c[a>>2]=0-(c[b>>2]|0);c[a+4>>2]=d;c[a+8>>2]=e;c[a+12>>2]=f;c[a+16>>2]=g;c[a+20>>2]=h;c[a+24>>2]=i;c[a+28>>2]=j;c[a+32>>2]=k;c[a+36>>2]=l;return}function Jv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=i;i=i+128|0;d=c+80|0;e=c+40|0;f=c;Cv(d,b);Cv(e,d);Cv(e,e);Dv(e,b,e);Dv(d,d,e);Cv(d,d);Dv(d,e,d);Cv(e,d);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Dv(d,e,d);Cv(e,d);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Dv(e,e,d);Cv(f,e);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Dv(e,f,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Dv(d,e,d);Cv(e,d);g=1;do{Cv(e,e);g=g+1|0}while((g|0)!=50);Dv(e,e,d);Cv(f,e);g=1;do{Cv(f,f);g=g+1|0}while((g|0)!=100);Dv(e,f,e);Cv(e,e);f=1;do{Cv(e,e);f=f+1|0}while((f|0)!=50);Dv(d,e,d);Cv(d,d);Cv(d,d);Dv(a,d,b);i=c;return}function Kv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;d=c[b>>2]|0;e=c[b+4>>2]|0;f=c[b+8>>2]|0;g=c[b+12>>2]|0;h=c[b+16>>2]|0;i=c[b+20>>2]|0;j=c[b+24>>2]|0;k=c[b+28>>2]|0;l=c[b+32>>2]|0;m=c[b+36>>2]|0;b=d<<1;n=e<<1;o=f<<1;p=g<<1;q=h<<1;r=i<<1;s=j<<1;t=k<<1;u=i*38|0;v=j*19|0;w=k*38|0;x=l*19|0;y=m*38|0;z=((d|0)<0)<<31>>31;A=IH(d|0,z|0,d|0,z|0)|0;z=E;d=((b|0)<0)<<31>>31;B=((e|0)<0)<<31>>31;C=IH(b|0,d|0,e|0,B|0)|0;D=E;F=((f|0)<0)<<31>>31;G=IH(f|0,F|0,b|0,d|0)|0;H=E;I=((g|0)<0)<<31>>31;J=IH(g|0,I|0,b|0,d|0)|0;K=E;L=((h|0)<0)<<31>>31;M=IH(h|0,L|0,b|0,d|0)|0;N=E;O=((i|0)<0)<<31>>31;P=IH(i|0,O|0,b|0,d|0)|0;Q=E;R=((j|0)<0)<<31>>31;S=IH(j|0,R|0,b|0,d|0)|0;T=E;U=((k|0)<0)<<31>>31;V=IH(k|0,U|0,b|0,d|0)|0;W=E;X=((l|0)<0)<<31>>31;Y=IH(l|0,X|0,b|0,d|0)|0;Z=E;_=((m|0)<0)<<31>>31;$=IH(m|0,_|0,b|0,d|0)|0;d=E;b=((n|0)<0)<<31>>31;aa=IH(n|0,b|0,e|0,B|0)|0;B=E;e=IH(n|0,b|0,f|0,F|0)|0;ba=E;ca=((p|0)<0)<<31>>31;da=IH(p|0,ca|0,n|0,b|0)|0;ea=E;fa=IH(h|0,L|0,n|0,b|0)|0;ga=E;ha=((r|0)<0)<<31>>31;ia=IH(r|0,ha|0,n|0,b|0)|0;ja=E;ka=IH(j|0,R|0,n|0,b|0)|0;la=E;ma=((t|0)<0)<<31>>31;na=IH(t|0,ma|0,n|0,b|0)|0;oa=E;pa=IH(l|0,X|0,n|0,b|0)|0;qa=E;ra=((y|0)<0)<<31>>31;sa=IH(y|0,ra|0,n|0,b|0)|0;b=E;n=IH(f|0,F|0,f|0,F|0)|0;ta=E;ua=((o|0)<0)<<31>>31;va=IH(o|0,ua|0,g|0,I|0)|0;wa=E;xa=IH(h|0,L|0,o|0,ua|0)|0;ya=E;za=IH(i|0,O|0,o|0,ua|0)|0;Aa=E;Ba=IH(j|0,R|0,o|0,ua|0)|0;Ca=E;Da=IH(k|0,U|0,o|0,ua|0)|0;Ea=E;Fa=((x|0)<0)<<31>>31;Ga=IH(x|0,Fa|0,o|0,ua|0)|0;ua=E;o=IH(y|0,ra|0,f|0,F|0)|0;F=E;f=IH(p|0,ca|0,g|0,I|0)|0;I=E;g=IH(p|0,ca|0,h|0,L|0)|0;Ha=E;Ia=IH(r|0,ha|0,p|0,ca|0)|0;Ja=E;Ka=IH(j|0,R|0,p|0,ca|0)|0;La=E;Ma=((w|0)<0)<<31>>31;Na=IH(w|0,Ma|0,p|0,ca|0)|0;Oa=E;Pa=IH(x|0,Fa|0,p|0,ca|0)|0;Qa=E;Ra=IH(y|0,ra|0,p|0,ca|0)|0;ca=E;p=IH(h|0,L|0,h|0,L|0)|0;Sa=E;Ta=((q|0)<0)<<31>>31;Ua=IH(q|0,Ta|0,i|0,O|0)|0;Va=E;Wa=((v|0)<0)<<31>>31;Xa=IH(v|0,Wa|0,q|0,Ta|0)|0;Ya=E;Za=IH(w|0,Ma|0,h|0,L|0)|0;_a=E;$a=IH(x|0,Fa|0,q|0,Ta|0)|0;Ta=E;q=IH(y|0,ra|0,h|0,L|0)|0;L=E;h=IH(u|0,((u|0)<0)<<31>>31|0,i|0,O|0)|0;O=E;i=IH(v|0,Wa|0,r|0,ha|0)|0;u=E;ab=IH(w|0,Ma|0,r|0,ha|0)|0;bb=E;cb=IH(x|0,Fa|0,r|0,ha|0)|0;db=E;eb=IH(y|0,ra|0,r|0,ha|0)|0;ha=E;r=IH(v|0,Wa|0,j|0,R|0)|0;Wa=E;v=IH(w|0,Ma|0,j|0,R|0)|0;fb=E;gb=IH(x|0,Fa|0,s|0,((s|0)<0)<<31>>31|0)|0;s=E;hb=IH(y|0,ra|0,j|0,R|0)|0;R=E;j=IH(w|0,Ma|0,k|0,U|0)|0;U=E;k=IH(x|0,Fa|0,t|0,ma|0)|0;Ma=E;w=IH(y|0,ra|0,t|0,ma|0)|0;ma=E;t=IH(x|0,Fa|0,l|0,X|0)|0;Fa=E;x=IH(y|0,ra|0,l|0,X|0)|0;X=E;l=IH(y|0,ra|0,m|0,_|0)|0;_=E;m=CH(h|0,O|0,A|0,z|0)|0;z=CH(m|0,E|0,Xa|0,Ya|0)|0;Ya=CH(z|0,E|0,Na|0,Oa|0)|0;Oa=CH(Ya|0,E|0,Ga|0,ua|0)|0;ua=CH(Oa|0,E|0,sa|0,b|0)|0;b=E;sa=CH(i|0,u|0,C|0,D|0)|0;D=CH(sa|0,E|0,Za|0,_a|0)|0;_a=CH(D|0,E|0,Pa|0,Qa|0)|0;Qa=CH(_a|0,E|0,o|0,F|0)|0;F=E;o=CH(G|0,H|0,aa|0,B|0)|0;B=CH(o|0,E|0,r|0,Wa|0)|0;Wa=CH(B|0,E|0,ab|0,bb|0)|0;bb=CH(Wa|0,E|0,$a|0,Ta|0)|0;Ta=CH(bb|0,E|0,Ra|0,ca|0)|0;ca=E;Ra=CH(J|0,K|0,e|0,ba|0)|0;ba=CH(Ra|0,E|0,v|0,fb|0)|0;fb=CH(ba|0,E|0,cb|0,db|0)|0;db=CH(fb|0,E|0,q|0,L|0)|0;L=E;q=CH(da|0,ea|0,n|0,ta|0)|0;ta=CH(q|0,E|0,M|0,N|0)|0;N=CH(ta|0,E|0,j|0,U|0)|0;U=CH(N|0,E|0,gb|0,s|0)|0;s=CH(U|0,E|0,eb|0,ha|0)|0;ha=E;eb=CH(fa|0,ga|0,va|0,wa|0)|0;wa=CH(eb|0,E|0,P|0,Q|0)|0;Q=CH(wa|0,E|0,k|0,Ma|0)|0;Ma=CH(Q|0,E|0,hb|0,R|0)|0;R=E;hb=CH(f|0,I|0,xa|0,ya|0)|0;ya=CH(hb|0,E|0,ia|0,ja|0)|0;ja=CH(ya|0,E|0,S|0,T|0)|0;T=CH(ja|0,E|0,t|0,Fa|0)|0;Fa=CH(T|0,E|0,w|0,ma|0)|0;ma=E;w=CH(za|0,Aa|0,g|0,Ha|0)|0;Ha=CH(w|0,E|0,ka|0,la|0)|0;la=CH(Ha|0,E|0,V|0,W|0)|0;W=CH(la|0,E|0,x|0,X|0)|0;X=E;x=CH(Ba|0,Ca|0,p|0,Sa|0)|0;Sa=CH(x|0,E|0,Ia|0,Ja|0)|0;Ja=CH(Sa|0,E|0,na|0,oa|0)|0;oa=CH(Ja|0,E|0,Y|0,Z|0)|0;Z=CH(oa|0,E|0,l|0,_|0)|0;_=E;l=CH(Ka|0,La|0,Ua|0,Va|0)|0;Va=CH(l|0,E|0,Da|0,Ea|0)|0;Ea=CH(Va|0,E|0,pa|0,qa|0)|0;qa=CH(Ea|0,E|0,$|0,d|0)|0;d=E;$=DH(ua|0,b|0,1)|0;b=E;ua=DH(Qa|0,F|0,1)|0;F=E;Qa=DH(Ta|0,ca|0,1)|0;ca=E;Ta=DH(db|0,L|0,1)|0;L=E;db=DH(s|0,ha|0,1)|0;ha=E;s=DH(Ma|0,R|0,1)|0;R=E;Ma=DH(Fa|0,ma|0,1)|0;ma=E;Fa=DH(W|0,X|0,1)|0;X=E;W=DH(Z|0,_|0,1)|0;_=E;Z=DH(qa|0,d|0,1)|0;d=E;qa=CH($|0,b|0,33554432,0)|0;Ea=wH(qa|0,E|0,26)|0;qa=E;pa=CH(Ea|0,qa|0,ua|0,F|0)|0;F=E;ua=DH(Ea|0,qa|0,26)|0;qa=vH($|0,b|0,ua|0,E|0)|0;ua=E;b=CH(db|0,ha|0,33554432,0)|0;$=wH(b|0,E|0,26)|0;b=E;Ea=CH($|0,b|0,s|0,R|0)|0;R=E;s=DH($|0,b|0,26)|0;b=vH(db|0,ha|0,s|0,E|0)|0;s=E;ha=CH(pa|0,F|0,16777216,0)|0;db=wH(ha|0,E|0,25)|0;ha=E;$=CH(db|0,ha|0,Qa|0,ca|0)|0;ca=E;Qa=DH(db|0,ha|0,25)|0;ha=vH(pa|0,F|0,Qa|0,E|0)|0;Qa=E;F=CH(Ea|0,R|0,16777216,0)|0;pa=wH(F|0,E|0,25)|0;F=E;db=CH(pa|0,F|0,Ma|0,ma|0)|0;ma=E;Ma=DH(pa|0,F|0,25)|0;F=vH(Ea|0,R|0,Ma|0,E|0)|0;Ma=E;R=CH($|0,ca|0,33554432,0)|0;Ea=wH(R|0,E|0,26)|0;R=E;pa=CH(Ea|0,R|0,Ta|0,L|0)|0;L=E;Ta=DH(Ea|0,R|0,26)|0;R=vH($|0,ca|0,Ta|0,E|0)|0;Ta=CH(db|0,ma|0,33554432,0)|0;ca=wH(Ta|0,E|0,26)|0;Ta=E;$=CH(ca|0,Ta|0,Fa|0,X|0)|0;X=E;Fa=DH(ca|0,Ta|0,26)|0;Ta=vH(db|0,ma|0,Fa|0,E|0)|0;Fa=CH(pa|0,L|0,16777216,0)|0;ma=wH(Fa|0,E|0,25)|0;Fa=E;db=CH(ma|0,Fa|0,b|0,s|0)|0;s=E;b=DH(ma|0,Fa|0,25)|0;Fa=vH(pa|0,L|0,b|0,E|0)|0;b=CH($|0,X|0,16777216,0)|0;L=wH(b|0,E|0,25)|0;b=E;pa=CH(L|0,b|0,W|0,_|0)|0;_=E;W=DH(L|0,b|0,25)|0;b=vH($|0,X|0,W|0,E|0)|0;W=CH(db|0,s|0,33554432,0)|0;X=wH(W|0,E|0,26)|0;W=E;$=CH(F|0,Ma|0,X|0,W|0)|0;Ma=DH(X|0,W|0,26)|0;W=vH(db|0,s|0,Ma|0,E|0)|0;Ma=CH(pa|0,_|0,33554432,0)|0;s=wH(Ma|0,E|0,26)|0;Ma=E;db=CH(s|0,Ma|0,Z|0,d|0)|0;d=E;Z=DH(s|0,Ma|0,26)|0;Ma=vH(pa|0,_|0,Z|0,E|0)|0;Z=CH(db|0,d|0,16777216,0)|0;_=wH(Z|0,E|0,25)|0;Z=E;pa=IH(_|0,Z|0,19,0)|0;s=CH(pa|0,E|0,qa|0,ua|0)|0;ua=E;qa=DH(_|0,Z|0,25)|0;Z=vH(db|0,d|0,qa|0,E|0)|0;qa=CH(s|0,ua|0,33554432,0)|0;d=wH(qa|0,E|0,26)|0;qa=E;db=CH(ha|0,Qa|0,d|0,qa|0)|0;Qa=DH(d|0,qa|0,26)|0;qa=vH(s|0,ua|0,Qa|0,E|0)|0;c[a>>2]=qa;c[a+4>>2]=db;c[a+8>>2]=R;c[a+12>>2]=Fa;c[a+16>>2]=W;c[a+20>>2]=$;c[a+24>>2]=Ta;c[a+28>>2]=b;c[a+32>>2]=Ma;c[a+36>>2]=Z;return}function Lv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=(c[b+4>>2]|0)-(c[d+4>>2]|0)|0;f=(c[b+8>>2]|0)-(c[d+8>>2]|0)|0;g=(c[b+12>>2]|0)-(c[d+12>>2]|0)|0;h=(c[b+16>>2]|0)-(c[d+16>>2]|0)|0;i=(c[b+20>>2]|0)-(c[d+20>>2]|0)|0;j=(c[b+24>>2]|0)-(c[d+24>>2]|0)|0;k=(c[b+28>>2]|0)-(c[d+28>>2]|0)|0;l=(c[b+32>>2]|0)-(c[d+32>>2]|0)|0;m=(c[b+36>>2]|0)-(c[d+36>>2]|0)|0;c[a>>2]=(c[b>>2]|0)-(c[d>>2]|0);c[a+4>>2]=e;c[a+8>>2]=f;c[a+12>>2]=g;c[a+16>>2]=h;c[a+20>>2]=i;c[a+24>>2]=j;c[a+28>>2]=k;c[a+32>>2]=l;c[a+36>>2]=m;return}function Mv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+48|0;e=d;f=b+40|0;wv(a,f,b);g=a+40|0;Lv(g,f,b);f=a+80|0;Dv(f,a,c);Dv(g,g,c+40|0);h=a+120|0;Dv(h,c+120|0,b+120|0);Dv(a,b+80|0,c+80|0);wv(e,a,a);Lv(a,f,g);wv(g,f,g);wv(f,e,h);Lv(h,e,h);i=d;return}function Nv(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=i;i=i+2320|0;h=g;j=g+1800|0;k=g+2056|0;l=g+520|0;m=g+360|0;n=g+40|0;o=g+200|0;p=0;do{a[j+p>>0]=(d[c+(p>>3)>>0]|0)>>>(p&7)&1;p=p+1|0}while((p|0)!=256);q=0;while(1){p=j+q|0;a:do if(a[p>>0]|0){c=1;do{r=c+q|0;if((r|0)>=256)break a;s=j+r|0;t=a[s>>0]|0;b:do if(t<<24>>24){u=a[p>>0]|0;v=t<<24>>24<<c;w=u+v|0;if((w|0)<16){a[p>>0]=w;a[s>>0]=0;break}w=u-v|0;if((w|0)<=-16)break a;a[p>>0]=w;w=r;while(1){v=j+w|0;if(!(a[v>>0]|0)){x=v;break}a[v>>0]=0;w=w+1|0;if((w|0)>=256)break b}a[x>>0]=1}while(0);c=c+1|0}while((c|0)<7)}while(0);q=q+1|0;if((q|0)==256){y=0;break}}do{a[k+y>>0]=(d[f+(y>>3)>>0]|0)>>>(y&7)&1;y=y+1|0}while((y|0)!=256);z=0;do{y=k+z|0;c:do if(a[y>>0]|0){f=1;do{q=f+z|0;if((q|0)>=256)break c;x=k+q|0;p=a[x>>0]|0;d:do if(p<<24>>24){c=a[y>>0]|0;r=p<<24>>24<<f;s=c+r|0;if((s|0)<16){a[y>>0]=s;a[x>>0]=0;break}s=c-r|0;if((s|0)<=-16)break c;a[y>>0]=s;s=q;while(1){r=k+s|0;if(!(a[r>>0]|0)){A=r;break}a[r>>0]=0;s=s+1|0;if((s|0)>=256)break d}a[A>>0]=1}while(0);f=f+1|0}while((f|0)<7)}while(0);z=z+1|0}while((z|0)!=256);z=e+40|0;wv(l,z,e);Lv(l+40|0,z,e);zv(l+80|0,e+80|0);Dv(l+120|0,e+120|0,44368);Ov(m,e);e=m+120|0;Dv(o,m,e);z=m+40|0;A=m+80|0;Dv(o+40|0,z,A);Dv(o+80|0,A,e);Dv(o+120|0,m,z);Mv(m,o,l);Dv(n,m,e);y=n+40|0;Dv(y,z,A);f=n+80|0;Dv(f,A,e);q=n+120|0;Dv(q,m,z);x=l+160|0;wv(x,y,n);Lv(l+200|0,y,n);zv(l+240|0,f);Dv(l+280|0,q,44368);Mv(m,o,x);Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);x=l+320|0;wv(x,y,n);Lv(l+360|0,y,n);zv(l+400|0,f);Dv(l+440|0,q,44368);Mv(m,o,x);Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);x=l+480|0;wv(x,y,n);Lv(l+520|0,y,n);zv(l+560|0,f);Dv(l+600|0,q,44368);Mv(m,o,x);Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);x=l+640|0;wv(x,y,n);Lv(l+680|0,y,n);zv(l+720|0,f);Dv(l+760|0,q,44368);Mv(m,o,x);Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);x=l+800|0;wv(x,y,n);Lv(l+840|0,y,n);zv(l+880|0,f);Dv(l+920|0,q,44368);Mv(m,o,x);Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);x=l+960|0;wv(x,y,n);Lv(l+1e3|0,y,n);zv(l+1040|0,f);Dv(l+1080|0,q,44368);Mv(m,o,x);Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);wv(l+1120|0,y,n);Lv(l+1160|0,y,n);zv(l+1200|0,f);Dv(l+1240|0,q,44368);uv(b);x=b+40|0;vv(x);o=b+80|0;vv(o);p=255;while(1){if(a[j+p>>0]|0){B=p;break}if(a[k+p>>0]|0){B=p;break}s=p+-1|0;if((p|0)>0)p=s;else{B=s;break}}if((B|0)<=-1){i=g;return}p=B;while(1){Cv(m,b);Cv(A,x);Kv(e,o);wv(z,b,x);Cv(h,z);wv(z,A,m);Lv(A,A,m);Lv(m,h,z);Lv(e,e,A);B=a[j+p>>0]|0;if(B<<24>>24<=0){if(B<<24>>24<0){Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);Pv(m,n,l+(((B<<24>>24|0)/-2|0)*160|0)|0)}}else{Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);Mv(m,n,l+(((B<<24>>24|0)/2|0)*160|0)|0)}B=a[k+p>>0]|0;if(B<<24>>24<=0){if(B<<24>>24<0){Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);Rv(m,n,44408+(((B<<24>>24|0)/-2|0)*120|0)|0)}}else{Dv(n,m,e);Dv(y,z,A);Dv(f,A,e);Dv(q,m,z);Qv(m,n,44408+(((B<<24>>24|0)/2|0)*120|0)|0)}Dv(b,m,e);Dv(x,z,A);Dv(o,A,e);if((p|0)>0)p=p+-1|0;else break}i=g;return}function Ov(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=i;i=i+160|0;d=c+120|0;e=c;zv(e,b);f=e+40|0;zv(f,b+40|0);g=e+80|0;zv(g,b+80|0);Cv(a,e);b=a+80|0;Cv(b,f);h=a+120|0;Kv(h,g);g=a+40|0;wv(g,e,f);Cv(d,g);wv(g,b,a);Lv(b,b,a);Lv(a,d,g);Lv(h,h,b);i=c;return}function Pv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+48|0;e=d;f=b+40|0;wv(a,f,b);g=a+40|0;Lv(g,f,b);f=a+80|0;Dv(f,a,c+40|0);Dv(g,g,c);h=a+120|0;Dv(h,c+120|0,b+120|0);Dv(a,b+80|0,c+80|0);wv(e,a,a);Lv(a,f,g);wv(g,f,g);Lv(f,e,h);wv(h,e,h);i=d;return}function Qv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+48|0;e=d;f=b+40|0;wv(a,f,b);g=a+40|0;Lv(g,f,b);f=a+80|0;Dv(f,a,c);Dv(g,g,c+40|0);h=a+120|0;Dv(h,c+80|0,b+120|0);c=b+80|0;wv(e,c,c);Lv(a,f,g);wv(g,f,g);wv(f,e,h);Lv(h,e,h);i=d;return}function Rv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+48|0;e=d;f=b+40|0;wv(a,f,b);g=a+40|0;Lv(g,f,b);f=a+80|0;Dv(f,a,c+40|0);Dv(g,g,c);h=a+120|0;Dv(h,c+80|0,b+120|0);c=b+80|0;wv(e,c,c);Lv(a,f,g);wv(g,f,g);Lv(f,e,h);wv(h,e,h);i=d;return}function Sv(a,b){a=a|0;b=b|0;var c=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;c=i;i=i+208|0;e=c+160|0;f=c+120|0;g=c+80|0;h=c+40|0;j=c;k=a+40|0;Av(k,b);l=a+80|0;vv(l);Cv(e,k);Dv(f,e,45368);Lv(e,e,l);wv(f,f,l);Cv(g,f);Dv(g,g,f);Cv(a,g);Dv(a,a,f);Dv(a,a,e);Jv(a,a);Dv(a,a,g);Dv(a,a,e);Cv(h,a);Dv(h,h,f);Lv(j,h,e);do if(Gv(j)|0){wv(j,h,e);if(!(Gv(j)|0)){Dv(a,a,45408);break}else{m=-1;i=c;return m|0}}while(0);j=Ev(a)|0;if((j|0)==((d[b+31>>0]|0)>>>7|0))Iv(a,a);Dv(a+120|0,a,k);m=0;i=c;return m|0}function Tv(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0;e=i;i=i+128|0;f=e+80|0;g=e+40|0;h=e;Bv(f,c+80|0);Dv(g,c,f);Dv(h,c+40|0,f);Fv(b,h);h=(Ev(g)|0)<<7;g=b+31|0;a[g>>0]=(d[g>>0]|0)^h;i=e;return}function Uv(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+512|0;f=e+400|0;g=e+440|0;h=e+240|0;j=e+120|0;k=e;l=0;do{m=a[c+l>>0]|0;n=l<<1;a[g+n>>0]=m&15;a[g+(n|1)>>0]=(m&255)>>>4;l=l+1|0}while((l|0)!=32);o=0;p=0;while(1){l=g+p|0;c=(d[l>>0]|0)+o|0;m=(c<<24)+134217728>>28;a[l>>0]=c-(m<<4);p=p+1|0;if((p|0)==63){q=m;break}else o=m}o=g+63|0;a[o>>0]=(d[o>>0]|0)+q;uv(b);q=b+40|0;vv(q);o=b+80|0;vv(o);p=b+120|0;uv(p);m=h+120|0;c=h+40|0;l=h+80|0;n=1;do{Wv(k,(n|0)/2|0,a[g+n>>0]|0);Qv(h,b,k);Dv(b,h,m);Dv(q,c,l);Dv(o,l,m);Dv(p,h,c);n=n+2|0}while((n|0)<64);Ov(h,b);Dv(j,h,m);n=j+40|0;Dv(n,c,l);r=j+80|0;Dv(r,l,m);Cv(h,j);Cv(l,n);Kv(m,r);wv(c,j,n);Cv(f,c);wv(c,l,h);Lv(l,l,h);Lv(h,f,c);Lv(m,m,l);Dv(j,h,m);Dv(n,c,l);Dv(r,l,m);Cv(h,j);Cv(l,n);Kv(m,r);wv(c,j,n);Cv(f,c);wv(c,l,h);Lv(l,l,h);Lv(h,f,c);Lv(m,m,l);Dv(j,h,m);Dv(n,c,l);Dv(r,l,m);Cv(h,j);Cv(l,n);Kv(m,r);wv(c,j,n);Cv(f,c);wv(c,l,h);Lv(l,l,h);Lv(h,f,c);Lv(m,m,l);Dv(b,h,m);Dv(q,c,l);Dv(o,l,m);Dv(p,h,c);f=0;do{Wv(k,(f|0)/2|0,a[g+f>>0]|0);Qv(h,b,k);Dv(b,h,m);Dv(q,c,l);Dv(o,l,m);Dv(p,h,c);f=f+2|0}while((f|0)<64);i=e;return}function Vv(b,c){b=b|0;c=c|0;var e=0,f=0,g=0,h=0;e=i;i=i+128|0;f=e+80|0;g=e+40|0;h=e;Bv(f,c+80|0);Dv(g,c,f);Dv(h,c+40|0,f);Fv(b,h);h=(Ev(g)|0)<<7;g=b+31|0;a[g>>0]=(d[g>>0]|0)^h;i=e;return}function Wv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+128|0;e=d;f=c<<24>>24;g=xH(f|0,((f|0)<0)<<31>>31|0,63)|0;f=c<<24>>24;c=f-((f&0-g)<<1)&255;vv(a);f=a+40|0;vv(f);h=a+80|0;uv(h);j=CH((c^1)&255|0,0,-1,-1)|0;k=xH(j|0,E|0,63)|0;xv(a,45448+(b*960|0)|0,k);xv(f,45448+(b*960|0)+40|0,k);xv(h,45448+(b*960|0)+80|0,k);k=CH((c^2)&255|0,0,-1,-1)|0;j=xH(k|0,E|0,63)|0;xv(a,45448+(b*960|0)+120|0,j);xv(f,45448+(b*960|0)+160|0,j);xv(h,45448+(b*960|0)+200|0,j);j=CH((c^3)&255|0,0,-1,-1)|0;k=xH(j|0,E|0,63)|0;xv(a,45448+(b*960|0)+240|0,k);xv(f,45448+(b*960|0)+280|0,k);xv(h,45448+(b*960|0)+320|0,k);k=CH((c^4)&255|0,0,-1,-1)|0;j=xH(k|0,E|0,63)|0;xv(a,45448+(b*960|0)+360|0,j);xv(f,45448+(b*960|0)+400|0,j);xv(h,45448+(b*960|0)+440|0,j);j=CH((c^5)&255|0,0,-1,-1)|0;k=xH(j|0,E|0,63)|0;xv(a,45448+(b*960|0)+480|0,k);xv(f,45448+(b*960|0)+520|0,k);xv(h,45448+(b*960|0)+560|0,k);k=CH((c^6)&255|0,0,-1,-1)|0;j=xH(k|0,E|0,63)|0;xv(a,45448+(b*960|0)+600|0,j);xv(f,45448+(b*960|0)+640|0,j);xv(h,45448+(b*960|0)+680|0,j);j=CH((c^7)&255|0,0,-1,-1)|0;k=xH(j|0,E|0,63)|0;xv(a,45448+(b*960|0)+720|0,k);xv(f,45448+(b*960|0)+760|0,k);xv(h,45448+(b*960|0)+800|0,k);k=CH((c^8)&255|0,0,-1,-1)|0;c=xH(k|0,E|0,63)|0;xv(a,45448+(b*960|0)+840|0,c);xv(f,45448+(b*960|0)+880|0,c);xv(h,45448+(b*960|0)+920|0,c);zv(e,f);c=e+40|0;zv(c,a);b=e+80|0;Iv(b,h);xv(a,e,g);xv(f,c,g);xv(h,b,g);i=d;return}function Xv(a){a=a|0;var b=0,d=0;if(!a){b=1;return b|0}c[a+72>>2]=0;d=a;c[d>>2]=0;c[d+4>>2]=0;d=a+8|0;c[d>>2]=-205731576;c[d+4>>2]=1779033703;d=a+16|0;c[d>>2]=-2067093701;c[d+4>>2]=-1150833019;d=a+24|0;c[d>>2]=-23791573;c[d+4>>2]=1013904242;d=a+32|0;c[d>>2]=1595750129;c[d+4>>2]=-1521486534;d=a+40|0;c[d>>2]=-1377402159;c[d+4>>2]=1359893119;d=a+48|0;c[d>>2]=725511199;c[d+4>>2]=-1694144372;d=a+56|0;c[d>>2]=-79577749;c[d+4>>2]=528734635;d=a+64|0;c[d>>2]=327033209;c[d+4>>2]=1541459225;b=0;return b|0}function Yv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((b|0)==0|(d|0)==0){f=1;return f|0}g=b+72|0;h=c[g>>2]|0;if(h>>>0>128){f=1;return f|0}if(!e){f=0;return f|0}i=b+76|0;j=e;e=d;d=h;while(1){if(!(j>>>0>127&(d|0)==0)){h=128-d|0;k=j>>>0<h>>>0?j:h;if(!k)l=d;else{h=128-d|0;m=j>>>0>h>>>0?h:j;h=d;n=0;while(1){a[h+n+(b+76)>>0]=a[e+n>>0]|0;n=n+1|0;o=c[g>>2]|0;if((n|0)==(m|0)){l=o;break}else h=o}}h=l+k|0;c[g>>2]=h;m=e+k|0;n=j-k|0;if((h|0)==128){$v(b,i);h=b;o=CH(c[h>>2]|0,c[h+4>>2]|0,1024,0)|0;h=b;c[h>>2]=o;c[h+4>>2]=E;c[g>>2]=0;p=n;q=m}else{p=n;q=m}}else{$v(b,e);m=b;n=CH(c[m>>2]|0,c[m+4>>2]|0,1024,0)|0;m=b;c[m>>2]=n;c[m+4>>2]=E;p=j+-128|0;q=e+128|0}if(!p){f=0;break}j=p;e=q;d=c[g>>2]|0}return f|0}function Zv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((b|0)==0|(d|0)==0){e=1;return e|0}f=b+72|0;g=c[f>>2]|0;if(g>>>0>127){e=1;return e|0}h=DH(g|0,0,3)|0;i=b;j=CH(c[i>>2]|0,c[i+4>>2]|0,h|0,E|0)|0;h=b;c[h>>2]=j;c[h+4>>2]=E;c[f>>2]=g+1;h=b+76|0;a[b+76+g>>0]=-128;g=c[f>>2]|0;if(g>>>0>112){if(g>>>0<128){j=g;do{c[f>>2]=j+1;a[b+76+j>>0]=0;j=c[f>>2]|0}while(j>>>0<128)}$v(b,h);c[f>>2]=0;k=0}else k=g;do{c[f>>2]=k+1;a[b+76+k>>0]=0;k=c[f>>2]|0}while(k>>>0<120);k=b;f=c[k>>2]|0;g=c[k+4>>2]|0;k=xH(f|0,g|0,56)|0;a[b+196>>0]=k;k=xH(f|0,g|0,48)|0;a[b+197>>0]=k;k=xH(f|0,g|0,40)|0;a[b+198>>0]=k;a[b+199>>0]=g;k=xH(f|0,g|0,24)|0;a[b+200>>0]=k;k=xH(f|0,g|0,16)|0;a[b+201>>0]=k;k=xH(f|0,g|0,8)|0;a[b+202>>0]=k;a[b+203>>0]=f;$v(b,h);h=0;do{f=b+8+(h<<3)|0;k=f;g=xH(c[k>>2]|0,c[k+4>>2]|0,56)|0;k=h<<3;a[d+k>>0]=g;g=f;j=xH(c[g>>2]|0,c[g+4>>2]|0,48)|0;a[d+(k|1)>>0]=j;j=f;g=xH(c[j>>2]|0,c[j+4>>2]|0,40)|0;a[d+(k|2)>>0]=g;a[d+(k|3)>>0]=c[f+4>>2];g=f;j=xH(c[g>>2]|0,c[g+4>>2]|0,24)|0;a[d+(k|4)>>0]=j;j=f;g=xH(c[j>>2]|0,c[j+4>>2]|0,16)|0;a[d+(k|5)>>0]=g;g=f;j=xH(c[g>>2]|0,c[g+4>>2]|0,8)|0;a[d+(k|6)>>0]=j;a[d+(k|7)>>0]=c[f>>2];h=h+1|0}while((h|0)!=8);e=0;return e|0}function _v(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+208|0;f=e;c[f+72>>2]=0;g=f;c[g>>2]=0;c[g+4>>2]=0;g=f+8|0;c[g>>2]=-205731576;c[g+4>>2]=1779033703;g=f+16|0;c[g>>2]=-2067093701;c[g+4>>2]=-1150833019;g=f+24|0;c[g>>2]=-23791573;c[g+4>>2]=1013904242;g=f+32|0;c[g>>2]=1595750129;c[g+4>>2]=-1521486534;g=f+40|0;c[g>>2]=-1377402159;c[g+4>>2]=1359893119;g=f+48|0;c[g>>2]=725511199;c[g+4>>2]=-1694144372;g=f+56|0;c[g>>2]=-79577749;c[g+4>>2]=528734635;g=f+64|0;c[g>>2]=327033209;c[g+4>>2]=1541459225;g=Yv(f,a,b)|0;if(g){h=g;i=e;return h|0}h=Zv(f,d)|0;i=e;return h|0}function $v(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0;e=i;i=i+704|0;f=e+640|0;g=e;h=a+8|0;j=f;k=h;l=j+64|0;do{c[j>>2]=c[k>>2];j=j+4|0;k=k+4|0}while((j|0)<(l|0));k=0;do{j=k<<3;l=DH(d[b+j>>0]|0|0,0,56)|0;m=E;n=DH(d[b+(j|1)>>0]|0|0,0,48)|0;o=E|m;m=DH(d[b+(j|2)>>0]|0|0,0,40)|0;p=o|E|(d[b+(j|3)>>0]|0);o=DH(d[b+(j|4)>>0]|0|0,0,24)|0;q=p|E;p=DH(d[b+(j|5)>>0]|0|0,0,16)|0;r=q|E;q=DH(d[b+(j|6)>>0]|0|0,0,8)|0;s=g+(k<<3)|0;c[s>>2]=n|l|m|o|p|q|(d[b+(j|7)>>0]|0);c[s+4>>2]=r|E;k=k+1|0}while((k|0)!=16);k=g;b=c[k>>2]|0;r=c[k+4>>2]|0;k=16;do{s=g+(k+-2<<3)|0;j=c[s>>2]|0;q=c[s+4>>2]|0;s=xH(j|0,q|0,19)|0;p=E;o=DH(j|0,q|0,45)|0;m=p|E;p=xH(j|0,q|0,61)|0;l=E;n=DH(j|0,q|0,3)|0;t=l|E;l=xH(j|0,q|0,6)|0;q=t^E^m;m=g+(k+-7<<3)|0;t=c[m>>2]|0;j=c[m+4>>2]|0;m=g+(k+-15<<3)|0;u=b;b=c[m>>2]|0;v=r;r=c[m+4>>2]|0;m=xH(b|0,r|0,1)|0;w=E;x=DH(b|0,r|0,63)|0;y=w|E;w=xH(b|0,r|0,8)|0;z=E;A=DH(b|0,r|0,56)|0;B=z|E;z=xH(b|0,r|0,7)|0;C=B^E^y;y=CH(u|0,v|0,t|0,j|0)|0;j=CH(y|0,E|0,(p|n)^l^(s|o)|0,q|0)|0;q=CH(j|0,E|0,(w|A)^z^(m|x)|0,C|0)|0;C=g+(k<<3)|0;c[C>>2]=q;c[C+4>>2]=E;k=k+1|0}while((k|0)!=80);k=f+56|0;r=f+32|0;b=f+48|0;C=f+40|0;q=f;x=f+8|0;m=f+16|0;z=f+24|0;f=c[r>>2]|0;A=c[r+4>>2]|0;r=c[C>>2]|0;w=c[b>>2]|0;j=c[C+4>>2]|0;C=c[b+4>>2]|0;b=c[k>>2]|0;o=c[k+4>>2]|0;k=c[q>>2]|0;s=c[q+4>>2]|0;q=c[x>>2]|0;l=c[x+4>>2]|0;x=c[m>>2]|0;n=c[m+4>>2]|0;m=c[z>>2]|0;p=c[z+4>>2]|0;z=0;while(1){y=xH(f|0,A|0,14)|0;t=E;v=DH(f|0,A|0,50)|0;u=t|E;t=xH(f|0,A|0,18)|0;B=E;D=DH(f|0,A|0,46)|0;F=u^(B|E);B=xH(f|0,A|0,41)|0;u=E;G=DH(f|0,A|0,23)|0;H=F^(u|E);u=76168+(z<<3)|0;F=g+(z<<3)|0;I=c[F>>2]|0;J=c[F+4>>2]|0;F=CH(c[u>>2]|0,c[u+4>>2]|0,b|0,o|0)|0;u=CH(F|0,E|0,(y|v)^(t|D)^(B|G)|0,H|0)|0;H=CH(u|0,E|0,I|0,J|0)|0;J=CH(H|0,E|0,(r^w)&f^w|0,(j^C)&A^C|0)|0;H=E;I=xH(k|0,s|0,28)|0;u=E;G=DH(k|0,s|0,36)|0;B=u|E;u=xH(k|0,s|0,34)|0;D=E;t=DH(k|0,s|0,30)|0;v=B^(D|E);D=xH(k|0,s|0,39)|0;B=E;y=DH(k|0,s|0,25)|0;F=v^(B|E);B=CH(m|0,p|0,J|0,H|0)|0;v=E;K=CH((q|k)&x|q&k|0,(l|s)&n|l&s|0,J|0,H|0)|0;H=CH(K|0,E|0,(I|G)^(u|t)^(D|y)|0,F|0)|0;F=E;y=xH(B|0,v|0,14)|0;D=E;t=DH(B|0,v|0,50)|0;u=D|E;D=xH(B|0,v|0,18)|0;G=E;I=DH(B|0,v|0,46)|0;K=u^(G|E);G=xH(B|0,v|0,41)|0;u=E;J=DH(B|0,v|0,23)|0;L=K^(u|E);u=z|1;K=76168+(u<<3)|0;M=g+(u<<3)|0;u=c[M>>2]|0;N=c[M+4>>2]|0;M=CH(c[K>>2]|0,c[K+4>>2]|0,w|0,C|0)|0;K=CH(M|0,E|0,(y|t)^(D|I)^(G|J)|0,L|0)|0;L=CH(K|0,E|0,u|0,N|0)|0;N=CH(L|0,E|0,(f^r)&B^r|0,(A^j)&v^j|0)|0;L=E;u=xH(H|0,F|0,28)|0;K=E;J=DH(H|0,F|0,36)|0;G=K|E;K=xH(H|0,F|0,34)|0;I=E;D=DH(H|0,F|0,30)|0;t=G^(I|E);I=xH(H|0,F|0,39)|0;G=E;y=DH(H|0,F|0,25)|0;M=CH((k|H)&q|k&H|0,(s|F)&l|s&F|0,(u|J)^(K|D)^(I|y)|0,t^(G|E)|0)|0;G=E;t=CH(N|0,L|0,x|0,n|0)|0;y=E;I=CH(M|0,G|0,N|0,L|0)|0;L=E;N=xH(t|0,y|0,14)|0;G=E;M=DH(t|0,y|0,50)|0;D=G|E;G=xH(t|0,y|0,18)|0;K=E;J=DH(t|0,y|0,46)|0;u=D^(K|E);K=xH(t|0,y|0,41)|0;D=E;O=DH(t|0,y|0,23)|0;P=u^(D|E);D=z|2;u=76168+(D<<3)|0;Q=g+(D<<3)|0;D=c[Q>>2]|0;R=c[Q+4>>2]|0;Q=CH(c[u>>2]|0,c[u+4>>2]|0,r|0,j|0)|0;u=CH(Q|0,E|0,(N|M)^(G|J)^(K|O)|0,P|0)|0;P=CH(u|0,E|0,D|0,R|0)|0;R=CH(P|0,E|0,(B^f)&t^f|0,(v^A)&y^A|0)|0;P=E;D=xH(I|0,L|0,28)|0;u=E;O=DH(I|0,L|0,36)|0;K=u|E;u=xH(I|0,L|0,34)|0;J=E;G=DH(I|0,L|0,30)|0;M=K^(J|E);J=xH(I|0,L|0,39)|0;K=E;N=DH(I|0,L|0,25)|0;Q=CH((H|I)&k|H&I|0,(F|L)&s|F&L|0,(D|O)^(u|G)^(J|N)|0,M^(K|E)|0)|0;K=E;M=CH(R|0,P|0,q|0,l|0)|0;N=E;J=CH(Q|0,K|0,R|0,P|0)|0;P=E;R=xH(M|0,N|0,14)|0;K=E;Q=DH(M|0,N|0,50)|0;G=K|E;K=xH(M|0,N|0,18)|0;u=E;O=DH(M|0,N|0,46)|0;D=G^(u|E);u=xH(M|0,N|0,41)|0;G=E;S=DH(M|0,N|0,23)|0;T=D^(G|E);G=z|3;D=76168+(G<<3)|0;U=g+(G<<3)|0;G=c[U>>2]|0;V=c[U+4>>2]|0;U=CH(c[D>>2]|0,c[D+4>>2]|0,f|0,A|0)|0;D=CH(U|0,E|0,(R|Q)^(K|O)^(u|S)|0,T|0)|0;T=CH(D|0,E|0,G|0,V|0)|0;V=CH(T|0,E|0,(t^B)&M^B|0,(y^v)&N^v|0)|0;T=E;G=xH(J|0,P|0,28)|0;D=E;S=DH(J|0,P|0,36)|0;u=D|E;D=xH(J|0,P|0,34)|0;O=E;K=DH(J|0,P|0,30)|0;Q=u^(O|E);O=xH(J|0,P|0,39)|0;u=E;R=DH(J|0,P|0,25)|0;U=CH((I|J)&H|I&J|0,(L|P)&F|L&P|0,(G|S)^(D|K)^(O|R)|0,Q^(u|E)|0)|0;u=E;Q=CH(V|0,T|0,k|0,s|0)|0;R=E;O=CH(U|0,u|0,V|0,T|0)|0;T=E;V=xH(Q|0,R|0,14)|0;u=E;U=DH(Q|0,R|0,50)|0;K=u|E;u=xH(Q|0,R|0,18)|0;D=E;S=DH(Q|0,R|0,46)|0;G=K^(D|E);D=xH(Q|0,R|0,41)|0;K=E;W=DH(Q|0,R|0,23)|0;X=G^(K|E);K=z|4;G=76168+(K<<3)|0;Y=g+(K<<3)|0;K=c[Y>>2]|0;Z=c[Y+4>>2]|0;Y=CH(c[G>>2]|0,c[G+4>>2]|0,B|0,v|0)|0;v=CH(Y|0,E|0,(V|U)^(u|S)^(D|W)|0,X|0)|0;X=CH(v|0,E|0,K|0,Z|0)|0;Z=CH(X|0,E|0,(M^t)&Q^t|0,(N^y)&R^y|0)|0;X=E;K=xH(O|0,T|0,28)|0;v=E;W=DH(O|0,T|0,36)|0;D=v|E;v=xH(O|0,T|0,34)|0;S=E;u=DH(O|0,T|0,30)|0;U=D^(S|E);S=xH(O|0,T|0,39)|0;D=E;V=DH(O|0,T|0,25)|0;Y=CH((J|O)&I|J&O|0,(P|T)&L|P&T|0,(K|W)^(v|u)^(S|V)|0,U^(D|E)|0)|0;D=E;U=CH(Z|0,X|0,H|0,F|0)|0;F=E;H=CH(Y|0,D|0,Z|0,X|0)|0;X=E;Z=xH(U|0,F|0,14)|0;D=E;Y=DH(U|0,F|0,50)|0;V=D|E;D=xH(U|0,F|0,18)|0;S=E;u=DH(U|0,F|0,46)|0;v=V^(S|E);S=xH(U|0,F|0,41)|0;V=E;W=DH(U|0,F|0,23)|0;K=v^(V|E);V=z|5;v=76168+(V<<3)|0;B=g+(V<<3)|0;V=c[B>>2]|0;G=c[B+4>>2]|0;B=CH(c[v>>2]|0,c[v+4>>2]|0,t|0,y|0)|0;y=CH(B|0,E|0,(Z|Y)^(D|u)^(S|W)|0,K|0)|0;K=CH(y|0,E|0,V|0,G|0)|0;G=CH(K|0,E|0,(Q^M)&U^M|0,(R^N)&F^N|0)|0;K=E;V=xH(H|0,X|0,28)|0;y=E;W=DH(H|0,X|0,36)|0;S=y|E;y=xH(H|0,X|0,34)|0;u=E;D=DH(H|0,X|0,30)|0;Y=S^(u|E);u=xH(H|0,X|0,39)|0;S=E;Z=DH(H|0,X|0,25)|0;B=CH((O|H)&J|O&H|0,(T|X)&P|T&X|0,(V|W)^(y|D)^(u|Z)|0,Y^(S|E)|0)|0;S=E;Y=CH(G|0,K|0,I|0,L|0)|0;L=E;I=CH(B|0,S|0,G|0,K|0)|0;K=E;G=xH(Y|0,L|0,14)|0;S=E;B=DH(Y|0,L|0,50)|0;Z=S|E;S=xH(Y|0,L|0,18)|0;u=E;D=DH(Y|0,L|0,46)|0;y=Z^(u|E);u=xH(Y|0,L|0,41)|0;Z=E;W=DH(Y|0,L|0,23)|0;V=y^(Z|E);Z=z|6;y=76168+(Z<<3)|0;t=g+(Z<<3)|0;Z=c[t>>2]|0;v=c[t+4>>2]|0;t=CH(c[y>>2]|0,c[y+4>>2]|0,M|0,N|0)|0;N=CH(t|0,E|0,(G|B)^(S|D)^(u|W)|0,V|0)|0;V=CH(N|0,E|0,Z|0,v|0)|0;v=CH(V|0,E|0,(U^Q)&Y^Q|0,(F^R)&L^R|0)|0;V=E;Z=xH(I|0,K|0,28)|0;N=E;W=DH(I|0,K|0,36)|0;u=N|E;N=xH(I|0,K|0,34)|0;D=E;S=DH(I|0,K|0,30)|0;B=u^(D|E);D=xH(I|0,K|0,39)|0;u=E;G=DH(I|0,K|0,25)|0;t=CH((H|I)&O|H&I|0,(X|K)&T|X&K|0,(Z|W)^(N|S)^(D|G)|0,B^(u|E)|0)|0;u=E;B=CH(v|0,V|0,J|0,P|0)|0;P=E;J=CH(t|0,u|0,v|0,V|0)|0;V=E;v=xH(B|0,P|0,14)|0;u=E;t=DH(B|0,P|0,50)|0;G=u|E;u=xH(B|0,P|0,18)|0;D=E;S=DH(B|0,P|0,46)|0;N=G^(D|E);D=xH(B|0,P|0,41)|0;G=E;W=DH(B|0,P|0,23)|0;Z=N^(G|E);G=z|7;N=76168+(G<<3)|0;M=g+(G<<3)|0;G=c[M>>2]|0;y=c[M+4>>2]|0;M=CH(c[N>>2]|0,c[N+4>>2]|0,Q|0,R|0)|0;R=CH(M|0,E|0,(v|t)^(u|S)^(D|W)|0,Z|0)|0;Z=CH(R|0,E|0,G|0,y|0)|0;y=CH(Z|0,E|0,(Y^U)&B^U|0,(L^F)&P^F|0)|0;Z=E;G=xH(J|0,V|0,28)|0;R=E;W=DH(J|0,V|0,36)|0;D=R|E;R=xH(J|0,V|0,34)|0;S=E;u=DH(J|0,V|0,30)|0;t=D^(S|E);S=xH(J|0,V|0,39)|0;D=E;v=DH(J|0,V|0,25)|0;M=CH((I|J)&H|I&J|0,(K|V)&X|K&V|0,(G|W)^(R|u)^(S|v)|0,t^(D|E)|0)|0;D=E;t=CH(y|0,Z|0,O|0,T|0)|0;T=E;O=CH(M|0,D|0,y|0,Z|0)|0;Z=E;z=z+8|0;if((z|0)>=80){_=O;$=Z;aa=J;ba=V;ca=I;da=K;ea=H;fa=X;ga=t;ha=T;ia=B;ja=P;ka=Y;la=L;ma=U;na=F;break}else{f=t;A=T;r=B;w=Y;j=P;C=L;b=U;o=F;k=O;s=Z;q=J;l=V;x=I;n=K;m=H;p=X}}p=h;m=CH(_|0,$|0,c[p>>2]|0,c[p+4>>2]|0)|0;p=h;c[p>>2]=m;c[p+4>>2]=E;p=a+16|0;m=p;h=CH(aa|0,ba|0,c[m>>2]|0,c[m+4>>2]|0)|0;m=p;c[m>>2]=h;c[m+4>>2]=E;m=a+24|0;h=m;p=CH(ca|0,da|0,c[h>>2]|0,c[h+4>>2]|0)|0;h=m;c[h>>2]=p;c[h+4>>2]=E;h=a+32|0;p=h;m=CH(ea|0,fa|0,c[p>>2]|0,c[p+4>>2]|0)|0;p=h;c[p>>2]=m;c[p+4>>2]=E;p=a+40|0;m=p;h=CH(ga|0,ha|0,c[m>>2]|0,c[m+4>>2]|0)|0;m=p;c[m>>2]=h;c[m+4>>2]=E;m=a+48|0;h=m;p=CH(ia|0,ja|0,c[h>>2]|0,c[h+4>>2]|0)|0;h=m;c[h>>2]=p;c[h+4>>2]=E;h=a+56|0;p=h;m=CH(ka|0,la|0,c[p>>2]|0,c[p+4>>2]|0)|0;p=h;c[p>>2]=m;c[p+4>>2]=E;p=a+64|0;a=p;m=CH(ma|0,na|0,c[a>>2]|0,c[a+4>>2]|0)|0;a=p;c[a>>2]=m;c[a+4>>2]=E;i=e;return}function aw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+496|0;g=f;h=f+432|0;j=f+368|0;k=f+208|0;Xv(g)|0;Yv(g,e+32|0,32)|0;Yv(g,b,c)|0;Zv(g,j)|0;dw(j);Uv(k,j);Tv(a,k);Xv(g)|0;Yv(g,a,32)|0;Yv(g,d,32)|0;Yv(g,b,c)|0;Zv(g,h)|0;dw(h);ew(a+32|0,h,e,j);i=f;return}function bw(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+592|0;h=g+520|0;j=g+488|0;k=g;l=g+328|0;m=g+208|0;if((d[b+63>>0]|0)>31){n=0;i=g;return n|0}if(Sv(l,f)|0){n=0;i=g;return n|0}Xv(k)|0;Yv(k,b,32)|0;Yv(k,f,32)|0;Yv(k,c,e)|0;Zv(k,h)|0;dw(h);Nv(m,h,l,b+32|0);Vv(j,m);n=(a[b+1>>0]^a[j+1>>0]|a[b>>0]^a[j>>0]|a[b+2>>0]^a[j+2>>0]|a[b+3>>0]^a[j+3>>0]|a[b+4>>0]^a[j+4>>0]|a[b+5>>0]^a[j+5>>0]|a[b+6>>0]^a[j+6>>0]|a[b+7>>0]^a[j+7>>0]|a[b+8>>0]^a[j+8>>0]|a[b+9>>0]^a[j+9>>0]|a[b+10>>0]^a[j+10>>0]|a[b+11>>0]^a[j+11>>0]|a[b+12>>0]^a[j+12>>0]|a[b+13>>0]^a[j+13>>0]|a[b+14>>0]^a[j+14>>0]|a[b+15>>0]^a[j+15>>0]|a[b+16>>0]^a[j+16>>0]|a[b+17>>0]^a[j+17>>0]|a[b+18>>0]^a[j+18>>0]|a[b+19>>0]^a[j+19>>0]|a[b+20>>0]^a[j+20>>0]|a[b+21>>0]^a[j+21>>0]|a[b+22>>0]^a[j+22>>0]|a[b+23>>0]^a[j+23>>0]|a[b+24>>0]^a[j+24>>0]|a[b+25>>0]^a[j+25>>0]|a[b+26>>0]^a[j+26>>0]|a[b+27>>0]^a[j+27>>0]|a[b+28>>0]^a[j+28>>0]|a[b+29>>0]^a[j+29>>0]|a[b+30>>0]^a[j+30>>0]|a[b+31>>0]^a[j+31>>0])<<24>>24==0&1;i=g;return n|0}function cw(b,c,e){b=b|0;c=c|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+320|0;g=f+280|0;h=f+160|0;j=f+120|0;k=f+80|0;l=f+240|0;m=f;n=f+200|0;o=f+40|0;p=g;q=e;e=p+32|0;do{a[p>>0]=a[q>>0]|0;p=p+1|0;q=q+1|0}while((p|0)<(e|0));a[g>>0]=(d[g>>0]|0)&248;q=g+31|0;a[q>>0]=(d[q>>0]|0)&63|64;Av(h,c);vv(o);wv(n,h,o);Lv(o,o,h);Bv(o,o);Dv(h,n,o);vv(j);uv(k);zv(l,h);vv(m);c=254;p=0;while(1){e=(d[g+((c|0)/8|0)>>0]|0)>>>(c&7)&1;r=e^p;yv(j,l,r);yv(k,m,r);Lv(n,l,m);Lv(o,j,k);wv(j,j,k);wv(k,l,m);Dv(m,n,j);Dv(k,k,o);Cv(n,o);Cv(o,j);wv(l,m,k);Lv(k,m,k);Dv(j,o,n);Lv(o,o,n);Cv(k,k);Hv(m,o);Cv(l,l);wv(n,n,m);Dv(m,h,k);Dv(k,o,n);if((c|0)>0){c=c+-1|0;p=e}else{s=e;break}}yv(j,l,s);yv(k,m,s);Bv(k,k);Dv(j,j,k);Fv(b,j);a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;a[g+3>>0]=0;a[g+4>>0]=0;a[g+5>>0]=0;a[g+6>>0]=0;a[g+7>>0]=0;a[g+8>>0]=0;a[g+9>>0]=0;a[g+10>>0]=0;a[g+11>>0]=0;a[g+12>>0]=0;a[g+13>>0]=0;a[g+14>>0]=0;a[g+15>>0]=0;a[g+16>>0]=0;a[g+17>>0]=0;a[g+18>>0]=0;a[g+19>>0]=0;a[g+20>>0]=0;a[g+21>>0]=0;a[g+22>>0]=0;a[g+23>>0]=0;a[g+24>>0]=0;a[g+25>>0]=0;a[g+26>>0]=0;a[g+27>>0]=0;a[g+28>>0]=0;a[g+29>>0]=0;a[g+30>>0]=0;a[q>>0]=0;i=f;return}function dw(b){b=b|0;var c=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;c=b+1|0;e=b+2|0;f=a[e>>0]|0;g=d[b>>0]|0;h=DH(d[c>>0]|0|0,0,8)|0;i=E;j=f&255;f=DH(j|0,0,16)|0;k=b+3|0;l=DH(d[k>>0]|0|0,0,8)|0;m=E;n=b+4|0;o=DH(d[n>>0]|0|0,0,16)|0;p=m|E;m=b+5|0;q=d[m>>0]|0;r=DH(q|0,0,24)|0;s=xH(l|j|o|r|0,p|E|0,5)|0;p=b+6|0;r=b+7|0;o=a[r>>0]|0;j=DH(d[p>>0]|0|0,0,8)|0;l=E;t=o&255;o=DH(t|0,0,16)|0;u=xH(j|q|o|0,l|E|0,2)|0;l=b+8|0;o=DH(d[l>>0]|0|0,0,8)|0;q=E;j=b+9|0;v=DH(d[j>>0]|0|0,0,16)|0;w=q|E;q=b+10|0;x=d[q>>0]|0;y=DH(x|0,0,24)|0;z=xH(o|t|v|y|0,w|E|0,7)|0;w=b+11|0;y=DH(d[w>>0]|0|0,0,8)|0;v=E;t=b+12|0;o=DH(d[t>>0]|0|0,0,16)|0;A=v|E;v=b+13|0;B=d[v>>0]|0;C=DH(B|0,0,24)|0;D=xH(y|x|o|C|0,A|E|0,4)|0;A=b+14|0;C=b+15|0;o=a[C>>0]|0;x=DH(d[A>>0]|0|0,0,8)|0;y=E;F=o&255;o=DH(F|0,0,16)|0;G=xH(x|B|o|0,y|E|0,1)|0;y=b+16|0;o=DH(d[y>>0]|0|0,0,8)|0;B=E;x=b+17|0;H=DH(d[x>>0]|0|0,0,16)|0;I=B|E;B=b+18|0;J=d[B>>0]|0;K=DH(J|0,0,24)|0;L=xH(o|F|H|K|0,I|E|0,6)|0;I=b+19|0;K=b+20|0;H=a[K>>0]|0;F=DH(d[I>>0]|0|0,0,8)|0;o=E;M=DH(H&255|0,0,16)|0;H=xH(F|J|M|0,o|E|0,3)|0;o=E;M=b+21|0;J=b+22|0;F=b+23|0;N=a[F>>0]|0;O=d[M>>0]|0;P=DH(d[J>>0]|0|0,0,8)|0;Q=E;R=N&255;N=DH(R|0,0,16)|0;S=b+24|0;T=DH(d[S>>0]|0|0,0,8)|0;U=E;V=b+25|0;W=DH(d[V>>0]|0|0,0,16)|0;X=U|E;U=b+26|0;Y=d[U>>0]|0;Z=DH(Y|0,0,24)|0;_=xH(T|R|W|Z|0,X|E|0,5)|0;X=b+27|0;Z=b+28|0;W=a[Z>>0]|0;R=DH(d[X>>0]|0|0,0,8)|0;T=E;$=W&255;W=DH($|0,0,16)|0;aa=xH(R|Y|W|0,T|E|0,2)|0;T=b+29|0;W=DH(d[T>>0]|0|0,0,8)|0;Y=E;R=b+30|0;ba=DH(d[R>>0]|0|0,0,16)|0;ca=Y|E;Y=b+31|0;da=d[Y>>0]|0;ea=DH(da|0,0,24)|0;fa=xH(W|$|ba|ea|0,ca|E|0,7)|0;ca=DH(d[b+32>>0]|0|0,0,8)|0;ea=E;ba=DH(d[b+33>>0]|0|0,0,16)|0;$=ea|E;ea=d[b+34>>0]|0;W=DH(ea|0,0,24)|0;ga=xH(ca|da|ba|W|0,$|E|0,4)|0;$=a[b+36>>0]|0;W=DH(d[b+35>>0]|0|0,0,8)|0;ba=E;da=$&255;$=DH(da|0,0,16)|0;ca=xH(W|ea|$|0,ba|E|0,1)|0;ba=DH(d[b+37>>0]|0|0,0,8)|0;$=E;ea=DH(d[b+38>>0]|0|0,0,16)|0;W=$|E;$=d[b+39>>0]|0;ha=DH($|0,0,24)|0;ia=xH(ba|da|ea|ha|0,W|E|0,6)|0;W=a[b+41>>0]|0;ha=DH(d[b+40>>0]|0|0,0,8)|0;ea=E;da=DH(W&255|0,0,16)|0;W=xH(ha|$|da|0,ea|E|0,3)|0;ea=E;da=a[b+44>>0]|0;$=d[b+42>>0]|0;ha=DH(d[b+43>>0]|0|0,0,8)|0;ba=E;ja=da&255;da=DH(ja|0,0,16)|0;ka=DH(d[b+45>>0]|0|0,0,8)|0;la=E;ma=DH(d[b+46>>0]|0|0,0,16)|0;na=la|E;la=d[b+47>>0]|0;oa=DH(la|0,0,24)|0;pa=xH(ka|ja|ma|oa|0,na|E|0,5)|0;na=a[b+49>>0]|0;oa=DH(d[b+48>>0]|0|0,0,8)|0;ma=E;ja=na&255;na=DH(ja|0,0,16)|0;ka=xH(oa|la|na|0,ma|E|0,2)|0;ma=ka&2097151;ka=DH(d[b+50>>0]|0|0,0,8)|0;na=E;la=DH(d[b+51>>0]|0|0,0,16)|0;oa=na|E;na=d[b+52>>0]|0;qa=DH(na|0,0,24)|0;ra=xH(ka|ja|la|qa|0,oa|E|0,7)|0;oa=ra&2097151;ra=DH(d[b+53>>0]|0|0,0,8)|0;qa=E;la=DH(d[b+54>>0]|0|0,0,16)|0;ja=qa|E;qa=d[b+55>>0]|0;ka=DH(qa|0,0,24)|0;sa=xH(ra|na|la|ka|0,ja|E|0,4)|0;ja=sa&2097151;sa=a[b+57>>0]|0;ka=DH(d[b+56>>0]|0|0,0,8)|0;la=E;na=sa&255;sa=DH(na|0,0,16)|0;ra=xH(ka|qa|sa|0,la|E|0,1)|0;la=ra&2097151;ra=DH(d[b+58>>0]|0|0,0,8)|0;sa=E;qa=DH(d[b+59>>0]|0|0,0,16)|0;ka=sa|E;sa=d[b+60>>0]|0;ta=DH(sa|0,0,24)|0;ua=xH(ra|na|qa|ta|0,ka|E|0,6)|0;ka=ua&2097151;ua=DH(d[b+61>>0]|0|0,0,8)|0;ta=E;qa=DH(d[b+62>>0]|0|0,0,16)|0;na=ta|E;ta=DH(d[b+63>>0]|0|0,0,24)|0;ra=xH(ua|sa|qa|ta|0,na|E|0,3)|0;na=E;ta=IH(ra|0,na|0,666643,0)|0;qa=CH(fa&2097151|0,0,ta|0,E|0)|0;ta=E;fa=IH(ra|0,na|0,470296,0)|0;sa=CH(ga&2097151|0,0,fa|0,E|0)|0;fa=E;ga=IH(ra|0,na|0,654183,0)|0;ua=CH(ca&2097151|0,0,ga|0,E|0)|0;ga=E;ca=IH(ra|0,na|0,-997805,-1)|0;va=CH(ia&2097151|0,0,ca|0,E|0)|0;ca=E;ia=IH(ra|0,na|0,136657,0)|0;wa=CH(W|0,ea|0,ia|0,E|0)|0;ia=E;ea=IH(ra|0,na|0,-683901,-1)|0;na=CH(ha|$|da&2031616|0,ba|0,ea|0,E|0)|0;ea=E;ba=IH(ka|0,0,666643,0)|0;da=CH(aa&2097151|0,0,ba|0,E|0)|0;ba=E;aa=IH(ka|0,0,470296,0)|0;$=CH(aa|0,E|0,qa|0,ta|0)|0;ta=E;qa=IH(ka|0,0,654183,0)|0;aa=CH(qa|0,E|0,sa|0,fa|0)|0;fa=E;sa=IH(ka|0,0,-997805,-1)|0;qa=CH(sa|0,E|0,ua|0,ga|0)|0;ga=E;ua=IH(ka|0,0,136657,0)|0;sa=CH(ua|0,E|0,va|0,ca|0)|0;ca=E;va=IH(ka|0,0,-683901,-1)|0;ka=CH(wa|0,ia|0,va|0,E|0)|0;va=E;ia=IH(la|0,0,666643,0)|0;wa=CH(_&2097151|0,0,ia|0,E|0)|0;ia=E;_=IH(la|0,0,470296,0)|0;ua=CH(_|0,E|0,da|0,ba|0)|0;ba=E;da=IH(la|0,0,654183,0)|0;_=CH(da|0,E|0,$|0,ta|0)|0;ta=E;$=IH(la|0,0,-997805,-1)|0;da=CH($|0,E|0,aa|0,fa|0)|0;fa=E;aa=IH(la|0,0,136657,0)|0;$=CH(aa|0,E|0,qa|0,ga|0)|0;ga=E;qa=IH(la|0,0,-683901,-1)|0;la=CH(sa|0,ca|0,qa|0,E|0)|0;qa=E;ca=IH(ja|0,0,666643,0)|0;sa=E;aa=IH(ja|0,0,470296,0)|0;ha=CH(aa|0,E|0,wa|0,ia|0)|0;ia=E;wa=IH(ja|0,0,654183,0)|0;aa=CH(wa|0,E|0,ua|0,ba|0)|0;ba=E;ua=IH(ja|0,0,-997805,-1)|0;wa=CH(ua|0,E|0,_|0,ta|0)|0;ta=E;_=IH(ja|0,0,136657,0)|0;ua=CH(_|0,E|0,da|0,fa|0)|0;fa=E;da=IH(ja|0,0,-683901,-1)|0;ja=CH($|0,ga|0,da|0,E|0)|0;da=E;ga=IH(oa|0,0,666643,0)|0;$=E;_=IH(oa|0,0,470296,0)|0;ra=E;W=IH(oa|0,0,654183,0)|0;xa=CH(W|0,E|0,ha|0,ia|0)|0;ia=E;ha=IH(oa|0,0,-997805,-1)|0;W=CH(aa|0,ba|0,ha|0,E|0)|0;ha=E;ba=IH(oa|0,0,136657,0)|0;aa=CH(ba|0,E|0,wa|0,ta|0)|0;ta=E;wa=IH(oa|0,0,-683901,-1)|0;oa=CH(ua|0,fa|0,wa|0,E|0)|0;wa=E;fa=IH(ma|0,0,666643,0)|0;ua=CH(fa|0,E|0,L&2097151|0,0)|0;L=E;fa=IH(ma|0,0,470296,0)|0;ba=E;ya=IH(ma|0,0,654183,0)|0;za=CH(ya|0,E|0,P|O|N&2031616|0,Q|0)|0;Q=CH(za|0,E|0,_|0,ra|0)|0;ra=CH(Q|0,E|0,ca|0,sa|0)|0;sa=E;ca=IH(ma|0,0,-997805,-1)|0;Q=CH(xa|0,ia|0,ca|0,E|0)|0;ca=E;ia=IH(ma|0,0,136657,0)|0;xa=CH(W|0,ha|0,ia|0,E|0)|0;ia=E;ha=IH(ma|0,0,-683901,-1)|0;ma=CH(aa|0,ta|0,ha|0,E|0)|0;ha=E;ta=CH(ua|0,L|0,1048576,0)|0;aa=xH(ta|0,E|0,21)|0;ta=E;W=CH(fa|0,ba|0,H|0,o|0)|0;o=CH(W|0,E|0,aa|0,ta|0)|0;W=CH(o|0,E|0,ga|0,$|0)|0;$=E;ga=DH(aa|0,ta|0,21)|0;ta=vH(ua|0,L|0,ga|0,E|0)|0;ga=E;L=CH(ra|0,sa|0,1048576,0)|0;ua=xH(L|0,E|0,21)|0;L=E;aa=CH(Q|0,ca|0,ua|0,L|0)|0;ca=E;Q=DH(ua|0,L|0,21)|0;L=vH(ra|0,sa|0,Q|0,E|0)|0;Q=E;sa=CH(xa|0,ia|0,1048576,0)|0;ra=wH(sa|0,E|0,21)|0;sa=E;ua=CH(ma|0,ha|0,ra|0,sa|0)|0;ha=E;ma=DH(ra|0,sa|0,21)|0;sa=vH(xa|0,ia|0,ma|0,E|0)|0;ma=E;ia=CH(oa|0,wa|0,1048576,0)|0;xa=wH(ia|0,E|0,21)|0;ia=E;ra=CH(xa|0,ia|0,ja|0,da|0)|0;da=E;ja=DH(xa|0,ia|0,21)|0;ia=vH(oa|0,wa|0,ja|0,E|0)|0;ja=E;wa=CH(la|0,qa|0,1048576,0)|0;oa=wH(wa|0,E|0,21)|0;wa=E;xa=CH(oa|0,wa|0,ka|0,va|0)|0;va=E;ka=DH(oa|0,wa|0,21)|0;wa=vH(la|0,qa|0,ka|0,E|0)|0;ka=E;qa=CH(na|0,ea|0,1048576,0)|0;la=wH(qa|0,E|0,21)|0;qa=E;oa=CH(la|0,qa|0,pa&2097151|0,0)|0;pa=E;o=DH(la|0,qa|0,21)|0;qa=vH(na|0,ea|0,o|0,E|0)|0;o=E;ea=CH(W|0,$|0,1048576,0)|0;na=xH(ea|0,E|0,21)|0;ea=E;la=CH(na|0,ea|0,L|0,Q|0)|0;Q=E;L=DH(na|0,ea|0,21)|0;ea=vH(W|0,$|0,L|0,E|0)|0;L=E;$=CH(aa|0,ca|0,1048576,0)|0;W=wH($|0,E|0,21)|0;$=E;na=CH(W|0,$|0,sa|0,ma|0)|0;ma=E;sa=DH(W|0,$|0,21)|0;$=vH(aa|0,ca|0,sa|0,E|0)|0;sa=E;ca=CH(ua|0,ha|0,1048576,0)|0;aa=wH(ca|0,E|0,21)|0;ca=E;W=CH(ia|0,ja|0,aa|0,ca|0)|0;ja=E;ia=DH(aa|0,ca|0,21)|0;ca=vH(ua|0,ha|0,ia|0,E|0)|0;ia=E;ha=CH(ra|0,da|0,1048576,0)|0;ua=wH(ha|0,E|0,21)|0;ha=E;aa=CH(ua|0,ha|0,wa|0,ka|0)|0;ka=E;wa=DH(ua|0,ha|0,21)|0;ha=vH(ra|0,da|0,wa|0,E|0)|0;wa=E;da=CH(xa|0,va|0,1048576,0)|0;ra=wH(da|0,E|0,21)|0;da=E;ua=CH(ra|0,da|0,qa|0,o|0)|0;o=E;qa=DH(ra|0,da|0,21)|0;da=vH(xa|0,va|0,qa|0,E|0)|0;qa=E;va=IH(oa|0,pa|0,666643,0)|0;xa=CH(G&2097151|0,0,va|0,E|0)|0;va=E;G=IH(oa|0,pa|0,470296,0)|0;ra=CH(ta|0,ga|0,G|0,E|0)|0;G=E;ga=IH(oa|0,pa|0,654183,0)|0;ta=CH(ea|0,L|0,ga|0,E|0)|0;ga=E;L=IH(oa|0,pa|0,-997805,-1)|0;ea=CH(la|0,Q|0,L|0,E|0)|0;L=E;Q=IH(oa|0,pa|0,136657,0)|0;la=CH($|0,sa|0,Q|0,E|0)|0;Q=E;sa=IH(oa|0,pa|0,-683901,-1)|0;pa=CH(na|0,ma|0,sa|0,E|0)|0;sa=E;ma=IH(ua|0,o|0,666643,0)|0;na=CH(D&2097151|0,0,ma|0,E|0)|0;ma=E;D=IH(ua|0,o|0,470296,0)|0;oa=CH(xa|0,va|0,D|0,E|0)|0;D=E;va=IH(ua|0,o|0,654183,0)|0;xa=CH(ra|0,G|0,va|0,E|0)|0;va=E;G=IH(ua|0,o|0,-997805,-1)|0;ra=CH(ta|0,ga|0,G|0,E|0)|0;G=E;ga=IH(ua|0,o|0,136657,0)|0;ta=CH(ea|0,L|0,ga|0,E|0)|0;ga=E;L=IH(ua|0,o|0,-683901,-1)|0;o=CH(la|0,Q|0,L|0,E|0)|0;L=E;Q=IH(da|0,qa|0,666643,0)|0;la=CH(z&2097151|0,0,Q|0,E|0)|0;Q=E;z=IH(da|0,qa|0,470296,0)|0;ua=CH(na|0,ma|0,z|0,E|0)|0;z=E;ma=IH(da|0,qa|0,654183,0)|0;na=CH(oa|0,D|0,ma|0,E|0)|0;ma=E;D=IH(da|0,qa|0,-997805,-1)|0;oa=CH(xa|0,va|0,D|0,E|0)|0;D=E;va=IH(da|0,qa|0,136657,0)|0;xa=CH(ra|0,G|0,va|0,E|0)|0;va=E;G=IH(da|0,qa|0,-683901,-1)|0;qa=CH(ta|0,ga|0,G|0,E|0)|0;G=E;ga=IH(aa|0,ka|0,666643,0)|0;ta=E;da=IH(aa|0,ka|0,470296,0)|0;ra=CH(la|0,Q|0,da|0,E|0)|0;da=E;Q=IH(aa|0,ka|0,654183,0)|0;la=CH(ua|0,z|0,Q|0,E|0)|0;Q=E;z=IH(aa|0,ka|0,-997805,-1)|0;ua=CH(na|0,ma|0,z|0,E|0)|0;z=E;ma=IH(aa|0,ka|0,136657,0)|0;na=CH(oa|0,D|0,ma|0,E|0)|0;ma=E;D=IH(aa|0,ka|0,-683901,-1)|0;ka=CH(xa|0,va|0,D|0,E|0)|0;D=E;va=IH(ha|0,wa|0,666643,0)|0;xa=E;aa=IH(ha|0,wa|0,470296,0)|0;oa=E;ea=IH(ha|0,wa|0,654183,0)|0;$=CH(ra|0,da|0,ea|0,E|0)|0;ea=E;da=IH(ha|0,wa|0,-997805,-1)|0;ra=CH(la|0,Q|0,da|0,E|0)|0;da=E;Q=IH(ha|0,wa|0,136657,0)|0;la=CH(ua|0,z|0,Q|0,E|0)|0;Q=E;z=IH(ha|0,wa|0,-683901,-1)|0;wa=CH(na|0,ma|0,z|0,E|0)|0;z=E;ma=IH(W|0,ja|0,666643,0)|0;na=CH(ma|0,E|0,h|g|f&2031616|0,i|0)|0;i=E;f=IH(W|0,ja|0,470296,0)|0;g=E;h=IH(W|0,ja|0,654183,0)|0;ma=CH(h|0,E|0,u&2097151|0,0)|0;u=CH(ma|0,E|0,ga|0,ta|0)|0;ta=CH(u|0,E|0,aa|0,oa|0)|0;oa=E;aa=IH(W|0,ja|0,-997805,-1)|0;u=CH($|0,ea|0,aa|0,E|0)|0;aa=E;ea=IH(W|0,ja|0,136657,0)|0;$=CH(ra|0,da|0,ea|0,E|0)|0;ea=E;da=IH(W|0,ja|0,-683901,-1)|0;ja=CH(la|0,Q|0,da|0,E|0)|0;da=E;Q=CH(na|0,i|0,1048576,0)|0;la=wH(Q|0,E|0,21)|0;Q=E;W=CH(f|0,g|0,s&2097151|0,0)|0;s=CH(W|0,E|0,va|0,xa|0)|0;xa=CH(s|0,E|0,la|0,Q|0)|0;s=E;va=DH(la|0,Q|0,21)|0;Q=vH(na|0,i|0,va|0,E|0)|0;va=E;i=CH(ta|0,oa|0,1048576,0)|0;na=wH(i|0,E|0,21)|0;i=E;la=CH(na|0,i|0,u|0,aa|0)|0;aa=E;u=DH(na|0,i|0,21)|0;i=E;na=CH($|0,ea|0,1048576,0)|0;W=wH(na|0,E|0,21)|0;na=E;g=CH(W|0,na|0,ja|0,da|0)|0;da=E;ja=DH(W|0,na|0,21)|0;na=E;W=CH(wa|0,z|0,1048576,0)|0;f=wH(W|0,E|0,21)|0;W=E;ra=CH(f|0,W|0,ka|0,D|0)|0;D=E;ka=DH(f|0,W|0,21)|0;W=vH(wa|0,z|0,ka|0,E|0)|0;ka=E;z=CH(qa|0,G|0,1048576,0)|0;wa=wH(z|0,E|0,21)|0;z=E;f=CH(wa|0,z|0,o|0,L|0)|0;L=E;o=DH(wa|0,z|0,21)|0;z=vH(qa|0,G|0,o|0,E|0)|0;o=E;G=CH(pa|0,sa|0,1048576,0)|0;qa=wH(G|0,E|0,21)|0;G=E;wa=CH(ca|0,ia|0,qa|0,G|0)|0;ia=E;ca=DH(qa|0,G|0,21)|0;G=vH(pa|0,sa|0,ca|0,E|0)|0;ca=E;sa=CH(xa|0,s|0,1048576,0)|0;pa=wH(sa|0,E|0,21)|0;sa=E;qa=DH(pa|0,sa|0,21)|0;ga=E;ma=CH(la|0,aa|0,1048576,0)|0;h=wH(ma|0,E|0,21)|0;ma=E;ha=DH(h|0,ma|0,21)|0;ua=vH(la|0,aa|0,ha|0,E|0)|0;ha=E;aa=CH(g|0,da|0,1048576,0)|0;la=wH(aa|0,E|0,21)|0;aa=E;H=CH(W|0,ka|0,la|0,aa|0)|0;ka=E;W=DH(la|0,aa|0,21)|0;aa=vH(g|0,da|0,W|0,E|0)|0;W=E;da=CH(ra|0,D|0,1048576,0)|0;g=wH(da|0,E|0,21)|0;da=E;la=CH(z|0,o|0,g|0,da|0)|0;o=E;z=DH(g|0,da|0,21)|0;da=vH(ra|0,D|0,z|0,E|0)|0;z=E;D=CH(f|0,L|0,1048576,0)|0;ra=wH(D|0,E|0,21)|0;D=E;g=CH(G|0,ca|0,ra|0,D|0)|0;ca=E;G=DH(ra|0,D|0,21)|0;D=vH(f|0,L|0,G|0,E|0)|0;G=E;L=CH(wa|0,ia|0,1048576,0)|0;f=wH(L|0,E|0,21)|0;L=E;ra=DH(f|0,L|0,21)|0;ba=vH(wa|0,ia|0,ra|0,E|0)|0;ra=E;ia=IH(f|0,L|0,666643,0)|0;wa=CH(Q|0,va|0,ia|0,E|0)|0;ia=E;va=IH(f|0,L|0,470296,0)|0;Q=E;fa=IH(f|0,L|0,654183,0)|0;_=E;za=IH(f|0,L|0,-997805,-1)|0;N=CH(ua|0,ha|0,za|0,E|0)|0;za=E;ha=IH(f|0,L|0,136657,0)|0;ua=E;O=IH(f|0,L|0,-683901,-1)|0;L=CH(aa|0,W|0,O|0,E|0)|0;O=E;W=wH(wa|0,ia|0,21)|0;aa=E;f=CH(xa|0,s|0,va|0,Q|0)|0;Q=CH(f|0,E|0,W|0,aa|0)|0;f=vH(Q|0,E|0,qa|0,ga|0)|0;ga=E;qa=DH(W|0,aa|0,21)|0;aa=vH(wa|0,ia|0,qa|0,E|0)|0;qa=E;ia=wH(f|0,ga|0,21)|0;wa=E;W=CH(fa|0,_|0,ta|0,oa|0)|0;oa=vH(W|0,E|0,u|0,i|0)|0;i=CH(oa|0,E|0,pa|0,sa|0)|0;sa=CH(i|0,E|0,ia|0,wa|0)|0;i=E;pa=DH(ia|0,wa|0,21)|0;wa=vH(f|0,ga|0,pa|0,E|0)|0;pa=E;ga=wH(sa|0,i|0,21)|0;f=E;ia=CH(ga|0,f|0,N|0,za|0)|0;za=E;N=DH(ga|0,f|0,21)|0;f=vH(sa|0,i|0,N|0,E|0)|0;N=E;i=wH(ia|0,za|0,21)|0;sa=E;ga=CH(ha|0,ua|0,$|0,ea|0)|0;ea=vH(ga|0,E|0,ja|0,na|0)|0;na=CH(ea|0,E|0,h|0,ma|0)|0;ma=CH(na|0,E|0,i|0,sa|0)|0;na=E;h=DH(i|0,sa|0,21)|0;sa=vH(ia|0,za|0,h|0,E|0)|0;h=E;za=wH(ma|0,na|0,21)|0;ia=E;i=CH(za|0,ia|0,L|0,O|0)|0;O=E;L=DH(za|0,ia|0,21)|0;ia=vH(ma|0,na|0,L|0,E|0)|0;L=E;na=wH(i|0,O|0,21)|0;ma=E;za=CH(H|0,ka|0,na|0,ma|0)|0;ka=E;H=DH(na|0,ma|0,21)|0;ma=vH(i|0,O|0,H|0,E|0)|0;H=E;O=wH(za|0,ka|0,21)|0;i=E;na=CH(O|0,i|0,da|0,z|0)|0;z=E;da=DH(O|0,i|0,21)|0;i=vH(za|0,ka|0,da|0,E|0)|0;da=E;ka=wH(na|0,z|0,21)|0;za=E;O=CH(la|0,o|0,ka|0,za|0)|0;o=E;la=DH(ka|0,za|0,21)|0;za=vH(na|0,z|0,la|0,E|0)|0;la=E;z=wH(O|0,o|0,21)|0;na=E;ka=CH(z|0,na|0,D|0,G|0)|0;G=E;D=DH(z|0,na|0,21)|0;na=vH(O|0,o|0,D|0,E|0)|0;D=E;o=wH(ka|0,G|0,21)|0;O=E;z=CH(g|0,ca|0,o|0,O|0)|0;ca=E;g=DH(o|0,O|0,21)|0;O=vH(ka|0,G|0,g|0,E|0)|0;g=E;G=wH(z|0,ca|0,21)|0;ka=E;o=CH(G|0,ka|0,ba|0,ra|0)|0;ra=E;ba=DH(G|0,ka|0,21)|0;ka=vH(z|0,ca|0,ba|0,E|0)|0;ba=E;ca=wH(o|0,ra|0,21)|0;z=E;G=DH(ca|0,z|0,21)|0;ea=vH(o|0,ra|0,G|0,E|0)|0;G=E;ra=IH(ca|0,z|0,666643,0)|0;o=CH(ra|0,E|0,aa|0,qa|0)|0;qa=E;aa=IH(ca|0,z|0,470296,0)|0;ra=CH(wa|0,pa|0,aa|0,E|0)|0;aa=E;pa=IH(ca|0,z|0,654183,0)|0;wa=CH(f|0,N|0,pa|0,E|0)|0;pa=E;N=IH(ca|0,z|0,-997805,-1)|0;f=CH(sa|0,h|0,N|0,E|0)|0;N=E;h=IH(ca|0,z|0,136657,0)|0;sa=CH(ia|0,L|0,h|0,E|0)|0;h=E;L=IH(ca|0,z|0,-683901,-1)|0;z=CH(ma|0,H|0,L|0,E|0)|0;L=E;H=wH(o|0,qa|0,21)|0;ma=E;ca=CH(ra|0,aa|0,H|0,ma|0)|0;aa=E;ra=DH(H|0,ma|0,21)|0;ma=vH(o|0,qa|0,ra|0,E|0)|0;ra=E;qa=wH(ca|0,aa|0,21)|0;o=E;H=CH(wa|0,pa|0,qa|0,o|0)|0;pa=E;wa=DH(qa|0,o|0,21)|0;o=vH(ca|0,aa|0,wa|0,E|0)|0;wa=E;aa=wH(H|0,pa|0,21)|0;ca=E;qa=CH(aa|0,ca|0,f|0,N|0)|0;N=E;f=DH(aa|0,ca|0,21)|0;ca=vH(H|0,pa|0,f|0,E|0)|0;f=E;pa=wH(qa|0,N|0,21)|0;H=E;aa=CH(sa|0,h|0,pa|0,H|0)|0;h=E;sa=DH(pa|0,H|0,21)|0;H=vH(qa|0,N|0,sa|0,E|0)|0;sa=E;N=wH(aa|0,h|0,21)|0;qa=E;pa=CH(N|0,qa|0,z|0,L|0)|0;L=E;z=DH(N|0,qa|0,21)|0;qa=vH(aa|0,h|0,z|0,E|0)|0;z=E;h=wH(pa|0,L|0,21)|0;aa=E;N=CH(h|0,aa|0,i|0,da|0)|0;da=E;i=DH(h|0,aa|0,21)|0;aa=vH(pa|0,L|0,i|0,E|0)|0;i=E;L=wH(N|0,da|0,21)|0;pa=E;h=CH(L|0,pa|0,za|0,la|0)|0;la=E;za=DH(L|0,pa|0,21)|0;pa=vH(N|0,da|0,za|0,E|0)|0;za=E;da=wH(h|0,la|0,21)|0;N=E;L=CH(da|0,N|0,na|0,D|0)|0;D=E;na=DH(da|0,N|0,21)|0;N=vH(h|0,la|0,na|0,E|0)|0;na=E;la=wH(L|0,D|0,21)|0;h=E;da=CH(la|0,h|0,O|0,g|0)|0;g=E;O=DH(la|0,h|0,21)|0;h=vH(L|0,D|0,O|0,E|0)|0;O=E;D=wH(da|0,g|0,21)|0;L=E;la=CH(D|0,L|0,ka|0,ba|0)|0;ba=E;ka=DH(D|0,L|0,21)|0;L=vH(da|0,g|0,ka|0,E|0)|0;ka=E;g=wH(la|0,ba|0,21)|0;da=E;D=CH(g|0,da|0,ea|0,G|0)|0;G=E;ea=DH(g|0,da|0,21)|0;da=vH(la|0,ba|0,ea|0,E|0)|0;ea=E;a[b>>0]=ma;b=xH(ma|0,ra|0,8)|0;a[c>>0]=b;b=xH(ma|0,ra|0,16)|0;ra=E;ra=DH(o|0,wa|0,5)|0;a[e>>0]=ra|b;b=xH(o|0,wa|0,3)|0;a[k>>0]=b;b=xH(o|0,wa|0,11)|0;a[n>>0]=b;b=xH(o|0,wa|0,19)|0;wa=E;wa=DH(ca|0,f|0,2)|0;a[m>>0]=wa|b;b=xH(ca|0,f|0,6)|0;a[p>>0]=b;b=xH(ca|0,f|0,14)|0;f=E;f=DH(H|0,sa|0,7)|0;a[r>>0]=f|b;b=xH(H|0,sa|0,1)|0;a[l>>0]=b;b=xH(H|0,sa|0,9)|0;a[j>>0]=b;b=xH(H|0,sa|0,17)|0;sa=E;sa=DH(qa|0,z|0,4)|0;a[q>>0]=sa|b;b=xH(qa|0,z|0,4)|0;a[w>>0]=b;b=xH(qa|0,z|0,12)|0;a[t>>0]=b;b=xH(qa|0,z|0,20)|0;z=E;z=DH(aa|0,i|0,1)|0;a[v>>0]=z|b;b=xH(aa|0,i|0,7)|0;a[A>>0]=b;b=xH(aa|0,i|0,15)|0;i=E;i=DH(pa|0,za|0,6)|0;a[C>>0]=i|b;b=xH(pa|0,za|0,2)|0;a[y>>0]=b;b=xH(pa|0,za|0,10)|0;a[x>>0]=b;b=xH(pa|0,za|0,18)|0;za=E;za=DH(N|0,na|0,3)|0;a[B>>0]=za|b;b=xH(N|0,na|0,5)|0;a[I>>0]=b;b=xH(N|0,na|0,13)|0;a[K>>0]=b;a[M>>0]=h;M=xH(h|0,O|0,8)|0;a[J>>0]=M;M=xH(h|0,O|0,16)|0;O=E;O=DH(L|0,ka|0,5)|0;a[F>>0]=O|M;M=xH(L|0,ka|0,3)|0;a[S>>0]=M;M=xH(L|0,ka|0,11)|0;a[V>>0]=M;M=xH(L|0,ka|0,19)|0;ka=E;ka=DH(da|0,ea|0,2)|0;a[U>>0]=ka|M;M=xH(da|0,ea|0,6)|0;a[X>>0]=M;M=xH(da|0,ea|0,14)|0;ea=E;ea=DH(D|0,G|0,7)|0;a[Z>>0]=M|ea;ea=xH(D|0,G|0,1)|0;a[T>>0]=ea;ea=xH(D|0,G|0,9)|0;a[R>>0]=ea;ea=xH(D|0,G|0,17)|0;a[Y>>0]=ea;return}function ew(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0;g=a[c+2>>0]|0;h=d[c>>0]|0;i=DH(d[c+1>>0]|0|0,0,8)|0;j=E;k=g&255;g=DH(k|0,0,16)|0;l=i|h|g&2031616;g=DH(d[c+3>>0]|0|0,0,8)|0;h=E;i=DH(d[c+4>>0]|0|0,0,16)|0;m=h|E;h=d[c+5>>0]|0;n=DH(h|0,0,24)|0;o=xH(g|k|i|n|0,m|E|0,5)|0;m=o&2097151;o=a[c+7>>0]|0;n=DH(d[c+6>>0]|0|0,0,8)|0;i=E;k=o&255;o=DH(k|0,0,16)|0;g=xH(n|h|o|0,i|E|0,2)|0;i=g&2097151;g=DH(d[c+8>>0]|0|0,0,8)|0;o=E;h=DH(d[c+9>>0]|0|0,0,16)|0;n=o|E;o=d[c+10>>0]|0;p=DH(o|0,0,24)|0;q=xH(g|k|h|p|0,n|E|0,7)|0;n=q&2097151;q=DH(d[c+11>>0]|0|0,0,8)|0;p=E;h=DH(d[c+12>>0]|0|0,0,16)|0;k=p|E;p=d[c+13>>0]|0;g=DH(p|0,0,24)|0;r=xH(q|o|h|g|0,k|E|0,4)|0;k=r&2097151;r=a[c+15>>0]|0;g=DH(d[c+14>>0]|0|0,0,8)|0;h=E;o=r&255;r=DH(o|0,0,16)|0;q=xH(g|p|r|0,h|E|0,1)|0;h=q&2097151;q=DH(d[c+16>>0]|0|0,0,8)|0;r=E;p=DH(d[c+17>>0]|0|0,0,16)|0;g=r|E;r=d[c+18>>0]|0;s=DH(r|0,0,24)|0;t=xH(q|o|p|s|0,g|E|0,6)|0;g=t&2097151;t=a[c+20>>0]|0;s=DH(d[c+19>>0]|0|0,0,8)|0;p=E;o=DH(t&255|0,0,16)|0;t=xH(s|r|o|0,p|E|0,3)|0;p=E;o=a[c+23>>0]|0;r=d[c+21>>0]|0;s=DH(d[c+22>>0]|0|0,0,8)|0;q=E;u=o&255;o=DH(u|0,0,16)|0;v=s|r|o&2031616;o=DH(d[c+24>>0]|0|0,0,8)|0;r=E;s=DH(d[c+25>>0]|0|0,0,16)|0;w=r|E;r=d[c+26>>0]|0;x=DH(r|0,0,24)|0;y=xH(o|u|s|x|0,w|E|0,5)|0;w=y&2097151;y=a[c+28>>0]|0;x=DH(d[c+27>>0]|0|0,0,8)|0;s=E;u=y&255;y=DH(u|0,0,16)|0;o=xH(x|r|y|0,s|E|0,2)|0;s=o&2097151;o=DH(d[c+29>>0]|0|0,0,8)|0;y=E;r=DH(d[c+30>>0]|0|0,0,16)|0;x=y|E;y=DH(d[c+31>>0]|0|0,0,24)|0;c=xH(o|u|r|y|0,x|E|0,7)|0;x=E;y=a[e+2>>0]|0;r=d[e>>0]|0;u=DH(d[e+1>>0]|0|0,0,8)|0;o=E;z=y&255;y=DH(z|0,0,16)|0;A=u|r|y&2031616;y=DH(d[e+3>>0]|0|0,0,8)|0;r=E;u=DH(d[e+4>>0]|0|0,0,16)|0;B=r|E;r=d[e+5>>0]|0;C=DH(r|0,0,24)|0;D=xH(y|z|u|C|0,B|E|0,5)|0;B=D&2097151;D=a[e+7>>0]|0;C=DH(d[e+6>>0]|0|0,0,8)|0;u=E;z=D&255;D=DH(z|0,0,16)|0;y=xH(C|r|D|0,u|E|0,2)|0;u=y&2097151;y=DH(d[e+8>>0]|0|0,0,8)|0;D=E;r=DH(d[e+9>>0]|0|0,0,16)|0;C=D|E;D=d[e+10>>0]|0;F=DH(D|0,0,24)|0;G=xH(y|z|r|F|0,C|E|0,7)|0;C=G&2097151;G=DH(d[e+11>>0]|0|0,0,8)|0;F=E;r=DH(d[e+12>>0]|0|0,0,16)|0;z=F|E;F=d[e+13>>0]|0;y=DH(F|0,0,24)|0;H=xH(G|D|r|y|0,z|E|0,4)|0;z=H&2097151;H=a[e+15>>0]|0;y=DH(d[e+14>>0]|0|0,0,8)|0;r=E;D=H&255;H=DH(D|0,0,16)|0;G=xH(y|F|H|0,r|E|0,1)|0;r=G&2097151;G=DH(d[e+16>>0]|0|0,0,8)|0;H=E;F=DH(d[e+17>>0]|0|0,0,16)|0;y=H|E;H=d[e+18>>0]|0;I=DH(H|0,0,24)|0;J=xH(G|D|F|I|0,y|E|0,6)|0;y=J&2097151;J=a[e+20>>0]|0;I=DH(d[e+19>>0]|0|0,0,8)|0;F=E;D=DH(J&255|0,0,16)|0;J=xH(I|H|D|0,F|E|0,3)|0;F=E;D=a[e+23>>0]|0;H=d[e+21>>0]|0;I=DH(d[e+22>>0]|0|0,0,8)|0;G=E;K=D&255;D=DH(K|0,0,16)|0;L=I|H|D&2031616;D=DH(d[e+24>>0]|0|0,0,8)|0;H=E;I=DH(d[e+25>>0]|0|0,0,16)|0;M=H|E;H=d[e+26>>0]|0;N=DH(H|0,0,24)|0;O=xH(D|K|I|N|0,M|E|0,5)|0;M=O&2097151;O=a[e+28>>0]|0;N=DH(d[e+27>>0]|0|0,0,8)|0;I=E;K=O&255;O=DH(K|0,0,16)|0;D=xH(N|H|O|0,I|E|0,2)|0;I=D&2097151;D=DH(d[e+29>>0]|0|0,0,8)|0;O=E;H=DH(d[e+30>>0]|0|0,0,16)|0;N=O|E;O=DH(d[e+31>>0]|0|0,0,24)|0;e=xH(D|K|H|O|0,N|E|0,7)|0;N=E;O=a[f+2>>0]|0;H=d[f>>0]|0;K=DH(d[f+1>>0]|0|0,0,8)|0;D=E;P=O&255;O=DH(P|0,0,16)|0;Q=DH(d[f+3>>0]|0|0,0,8)|0;R=E;S=DH(d[f+4>>0]|0|0,0,16)|0;T=R|E;R=d[f+5>>0]|0;U=DH(R|0,0,24)|0;V=xH(Q|P|S|U|0,T|E|0,5)|0;T=a[f+7>>0]|0;U=DH(d[f+6>>0]|0|0,0,8)|0;S=E;P=T&255;T=DH(P|0,0,16)|0;Q=xH(U|R|T|0,S|E|0,2)|0;S=DH(d[f+8>>0]|0|0,0,8)|0;T=E;R=DH(d[f+9>>0]|0|0,0,16)|0;U=T|E;T=d[f+10>>0]|0;W=DH(T|0,0,24)|0;X=xH(S|P|R|W|0,U|E|0,7)|0;U=DH(d[f+11>>0]|0|0,0,8)|0;W=E;R=DH(d[f+12>>0]|0|0,0,16)|0;P=W|E;W=d[f+13>>0]|0;S=DH(W|0,0,24)|0;Y=xH(U|T|R|S|0,P|E|0,4)|0;P=a[f+15>>0]|0;S=DH(d[f+14>>0]|0|0,0,8)|0;R=E;T=P&255;P=DH(T|0,0,16)|0;U=xH(S|W|P|0,R|E|0,1)|0;R=DH(d[f+16>>0]|0|0,0,8)|0;P=E;W=DH(d[f+17>>0]|0|0,0,16)|0;S=P|E;P=d[f+18>>0]|0;Z=DH(P|0,0,24)|0;_=xH(R|T|W|Z|0,S|E|0,6)|0;S=a[f+20>>0]|0;Z=DH(d[f+19>>0]|0|0,0,8)|0;W=E;T=DH(S&255|0,0,16)|0;S=xH(Z|P|T|0,W|E|0,3)|0;W=E;T=a[f+23>>0]|0;P=d[f+21>>0]|0;Z=DH(d[f+22>>0]|0|0,0,8)|0;R=E;$=T&255;T=DH($|0,0,16)|0;aa=DH(d[f+24>>0]|0|0,0,8)|0;ba=E;ca=DH(d[f+25>>0]|0|0,0,16)|0;da=ba|E;ba=d[f+26>>0]|0;ea=DH(ba|0,0,24)|0;fa=xH(aa|$|ca|ea|0,da|E|0,5)|0;da=a[f+28>>0]|0;ea=DH(d[f+27>>0]|0|0,0,8)|0;ca=E;$=da&255;da=DH($|0,0,16)|0;aa=xH(ea|ba|da|0,ca|E|0,2)|0;ca=DH(d[f+29>>0]|0|0,0,8)|0;da=E;ba=DH(d[f+30>>0]|0|0,0,16)|0;ea=da|E;da=DH(d[f+31>>0]|0|0,0,24)|0;f=xH(ca|$|ba|da|0,ea|E|0,7)|0;ea=E;da=IH(A|0,o|0,l|0,j|0)|0;ba=CH(K|H|O&2031616|0,D|0,da|0,E|0)|0;da=E;D=IH(B|0,0,l|0,j|0)|0;O=E;H=IH(A|0,o|0,m|0,0)|0;K=E;$=IH(u|0,0,l|0,j|0)|0;ca=E;ga=IH(B|0,0,m|0,0)|0;ha=E;ia=IH(A|0,o|0,i|0,0)|0;ja=CH(ga|0,ha|0,ia|0,E|0)|0;ia=CH(ja|0,E|0,$|0,ca|0)|0;ca=CH(ia|0,E|0,Q&2097151|0,0)|0;Q=E;ia=IH(C|0,0,l|0,j|0)|0;$=E;ja=IH(u|0,0,m|0,0)|0;ha=E;ga=IH(B|0,0,i|0,0)|0;ka=E;la=IH(A|0,o|0,n|0,0)|0;ma=E;na=IH(z|0,0,l|0,j|0)|0;oa=E;pa=IH(C|0,0,m|0,0)|0;qa=E;ra=IH(u|0,0,i|0,0)|0;sa=E;ta=IH(B|0,0,n|0,0)|0;ua=E;va=IH(A|0,o|0,k|0,0)|0;wa=CH(ta|0,ua|0,va|0,E|0)|0;va=CH(wa|0,E|0,ra|0,sa|0)|0;sa=CH(va|0,E|0,pa|0,qa|0)|0;qa=CH(sa|0,E|0,na|0,oa|0)|0;oa=CH(qa|0,E|0,Y&2097151|0,0)|0;Y=E;qa=IH(r|0,0,l|0,j|0)|0;na=E;sa=IH(z|0,0,m|0,0)|0;pa=E;va=IH(C|0,0,i|0,0)|0;ra=E;wa=IH(u|0,0,n|0,0)|0;ua=E;ta=IH(B|0,0,k|0,0)|0;xa=E;ya=IH(A|0,o|0,h|0,0)|0;za=E;Aa=IH(y|0,0,l|0,j|0)|0;Ba=E;Ca=IH(r|0,0,m|0,0)|0;Da=E;Ea=IH(z|0,0,i|0,0)|0;Fa=E;Ga=IH(C|0,0,n|0,0)|0;Ha=E;Ia=IH(u|0,0,k|0,0)|0;Ja=E;Ka=IH(B|0,0,h|0,0)|0;La=E;Ma=IH(A|0,o|0,g|0,0)|0;Na=CH(Ka|0,La|0,Ma|0,E|0)|0;Ma=CH(Na|0,E|0,Ia|0,Ja|0)|0;Ja=CH(Ma|0,E|0,Ga|0,Ha|0)|0;Ha=CH(Ja|0,E|0,Ea|0,Fa|0)|0;Fa=CH(Ha|0,E|0,Ca|0,Da|0)|0;Da=CH(Fa|0,E|0,Aa|0,Ba|0)|0;Ba=CH(Da|0,E|0,_&2097151|0,0)|0;_=E;Da=IH(J|0,F|0,l|0,j|0)|0;Aa=E;Fa=IH(y|0,0,m|0,0)|0;Ca=E;Ha=IH(r|0,0,i|0,0)|0;Ea=E;Ja=IH(z|0,0,n|0,0)|0;Ga=E;Ma=IH(C|0,0,k|0,0)|0;Ia=E;Na=IH(u|0,0,h|0,0)|0;La=E;Ka=IH(B|0,0,g|0,0)|0;Oa=E;Pa=IH(A|0,o|0,t|0,p|0)|0;Qa=E;Ra=IH(L|0,G|0,l|0,j|0)|0;Sa=E;Ta=IH(J|0,F|0,m|0,0)|0;Ua=E;Va=IH(y|0,0,i|0,0)|0;Wa=E;Xa=IH(r|0,0,n|0,0)|0;Ya=E;Za=IH(z|0,0,k|0,0)|0;_a=E;$a=IH(C|0,0,h|0,0)|0;ab=E;bb=IH(u|0,0,g|0,0)|0;cb=E;db=IH(B|0,0,t|0,p|0)|0;eb=E;fb=IH(A|0,o|0,v|0,q|0)|0;gb=CH(db|0,eb|0,fb|0,E|0)|0;fb=CH(gb|0,E|0,bb|0,cb|0)|0;cb=CH(fb|0,E|0,$a|0,ab|0)|0;ab=CH(cb|0,E|0,Za|0,_a|0)|0;_a=CH(ab|0,E|0,Xa|0,Ya|0)|0;Ya=CH(_a|0,E|0,Va|0,Wa|0)|0;Wa=CH(Ya|0,E|0,Ta|0,Ua|0)|0;Ua=CH(Wa|0,E|0,Ra|0,Sa|0)|0;Sa=CH(Ua|0,E|0,Z|P|T&2031616|0,R|0)|0;R=E;T=IH(M|0,0,l|0,j|0)|0;P=E;Z=IH(L|0,G|0,m|0,0)|0;Ua=E;Ra=IH(J|0,F|0,i|0,0)|0;Wa=E;Ta=IH(y|0,0,n|0,0)|0;Ya=E;Va=IH(r|0,0,k|0,0)|0;_a=E;Xa=IH(z|0,0,h|0,0)|0;ab=E;Za=IH(C|0,0,g|0,0)|0;cb=E;$a=IH(u|0,0,t|0,p|0)|0;fb=E;bb=IH(B|0,0,v|0,q|0)|0;gb=E;eb=IH(A|0,o|0,w|0,0)|0;db=E;hb=IH(I|0,0,l|0,j|0)|0;ib=E;jb=IH(M|0,0,m|0,0)|0;kb=E;lb=IH(L|0,G|0,i|0,0)|0;mb=E;nb=IH(J|0,F|0,n|0,0)|0;ob=E;pb=IH(y|0,0,k|0,0)|0;qb=E;rb=IH(r|0,0,h|0,0)|0;sb=E;tb=IH(z|0,0,g|0,0)|0;ub=E;vb=IH(C|0,0,t|0,p|0)|0;wb=E;xb=IH(u|0,0,v|0,q|0)|0;yb=E;zb=IH(B|0,0,w|0,0)|0;Ab=E;Bb=IH(A|0,o|0,s|0,0)|0;Cb=CH(zb|0,Ab|0,Bb|0,E|0)|0;Bb=CH(Cb|0,E|0,xb|0,yb|0)|0;yb=CH(Bb|0,E|0,vb|0,wb|0)|0;wb=CH(yb|0,E|0,tb|0,ub|0)|0;ub=CH(wb|0,E|0,rb|0,sb|0)|0;sb=CH(ub|0,E|0,pb|0,qb|0)|0;qb=CH(sb|0,E|0,nb|0,ob|0)|0;ob=CH(qb|0,E|0,lb|0,mb|0)|0;mb=CH(ob|0,E|0,jb|0,kb|0)|0;kb=CH(mb|0,E|0,hb|0,ib|0)|0;ib=CH(kb|0,E|0,aa&2097151|0,0)|0;aa=E;kb=IH(e|0,N|0,l|0,j|0)|0;j=E;l=IH(I|0,0,m|0,0)|0;hb=E;mb=IH(M|0,0,i|0,0)|0;jb=E;ob=IH(L|0,G|0,n|0,0)|0;lb=E;qb=IH(J|0,F|0,k|0,0)|0;nb=E;sb=IH(y|0,0,h|0,0)|0;pb=E;ub=IH(r|0,0,g|0,0)|0;rb=E;wb=IH(z|0,0,t|0,p|0)|0;tb=E;yb=IH(C|0,0,v|0,q|0)|0;vb=E;Bb=IH(u|0,0,w|0,0)|0;xb=E;Cb=IH(B|0,0,s|0,0)|0;Ab=E;zb=IH(A|0,o|0,c|0,x|0)|0;o=E;A=IH(e|0,N|0,m|0,0)|0;m=E;Db=IH(I|0,0,i|0,0)|0;Eb=E;Fb=IH(M|0,0,n|0,0)|0;Gb=E;Hb=IH(L|0,G|0,k|0,0)|0;Ib=E;Jb=IH(J|0,F|0,h|0,0)|0;Kb=E;Lb=IH(y|0,0,g|0,0)|0;Mb=E;Nb=IH(r|0,0,t|0,p|0)|0;Ob=E;Pb=IH(z|0,0,v|0,q|0)|0;Qb=E;Rb=IH(C|0,0,w|0,0)|0;Sb=E;Tb=IH(u|0,0,s|0,0)|0;Ub=E;Vb=IH(B|0,0,c|0,x|0)|0;B=CH(Tb|0,Ub|0,Vb|0,E|0)|0;Vb=CH(B|0,E|0,Rb|0,Sb|0)|0;Sb=CH(Vb|0,E|0,Pb|0,Qb|0)|0;Qb=CH(Sb|0,E|0,Nb|0,Ob|0)|0;Ob=CH(Qb|0,E|0,Lb|0,Mb|0)|0;Mb=CH(Ob|0,E|0,Jb|0,Kb|0)|0;Kb=CH(Mb|0,E|0,Hb|0,Ib|0)|0;Ib=CH(Kb|0,E|0,Fb|0,Gb|0)|0;Gb=CH(Ib|0,E|0,Db|0,Eb|0)|0;Eb=CH(Gb|0,E|0,A|0,m|0)|0;m=E;A=IH(e|0,N|0,i|0,0)|0;i=E;Gb=IH(I|0,0,n|0,0)|0;Db=E;Ib=IH(M|0,0,k|0,0)|0;Fb=E;Kb=IH(L|0,G|0,h|0,0)|0;Hb=E;Mb=IH(J|0,F|0,g|0,0)|0;Jb=E;Ob=IH(y|0,0,t|0,p|0)|0;Lb=E;Qb=IH(r|0,0,v|0,q|0)|0;Nb=E;Sb=IH(z|0,0,w|0,0)|0;Pb=E;Vb=IH(C|0,0,s|0,0)|0;Rb=E;B=IH(u|0,0,c|0,x|0)|0;u=E;Ub=IH(e|0,N|0,n|0,0)|0;n=E;Tb=IH(I|0,0,k|0,0)|0;Wb=E;Xb=IH(M|0,0,h|0,0)|0;Yb=E;Zb=IH(L|0,G|0,g|0,0)|0;_b=E;$b=IH(J|0,F|0,t|0,p|0)|0;ac=E;bc=IH(y|0,0,v|0,q|0)|0;cc=E;dc=IH(r|0,0,w|0,0)|0;ec=E;fc=IH(z|0,0,s|0,0)|0;gc=E;hc=IH(C|0,0,c|0,x|0)|0;C=CH(fc|0,gc|0,hc|0,E|0)|0;hc=CH(C|0,E|0,dc|0,ec|0)|0;ec=CH(hc|0,E|0,bc|0,cc|0)|0;cc=CH(ec|0,E|0,$b|0,ac|0)|0;ac=CH(cc|0,E|0,Zb|0,_b|0)|0;_b=CH(ac|0,E|0,Xb|0,Yb|0)|0;Yb=CH(_b|0,E|0,Tb|0,Wb|0)|0;Wb=CH(Yb|0,E|0,Ub|0,n|0)|0;n=E;Ub=IH(e|0,N|0,k|0,0)|0;k=E;Yb=IH(I|0,0,h|0,0)|0;Tb=E;_b=IH(M|0,0,g|0,0)|0;Xb=E;ac=IH(L|0,G|0,t|0,p|0)|0;Zb=E;cc=IH(J|0,F|0,v|0,q|0)|0;$b=E;ec=IH(y|0,0,w|0,0)|0;bc=E;hc=IH(r|0,0,s|0,0)|0;dc=E;C=IH(z|0,0,c|0,x|0)|0;z=E;gc=IH(e|0,N|0,h|0,0)|0;h=E;fc=IH(I|0,0,g|0,0)|0;ic=E;jc=IH(M|0,0,t|0,p|0)|0;kc=E;lc=IH(L|0,G|0,v|0,q|0)|0;mc=E;nc=IH(J|0,F|0,w|0,0)|0;oc=E;pc=IH(y|0,0,s|0,0)|0;qc=E;rc=IH(r|0,0,c|0,x|0)|0;r=CH(pc|0,qc|0,rc|0,E|0)|0;rc=CH(r|0,E|0,nc|0,oc|0)|0;oc=CH(rc|0,E|0,lc|0,mc|0)|0;mc=CH(oc|0,E|0,jc|0,kc|0)|0;kc=CH(mc|0,E|0,fc|0,ic|0)|0;ic=CH(kc|0,E|0,gc|0,h|0)|0;h=E;gc=IH(e|0,N|0,g|0,0)|0;g=E;kc=IH(I|0,0,t|0,p|0)|0;fc=E;mc=IH(M|0,0,v|0,q|0)|0;jc=E;oc=IH(L|0,G|0,w|0,0)|0;lc=E;rc=IH(J|0,F|0,s|0,0)|0;nc=E;r=IH(y|0,0,c|0,x|0)|0;y=E;qc=IH(e|0,N|0,t|0,p|0)|0;p=E;t=IH(I|0,0,v|0,q|0)|0;pc=E;sc=IH(M|0,0,w|0,0)|0;tc=E;uc=IH(L|0,G|0,s|0,0)|0;vc=E;wc=IH(J|0,F|0,c|0,x|0)|0;F=CH(uc|0,vc|0,wc|0,E|0)|0;wc=CH(F|0,E|0,sc|0,tc|0)|0;tc=CH(wc|0,E|0,t|0,pc|0)|0;pc=CH(tc|0,E|0,qc|0,p|0)|0;p=E;qc=IH(e|0,N|0,v|0,q|0)|0;q=E;v=IH(I|0,0,w|0,0)|0;tc=E;t=IH(M|0,0,s|0,0)|0;wc=E;sc=IH(L|0,G|0,c|0,x|0)|0;G=E;L=IH(e|0,N|0,w|0,0)|0;w=E;F=IH(I|0,0,s|0,0)|0;vc=E;uc=IH(M|0,0,c|0,x|0)|0;M=CH(F|0,vc|0,uc|0,E|0)|0;uc=CH(M|0,E|0,L|0,w|0)|0;w=E;L=IH(e|0,N|0,s|0,0)|0;s=E;M=IH(I|0,0,c|0,x|0)|0;I=CH(L|0,s|0,M|0,E|0)|0;M=E;s=IH(e|0,N|0,c|0,x|0)|0;x=E;c=CH(ba|0,da|0,1048576,0)|0;N=xH(c|0,E|0,21)|0;c=E;e=CH(D|0,O|0,H|0,K|0)|0;K=CH(e|0,E|0,N|0,c|0)|0;e=CH(K|0,E|0,V&2097151|0,0)|0;V=E;K=DH(N|0,c|0,21)|0;c=vH(ba|0,da|0,K|0,E|0)|0;K=E;da=CH(ca|0,Q|0,1048576,0)|0;ba=xH(da|0,E|0,21)|0;da=E;N=CH(ga|0,ka|0,la|0,ma|0)|0;ma=CH(N|0,E|0,ja|0,ha|0)|0;ha=CH(ma|0,E|0,ia|0,$|0)|0;$=CH(ha|0,E|0,X&2097151|0,0)|0;X=CH($|0,E|0,ba|0,da|0)|0;$=E;ha=DH(ba|0,da|0,21)|0;da=E;ba=CH(oa|0,Y|0,1048576,0)|0;ia=wH(ba|0,E|0,21)|0;ba=E;ma=CH(ta|0,xa|0,ya|0,za|0)|0;za=CH(ma|0,E|0,wa|0,ua|0)|0;ua=CH(za|0,E|0,va|0,ra|0)|0;ra=CH(ua|0,E|0,sa|0,pa|0)|0;pa=CH(ra|0,E|0,qa|0,na|0)|0;na=CH(pa|0,E|0,U&2097151|0,0)|0;U=CH(na|0,E|0,ia|0,ba|0)|0;na=E;pa=DH(ia|0,ba|0,21)|0;ba=vH(oa|0,Y|0,pa|0,E|0)|0;pa=E;Y=CH(Ba|0,_|0,1048576,0)|0;oa=wH(Y|0,E|0,21)|0;Y=E;ia=CH(Ka|0,Oa|0,Pa|0,Qa|0)|0;Qa=CH(ia|0,E|0,Na|0,La|0)|0;La=CH(Qa|0,E|0,Ma|0,Ia|0)|0;Ia=CH(La|0,E|0,Ja|0,Ga|0)|0;Ga=CH(Ia|0,E|0,Ha|0,Ea|0)|0;Ea=CH(Ga|0,E|0,Fa|0,Ca|0)|0;Ca=CH(Ea|0,E|0,Da|0,Aa|0)|0;Aa=CH(Ca|0,E|0,S|0,W|0)|0;W=CH(Aa|0,E|0,oa|0,Y|0)|0;Aa=E;S=DH(oa|0,Y|0,21)|0;Y=E;oa=CH(Sa|0,R|0,1048576,0)|0;Ca=wH(oa|0,E|0,21)|0;oa=E;Da=CH(bb|0,gb|0,eb|0,db|0)|0;db=CH(Da|0,E|0,$a|0,fb|0)|0;fb=CH(db|0,E|0,Za|0,cb|0)|0;cb=CH(fb|0,E|0,Xa|0,ab|0)|0;ab=CH(cb|0,E|0,Va|0,_a|0)|0;_a=CH(ab|0,E|0,Ta|0,Ya|0)|0;Ya=CH(_a|0,E|0,Ra|0,Wa|0)|0;Wa=CH(Ya|0,E|0,Z|0,Ua|0)|0;Ua=CH(Wa|0,E|0,T|0,P|0)|0;P=CH(Ua|0,E|0,fa&2097151|0,0)|0;fa=CH(P|0,E|0,Ca|0,oa|0)|0;P=E;Ua=DH(Ca|0,oa|0,21)|0;oa=E;Ca=CH(ib|0,aa|0,1048576,0)|0;T=wH(Ca|0,E|0,21)|0;Ca=E;Wa=CH(Cb|0,Ab|0,zb|0,o|0)|0;o=CH(Wa|0,E|0,Bb|0,xb|0)|0;xb=CH(o|0,E|0,yb|0,vb|0)|0;vb=CH(xb|0,E|0,wb|0,tb|0)|0;tb=CH(vb|0,E|0,ub|0,rb|0)|0;rb=CH(tb|0,E|0,sb|0,pb|0)|0;pb=CH(rb|0,E|0,qb|0,nb|0)|0;nb=CH(pb|0,E|0,ob|0,lb|0)|0;lb=CH(nb|0,E|0,mb|0,jb|0)|0;jb=CH(lb|0,E|0,l|0,hb|0)|0;hb=CH(jb|0,E|0,kb|0,j|0)|0;j=CH(hb|0,E|0,f|0,ea|0)|0;ea=CH(j|0,E|0,T|0,Ca|0)|0;j=E;f=DH(T|0,Ca|0,21)|0;Ca=vH(ib|0,aa|0,f|0,E|0)|0;f=E;aa=CH(Eb|0,m|0,1048576,0)|0;ib=wH(aa|0,E|0,21)|0;aa=E;T=CH(Vb|0,Rb|0,B|0,u|0)|0;u=CH(T|0,E|0,Sb|0,Pb|0)|0;Pb=CH(u|0,E|0,Qb|0,Nb|0)|0;Nb=CH(Pb|0,E|0,Ob|0,Lb|0)|0;Lb=CH(Nb|0,E|0,Mb|0,Jb|0)|0;Jb=CH(Lb|0,E|0,Kb|0,Hb|0)|0;Hb=CH(Jb|0,E|0,Ib|0,Fb|0)|0;Fb=CH(Hb|0,E|0,Gb|0,Db|0)|0;Db=CH(Fb|0,E|0,A|0,i|0)|0;i=CH(Db|0,E|0,ib|0,aa|0)|0;Db=E;A=DH(ib|0,aa|0,21)|0;aa=vH(Eb|0,m|0,A|0,E|0)|0;A=E;m=CH(Wb|0,n|0,1048576,0)|0;Eb=wH(m|0,E|0,21)|0;m=E;ib=CH(hc|0,dc|0,C|0,z|0)|0;z=CH(ib|0,E|0,ec|0,bc|0)|0;bc=CH(z|0,E|0,cc|0,$b|0)|0;$b=CH(bc|0,E|0,ac|0,Zb|0)|0;Zb=CH($b|0,E|0,_b|0,Xb|0)|0;Xb=CH(Zb|0,E|0,Yb|0,Tb|0)|0;Tb=CH(Xb|0,E|0,Ub|0,k|0)|0;k=CH(Tb|0,E|0,Eb|0,m|0)|0;Tb=E;Ub=DH(Eb|0,m|0,21)|0;m=vH(Wb|0,n|0,Ub|0,E|0)|0;Ub=E;n=CH(ic|0,h|0,1048576,0)|0;Wb=wH(n|0,E|0,21)|0;n=E;Eb=CH(rc|0,nc|0,r|0,y|0)|0;y=CH(Eb|0,E|0,oc|0,lc|0)|0;lc=CH(y|0,E|0,mc|0,jc|0)|0;jc=CH(lc|0,E|0,kc|0,fc|0)|0;fc=CH(jc|0,E|0,gc|0,g|0)|0;g=CH(fc|0,E|0,Wb|0,n|0)|0;fc=E;gc=DH(Wb|0,n|0,21)|0;n=vH(ic|0,h|0,gc|0,E|0)|0;gc=E;h=CH(pc|0,p|0,1048576,0)|0;ic=wH(h|0,E|0,21)|0;h=E;Wb=CH(t|0,wc|0,sc|0,G|0)|0;G=CH(Wb|0,E|0,v|0,tc|0)|0;tc=CH(G|0,E|0,qc|0,q|0)|0;q=CH(tc|0,E|0,ic|0,h|0)|0;tc=E;qc=DH(ic|0,h|0,21)|0;h=vH(pc|0,p|0,qc|0,E|0)|0;qc=E;p=CH(uc|0,w|0,1048576,0)|0;pc=xH(p|0,E|0,21)|0;p=E;ic=CH(I|0,M|0,pc|0,p|0)|0;M=E;I=DH(pc|0,p|0,21)|0;p=vH(uc|0,w|0,I|0,E|0)|0;I=E;w=CH(s|0,x|0,1048576,0)|0;uc=xH(w|0,E|0,21)|0;w=E;pc=DH(uc|0,w|0,21)|0;G=vH(s|0,x|0,pc|0,E|0)|0;pc=E;x=CH(e|0,V|0,1048576,0)|0;s=xH(x|0,E|0,21)|0;x=E;v=DH(s|0,x|0,21)|0;Wb=vH(e|0,V|0,v|0,E|0)|0;v=E;V=CH(X|0,$|0,1048576,0)|0;e=wH(V|0,E|0,21)|0;V=E;sc=CH(e|0,V|0,ba|0,pa|0)|0;pa=E;ba=DH(e|0,V|0,21)|0;V=vH(X|0,$|0,ba|0,E|0)|0;ba=E;$=CH(U|0,na|0,1048576,0)|0;X=wH($|0,E|0,21)|0;$=E;e=DH(X|0,$|0,21)|0;wc=vH(U|0,na|0,e|0,E|0)|0;e=E;na=CH(W|0,Aa|0,1048576,0)|0;U=wH(na|0,E|0,21)|0;na=E;t=DH(U|0,na|0,21)|0;jc=E;kc=CH(fa|0,P|0,1048576,0)|0;lc=wH(kc|0,E|0,21)|0;kc=E;mc=CH(lc|0,kc|0,Ca|0,f|0)|0;f=E;Ca=DH(lc|0,kc|0,21)|0;kc=vH(fa|0,P|0,Ca|0,E|0)|0;Ca=E;P=CH(ea|0,j|0,1048576,0)|0;fa=wH(P|0,E|0,21)|0;P=E;lc=CH(aa|0,A|0,fa|0,P|0)|0;A=E;aa=DH(fa|0,P|0,21)|0;P=vH(ea|0,j|0,aa|0,E|0)|0;aa=E;j=CH(i|0,Db|0,1048576,0)|0;ea=wH(j|0,E|0,21)|0;j=E;fa=CH(m|0,Ub|0,ea|0,j|0)|0;Ub=E;m=DH(ea|0,j|0,21)|0;j=vH(i|0,Db|0,m|0,E|0)|0;m=E;Db=CH(k|0,Tb|0,1048576,0)|0;i=wH(Db|0,E|0,21)|0;Db=E;ea=CH(n|0,gc|0,i|0,Db|0)|0;gc=E;n=DH(i|0,Db|0,21)|0;Db=vH(k|0,Tb|0,n|0,E|0)|0;n=E;Tb=CH(g|0,fc|0,1048576,0)|0;k=wH(Tb|0,E|0,21)|0;Tb=E;i=CH(k|0,Tb|0,h|0,qc|0)|0;qc=E;h=DH(k|0,Tb|0,21)|0;Tb=vH(g|0,fc|0,h|0,E|0)|0;h=E;fc=CH(q|0,tc|0,1048576,0)|0;g=wH(fc|0,E|0,21)|0;fc=E;k=CH(g|0,fc|0,p|0,I|0)|0;I=E;p=DH(g|0,fc|0,21)|0;fc=vH(q|0,tc|0,p|0,E|0)|0;p=E;tc=CH(ic|0,M|0,1048576,0)|0;q=xH(tc|0,E|0,21)|0;tc=E;g=CH(q|0,tc|0,G|0,pc|0)|0;pc=E;G=DH(q|0,tc|0,21)|0;tc=vH(ic|0,M|0,G|0,E|0)|0;G=E;M=IH(uc|0,w|0,666643,0)|0;ic=CH(M|0,E|0,P|0,aa|0)|0;aa=E;P=IH(uc|0,w|0,470296,0)|0;M=CH(P|0,E|0,lc|0,A|0)|0;A=E;lc=IH(uc|0,w|0,654183,0)|0;P=CH(lc|0,E|0,j|0,m|0)|0;m=E;j=IH(uc|0,w|0,-997805,-1)|0;lc=CH(j|0,E|0,fa|0,Ub|0)|0;Ub=E;fa=IH(uc|0,w|0,136657,0)|0;j=CH(fa|0,E|0,Db|0,n|0)|0;n=E;Db=IH(uc|0,w|0,-683901,-1)|0;w=CH(ea|0,gc|0,Db|0,E|0)|0;Db=E;gc=IH(g|0,pc|0,666643,0)|0;ea=CH(gc|0,E|0,mc|0,f|0)|0;f=E;mc=IH(g|0,pc|0,470296,0)|0;gc=CH(mc|0,E|0,ic|0,aa|0)|0;aa=E;ic=IH(g|0,pc|0,654183,0)|0;mc=CH(ic|0,E|0,M|0,A|0)|0;A=E;M=IH(g|0,pc|0,-997805,-1)|0;ic=CH(M|0,E|0,P|0,m|0)|0;m=E;P=IH(g|0,pc|0,136657,0)|0;M=CH(P|0,E|0,lc|0,Ub|0)|0;Ub=E;lc=IH(g|0,pc|0,-683901,-1)|0;pc=CH(j|0,n|0,lc|0,E|0)|0;lc=E;n=IH(tc|0,G|0,666643,0)|0;j=CH(n|0,E|0,kc|0,Ca|0)|0;Ca=E;kc=IH(tc|0,G|0,470296,0)|0;n=CH(kc|0,E|0,ea|0,f|0)|0;f=E;ea=IH(tc|0,G|0,654183,0)|0;kc=CH(ea|0,E|0,gc|0,aa|0)|0;aa=E;gc=IH(tc|0,G|0,-997805,-1)|0;ea=CH(gc|0,E|0,mc|0,A|0)|0;A=E;mc=IH(tc|0,G|0,136657,0)|0;gc=CH(mc|0,E|0,ic|0,m|0)|0;m=E;ic=IH(tc|0,G|0,-683901,-1)|0;G=CH(M|0,Ub|0,ic|0,E|0)|0;ic=E;Ub=IH(k|0,I|0,666643,0)|0;M=E;tc=IH(k|0,I|0,470296,0)|0;mc=CH(tc|0,E|0,j|0,Ca|0)|0;Ca=E;j=IH(k|0,I|0,654183,0)|0;tc=CH(j|0,E|0,n|0,f|0)|0;f=E;n=IH(k|0,I|0,-997805,-1)|0;j=CH(n|0,E|0,kc|0,aa|0)|0;aa=E;kc=IH(k|0,I|0,136657,0)|0;n=CH(kc|0,E|0,ea|0,A|0)|0;A=E;ea=IH(k|0,I|0,-683901,-1)|0;I=CH(gc|0,m|0,ea|0,E|0)|0;ea=E;m=IH(fc|0,p|0,666643,0)|0;gc=E;k=IH(fc|0,p|0,470296,0)|0;kc=E;g=IH(fc|0,p|0,654183,0)|0;P=CH(g|0,E|0,mc|0,Ca|0)|0;Ca=E;mc=IH(fc|0,p|0,-997805,-1)|0;g=CH(tc|0,f|0,mc|0,E|0)|0;mc=E;f=IH(fc|0,p|0,136657,0)|0;tc=CH(f|0,E|0,j|0,aa|0)|0;aa=E;j=IH(fc|0,p|0,-683901,-1)|0;p=CH(n|0,A|0,j|0,E|0)|0;j=E;A=IH(i|0,qc|0,666643,0)|0;n=CH(X|0,$|0,A|0,E|0)|0;A=CH(n|0,E|0,Ba|0,_|0)|0;_=vH(A|0,E|0,S|0,Y|0)|0;Y=E;S=IH(i|0,qc|0,470296,0)|0;A=E;Ba=IH(i|0,qc|0,654183,0)|0;n=E;$=CH(k|0,kc|0,Ub|0,M|0)|0;M=CH($|0,E|0,Ba|0,n|0)|0;n=CH(M|0,E|0,U|0,na|0)|0;na=CH(n|0,E|0,Sa|0,R|0)|0;R=vH(na|0,E|0,Ua|0,oa|0)|0;oa=E;Ua=IH(i|0,qc|0,-997805,-1)|0;na=CH(P|0,Ca|0,Ua|0,E|0)|0;Ua=E;Ca=IH(i|0,qc|0,136657,0)|0;P=CH(g|0,mc|0,Ca|0,E|0)|0;Ca=E;mc=IH(i|0,qc|0,-683901,-1)|0;qc=CH(tc|0,aa|0,mc|0,E|0)|0;mc=E;aa=CH(_|0,Y|0,1048576,0)|0;tc=wH(aa|0,E|0,21)|0;aa=E;i=CH(S|0,A|0,m|0,gc|0)|0;gc=CH(i|0,E|0,W|0,Aa|0)|0;Aa=vH(gc|0,E|0,t|0,jc|0)|0;jc=CH(Aa|0,E|0,tc|0,aa|0)|0;Aa=E;t=DH(tc|0,aa|0,21)|0;aa=vH(_|0,Y|0,t|0,E|0)|0;t=E;Y=CH(R|0,oa|0,1048576,0)|0;_=wH(Y|0,E|0,21)|0;Y=E;tc=CH(na|0,Ua|0,_|0,Y|0)|0;Ua=E;na=DH(_|0,Y|0,21)|0;Y=vH(R|0,oa|0,na|0,E|0)|0;na=E;oa=CH(P|0,Ca|0,1048576,0)|0;R=wH(oa|0,E|0,21)|0;oa=E;_=CH(qc|0,mc|0,R|0,oa|0)|0;mc=E;qc=DH(R|0,oa|0,21)|0;oa=vH(P|0,Ca|0,qc|0,E|0)|0;qc=E;Ca=CH(p|0,j|0,1048576,0)|0;P=wH(Ca|0,E|0,21)|0;Ca=E;R=CH(P|0,Ca|0,I|0,ea|0)|0;ea=E;I=DH(P|0,Ca|0,21)|0;Ca=vH(p|0,j|0,I|0,E|0)|0;I=E;j=CH(G|0,ic|0,1048576,0)|0;p=wH(j|0,E|0,21)|0;j=E;P=CH(p|0,j|0,pc|0,lc|0)|0;lc=E;pc=DH(p|0,j|0,21)|0;j=vH(G|0,ic|0,pc|0,E|0)|0;pc=E;ic=CH(w|0,Db|0,1048576,0)|0;G=wH(ic|0,E|0,21)|0;ic=E;p=CH(G|0,ic|0,Tb|0,h|0)|0;h=E;Tb=DH(G|0,ic|0,21)|0;ic=vH(w|0,Db|0,Tb|0,E|0)|0;Tb=E;Db=CH(jc|0,Aa|0,1048576,0)|0;w=wH(Db|0,E|0,21)|0;Db=E;G=CH(w|0,Db|0,Y|0,na|0)|0;na=E;Y=DH(w|0,Db|0,21)|0;Db=vH(jc|0,Aa|0,Y|0,E|0)|0;Y=E;Aa=CH(tc|0,Ua|0,1048576,0)|0;jc=wH(Aa|0,E|0,21)|0;Aa=E;w=CH(jc|0,Aa|0,oa|0,qc|0)|0;qc=E;oa=DH(jc|0,Aa|0,21)|0;Aa=vH(tc|0,Ua|0,oa|0,E|0)|0;oa=E;Ua=CH(_|0,mc|0,1048576,0)|0;tc=wH(Ua|0,E|0,21)|0;Ua=E;jc=CH(tc|0,Ua|0,Ca|0,I|0)|0;I=E;Ca=DH(tc|0,Ua|0,21)|0;Ua=vH(_|0,mc|0,Ca|0,E|0)|0;Ca=E;mc=CH(R|0,ea|0,1048576,0)|0;_=wH(mc|0,E|0,21)|0;mc=E;tc=CH(_|0,mc|0,j|0,pc|0)|0;pc=E;j=DH(_|0,mc|0,21)|0;mc=vH(R|0,ea|0,j|0,E|0)|0;j=E;ea=CH(P|0,lc|0,1048576,0)|0;R=wH(ea|0,E|0,21)|0;ea=E;_=CH(R|0,ea|0,ic|0,Tb|0)|0;Tb=E;ic=DH(R|0,ea|0,21)|0;ea=vH(P|0,lc|0,ic|0,E|0)|0;ic=E;lc=IH(p|0,h|0,666643,0)|0;P=CH(lc|0,E|0,wc|0,e|0)|0;e=E;wc=IH(p|0,h|0,470296,0)|0;lc=CH(wc|0,E|0,aa|0,t|0)|0;t=E;aa=IH(p|0,h|0,654183,0)|0;wc=CH(aa|0,E|0,Db|0,Y|0)|0;Y=E;Db=IH(p|0,h|0,-997805,-1)|0;aa=CH(Db|0,E|0,G|0,na|0)|0;na=E;G=IH(p|0,h|0,136657,0)|0;Db=CH(G|0,E|0,Aa|0,oa|0)|0;oa=E;Aa=IH(p|0,h|0,-683901,-1)|0;h=CH(w|0,qc|0,Aa|0,E|0)|0;Aa=E;qc=IH(_|0,Tb|0,666643,0)|0;w=CH(qc|0,E|0,sc|0,pa|0)|0;pa=E;sc=IH(_|0,Tb|0,470296,0)|0;qc=CH(sc|0,E|0,P|0,e|0)|0;e=E;P=IH(_|0,Tb|0,654183,0)|0;sc=CH(P|0,E|0,lc|0,t|0)|0;t=E;lc=IH(_|0,Tb|0,-997805,-1)|0;P=CH(lc|0,E|0,wc|0,Y|0)|0;Y=E;wc=IH(_|0,Tb|0,136657,0)|0;lc=CH(wc|0,E|0,aa|0,na|0)|0;na=E;aa=IH(_|0,Tb|0,-683901,-1)|0;Tb=CH(Db|0,oa|0,aa|0,E|0)|0;aa=E;oa=IH(ea|0,ic|0,666643,0)|0;Db=CH(V|0,ba|0,oa|0,E|0)|0;oa=E;ba=IH(ea|0,ic|0,470296,0)|0;V=CH(ba|0,E|0,w|0,pa|0)|0;pa=E;w=IH(ea|0,ic|0,654183,0)|0;ba=CH(w|0,E|0,qc|0,e|0)|0;e=E;qc=IH(ea|0,ic|0,-997805,-1)|0;w=CH(qc|0,E|0,sc|0,t|0)|0;t=E;sc=IH(ea|0,ic|0,136657,0)|0;qc=CH(sc|0,E|0,P|0,Y|0)|0;Y=E;P=IH(ea|0,ic|0,-683901,-1)|0;ic=CH(lc|0,na|0,P|0,E|0)|0;P=E;na=IH(tc|0,pc|0,666643,0)|0;lc=E;ea=IH(tc|0,pc|0,470296,0)|0;sc=CH(Db|0,oa|0,ea|0,E|0)|0;ea=E;oa=IH(tc|0,pc|0,654183,0)|0;Db=CH(V|0,pa|0,oa|0,E|0)|0;oa=E;pa=IH(tc|0,pc|0,-997805,-1)|0;V=CH(ba|0,e|0,pa|0,E|0)|0;pa=E;e=IH(tc|0,pc|0,136657,0)|0;ba=CH(w|0,t|0,e|0,E|0)|0;e=E;t=IH(tc|0,pc|0,-683901,-1)|0;pc=CH(qc|0,Y|0,t|0,E|0)|0;t=E;Y=IH(mc|0,j|0,666643,0)|0;qc=E;tc=IH(mc|0,j|0,470296,0)|0;w=E;_=IH(mc|0,j|0,654183,0)|0;wc=CH(sc|0,ea|0,_|0,E|0)|0;_=E;ea=IH(mc|0,j|0,-997805,-1)|0;sc=CH(Db|0,oa|0,ea|0,E|0)|0;ea=E;oa=IH(mc|0,j|0,136657,0)|0;Db=CH(V|0,pa|0,oa|0,E|0)|0;oa=E;pa=IH(mc|0,j|0,-683901,-1)|0;j=CH(ba|0,e|0,pa|0,E|0)|0;pa=E;e=IH(jc|0,I|0,666643,0)|0;ba=CH(e|0,E|0,c|0,K|0)|0;K=E;c=IH(jc|0,I|0,470296,0)|0;e=E;mc=IH(jc|0,I|0,654183,0)|0;V=E;p=CH(ca|0,Q|0,s|0,x|0)|0;x=vH(p|0,E|0,ha|0,da|0)|0;da=CH(x|0,E|0,na|0,lc|0)|0;lc=CH(da|0,E|0,mc|0,V|0)|0;V=CH(lc|0,E|0,tc|0,w|0)|0;w=E;tc=IH(jc|0,I|0,-997805,-1)|0;lc=CH(wc|0,_|0,tc|0,E|0)|0;tc=E;_=IH(jc|0,I|0,136657,0)|0;wc=CH(sc|0,ea|0,_|0,E|0)|0;_=E;ea=IH(jc|0,I|0,-683901,-1)|0;I=CH(Db|0,oa|0,ea|0,E|0)|0;ea=E;oa=CH(ba|0,K|0,1048576,0)|0;Db=wH(oa|0,E|0,21)|0;oa=E;jc=CH(Wb|0,v|0,c|0,e|0)|0;e=CH(jc|0,E|0,Y|0,qc|0)|0;qc=CH(e|0,E|0,Db|0,oa|0)|0;e=E;Y=DH(Db|0,oa|0,21)|0;oa=vH(ba|0,K|0,Y|0,E|0)|0;Y=E;K=CH(V|0,w|0,1048576,0)|0;ba=wH(K|0,E|0,21)|0;K=E;Db=CH(ba|0,K|0,lc|0,tc|0)|0;tc=E;lc=DH(ba|0,K|0,21)|0;K=E;ba=CH(wc|0,_|0,1048576,0)|0;jc=wH(ba|0,E|0,21)|0;ba=E;c=CH(jc|0,ba|0,I|0,ea|0)|0;ea=E;I=DH(jc|0,ba|0,21)|0;ba=E;jc=CH(j|0,pa|0,1048576,0)|0;v=wH(jc|0,E|0,21)|0;jc=E;Wb=CH(v|0,jc|0,pc|0,t|0)|0;t=E;pc=DH(v|0,jc|0,21)|0;jc=vH(j|0,pa|0,pc|0,E|0)|0;pc=E;pa=CH(ic|0,P|0,1048576,0)|0;j=wH(pa|0,E|0,21)|0;pa=E;v=CH(Tb|0,aa|0,j|0,pa|0)|0;aa=E;Tb=DH(j|0,pa|0,21)|0;pa=vH(ic|0,P|0,Tb|0,E|0)|0;Tb=E;P=CH(h|0,Aa|0,1048576,0)|0;ic=wH(P|0,E|0,21)|0;P=E;j=CH(Ua|0,Ca|0,ic|0,P|0)|0;Ca=E;Ua=DH(ic|0,P|0,21)|0;P=E;ic=CH(qc|0,e|0,1048576,0)|0;sc=wH(ic|0,E|0,21)|0;ic=E;mc=DH(sc|0,ic|0,21)|0;da=E;na=CH(Db|0,tc|0,1048576,0)|0;x=wH(na|0,E|0,21)|0;na=E;ha=DH(x|0,na|0,21)|0;p=vH(Db|0,tc|0,ha|0,E|0)|0;ha=E;tc=CH(c|0,ea|0,1048576,0)|0;Db=wH(tc|0,E|0,21)|0;tc=E;s=CH(jc|0,pc|0,Db|0,tc|0)|0;pc=E;jc=DH(Db|0,tc|0,21)|0;tc=vH(c|0,ea|0,jc|0,E|0)|0;jc=E;ea=CH(Wb|0,t|0,1048576,0)|0;c=wH(ea|0,E|0,21)|0;ea=E;Db=CH(pa|0,Tb|0,c|0,ea|0)|0;Tb=E;pa=DH(c|0,ea|0,21)|0;ea=vH(Wb|0,t|0,pa|0,E|0)|0;pa=E;t=CH(v|0,aa|0,1048576,0)|0;Wb=wH(t|0,E|0,21)|0;t=E;c=DH(Wb|0,t|0,21)|0;Q=vH(v|0,aa|0,c|0,E|0)|0;c=E;aa=CH(j|0,Ca|0,1048576,0)|0;v=wH(aa|0,E|0,21)|0;aa=E;ca=DH(v|0,aa|0,21)|0;G=vH(j|0,Ca|0,ca|0,E|0)|0;ca=E;Ca=IH(v|0,aa|0,666643,0)|0;j=CH(oa|0,Y|0,Ca|0,E|0)|0;Ca=E;Y=IH(v|0,aa|0,470296,0)|0;oa=E;R=IH(v|0,aa|0,654183,0)|0;gc=E;W=IH(v|0,aa|0,-997805,-1)|0;i=CH(p|0,ha|0,W|0,E|0)|0;W=E;ha=IH(v|0,aa|0,136657,0)|0;p=E;m=IH(v|0,aa|0,-683901,-1)|0;aa=CH(tc|0,jc|0,m|0,E|0)|0;m=E;jc=wH(j|0,Ca|0,21)|0;tc=E;v=CH(Y|0,oa|0,qc|0,e|0)|0;e=vH(v|0,E|0,mc|0,da|0)|0;da=CH(e|0,E|0,jc|0,tc|0)|0;e=E;mc=DH(jc|0,tc|0,21)|0;tc=vH(j|0,Ca|0,mc|0,E|0)|0;mc=E;Ca=wH(da|0,e|0,21)|0;j=E;jc=CH(R|0,gc|0,V|0,w|0)|0;w=vH(jc|0,E|0,lc|0,K|0)|0;K=CH(w|0,E|0,sc|0,ic|0)|0;ic=CH(K|0,E|0,Ca|0,j|0)|0;K=E;sc=DH(Ca|0,j|0,21)|0;j=vH(da|0,e|0,sc|0,E|0)|0;sc=E;e=wH(ic|0,K|0,21)|0;da=E;Ca=CH(e|0,da|0,i|0,W|0)|0;W=E;i=DH(e|0,da|0,21)|0;da=vH(ic|0,K|0,i|0,E|0)|0;i=E;K=wH(Ca|0,W|0,21)|0;ic=E;e=CH(ha|0,p|0,wc|0,_|0)|0;_=vH(e|0,E|0,I|0,ba|0)|0;ba=CH(_|0,E|0,x|0,na|0)|0;na=CH(ba|0,E|0,K|0,ic|0)|0;ba=E;x=DH(K|0,ic|0,21)|0;ic=vH(Ca|0,W|0,x|0,E|0)|0;x=E;W=wH(na|0,ba|0,21)|0;Ca=E;K=CH(W|0,Ca|0,aa|0,m|0)|0;m=E;aa=DH(W|0,Ca|0,21)|0;Ca=vH(na|0,ba|0,aa|0,E|0)|0;aa=E;ba=wH(K|0,m|0,21)|0;na=E;W=CH(s|0,pc|0,ba|0,na|0)|0;pc=E;s=DH(ba|0,na|0,21)|0;na=vH(K|0,m|0,s|0,E|0)|0;s=E;m=wH(W|0,pc|0,21)|0;K=E;ba=CH(m|0,K|0,ea|0,pa|0)|0;pa=E;ea=DH(m|0,K|0,21)|0;K=vH(W|0,pc|0,ea|0,E|0)|0;ea=E;pc=wH(ba|0,pa|0,21)|0;W=E;m=CH(Db|0,Tb|0,pc|0,W|0)|0;Tb=E;Db=DH(pc|0,W|0,21)|0;W=vH(ba|0,pa|0,Db|0,E|0)|0;Db=E;pa=wH(m|0,Tb|0,21)|0;ba=E;pc=CH(pa|0,ba|0,Q|0,c|0)|0;c=E;Q=DH(pa|0,ba|0,21)|0;ba=vH(m|0,Tb|0,Q|0,E|0)|0;Q=E;Tb=wH(pc|0,c|0,21)|0;m=E;pa=CH(h|0,Aa|0,Wb|0,t|0)|0;t=vH(pa|0,E|0,Ua|0,P|0)|0;P=CH(t|0,E|0,Tb|0,m|0)|0;t=E;Ua=DH(Tb|0,m|0,21)|0;m=vH(pc|0,c|0,Ua|0,E|0)|0;Ua=E;c=wH(P|0,t|0,21)|0;pc=E;Tb=CH(c|0,pc|0,G|0,ca|0)|0;ca=E;G=DH(c|0,pc|0,21)|0;pc=vH(P|0,t|0,G|0,E|0)|0;G=E;t=wH(Tb|0,ca|0,21)|0;P=E;c=DH(t|0,P|0,21)|0;pa=vH(Tb|0,ca|0,c|0,E|0)|0;c=E;ca=IH(t|0,P|0,666643,0)|0;Tb=CH(ca|0,E|0,tc|0,mc|0)|0;mc=E;tc=IH(t|0,P|0,470296,0)|0;ca=CH(j|0,sc|0,tc|0,E|0)|0;tc=E;sc=IH(t|0,P|0,654183,0)|0;j=CH(da|0,i|0,sc|0,E|0)|0;sc=E;i=IH(t|0,P|0,-997805,-1)|0;da=CH(ic|0,x|0,i|0,E|0)|0;i=E;x=IH(t|0,P|0,136657,0)|0;ic=CH(Ca|0,aa|0,x|0,E|0)|0;x=E;aa=IH(t|0,P|0,-683901,-1)|0;P=CH(na|0,s|0,aa|0,E|0)|0;aa=E;s=wH(Tb|0,mc|0,21)|0;na=E;t=CH(ca|0,tc|0,s|0,na|0)|0;tc=E;ca=DH(s|0,na|0,21)|0;na=vH(Tb|0,mc|0,ca|0,E|0)|0;ca=E;mc=wH(t|0,tc|0,21)|0;Tb=E;s=CH(j|0,sc|0,mc|0,Tb|0)|0;sc=E;j=DH(mc|0,Tb|0,21)|0;Tb=vH(t|0,tc|0,j|0,E|0)|0;j=E;tc=wH(s|0,sc|0,21)|0;t=E;mc=CH(tc|0,t|0,da|0,i|0)|0;i=E;da=DH(tc|0,t|0,21)|0;t=vH(s|0,sc|0,da|0,E|0)|0;da=E;sc=wH(mc|0,i|0,21)|0;s=E;tc=CH(ic|0,x|0,sc|0,s|0)|0;x=E;ic=DH(sc|0,s|0,21)|0;s=vH(mc|0,i|0,ic|0,E|0)|0;ic=E;i=wH(tc|0,x|0,21)|0;mc=E;sc=CH(i|0,mc|0,P|0,aa|0)|0;aa=E;P=DH(i|0,mc|0,21)|0;mc=vH(tc|0,x|0,P|0,E|0)|0;P=E;x=wH(sc|0,aa|0,21)|0;tc=E;i=CH(x|0,tc|0,K|0,ea|0)|0;ea=E;K=DH(x|0,tc|0,21)|0;tc=vH(sc|0,aa|0,K|0,E|0)|0;K=E;aa=wH(i|0,ea|0,21)|0;sc=E;x=CH(aa|0,sc|0,W|0,Db|0)|0;Db=E;W=DH(aa|0,sc|0,21)|0;sc=vH(i|0,ea|0,W|0,E|0)|0;W=E;ea=wH(x|0,Db|0,21)|0;i=E;aa=CH(ea|0,i|0,ba|0,Q|0)|0;Q=E;ba=DH(ea|0,i|0,21)|0;i=vH(x|0,Db|0,ba|0,E|0)|0;ba=E;Db=wH(aa|0,Q|0,21)|0;x=E;ea=CH(Db|0,x|0,m|0,Ua|0)|0;Ua=E;m=DH(Db|0,x|0,21)|0;x=vH(aa|0,Q|0,m|0,E|0)|0;m=E;Q=wH(ea|0,Ua|0,21)|0;aa=E;Db=CH(Q|0,aa|0,pc|0,G|0)|0;G=E;pc=DH(Q|0,aa|0,21)|0;aa=vH(ea|0,Ua|0,pc|0,E|0)|0;pc=E;Ua=wH(Db|0,G|0,21)|0;ea=E;Q=CH(Ua|0,ea|0,pa|0,c|0)|0;c=E;pa=DH(Ua|0,ea|0,21)|0;ea=vH(Db|0,G|0,pa|0,E|0)|0;pa=E;a[b>>0]=na;G=xH(na|0,ca|0,8)|0;a[b+1>>0]=G;G=xH(na|0,ca|0,16)|0;ca=E;ca=DH(Tb|0,j|0,5)|0;a[b+2>>0]=ca|G;G=xH(Tb|0,j|0,3)|0;a[b+3>>0]=G;G=xH(Tb|0,j|0,11)|0;a[b+4>>0]=G;G=xH(Tb|0,j|0,19)|0;j=E;j=DH(t|0,da|0,2)|0;a[b+5>>0]=j|G;G=xH(t|0,da|0,6)|0;a[b+6>>0]=G;G=xH(t|0,da|0,14)|0;da=E;da=DH(s|0,ic|0,7)|0;a[b+7>>0]=da|G;G=xH(s|0,ic|0,1)|0;a[b+8>>0]=G;G=xH(s|0,ic|0,9)|0;a[b+9>>0]=G;G=xH(s|0,ic|0,17)|0;ic=E;ic=DH(mc|0,P|0,4)|0;a[b+10>>0]=ic|G;G=xH(mc|0,P|0,4)|0;a[b+11>>0]=G;G=xH(mc|0,P|0,12)|0;a[b+12>>0]=G;G=xH(mc|0,P|0,20)|0;P=E;P=DH(tc|0,K|0,1)|0;a[b+13>>0]=P|G;G=xH(tc|0,K|0,7)|0;a[b+14>>0]=G;G=xH(tc|0,K|0,15)|0;K=E;K=DH(sc|0,W|0,6)|0;a[b+15>>0]=K|G;G=xH(sc|0,W|0,2)|0;a[b+16>>0]=G;G=xH(sc|0,W|0,10)|0;a[b+17>>0]=G;G=xH(sc|0,W|0,18)|0;W=E;W=DH(i|0,ba|0,3)|0;a[b+18>>0]=W|G;G=xH(i|0,ba|0,5)|0;a[b+19>>0]=G;G=xH(i|0,ba|0,13)|0;a[b+20>>0]=G;a[b+21>>0]=x;G=xH(x|0,m|0,8)|0;a[b+22>>0]=G;G=xH(x|0,m|0,16)|0;m=E;m=DH(aa|0,pc|0,5)|0;a[b+23>>0]=m|G;G=xH(aa|0,pc|0,3)|0;a[b+24>>0]=G;G=xH(aa|0,pc|0,11)|0;a[b+25>>0]=G;G=xH(aa|0,pc|0,19)|0;pc=E;pc=DH(ea|0,pa|0,2)|0;a[b+26>>0]=pc|G;G=xH(ea|0,pa|0,6)|0;a[b+27>>0]=G;G=xH(ea|0,pa|0,14)|0;pa=E;pa=DH(Q|0,c|0,7)|0;a[b+28>>0]=G|pa;pa=xH(Q|0,c|0,1)|0;a[b+29>>0]=pa;pa=xH(Q|0,c|0,9)|0;a[b+30>>0]=pa;pa=xH(Q|0,c|0,17)|0;a[b+31>>0]=pa;return}function fw(a){a=a|0;return Bw(c[a+4>>2]|0)|0}function gw(a){a=a|0;Gc(79168,76808);rb(79200,76816,1,1,0);Sb(79216,76824,1,-128,127);Sb(79248,76832,1,-128,127);Sb(79232,76848,1,0,255);Sb(79264,76864,2,-32768,32767);Sb(79280,76872,2,0,65535);Sb(79296,76888,4,-2147483648,2147483647);Sb(79312,76896,4,0,-1);Sb(79320,76912,4,-2147483648,2147483647);Sb(79336,76920,4,0,-1);Wc(79352,76936,4);Wc(79368,76944,8);xc(5048,76952);xc(76968,76992);Nc(77032,4,77056);kb(6464,77072);Bc(77088,0,77096);Bc(77128,0,77136);Bc(6664,1,77176);Bc(77216,2,77224);Bc(77256,3,77264);Bc(77304,4,77312);Bc(77344,5,77352);Bc(77392,4,77400);Bc(77432,5,77440);Bc(77128,0,77480);Bc(6664,1,77512);Bc(77216,2,77552);Bc(77256,3,77592);Bc(77304,4,77632);Bc(77344,5,77672);Bc(77712,6,77720);Bc(77752,7,77760);Bc(77792,7,77800);return}function hw(){gw(0);return}function iw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=hy(a,b,c)|0;return d|0}function jw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=iy(a,b,c)|0;return d|0}function kw(a,b){a=a|0;b=b|0;return (a+-48|0)>>>0<10|0}function lw(a,b){a=a|0;b=b|0;return Mx(a)|0}function mw(a,b,c){a=a|0;b=b|0;c=c|0;return nw(0,a,b,(c|0)!=0?c:78528)|0}function nw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;g=i;i=i+16|0;h=g;c[h>>2]=b;j=(f|0)==0?78536:f;f=c[j>>2]|0;a:do if(!d){if(!f){k=0;i=g;return k|0}}else{if(!b){c[h>>2]=h;l=h}else l=b;if(!e){k=-2;i=g;return k|0}do if(!f){m=a[d>>0]|0;n=m&255;if(m<<24>>24<=-1){o=n+-194|0;if(o>>>0>50)break a;p=c[78320+(o<<2)>>2]|0;o=e+-1|0;if(!o){q=p;break}else{r=o;s=p;t=d+1|0;u=11;break}}else{c[l>>2]=n;k=m<<24>>24!=0&1;i=g;return k|0}}else{r=e;s=f;t=d;u=11}while(0);b:do if((u|0)==11){m=a[t>>0]|0;n=(m&255)>>>3;if((n+-16|n+(s>>26))>>>0>7)break a;else{v=r;w=m;x=s;y=t}while(1){y=y+1|0;x=(w&255)+-128|x<<6;v=v+-1|0;if((x|0)>=0){z=x;A=v;break}if(!v){q=x;break b}w=a[y>>0]|0;if((w&-64)<<24>>24!=-128)break a}c[j>>2]=0;c[l>>2]=z;k=e-A|0;i=g;return k|0}while(0);c[j>>2]=q;k=-2;i=g;return k|0}while(0);c[j>>2]=0;c[(_c()|0)>>2]=84;k=-1;i=g;return k|0}function ow(a){a=a|0;var b=0;if(!a)b=1;else b=(c[a>>2]|0)==0;return b&1|0}function pw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=i;i=i+1040|0;h=g+8|0;j=g;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h;a=k;a:do if((m|0)!=0&(k|0)!=0){n=d;o=m;p=a;q=0;r=e;while(1){s=n>>>2;t=s>>>0>=o>>>0;if(!(n>>>0>131|t)){u=n;v=o;w=p;x=q;y=r;break a}z=t?o:s;s=n-z|0;t=qw(r,j,z,f)|0;if((t|0)==-1){A=s;B=r;break}z=(r|0)==(h|0);C=z?0:t;D=o-C|0;E=z?r:r+(t<<2)|0;z=t+q|0;t=c[j>>2]|0;if((o|0)!=(C|0)&(t|0)!=0){n=s;o=D;p=t;q=z;r=E}else{u=s;v=D;w=t;x=z;y=E;break a}}u=A;v=0;w=c[j>>2]|0;x=-1;y=B}else{u=d;v=m;w=a;x=0;y=e}while(0);b:do if((w|0)!=0?(v|0)!=0&(u|0)!=0:0){e=u;a=v;m=w;d=x;B=y;while(1){A=nw(B,m,e,f)|0;if((A+2|0)>>>0<3){F=A;G=d;break}m=(c[j>>2]|0)+A|0;c[j>>2]=m;a=a+-1|0;h=d+1|0;if(!((a|0)!=0&(e|0)!=(A|0))){H=h;break b}else{e=e-A|0;d=h;B=B+4|0}}if((F|0)==-1){H=-1;break}else if(!F){c[j>>2]=0;H=G;break}else{c[f>>2]=0;H=G;break}}else H=x;while(0);if(!l){i=g;return H|0}c[b>>2]=c[j>>2];i=g;return H|0}function qw(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;h=c[e>>2]|0;if((g|0)!=0?(i=c[g>>2]|0,(i|0)!=0):0)if(!b){j=f;k=i;l=h;m=16}else{c[g>>2]=0;n=b;o=f;p=i;q=h;m=37}else if(!b){r=f;s=h;m=7}else{t=b;u=f;v=h;m=6}a:while(1)if((m|0)==6){m=0;if(!u){w=v;m=26;break}else{x=t;y=u;z=v}while(1){h=a[z>>0]|0;do if(((h&255)+-1|0)>>>0<127?y>>>0>4&(z&3|0)==0:0){i=x;g=y;A=z;while(1){B=c[A>>2]|0;if((B+-16843009|B)&-2139062144){C=i;D=g;E=B;F=A;m=32;break}c[i>>2]=B&255;c[i+4>>2]=d[A+1>>0];c[i+8>>2]=d[A+2>>0];B=A+4|0;G=i+16|0;c[i+12>>2]=d[A+3>>0];H=g+-4|0;if(H>>>0>4){i=G;g=H;A=B}else{I=B;J=G;K=H;m=31;break}}if((m|0)==31){m=0;L=J;M=K;N=a[I>>0]|0;O=I;break}else if((m|0)==32){m=0;L=C;M=D;N=E&255;O=F;break}}else{L=x;M=y;N=h;O=z}while(0);h=N&255;if((h+-1|0)>>>0>=127){P=L;Q=M;R=h;S=O;break}A=O+1|0;c[L>>2]=h;y=M+-1|0;if(!y){w=A;m=26;break a}else{x=L+4|0;z=A}}A=R+-194|0;if(A>>>0>50){T=P;U=Q;V=S;m=48;break}n=P;o=Q;p=c[78320+(A<<2)>>2]|0;q=S+1|0;m=37;continue}else if((m|0)==7){m=0;A=a[s>>0]|0;if(((A&255)+-1|0)>>>0<127?(s&3|0)==0:0){h=c[s>>2]|0;if(!((h+-16843009|h)&-2139062144)){g=r;i=s;while(1){H=i+4|0;G=g+-4|0;B=c[H>>2]|0;if(!((B+-16843009|B)&-2139062144)){g=G;i=H}else{W=G;X=B;Y=H;break}}}else{W=r;X=h;Y=s}Z=W;_=X&255;$=Y}else{Z=r;_=A;$=s}i=_&255;if((i+-1|0)>>>0<127){r=Z+-1|0;s=$+1|0;m=7;continue}else{aa=Z;ba=i;ca=$}i=ba+-194|0;if(i>>>0>50){T=b;U=aa;V=ca;m=48;break}j=aa;k=c[78320+(i<<2)>>2]|0;l=ca+1|0;m=16;continue}else if((m|0)==16){m=0;i=(d[l>>0]|0)>>>3;if((i+-16|i+(k>>26))>>>0>7){m=17;break}i=l+1|0;if(k&33554432){if((a[i>>0]&-64)<<24>>24!=-128){m=20;break}g=l+2|0;if(!(k&524288))da=g;else{if((a[g>>0]&-64)<<24>>24!=-128){m=23;break}da=l+3|0}}else da=i;r=j+-1|0;s=da;m=7;continue}else if((m|0)==37){m=0;i=d[q>>0]|0;g=i>>>3;if((g+-16|g+(p>>26))>>>0>7){m=38;break}g=q+1|0;H=i+-128|p<<6;if((H|0)<0){i=d[g>>0]|0;if((i&192|0)!=128){m=41;break}B=q+2|0;G=i+-128|H<<6;if((G|0)<0){i=d[B>>0]|0;if((i&192|0)!=128){m=44;break}ea=i+-128|G<<6;fa=q+3|0}else{ea=G;fa=B}}else{ea=H;fa=g}c[n>>2]=ea;t=n+4|0;u=o+-1|0;v=fa;m=6;continue}if((m|0)==17){ga=b;ha=j;ia=k;ja=l+-1|0;m=47}else if((m|0)==20){ga=b;ha=j;ia=k;ja=l+-1|0;m=47}else if((m|0)==23){ga=b;ha=j;ia=k;ja=l+-1|0;m=47}else if((m|0)==26){c[e>>2]=w;ka=f;return ka|0}else if((m|0)==38){ga=n;ha=o;ia=p;ja=q+-1|0;m=47}else if((m|0)==41){la=n;ma=q+-1|0}else if((m|0)==44){la=n;ma=q+-1|0}if((m|0)==47)if(!ia){T=ga;U=ha;V=ja;m=48}else{la=ga;ma=ja}if((m|0)==48)if(!(a[V>>0]|0)){if(T){c[T>>2]=0;c[e>>2]=0}ka=f-U|0;return ka|0}else{la=T;ma=V}c[(_c()|0)>>2]=84;if(!la){ka=-1;return ka|0}c[e>>2]=ma;ka=-1;return ka|0}function rw(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;c[h>>2]=b;if(!e){j=0;i=g;return j|0}do if(f){if(!b){c[h>>2]=h;k=h}else k=b;l=a[e>>0]|0;m=l&255;if(l<<24>>24>-1){c[k>>2]=m;j=l<<24>>24!=0&1;i=g;return j|0}l=m+-194|0;if(l>>>0<=50){m=e+1|0;n=c[78320+(l<<2)>>2]|0;if(f>>>0<4?(n&-2147483648>>>((f*6|0)+-6|0)|0)!=0:0)break;l=d[m>>0]|0;m=l>>>3;if((m+-16|m+(n>>26))>>>0<=7){m=l+-128|n<<6;if((m|0)>=0){c[k>>2]=m;j=2;i=g;return j|0}n=d[e+2>>0]|0;if((n&192|0)==128){l=n+-128|m<<6;if((l|0)>=0){c[k>>2]=l;j=3;i=g;return j|0}m=d[e+3>>0]|0;if((m&192|0)==128){c[k>>2]=m+-128|l<<6;j=4;i=g;return j|0}}}}}while(0);c[(_c()|0)>>2]=84;j=-1;i=g;return j|0}function sw(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=i;i=i+272|0;g=f+8|0;h=f;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g;a=j;a:do if((l|0)!=0&(j|0)!=0){m=d;n=l;o=a;p=0;q=e;while(1){r=m>>>0>=n>>>0;if(!(r|m>>>0>32)){s=m;t=n;u=o;v=p;w=q;break a}x=r?n:m;r=m-x|0;y=tw(q,h,x,0)|0;if((y|0)==-1){z=r;A=q;break}x=(q|0)==(g|0);B=x?0:y;C=n-B|0;D=x?q:q+y|0;x=y+p|0;y=c[h>>2]|0;if((n|0)!=(B|0)&(y|0)!=0){m=r;n=C;o=y;p=x;q=D}else{s=r;t=C;u=y;v=x;w=D;break a}}s=z;t=0;u=c[h>>2]|0;v=-1;w=A}else{s=d;t=l;u=a;v=0;w=e}while(0);b:do if((u|0)!=0?(t|0)!=0&(s|0)!=0:0){e=s;a=t;l=u;d=v;A=w;while(1){z=_x(A,c[l>>2]|0,0)|0;if((z+1|0)>>>0<2){E=z;F=d;break}l=(c[h>>2]|0)+4|0;c[h>>2]=l;e=e+-1|0;g=d+1|0;if(!((a|0)!=(z|0)&(e|0)!=0)){G=g;break b}else{a=a-z|0;d=g;A=A+z|0}}if(!E){c[h>>2]=0;G=F}else G=-1}else G=v;while(0);if(!k){i=f;return G|0}c[b>>2]=c[h>>2];i=f;return G|0}function tw(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;f=i;i=i+16|0;g=f;if(!b){h=c[d>>2]|0;j=c[h>>2]|0;if(!j){k=0;i=f;return k|0}else{l=0;m=j;n=h}while(1){if(m>>>0>127){h=_x(g,m,0)|0;if((h|0)==-1){k=-1;o=26;break}else p=h}else p=1;h=p+l|0;n=n+4|0;m=c[n>>2]|0;if(!m){k=h;o=26;break}else l=h}if((o|0)==26){i=f;return k|0}}a:do if(e>>>0>3){l=b;m=e;n=c[d>>2]|0;while(1){p=c[n>>2]|0;if((p+-1|0)>>>0>126){if(!p){q=l;r=m;break}h=_x(l,p,0)|0;if((h|0)==-1){k=-1;o=26;break}s=l+h|0;t=m-h|0;u=n}else{a[l>>0]=p;s=l+1|0;t=m+-1|0;u=c[d>>2]|0}n=u+4|0;c[d>>2]=n;if(t>>>0<=3){v=s;w=t;break a}else{l=s;m=t}}if((o|0)==26){i=f;return k|0}a[q>>0]=0;c[d>>2]=0;k=e-r|0;i=f;return k|0}else{v=b;w=e}while(0);if(!w){k=e;i=f;return k|0}b=v;v=w;w=c[d>>2]|0;while(1){r=c[w>>2]|0;if((r+-1|0)>>>0>126){if(!r){x=b;y=v;o=19;break}q=_x(g,r,0)|0;if((q|0)==-1){k=-1;o=26;break}if(v>>>0<q>>>0){z=v;o=22;break}_x(b,c[w>>2]|0,0)|0;A=b+q|0;B=v-q|0;C=w}else{a[b>>0]=r;A=b+1|0;B=v+-1|0;C=c[d>>2]|0}w=C+4|0;c[d>>2]=w;if(!B){k=e;o=26;break}else{b=A;v=B}}if((o|0)==19){a[x>>0]=0;c[d>>2]=0;k=e-y|0;i=f;return k|0}else if((o|0)==22){k=e-z|0;i=f;return k|0}else if((o|0)==26){i=f;return k|0}return 0}function uw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=a+84|0;f=c[e>>2]|0;g=d+256|0;h=jy(f,0,g)|0;i=(h|0)==0?g:h-f|0;h=i>>>0<d>>>0?i:d;zH(b|0,f|0,h|0)|0;c[a+4>>2]=f+h;b=f+i|0;c[a+8>>2]=b;c[e>>2]=b;return h|0}function vw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=d;d=yw(a,b,f)|0;i=e;return d|0}function ww(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e;g=py(240)|0;do if(g){c[f>>2]=c[d>>2];h=fy(g,240,b,f)|0;if(h>>>0<240){j=sy(g,h+1|0)|0;c[a>>2]=(j|0)!=0?j:g;k=h;break}qy(g);if((h|0)>=0?(j=h+1|0,h=py(j)|0,c[a>>2]=h,(h|0)!=0):0)k=fy(h,j,b,d)|0;else k=-1}else k=-1;while(0);i=e;return k|0}function xw(e,f,j){e=e|0;f=f|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0.0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0;k=i;i=i+304|0;l=k+16|0;m=k+8|0;n=k+33|0;o=k;p=k+32|0;q=a[f>>0]|0;if(!(q<<24>>24)){r=0;i=k;return r|0}s=e+4|0;t=e+100|0;u=e+108|0;v=e+8|0;w=n+10|0;x=n+33|0;y=m+4|0;z=n+46|0;A=n+94|0;B=q;q=0;C=f;f=0;D=0;F=0;a:while(1){b:do if(!(Lx(B&255)|0)){G=(a[C>>0]|0)==37;c:do if(G){H=C+1|0;I=a[H>>0]|0;do if(I<<24>>24==42){J=0;K=C+2|0}else if(I<<24>>24==37)break c;else{L=(I&255)+-48|0;if(L>>>0<10?(a[C+2>>0]|0)==36:0){c[l>>2]=c[j>>2];M=L;while(1){L=(c[l>>2]|0)+(4-1)&~(4-1);N=c[L>>2]|0;c[l>>2]=L+4;if(M>>>0>1)M=M+-1|0;else{O=N;break}}J=O;K=C+3|0;break}M=(c[j>>2]|0)+(4-1)&~(4-1);N=c[M>>2]|0;c[j>>2]=M+4;J=N;K=H}while(0);H=a[K>>0]|0;I=H&255;if((I+-48|0)>>>0<10){N=I;I=K;M=0;while(1){L=(M*10|0)+-48+N|0;P=I+1|0;Q=a[P>>0]|0;N=Q&255;if((N+-48|0)>>>0>=10){R=Q;S=P;T=L;break}else{I=P;M=L}}}else{R=H;S=K;T=0}if(R<<24>>24==109){M=S+1|0;U=a[M>>0]|0;V=(J|0)!=0&1;W=M;X=0;Y=0}else{U=R;V=0;W=S;X=D;Y=F}M=W+1|0;switch(U&255|0){case 106:{Z=M;_=3;break}case 76:{Z=M;_=2;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{Z=W;_=0;break}case 116:case 122:{Z=M;_=1;break}case 108:{I=(a[M>>0]|0)==108;Z=I?W+2|0:M;_=I?3:1;break}case 104:{I=(a[M>>0]|0)==104;Z=I?W+2|0:M;_=I?-2:-1;break}default:{$=V;aa=q;ba=X;ca=Y;da=164;break a}}I=d[Z>>0]|0;M=(I&47|0)==3;N=M?I|32:I;I=M?1:_;if((N|0)==99){ea=f;fa=(T|0)<1?1:T}else if((N|0)==110){if(!J){ga=q;ha=Z;ia=f;ja=X;ka=Y;break b}switch(I|0){case 0:{c[J>>2]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case 1:{c[J>>2]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case 3:{M=J;c[M>>2]=f;c[M+4>>2]=((f|0)<0)<<31>>31;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case -2:{a[J>>0]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}case -1:{b[J>>1]=f;ga=q;ha=Z;ia=f;ja=X;ka=Y;break b;break}default:{ga=q;ha=Z;ia=f;ja=X;ka=Y;break b}}}else if((N|0)==91){ea=f;fa=T}else{Px(e,0);do{M=c[s>>2]|0;if(M>>>0<(c[t>>2]|0)>>>0){c[s>>2]=M+1;la=d[M>>0]|0}else la=Qx(e)|0}while((Lx(la)|0)!=0);H=c[s>>2]|0;if(!(c[t>>2]|0))ma=H;else{M=H+-1|0;c[s>>2]=M;ma=M}ea=(c[u>>2]|0)+f+ma-(c[v>>2]|0)|0;fa=T}Px(e,fa);M=c[s>>2]|0;H=c[t>>2]|0;if(M>>>0<H>>>0){c[s>>2]=M+1;na=H}else{if((Qx(e)|0)<0){$=V;aa=q;ba=X;ca=Y;da=164;break a}na=c[t>>2]|0}if(na)c[s>>2]=(c[s>>2]|0)+-1;d:do switch(N|0){case 91:case 99:case 115:{H=(N|0)==99;e:do if((N&239|0)==99){BH(n|0,-1,257)|0;a[n>>0]=0;if((N|0)==115){a[x>>0]=0;a[w>>0]=0;a[w+1>>0]=0;a[w+2>>0]=0;a[w+3>>0]=0;a[w+4>>0]=0;oa=Z}else oa=Z}else{M=Z+1|0;L=(a[M>>0]|0)==94;P=L&1;Q=L?M:Z;pa=L?Z+2|0:M;BH(n|0,L&1|0,257)|0;a[n>>0]=0;L=a[pa>>0]|0;if(L<<24>>24==45){M=(P^1)&255;a[z>>0]=M;qa=M;ra=Q+2|0}else if(L<<24>>24==93){L=(P^1)&255;a[A>>0]=L;qa=L;ra=Q+2|0}else{qa=(P^1)&255;ra=pa}pa=ra;while(1){P=a[pa>>0]|0;if(P<<24>>24==45){Q=pa+1|0;L=a[Q>>0]|0;if(!(L<<24>>24==93|L<<24>>24==0)){M=a[pa+-1>>0]|0;if((M&255)<(L&255)){sa=M&255;do{sa=sa+1|0;a[n+sa>>0]=qa;M=a[Q>>0]|0}while((sa|0)<(M&255|0));ta=M;ua=Q}else{ta=L;ua=Q}}else{ta=45;ua=pa}}else if(P<<24>>24==93){oa=pa;break e}else if(!(P<<24>>24)){$=V;aa=q;ba=X;ca=Y;da=164;break a}else{ta=P;ua=pa}a[n+((ta&255)+1)>>0]=qa;pa=ua+1|0}}while(0);pa=H?fa+1|0:31;sa=(I|0)==1;M=(V|0)!=0;f:do if(sa){if(M){va=py(pa<<2)|0;if(!va){$=V;aa=q;ba=0;ca=va;da=164;break a}else wa=va}else wa=J;c[m>>2]=0;c[y>>2]=0;va=0;xa=pa;ya=wa;g:while(1){if(!ya){za=M&(va|0)==(xa|0);while(1){Aa=c[s>>2]|0;if(Aa>>>0<(c[t>>2]|0)>>>0){c[s>>2]=Aa+1;Ba=d[Aa>>0]|0}else Ba=Qx(e)|0;if(!(a[n+(Ba+1)>>0]|0)){Ca=va;Da=0;break g}a[p>>0]=Ba;Aa=nw(o,p,1,m)|0;if((Aa|0)==-2)continue;else if((Aa|0)==-1){$=V;aa=q;ba=0;ca=0;da=164;break a}if(za){Ea=va;break}}}else{if(M)Fa=va;else{Ga=va;Ha=ya;da=86;break}while(1){while(1){za=c[s>>2]|0;if(za>>>0<(c[t>>2]|0)>>>0){c[s>>2]=za+1;Ia=d[za>>0]|0}else Ia=Qx(e)|0;if(!(a[n+(Ia+1)>>0]|0)){Ca=Fa;Da=ya;break g}a[p>>0]=Ia;za=nw(o,p,1,m)|0;if((za|0)==-1){$=V;aa=q;ba=0;ca=ya;da=164;break a}else if((za|0)!=-2)break}c[ya+(Fa<<2)>>2]=c[o>>2];Fa=Fa+1|0;if((Fa|0)==(xa|0)){Ea=xa;break}}}za=xa<<1|1;P=sy(ya,za<<2)|0;if(!P){$=V;aa=q;ba=0;ca=ya;da=164;break a}va=Ea;xa=za;ya=P}h:do if((da|0)==86){da=0;ya=Ga;while(1){while(1){xa=c[s>>2]|0;if(xa>>>0<(c[t>>2]|0)>>>0){c[s>>2]=xa+1;Ja=d[xa>>0]|0}else Ja=Qx(e)|0;if(!(a[n+(Ja+1)>>0]|0)){Ca=ya;Da=Ha;break h}a[p>>0]=Ja;xa=nw(o,p,1,m)|0;if((xa|0)==-1){$=0;aa=q;ba=0;ca=Ha;da=164;break a}else if((xa|0)!=-2)break}c[Ha+(ya<<2)>>2]=c[o>>2];ya=ya+1|0}}while(0);if(!(ow(m)|0)){$=V;aa=q;ba=0;ca=Da;da=164;break a}else{Ka=Ca;La=0;Ma=Da}}else{if(M){ya=py(pa)|0;if(!ya){$=V;aa=q;ba=0;ca=0;da=164;break a}else{Na=0;Oa=pa;Pa=ya}while(1){ya=Na;do{xa=c[s>>2]|0;if(xa>>>0<(c[t>>2]|0)>>>0){c[s>>2]=xa+1;Qa=d[xa>>0]|0}else Qa=Qx(e)|0;if(!(a[n+(Qa+1)>>0]|0)){Ka=ya;La=Pa;Ma=0;break f}a[Pa+ya>>0]=Qa;ya=ya+1|0}while((ya|0)!=(Oa|0));ya=Oa<<1|1;xa=sy(Pa,ya)|0;if(!xa){$=V;aa=q;ba=Pa;ca=0;da=164;break a}else{va=Oa;Oa=ya;Pa=xa;Na=va}}}if(!J){va=na;while(1){xa=c[s>>2]|0;if(xa>>>0<va>>>0){c[s>>2]=xa+1;Ra=d[xa>>0]|0}else Ra=Qx(e)|0;if(!(a[n+(Ra+1)>>0]|0)){Ka=0;La=0;Ma=0;break f}va=c[t>>2]|0}}else{va=na;xa=0;while(1){ya=c[s>>2]|0;if(ya>>>0<va>>>0){c[s>>2]=ya+1;Sa=d[ya>>0]|0}else Sa=Qx(e)|0;if(!(a[n+(Sa+1)>>0]|0)){Ka=xa;La=J;Ma=0;break f}a[J+xa>>0]=Sa;va=c[t>>2]|0;xa=xa+1|0}}}while(0);pa=c[s>>2]|0;if(!(c[t>>2]|0))Ta=pa;else{xa=pa+-1|0;c[s>>2]=xa;Ta=xa}xa=Ta-(c[v>>2]|0)+(c[u>>2]|0)|0;if(!xa){Ua=V;Va=q;Wa=La;Xa=Ma;break a}if(!((xa|0)==(fa|0)|H^1)){Ua=V;Va=q;Wa=La;Xa=Ma;break a}do if(M)if(sa){c[J>>2]=Ma;break}else{c[J>>2]=La;break}while(0);if(!H){if(Ma)c[Ma+(Ka<<2)>>2]=0;if(!La){Ya=oa;Za=0;_a=Ma}else{a[La+Ka>>0]=0;Ya=oa;Za=La;_a=Ma}}else{Ya=oa;Za=La;_a=Ma}break}case 111:{$a=8;da=146;break}case 117:case 100:{$a=10;da=146;break}case 105:{$a=0;da=146;break}case 120:case 88:case 112:{$a=16;da=146;break}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{ab=+Ox(e,I,0);if((c[u>>2]|0)==((c[v>>2]|0)-(c[s>>2]|0)|0)){Ua=V;Va=q;Wa=X;Xa=Y;break a}if(J)if(!I){g[J>>2]=ab;Ya=Z;Za=X;_a=Y;break d}else if((I|0)==1){h[J>>3]=ab;Ya=Z;Za=X;_a=Y;break d}else if((I|0)==2){h[J>>3]=ab;Ya=Z;Za=X;_a=Y;break d}else{Ya=Z;Za=X;_a=Y;break d}else{Ya=Z;Za=X;_a=Y}break}default:{Ya=Z;Za=X;_a=Y}}while(0);i:do if((da|0)==146){da=0;sa=Nx(e,$a,0,-1,-1)|0;if((c[u>>2]|0)==((c[v>>2]|0)-(c[s>>2]|0)|0)){Ua=V;Va=q;Wa=X;Xa=Y;break a}if((J|0)!=0&(N|0)==112){c[J>>2]=sa;Ya=Z;Za=X;_a=Y;break}if(!J){Ya=Z;Za=X;_a=Y}else switch(I|0){case -2:{a[J>>0]=sa;Ya=Z;Za=X;_a=Y;break i;break}case -1:{b[J>>1]=sa;Ya=Z;Za=X;_a=Y;break i;break}case 0:{c[J>>2]=sa;Ya=Z;Za=X;_a=Y;break i;break}case 1:{c[J>>2]=sa;Ya=Z;Za=X;_a=Y;break i;break}case 3:{M=J;c[M>>2]=sa;c[M+4>>2]=E;Ya=Z;Za=X;_a=Y;break i;break}default:{Ya=Z;Za=X;_a=Y;break i}}}while(0);ga=((J|0)!=0&1)+q|0;ha=Ya;ia=(c[u>>2]|0)+ea+(c[s>>2]|0)-(c[v>>2]|0)|0;ja=Za;ka=_a;break b}while(0);I=C+(G&1)|0;Px(e,0);N=c[s>>2]|0;if(N>>>0<(c[t>>2]|0)>>>0){c[s>>2]=N+1;bb=d[N>>0]|0}else bb=Qx(e)|0;if((bb|0)!=(d[I>>0]|0)){cb=bb;db=q;eb=D;fb=F;da=19;break a}ga=q;ha=I;ia=f+1|0;ja=D;ka=F}else{I=C;while(1){N=I+1|0;if(!(Lx(d[N>>0]|0)|0)){gb=I;break}else I=N}Px(e,0);do{I=c[s>>2]|0;if(I>>>0<(c[t>>2]|0)>>>0){c[s>>2]=I+1;hb=d[I>>0]|0}else hb=Qx(e)|0}while((Lx(hb)|0)!=0);I=c[s>>2]|0;if(!(c[t>>2]|0))ib=I;else{G=I+-1|0;c[s>>2]=G;ib=G}ga=q;ha=gb;ia=(c[u>>2]|0)+f+ib-(c[v>>2]|0)|0;ja=D;ka=F}while(0);C=ha+1|0;B=a[C>>0]|0;if(!(B<<24>>24)){r=ga;da=168;break}else{q=ga;f=ia;D=ja;F=ka}}if((da|0)==19){if(c[t>>2]|0)c[s>>2]=(c[s>>2]|0)+-1;if((db|0)!=0|(cb|0)>-1){r=db;i=k;return r|0}else{jb=0;kb=eb;lb=fb;da=165}}else if((da|0)==164)if(!aa){jb=$;kb=ba;lb=ca;da=165}else{Ua=$;Va=aa;Wa=ba;Xa=ca}else if((da|0)==168){i=k;return r|0}if((da|0)==165){Ua=jb;Va=-1;Wa=kb;Xa=lb}if(!Ua){r=Va;i=k;return r|0}qy(Wa);qy(Xa);r=Va;i=k;return r|0}function yw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+112|0;f=e;g=f;h=g+112|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[f+32>>2]=67;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;a=xw(f,b,d)|0;i=e;return a|0}function zw(b,c){b=b|0;c=c|0;var d=0;d=Aw(b,c)|0;return ((a[d>>0]|0)==(c&255)<<24>>24?d:0)|0}function Aw(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=d&255;if(!e){f=b+(yH(b|0)|0)|0;return f|0}a:do if(!(b&3))g=b;else{h=d&255;i=b;while(1){j=a[i>>0]|0;if(j<<24>>24==0?1:j<<24>>24==h<<24>>24){f=i;break}j=i+1|0;if(!(j&3)){g=j;break a}else i=j}return f|0}while(0);b=aa(e,16843009)|0;e=c[g>>2]|0;b:do if(!((e&-2139062144^-2139062144)&e+-16843009)){i=e;h=g;while(1){j=i^b;if((j&-2139062144^-2139062144)&j+-16843009){k=h;break b}j=h+4|0;i=c[j>>2]|0;if((i&-2139062144^-2139062144)&i+-16843009){k=j;break}else h=j}}else k=g;while(0);g=d&255;d=k;while(1){k=a[d>>0]|0;if(k<<24>>24==0?1:k<<24>>24==g<<24>>24){f=d;break}else d=d+1|0}return f|0}function Bw(a){a=a|0;var b=0,c=0,d=0;b=(yH(a|0)|0)+1|0;c=py(b)|0;if(!c){d=0;return d|0}zH(c|0,a|0,b|0)|0;d=c;return d|0}function Cw(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;f=i;i=i+1056|0;g=f+1024|0;h=f;j=a[e>>0]|0;if(!(j<<24>>24)){k=b;i=f;return k|0}l=zw(b,j<<24>>24)|0;if(!l){k=0;i=f;return k|0}b=a[e+1>>0]|0;if(!(b<<24>>24)){k=l;i=f;return k|0}m=l+1|0;n=a[m>>0]|0;if(!(n<<24>>24)){k=0;i=f;return k|0}o=a[e+2>>0]|0;if(!(o<<24>>24)){p=b&255|(j&255)<<8;q=m;m=n;r=l;s=d[l>>0]<<8|n&255;while(1){t=s&65535;if((t|0)==(p|0)){u=r;v=m;break}w=q+1|0;x=a[w>>0]|0;if(!(x<<24>>24)){u=q;v=0;break}else{y=q;q=w;m=x;s=x&255|t<<8;r=y}}k=v<<24>>24!=0?u:0;i=f;return k|0}u=l+2|0;v=a[u>>0]|0;if(!(v<<24>>24)){k=0;i=f;return k|0}r=a[e+3>>0]|0;if(!(r<<24>>24)){s=(b&255)<<16|(j&255)<<24|(o&255)<<8;m=(v&255)<<8|(n&255)<<16|d[l>>0]<<24;if((m|0)==(s|0)){z=u;A=v}else{q=u;u=m;while(1){m=q+1|0;p=a[m>>0]|0;u=(p&255|u)<<8;if(p<<24>>24==0|(u|0)==(s|0)){z=m;A=p;break}else q=m}}k=A<<24>>24!=0?z+-2|0:0;i=f;return k|0}z=l+3|0;A=a[z>>0]|0;if(!(A<<24>>24)){k=0;i=f;return k|0}if(!(a[e+4>>0]|0)){q=(b&255)<<16|(j&255)<<24|(o&255)<<8|r&255;r=(v&255)<<8|(n&255)<<16|A&255|d[l>>0]<<24;if((r|0)==(q|0)){B=z;C=A}else{A=z;z=r;while(1){r=A+1|0;n=a[r>>0]|0;z=n&255|z<<8;if(n<<24>>24==0|(z|0)==(q|0)){B=r;C=n;break}else A=r}}k=C<<24>>24!=0?B+-3|0:0;i=f;return k|0};c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;c[g+24>>2]=0;c[g+28>>2]=0;B=j;j=0;while(1){if(!(a[l+j>>0]|0)){D=0;break}C=g+(((B&255)>>>5&255)<<2)|0;c[C>>2]=c[C>>2]|1<<(B&31);C=j+1|0;c[h+((B&255)<<2)>>2]=C;B=a[e+C>>0]|0;if(!(B<<24>>24)){E=C;F=j;G=23;break}else j=C}a:do if((G|0)==23){b:do if(E>>>0>1){j=1;B=-1;C=0;c:while(1){A=j;q=C;z=1;while(1){r=A;n=q;d:while(1){v=r;o=1;while(1){b=a[e+(o+B)>>0]|0;s=a[e+v>>0]|0;if(b<<24>>24!=s<<24>>24){H=v;I=b;J=s;K=n;break d}if((o|0)==(z|0))break;o=o+1|0;v=o+n|0;if(v>>>0>=E>>>0){L=B;M=z;break c}}n=n+z|0;r=n+1|0;if(r>>>0>=E>>>0){L=B;M=z;break c}}r=H-B|0;if((I&255)<=(J&255)){N=K;break}n=H+1|0;if(n>>>0<E>>>0){A=n;q=H;z=r}else{L=B;M=r;break c}}j=N+2|0;if(j>>>0>=E>>>0){L=N;M=1;break}else{B=N;C=N+1|0}}C=1;B=-1;j=0;while(1){z=C;q=j;A=1;while(1){r=z;n=q;e:while(1){v=r;o=1;while(1){s=a[e+(o+B)>>0]|0;b=a[e+v>>0]|0;if(s<<24>>24!=b<<24>>24){O=v;P=s;Q=b;R=n;break e}if((o|0)==(A|0))break;o=o+1|0;v=o+n|0;if(v>>>0>=E>>>0){S=L;T=B;U=M;V=A;break b}}n=n+A|0;r=n+1|0;if(r>>>0>=E>>>0){S=L;T=B;U=M;V=A;break b}}r=O-B|0;if((P&255)>=(Q&255)){W=R;break}n=O+1|0;if(n>>>0<E>>>0){z=n;q=O;A=r}else{S=L;T=B;U=M;V=r;break b}}C=W+2|0;if(C>>>0>=E>>>0){S=L;T=W;U=M;V=1;break}else{B=W;j=W+1|0}}}else{S=-1;T=-1;U=1;V=1}while(0);j=(T+1|0)>>>0>(S+1|0)>>>0;B=j?V:U;C=j?T:S;j=C+1|0;if(!(ky(e,e+B|0,j)|0)){A=E-B|0;q=E|63;if((E|0)==(B|0)){X=q;Y=E}else{z=l;r=0;n=l;f:while(1){v=z;do if((n-v|0)>>>0<E>>>0){o=jy(n,0,q)|0;if(o)if((o-v|0)>>>0<E>>>0){D=0;break a}else{Z=o;break}else{Z=n+q|0;break}}else Z=n;while(0);v=a[z+F>>0]|0;if(!(1<<(v&31)&c[g+(((v&255)>>>5&255)<<2)>>2])){z=z+E|0;r=0;n=Z;continue}o=c[h+((v&255)<<2)>>2]|0;v=E-o|0;if((E|0)!=(o|0)){z=z+((r|0)!=0&v>>>0<B>>>0?A:v)|0;r=0;n=Z;continue}v=j>>>0>r>>>0?j:r;o=a[e+v>>0]|0;g:do if(!(o<<24>>24))_=j;else{b=o;s=v;while(1){if(b<<24>>24!=(a[z+s>>0]|0)){$=s;break}s=s+1|0;b=a[e+s>>0]|0;if(!(b<<24>>24)){_=j;break g}}z=z+($-C)|0;r=0;n=Z;continue f}while(0);do{if(_>>>0<=r>>>0){D=z;break a}_=_+-1|0}while((a[e+_>>0]|0)==(a[z+_>>0]|0));z=z+B|0;r=A;n=Z}}}else{n=E-C+-1|0;X=E|63;Y=(C>>>0>n>>>0?C:n)+1|0}n=e+j|0;A=l;r=l;h:while(1){B=A;do if((r-B|0)>>>0<E>>>0){z=jy(r,0,X)|0;if(z)if((z-B|0)>>>0<E>>>0){D=0;break a}else{aa=z;break}else{aa=r+X|0;break}}else aa=r;while(0);B=a[A+F>>0]|0;if(!(1<<(B&31)&c[g+(((B&255)>>>5&255)<<2)>>2])){A=A+E|0;r=aa;continue}z=c[h+((B&255)<<2)>>2]|0;if((E|0)!=(z|0)){A=A+(E-z)|0;r=aa;continue}z=a[n>>0]|0;i:do if(!(z<<24>>24))ba=j;else{B=z;q=j;while(1){if(B<<24>>24!=(a[A+q>>0]|0)){ca=q;break}q=q+1|0;B=a[e+q>>0]|0;if(!(B<<24>>24)){ba=j;break i}}A=A+(ca-C)|0;r=aa;continue h}while(0);do{if(!ba){D=A;break a}ba=ba+-1|0}while((a[e+ba>>0]|0)==(a[A+ba>>0]|0));A=A+Y|0;r=aa}}while(0);k=D;i=f;return k|0}function Dw(a){a=a|0;var b=0,d=0;b=a;while(1)if(!(c[b>>2]|0)){d=b;break}else b=b+4|0;return d-a>>2|0}function Ew(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if(!d)return a|0;else{e=d;f=b;g=a}while(1){e=e+-1|0;c[g>>2]=c[f>>2];if(!e)break;else{f=f+4|0;g=g+4|0}}return a|0}function Fw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e)return a|0;else f=d;do{f=f+-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2]}while((f|0)!=0);return a|0}else{if(e)return a|0;else{g=b;h=a;i=d}while(1){i=i+-1|0;c[h>>2]=c[g>>2];if(!i)break;else{g=g+4|0;h=h+4|0}}return a|0}return 0}function Gw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!d)return a|0;else{e=d;f=a}while(1){e=e+-1|0;c[f>>2]=b;if(!e)break;else f=f+4|0}return a|0}function Hw(a,b,c){a=a|0;b=b|0;c=c|0;return uw(a,b,c)|0}function Iw(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=b;b=c[o>>2]|0;Wb(b|0,a|0,e|0)|0;cd(10,b|0)|0;tc()}function Jw(a){a=a|0;Fa(79728,79760,1164,79872)}function Kw(a){a=a|0;Fa(79896,79920,303,79872)}function Lw(){var a=0,b=0;a=i;i=i+16|0;if(!(xb(80040,2)|0)){b=yc(c[20008]|0)|0;i=a;return b|0}else Iw(80048,a);return 0}function Mw(a){a=a|0;var b=0,d=0,e=0;b=(a|0)==0?1:a;a=py(b)|0;a:do if(!a){while(1){d=Ww()|0;if(!d)break;yd[d&3]();d=py(b)|0;if(d){e=d;break a}}d=Yb(4)|0;c[d>>2]=78560;dd(d|0,78592,79)}else e=a;while(0);return e|0}function Nw(a){a=a|0;return Mw(a)|0}function Ow(a){a=a|0;qy(a);return}function Pw(a){a=a|0;Ow(a);return}function Qw(a){a=a|0;c[a>>2]=78560;return}function Rw(a){a=a|0;return}function Sw(a){a=a|0;Ow(a);return}function Tw(a){a=a|0;return 80104}function Uw(a){a=a|0;var b=0;b=i;i=i+16|0;yd[a&3]();Iw(80120,b)}function Vw(){var a=0,b=0;a=Lw()|0;if(((a|0)!=0?(b=c[a>>2]|0,(b|0)!=0):0)?(a=b+48|0,(c[a>>2]&-256|0)==1126902528?(c[a+4>>2]|0)==1129074247:0):0)Uw(c[b+12>>2]|0);b=c[19636]|0;c[19636]=b+0;Uw(b)}function Ww(){var a=0;a=c[19652]|0;c[19652]=a+0;return a|0}function Xw(a){a=a|0;return}function Yw(a){a=a|0;c[a>>2]=78648;Jx(a+4|0);return}function Zw(a){a=a|0;Yw(a);Ow(a);return}function _w(a){a=a|0;return c[a+4>>2]|0}function $w(a){a=a|0;Yw(a);Ow(a);return}function ax(a){a=a|0;Yw(a);Ow(a);return}function bx(a){a=a|0;return}function cx(a){a=a|0;return}function dx(a){a=a|0;return}function ex(a){a=a|0;return}function fx(a){a=a|0;Ow(a);return}function gx(a){a=a|0;Ow(a);return}function hx(a){a=a|0;Ow(a);return}function ix(a){a=a|0;Ow(a);return}function jx(a){a=a|0;Ow(a);return}function kx(a){a=a|0;Ow(a);return}function lx(a,b,c){a=a|0;b=b|0;c=c|0;return (a|0)==(b|0)|0}function mx(a,b,c){a=a|0;b=b|0;c=c|0;return (a|0)==(b|0)|0}function nx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+64|0;f=e;if((a|0)!=(b|0))if((b|0)!=0?(g=ux(b,78888,78944,0)|0,(g|0)!=0):0){b=f;h=b+56|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(h|0));c[f>>2]=g;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;Bd[c[(c[g>>2]|0)+28>>2]&31](g,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];j=1}else j=0;k=j}else k=0;else k=1;i=e;return k|0}function ox(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=d+16|0;g=c[b>>2]|0;do if(g){if((g|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break}h=d+24|0;if((c[h>>2]|0)==2)c[h>>2]=f}else{c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1}while(0);return}function px(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if((a|0)==(c[b+8>>2]|0))ox(0,b,d,e);return}function qx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if((a|0)==(c[b+8>>2]|0))ox(0,b,d,e);else{f=c[a+8>>2]|0;Bd[c[(c[f>>2]|0)+28>>2]&31](f,b,d,e)}return}function rx(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a+4>>2]|0;g=f>>8;if(!(f&1))h=g;else h=c[(c[d>>2]|0)+g>>2]|0;g=c[a>>2]|0;Bd[c[(c[g>>2]|0)+28>>2]&31](g,b,d+h|0,(f&2|0)!=0?e:2);return}function sx(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:do if((b|0)!=(c[d+8>>2]|0)){g=c[b+12>>2]|0;h=b+16+(g<<3)|0;rx(b+16|0,d,e,f);if((g|0)>1){g=d+54|0;i=b+24|0;do{rx(i,d,e,f);if(a[g>>0]|0)break a;i=i+8|0}while(i>>>0<h>>>0)}}else ox(0,d,e,f);while(0);return}function tx(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+64|0;f=e;c[d>>2]=c[c[d>>2]>>2];if(!((a|0)==(b|0)|(b|0)==79184))if(((b|0)!=0?(g=ux(b,78888,79056,0)|0,(g|0)!=0):0)?(c[g+8>>2]&~c[a+8>>2]|0)==0:0){b=c[a+12>>2]|0;a=g+12|0;if(!((b|0)==79168?1:(b|0)==(c[a>>2]|0)))if((((b|0)!=0?(g=ux(b,78888,78944,0)|0,(g|0)!=0):0)?(b=c[a>>2]|0,(b|0)!=0):0)?(a=ux(b,78888,78944,0)|0,(a|0)!=0):0){b=f;h=b+56|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(h|0));c[f>>2]=a;c[f+8>>2]=g;c[f+12>>2]=-1;c[f+48>>2]=1;Bd[c[(c[a>>2]|0)+28>>2]&31](a,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];j=1}else j=0;k=j}else k=0;else k=1}else k=0;else k=1;i=e;return k|0}function ux(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+64|0;j=h;k=c[d>>2]|0;l=d+(c[k+-8>>2]|0)|0;m=c[k+-4>>2]|0;c[j>>2]=f;c[j+4>>2]=d;c[j+8>>2]=e;c[j+12>>2]=g;g=j+16|0;e=j+20|0;d=j+24|0;k=j+28|0;n=j+32|0;o=j+40|0;p=(m|0)==(f|0);q=g;r=q+36|0;do{c[q>>2]=0;q=q+4|0}while((q|0)<(r|0));b[g+36>>1]=0;a[g+38>>0]=0;do if(p){c[j+48>>2]=1;pd[c[(c[f>>2]|0)+20>>2]&15](f,j,l,l,1,0);s=(c[d>>2]|0)==1?l:0}else{qd[c[(c[m>>2]|0)+24>>2]&7](m,j,l,1,0);q=c[j+36>>2]|0;if(!q){s=(c[o>>2]|0)==1&(c[k>>2]|0)==1&(c[n>>2]|0)==1?c[e>>2]|0:0;break}else if((q|0)!=1){s=0;break}if((c[d>>2]|0)!=1?!((c[o>>2]|0)==0&(c[k>>2]|0)==1&(c[n>>2]|0)==1):0){s=0;break}s=c[g>>2]|0}while(0);i=h;return s|0}function vx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;a[d+53>>0]=1;do if((c[d+4>>2]|0)==(f|0)){a[d+52>>0]=1;b=d+16|0;h=c[b>>2]|0;if(!h){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0))break;a[d+54>>0]=1;break}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;a[d+54>>0]=1;break}h=d+24|0;b=c[h>>2]|0;if((b|0)==2){c[h>>2]=g;i=g}else i=b;if((i|0)==1?(c[d+48>>2]|0)==1:0)a[d+54>>0]=1}while(0);return}function wx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;a:do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(h=d+28|0,(c[h>>2]|0)!=1):0)c[h>>2]=f}else{if((b|0)!=(c[d>>2]|0)){h=c[b+12>>2]|0;i=b+16+(h<<3)|0;yx(b+16|0,d,e,f,g);j=b+24|0;if((h|0)<=1)break;h=c[b+8>>2]|0;if((h&2|0)==0?(k=d+36|0,(c[k>>2]|0)!=1):0){if(!(h&1)){h=d+54|0;l=j;while(1){if(a[h>>0]|0)break a;if((c[k>>2]|0)==1)break a;yx(l,d,e,f,g);l=l+8|0;if(l>>>0>=i>>>0)break a}}l=d+24|0;h=d+54|0;m=j;while(1){if(a[h>>0]|0)break a;if((c[k>>2]|0)==1?(c[l>>2]|0)==1:0)break a;yx(m,d,e,f,g);m=m+8|0;if(m>>>0>=i>>>0)break a}}m=d+54|0;l=j;while(1){if(a[m>>0]|0)break a;yx(l,d,e,f,g);l=l+8|0;if(l>>>0>=i>>>0)break a}}if((c[d+16>>2]|0)!=(e|0)?(i=d+20|0,(c[i>>2]|0)!=(e|0)):0){c[d+32>>2]=f;l=d+44|0;if((c[l>>2]|0)==4)break;m=c[b+12>>2]|0;j=b+16+(m<<3)|0;k=d+52|0;h=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;b:do if((m|0)>0){q=0;r=0;s=b+16|0;while(1){a[k>>0]=0;a[h>>0]=0;xx(s,d,e,e,1,g);if(a[n>>0]|0){t=q;u=r;v=20;break b}do if(a[h>>0]|0){if(!(a[k>>0]|0))if(!(c[o>>2]&1)){t=q;u=1;v=20;break b}else{w=q;x=1;break}if((c[p>>2]|0)==1)break b;if(!(c[o>>2]&2))break b;else{w=1;x=1}}else{w=q;x=r}while(0);s=s+8|0;if(s>>>0>=j>>>0){t=w;u=x;v=20;break}else{q=w;r=x}}}else{t=0;u=0;v=20}while(0);do if((v|0)==20){if((!t?(c[i>>2]=e,j=d+40|0,c[j>>2]=(c[j>>2]|0)+1,(c[d+36>>2]|0)==1):0)?(c[p>>2]|0)==2:0){a[n>>0]=1;if(u)break}else v=24;if((v|0)==24?u:0)break;c[l>>2]=4;break a}while(0);c[l>>2]=3;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function xx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=c[a+4>>2]|0;i=h>>8;if(!(h&1))j=i;else j=c[(c[e>>2]|0)+i>>2]|0;i=c[a>>2]|0;pd[c[(c[i>>2]|0)+20>>2]&15](i,b,d,e+j|0,(h&2|0)!=0?f:2,g);return}function yx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=c[a+4>>2]|0;h=g>>8;if(!(g&1))i=h;else i=c[(c[d>>2]|0)+h>>2]|0;h=c[a>>2]|0;qd[c[(c[h>>2]|0)+24>>2]&7](h,b,d+i|0,(g&2|0)!=0?e:2,f);return}function zx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(h=d+28|0,(c[h>>2]|0)!=1):0)c[h>>2]=f}else{if((b|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;qd[c[(c[h>>2]|0)+24>>2]&7](h,d,e,f,g);break}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4)break;j=d+52|0;a[j>>0]=0;k=d+53|0;a[k>>0]=0;l=c[b+8>>2]|0;pd[c[(c[l>>2]|0)+20>>2]&15](l,d,e,e,1,g);if(a[k>>0]|0){if(!(a[j>>0]|0)){m=1;n=13}}else{m=0;n=13}do if((n|0)==13){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(m)break}else n=16;if((n|0)==16?m:0)break;c[i>>2]=4;break a}while(0);c[i>>2]=3;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Ax(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;do if((b|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)==(e|0)?(g=d+28|0,(c[g>>2]|0)!=1):0)c[g>>2]=f}else if((b|0)==(c[d>>2]|0)){if((c[d+16>>2]|0)!=(e|0)?(g=d+20|0,(c[g>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[g>>2]=e;g=d+40|0;c[g>>2]=(c[g>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break}if((f|0)==1)c[d+32>>2]=1}while(0);return}function Bx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((b|0)==(c[d+8>>2]|0))vx(0,d,e,f,g);else{i=d+52|0;j=a[i>>0]|0;k=d+53|0;l=a[k>>0]|0;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i>>0]=0;a[k>>0]=0;xx(b+16|0,d,e,f,g,h);a:do if((m|0)>1){o=d+24|0;p=b+8|0;q=d+54|0;r=b+24|0;do{if(a[q>>0]|0)break a;if(!(a[i>>0]|0)){if((a[k>>0]|0)!=0?(c[p>>2]&1|0)==0:0)break a}else{if((c[o>>2]|0)==1)break a;if(!(c[p>>2]&2))break a}a[i>>0]=0;a[k>>0]=0;xx(r,d,e,f,g,h);r=r+8|0}while(r>>>0<n>>>0)}while(0);a[i>>0]=j;a[k>>0]=l}return}function Cx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if((a|0)==(c[b+8>>2]|0))vx(0,b,d,e,f);else{h=c[a+8>>2]|0;pd[c[(c[h>>2]|0)+20>>2]&15](h,b,d,e,f,g)}return}function Dx(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((a|0)==(c[b+8>>2]|0))vx(0,b,d,e,f);return}function Ex(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;c[f>>2]=c[d>>2];g=od[c[(c[a>>2]|0)+16>>2]&127](a,b,f)|0;if(g)c[d>>2]=c[f>>2];i=e;return g&1|0}function Fx(a){a=a|0;var b=0;if(!a)b=0;else b=(ux(a,78888,79056,0)|0)!=0;return b&1|0}function Gx(){var a=0;a=Yb(4)|0;Qw(a);dd(a|0,78592,79)}function Hx(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;a=i;i=i+48|0;b=a+32|0;d=a+24|0;e=a+16|0;f=a;g=a+36|0;a=Lw()|0;if((a|0)!=0?(h=c[a>>2]|0,(h|0)!=0):0){a=h+48|0;j=c[a>>2]|0;k=c[a+4>>2]|0;if(!((j&-256|0)==1126902528&(k|0)==1129074247)){c[d>>2]=c[20068];Iw(80376,d)}if((j|0)==1126902529&(k|0)==1129074247)l=c[h+44>>2]|0;else l=h+80|0;c[g>>2]=l;l=c[h>>2]|0;h=c[l+4>>2]|0;if(od[c[(c[78632>>2]|0)+16>>2]&127](78632,l,g)|0){l=c[g>>2]|0;g=c[20068]|0;k=wd[c[(c[l>>2]|0)+8>>2]&127](l)|0;c[f>>2]=g;c[f+4>>2]=h;c[f+8>>2]=k;Iw(80280,f)}else{c[e>>2]=c[20068];c[e+4>>2]=h;Iw(80328,e)}}Iw(80416,b)}function Ix(){var a=0;a=i;i=i+16|0;if(!(Aa(80032,183)|0)){i=a;return}else Iw(80160,a)}function Jx(a){a=a|0;var b=0,d=0;b=(c[a>>2]|0)+-4|0;d=c[b>>2]|0;c[b>>2]=d+-1;if((d+-1|0)<0)Ow((c[a>>2]|0)+-12|0);return}function Kx(a){a=a|0;var b=0;b=i;i=i+16|0;qy(a);if(!(ad(c[20008]|0,0)|0)){i=b;return}else Iw(80216,b)}function Lx(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function Mx(a){a=a|0;var b=0,c=0;if((a+-48|0)>>>0<10){b=1;c=b&1;return c|0}b=((a|32)+-97|0)>>>0<6;c=b&1;return c|0}function Nx(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;if(e>>>0>36){c[(_c()|0)>>2]=22;i=0;j=0;E=i;return j|0}k=b+4|0;l=b+100|0;do{m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;n=d[m>>0]|0}else n=Qx(b)|0}while((Lx(n)|0)!=0);o=n;do if((o|0)==43|(o|0)==45){n=((o|0)==45)<<31>>31;m=c[k>>2]|0;if(m>>>0<(c[l>>2]|0)>>>0){c[k>>2]=m+1;p=d[m>>0]|0;q=n;break}else{p=Qx(b)|0;q=n;break}}else{p=o;q=0}while(0);o=(e|0)==0;do if((e&-17|0)==0&(p|0)==48){n=c[k>>2]|0;if(n>>>0<(c[l>>2]|0)>>>0){c[k>>2]=n+1;r=d[n>>0]|0}else r=Qx(b)|0;if((r|32|0)!=120)if(o){s=8;t=r;u=46;break}else{v=e;w=r;u=32;break}n=c[k>>2]|0;if(n>>>0<(c[l>>2]|0)>>>0){c[k>>2]=n+1;x=d[n>>0]|0}else x=Qx(b)|0;if((d[80448+(x+1)>>0]|0)>15){n=(c[l>>2]|0)==0;if(!n)c[k>>2]=(c[k>>2]|0)+-1;if(!f){Px(b,0);i=0;j=0;E=i;return j|0}if(n){i=0;j=0;E=i;return j|0}c[k>>2]=(c[k>>2]|0)+-1;i=0;j=0;E=i;return j|0}else{s=16;t=x;u=46}}else{n=o?10:e;if((d[80448+(p+1)>>0]|0)>>>0<n>>>0){v=n;w=p;u=32}else{if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;Px(b,0);c[(_c()|0)>>2]=22;i=0;j=0;E=i;return j|0}}while(0);if((u|0)==32)if((v|0)==10){p=w+-48|0;if(p>>>0<10){e=p;p=0;while(1){o=(p*10|0)+e|0;x=c[k>>2]|0;if(x>>>0<(c[l>>2]|0)>>>0){c[k>>2]=x+1;y=d[x>>0]|0}else y=Qx(b)|0;e=y+-48|0;if(!(e>>>0<10&o>>>0<429496729)){z=o;A=y;break}else p=o}B=z;C=0;D=A}else{B=0;C=0;D=w}A=D+-48|0;if(A>>>0<10){z=B;p=C;y=A;A=D;while(1){D=IH(z|0,p|0,10,0)|0;e=E;o=((y|0)<0)<<31>>31;x=~o;if(e>>>0>x>>>0|(e|0)==(x|0)&D>>>0>~y>>>0){F=y;G=z;H=p;I=A;break}x=CH(D|0,e|0,y|0,o|0)|0;o=E;e=c[k>>2]|0;if(e>>>0<(c[l>>2]|0)>>>0){c[k>>2]=e+1;J=d[e>>0]|0}else J=Qx(b)|0;e=J+-48|0;if(e>>>0<10&(o>>>0<429496729|(o|0)==429496729&x>>>0<2576980378)){z=x;p=o;y=e;A=J}else{F=e;G=x;H=o;I=J;break}}if(F>>>0>9){K=H;L=G}else{M=10;N=G;O=H;P=I;u=72}}else{K=C;L=B}}else{s=v;t=w;u=46}a:do if((u|0)==46){if(!(s+-1&s)){w=a[80712+((s*23|0)>>>5&7)>>0]|0;v=a[80448+(t+1)>>0]|0;B=v&255;if(B>>>0<s>>>0){C=B;B=0;while(1){I=C|B<<w;H=c[k>>2]|0;if(H>>>0<(c[l>>2]|0)>>>0){c[k>>2]=H+1;Q=d[H>>0]|0}else Q=Qx(b)|0;H=a[80448+(Q+1)>>0]|0;C=H&255;if(!(I>>>0<134217728&C>>>0<s>>>0)){R=I;S=H;T=Q;break}else B=I}U=S;V=0;W=R;X=T}else{U=v;V=0;W=0;X=t}B=xH(-1,-1,w|0)|0;C=E;if((U&255)>>>0>=s>>>0|(V>>>0>C>>>0|(V|0)==(C|0)&W>>>0>B>>>0)){M=s;N=W;O=V;P=X;u=72;break}else{Y=W;Z=V;_=U}while(1){I=DH(Y|0,Z|0,w|0)|0;H=E;G=_&255|I;I=c[k>>2]|0;if(I>>>0<(c[l>>2]|0)>>>0){c[k>>2]=I+1;$=d[I>>0]|0}else $=Qx(b)|0;_=a[80448+($+1)>>0]|0;if((_&255)>>>0>=s>>>0|(H>>>0>C>>>0|(H|0)==(C|0)&G>>>0>B>>>0)){M=s;N=G;O=H;P=$;u=72;break a}else{Y=G;Z=H}}}B=a[80448+(t+1)>>0]|0;C=B&255;if(C>>>0<s>>>0){w=C;C=0;while(1){v=w+(aa(C,s)|0)|0;H=c[k>>2]|0;if(H>>>0<(c[l>>2]|0)>>>0){c[k>>2]=H+1;ba=d[H>>0]|0}else ba=Qx(b)|0;H=a[80448+(ba+1)>>0]|0;w=H&255;if(!(v>>>0<119304647&w>>>0<s>>>0)){ca=v;da=H;ea=ba;break}else C=v}fa=da;ga=ca;ha=0;ia=ea}else{fa=B;ga=0;ha=0;ia=t}if((fa&255)>>>0<s>>>0){C=JH(-1,-1,s|0,0)|0;w=E;v=ha;H=ga;G=fa;I=ia;while(1){if(v>>>0>w>>>0|(v|0)==(w|0)&H>>>0>C>>>0){M=s;N=H;O=v;P=I;u=72;break a}F=IH(H|0,v|0,s|0,0)|0;J=E;A=G&255;if(J>>>0>4294967295|(J|0)==-1&F>>>0>~A>>>0){M=s;N=H;O=v;P=I;u=72;break a}y=CH(A|0,0,F|0,J|0)|0;J=E;F=c[k>>2]|0;if(F>>>0<(c[l>>2]|0)>>>0){c[k>>2]=F+1;ja=d[F>>0]|0}else ja=Qx(b)|0;G=a[80448+(ja+1)>>0]|0;if((G&255)>>>0>=s>>>0){M=s;N=y;O=J;P=ja;u=72;break}else{v=J;H=y;I=ja}}}else{M=s;N=ga;O=ha;P=ia;u=72}}while(0);if((u|0)==72)if((d[80448+(P+1)>>0]|0)>>>0<M>>>0){do{P=c[k>>2]|0;if(P>>>0<(c[l>>2]|0)>>>0){c[k>>2]=P+1;ka=d[P>>0]|0}else ka=Qx(b)|0}while((d[80448+(ka+1)>>0]|0)>>>0<M>>>0);c[(_c()|0)>>2]=34;K=h;L=g}else{K=O;L=N}if(c[l>>2]|0)c[k>>2]=(c[k>>2]|0)+-1;if(!(K>>>0<h>>>0|(K|0)==(h|0)&L>>>0<g>>>0)){if(!((g&1|0)!=0|0!=0|(q|0)!=0)){c[(_c()|0)>>2]=34;k=CH(g|0,h|0,-1,-1)|0;i=E;j=k;E=i;return j|0}if(K>>>0>h>>>0|(K|0)==(h|0)&L>>>0>g>>>0){c[(_c()|0)>>2]=34;i=h;j=g;E=i;return j|0}}g=((q|0)<0)<<31>>31;h=vH(L^q|0,K^g|0,q|0,g|0)|0;i=E;j=h;E=i;return j|0}\nfunction Fd(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+15&-16;return b|0}function Gd(){return i|0}function Hd(a){a=a|0;i=a}function Id(a,b){a=a|0;b=b|0;i=a;j=b}function Jd(a,b){a=a|0;b=b|0;if(!p){p=a;q=b}}function Kd(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0]}function Ld(b){b=b|0;a[k>>0]=a[b>>0];a[k+1>>0]=a[b+1>>0];a[k+2>>0]=a[b+2>>0];a[k+3>>0]=a[b+3>>0];a[k+4>>0]=a[b+4>>0];a[k+5>>0]=a[b+5>>0];a[k+6>>0]=a[b+6>>0];a[k+7>>0]=a[b+7>>0]}function Md(a){a=a|0;E=a}function Nd(){return E|0}function Od(a){a=a|0;var b=0;a=i;i=i+16|0;Qb(8,16,32,0,48,58,56,0,56,0,64,80,156);Sc(8,88,1,104,112,59,13);Sc(8,120,1,136,144,60,157);Sc(8,152,1,104,112,59,14);Sc(8,168,1,104,112,59,15);Sc(8,184,1,104,112,59,16);Ud(a,200);b=Mw(4)|0;c[b>>2]=61;Oc(216,240,2,248,256,14,b|0,0);b=Mw(4)|0;c[b>>2]=61;Oc(216,264,3,272,288,12,b|0,0);Qb(296,312,328,0,344,62,56,0,56,0,352,368,158);ab(296,2,376,384,15,63);b=Mw(4)|0;c[b>>2]=62;Oc(296,392,2,400,408,16,b|0,0);Qb(416,424,440,0,456,64,56,0,56,0,464,480,159);ab(416,1,488,496,65,17);ab(416,2,504,512,17,66);ab(416,3,520,536,43,18);b=Mw(8)|0;c[b>>2]=63;c[b+4>>2]=0;Oc(416,544,2,560,568,19,b|0,0);b=Mw(8)|0;c[b>>2]=64;c[b+4>>2]=0;Oc(416,576,2,560,568,19,b|0,0);Sc(416,592,3,608,624,44,13);Sc(416,632,4,648,664,9,8);Sc(416,672,2,688,696,20,65);Sc(416,704,2,688,696,20,66);Sc(416,720,2,688,696,20,67);Sc(416,736,2,688,696,20,68);Sc(416,752,2,688,696,20,69);Sc(416,768,2,688,696,20,70);Sc(416,784,2,688,696,20,71);Sc(416,800,2,688,696,20,72);Sc(416,816,2,688,696,20,73);Sc(416,832,2,688,696,20,74);Sc(416,848,2,688,696,20,75);Sc(416,864,2,688,696,20,76);Sc(416,872,2,688,696,20,77);Sc(416,880,2,688,696,20,78);Sc(416,888,2,688,696,20,79);Sc(416,896,2,688,696,20,80);Sc(416,904,4,920,936,10,45);Sc(416,944,3,968,984,46,21);Sc(416,992,2,1016,1024,22,67);Sc(416,1032,4,1056,1072,11,9);Sc(416,1080,3,1104,1120,47,14);ed(1128,1136,4,0);Yc(1128,1160,0);Yc(1128,1168,1);Yc(1128,1176,2);Yc(1128,1184,3);Yc(1128,1200,4);Yc(1128,1216,5);Yc(1128,1232,6);Yc(1128,1248,7);Yc(1128,1264,8);Yc(1128,1280,9);Yc(1128,1296,10);Yc(1128,1312,11);Yc(1128,1328,12);Yc(1128,1344,13);Yc(1128,1360,14);Yc(1128,1376,15);Yc(1128,1392,16);Yc(1128,1400,17);Yc(1128,1408,18);Yc(1128,1416,19);Yc(1128,1424,17);Yc(1128,1440,20);Yc(1128,1456,21);Yc(1128,1472,22);Qb(10664,1488,1504,0,1520,68,56,0,56,0,1528,1552,160);b=Mw(8)|0;c[b>>2]=15;c[b+4>>2]=0;Oc(10664,1560,4,1576,1592,10,b|0,0);b=Mw(8)|0;c[b>>2]=81;c[b+4>>2]=0;Oc(10664,1600,3,1624,1640,16,b|0,0);b=Mw(8)|0;c[b>>2]=23;c[b+4>>2]=0;Oc(10664,1648,3,1672,1688,48,b|0,0);b=Mw(8)|0;c[b>>2]=82;c[b+4>>2]=0;Oc(10664,1696,3,1624,1640,16,b|0,0);b=Mw(8)|0;c[b>>2]=83;c[b+4>>2]=0;Oc(10664,1720,3,1624,1640,16,b|0,0);b=Mw(8)|0;c[b>>2]=161;c[b+4>>2]=0;Oc(10664,1744,2,1768,1776,84,b|0,0);b=Mw(8)|0;c[b>>2]=85;c[b+4>>2]=0;Oc(10664,1784,2,1800,1808,24,b|0,0);b=Mw(8)|0;c[b>>2]=86;c[b+4>>2]=0;Oc(10664,1816,3,1624,1640,16,b|0,0);b=Mw(4)|0;c[b>>2]=87;Oc(10664,1832,2,1848,1856,25,b|0,0);Sc(10664,1864,2,1888,1896,26,69);Sc(10664,1904,4,1056,1072,11,11);Qb(10592,1920,1936,10664,1952,70,1960,71,1968,72,1976,1992,162);ab(10592,1,2e3,2008,73,18);b=Mw(8)|0;c[b>>2]=12;c[b+4>>2]=0;Oc(10592,2016,4,2024,2040,12,b|0,0);b=Mw(8)|0;c[b>>2]=8;c[b+4>>2]=0;Oc(10592,2048,6,2064,2088,45,b|0,0);b=Mw(8)|0;c[b>>2]=13;c[b+4>>2]=0;Oc(10592,2096,4,2120,2136,13,b|0,0);Qb(2144,2152,2168,0,2184,74,56,0,56,0,2192,2208,163);ab(2144,1,2216,2224,75,19);ab(2144,2,2232,2240,27,76);b=Mw(4)|0;c[b>>2]=14;Oc(2144,17432,4,2248,2264,14,b|0,0);b=Mw(4)|0;c[b>>2]=4;Oc(2144,17432,5,2272,2296,23,b|0,0);b=Mw(4)|0;c[b>>2]=15;Oc(2144,2304,5,2312,2336,24,b|0,0);Qb(12608,2344,2360,0,2376,77,56,0,56,0,12624,2384,164);ab(12608,1,2392,2400,78,20);b=Mw(8)|0;c[b>>2]=79;c[b+4>>2]=0;Oc(12608,2408,2,2416,2424,28,b|0,0);b=Mw(8)|0;c[b>>2]=17;c[b+4>>2]=0;Oc(12608,2432,4,2448,2464,15,b|0,0);b=Mw(8)|0;c[b>>2]=29;c[b+4>>2]=0;Oc(12608,2472,3,2488,2504,49,b|0,0);b=Mw(8)|0;c[b>>2]=88;c[b+4>>2]=0;Oc(12608,2512,3,2528,2544,18,b|0,0);b=Mw(8)|0;c[b>>2]=19;c[b+4>>2]=0;Oc(12608,2552,4,2568,2584,16,b|0,0);b=Mw(8)|0;c[b>>2]=20;c[b+4>>2]=0;Oc(12608,2592,3,2608,2624,50,b|0,0);b=Mw(8)|0;c[b>>2]=89;c[b+4>>2]=0;Oc(12608,2632,3,2528,2544,18,b|0,0);b=Mw(8)|0;c[b>>2]=21;c[b+4>>2]=0;Oc(12608,2648,4,2568,2584,16,b|0,0);b=Mw(8)|0;c[b>>2]=22;c[b+4>>2]=0;Oc(12608,2656,3,2608,2624,50,b|0,0);b=Mw(8)|0;c[b>>2]=90;c[b+4>>2]=0;Oc(12608,2664,3,2528,2544,18,b|0,0);b=Mw(8)|0;c[b>>2]=165;c[b+4>>2]=0;Oc(12608,2680,2,2688,2696,91,b|0,0);Qb(2704,2712,2728,0,2744,80,56,0,56,0,2752,2776,166);Sc(2704,2784,2,2800,2808,30,92);Sc(2704,2816,2,2832,2840,31,93);Sc(2704,2848,2,2800,2808,30,94);Sc(2704,2864,2,2800,2808,30,95);Sc(2704,2880,3,2896,2912,51,23);Sc(2704,2920,2,2928,2936,96,167);ed(2944,2952,4,0);Yc(2944,2984,113);Yc(2944,2992,120);Yc(2944,3008,1200);Qb(14264,3024,3040,0,3056,81,56,0,56,0,3064,3088,168);ab(14264,1,3096,3104,82,21);ab(14264,2,3112,3120,32,83);b=Mw(8)|0;c[b>>2]=169;c[b+4>>2]=0;Oc(14264,3128,2,3136,3144,97,b|0,0);b=Mw(8)|0;c[b>>2]=24;c[b+4>>2]=0;Oc(14264,2016,4,3152,3168,17,b|0,0);b=Mw(8)|0;c[b>>2]=5;c[b+4>>2]=0;Oc(14264,3176,6,3192,3216,9,b|0,0);b=Mw(8)|0;c[b>>2]=84;c[b+4>>2]=0;Oc(14264,3224,2,3240,3248,33,b|0,0);b=Mw(8)|0;c[b>>2]=25;c[b+4>>2]=0;Oc(14264,3256,3,3272,3288,52,b|0,0);b=Mw(8)|0;c[b>>2]=98;c[b+4>>2]=0;Oc(14264,3296,3,3312,3328,26,b|0,0);b=Mw(8)|0;c[b>>2]=85;c[b+4>>2]=0;Oc(14264,3336,2,3360,3368,34,b|0,0);b=Mw(8)|0;c[b>>2]=18;c[b+4>>2]=0;Oc(14264,3376,4,3384,3400,16,b|0,0);b=Mw(8)|0;c[b>>2]=6;c[b+4>>2]=0;Oc(14264,3408,5,3432,3456,25,b|0,0);i=a;return}function Pd(a){a=a|0;Qb(12840,3464,3480,0,3496,86,56,0,56,0,3504,3520,170);ab(12840,1,3528,3536,87,22);Sc(12840,3544,1,3552,3560,88,171);Sc(12840,3568,1,3552,3560,88,172);Sc(12840,3576,1,3552,3560,88,173);Sc(12840,3584,1,3552,3560,88,174);a=Mw(8)|0;c[a>>2]=99;c[a+4>>2]=0;Oc(12840,3592,2,3600,3608,35,a|0,0);a=Mw(8)|0;c[a>>2]=27;c[a+4>>2]=0;Oc(12840,3616,3,3624,3640,53,a|0,0);a=Mw(8)|0;c[a>>2]=175;c[a+4>>2]=0;Oc(12840,3648,2,3656,3664,100,a|0,0);a=Mw(8)|0;c[a>>2]=101;c[a+4>>2]=0;Oc(12840,3672,3,3680,3696,28,a|0,0);a=Mw(8)|0;c[a>>2]=102;c[a+4>>2]=0;Oc(12840,3704,2,3712,3720,36,a|0,0);a=Mw(8)|0;c[a>>2]=19;c[a+4>>2]=0;Oc(12840,3728,4,3736,3752,17,a|0,0);a=Mw(8)|0;c[a>>2]=103;c[a+4>>2]=0;Oc(12840,3760,3,3680,3696,28,a|0,0);a=Mw(8)|0;c[a>>2]=176;c[a+4>>2]=0;Oc(12840,3776,2,3656,3664,100,a|0,0);a=Mw(8)|0;c[a>>2]=104;c[a+4>>2]=0;Oc(12840,3792,3,3680,3696,28,a|0,0);a=Mw(8)|0;c[a>>2]=105;c[a+4>>2]=0;Oc(12840,3808,2,3712,3720,36,a|0,0);Qb(3824,3832,3848,0,3864,89,56,0,56,0,3872,3888,177);Sc(3824,3896,2,2832,2840,31,106);Sc(3824,3904,2,2800,2808,30,107);Qb(13296,3912,3928,0,3944,90,56,0,56,0,3952,3968,178);ab(13296,1,3976,3984,91,23);ab(13296,2,3992,4e3,37,92);ab(13296,3,4008,4024,54,38);a=Mw(8)|0;c[a>>2]=108;c[a+4>>2]=0;Oc(13296,4032,2,4040,4048,39,a|0,0);a=Mw(8)|0;c[a>>2]=93;c[a+4>>2]=0;Oc(13296,4056,2,4080,4088,40,a|0,0);a=Mw(8)|0;c[a>>2]=109;c[a+4>>2]=0;Oc(13296,4096,3,4112,4128,29,a|0,0);a=Mw(8)|0;c[a>>2]=94;c[a+4>>2]=0;Oc(13296,4136,2,4152,4160,41,a|0,0);a=Mw(8)|0;c[a>>2]=110;c[a+4>>2]=0;Oc(13296,4168,3,4176,4192,30,a|0,0);a=Mw(8)|0;c[a>>2]=95;c[a+4>>2]=0;Oc(13296,4200,2,4208,4216,42,a|0,0);a=Mw(8)|0;c[a>>2]=179;c[a+4>>2]=0;Oc(13296,4224,2,4256,4264,111,a|0,0);a=Mw(8)|0;c[a>>2]=180;c[a+4>>2]=0;Oc(13296,4272,2,4256,4264,111,a|0,0);a=Mw(8)|0;c[a>>2]=20;c[a+4>>2]=0;Oc(13296,4304,4,4312,4328,18,a|0,0);ed(4336,4344,4,0);Yc(4336,4368,0);Yc(4336,4376,1);ed(4384,4392,4,0);Yc(4384,31536,1);Yc(4384,31544,2);Yc(4384,31552,3);Yc(4384,31560,4);Yc(4384,31568,5);Qb(13896,4408,4424,0,4440,96,56,0,56,0,4448,4464,181);ab(13896,2,4472,4480,43,97);a=Mw(8)|0;c[a>>2]=31;c[a+4>>2]=0;Oc(13896,4488,3,4504,4520,55,a|0,0);a=Mw(8)|0;c[a>>2]=98;c[a+4>>2]=0;Oc(13896,4528,2,4544,4552,44,a|0,0);a=Mw(8)|0;c[a>>2]=56;c[a+4>>2]=0;Oc(13896,4560,4,4584,4600,19,a|0,0);return}function Qd(a){a=a|0;return 8}function Rd(a){a=a|0;if(!a)return;Ow(a);return}function Sd(a){a=a|0;return sd[a&31]()|0}function Td(b){b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;td[b&255](e);b=a[e>>0]|0;f=(b&1)==0;g=f?(b&255)>>>1:c[e+4>>2]|0;b=py(g+4|0)|0;c[b>>2]=g;zH(b+4|0,(f?e+1|0:c[e+8>>2]|0)|0,g|0)|0;Hy(e);i=d;return b|0}function Ud(a,b){a=a|0;b=b|0;Qb(216,6704,6720,0,6736,99,56,0,56,0,b|0,6744,182);ab(216,1,6752,6760,100,24);b=Mw(8)|0;c[b>>2]=112;c[b+4>>2]=0;Oc(216,6768,3,6784,6800,32,b|0,0);b=Mw(8)|0;c[b>>2]=33;c[b+4>>2]=0;Oc(216,6808,4,6816,6832,21,b|0,0);b=Mw(8)|0;c[b>>2]=101;c[b+4>>2]=0;Oc(216,6840,2,6848,6856,45,b|0,0);b=Mw(4)|0;c[b>>2]=46;Oc(216,6864,3,6872,6888,57,b|0,0);b=Mw(4)|0;c[b>>2]=58;Oc(216,6896,4,6904,6920,20,b|0,0);return}function Vd(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;e=c[a>>2]|0;c[d>>2]=(c[a+4>>2]|0)-e;c[d+4>>2]=e;e=Zb(6664,d|0)|0;i=b;return e|0}function Wd(a,b){a=a|0;b=b|0;var d=0;d=wd[c[a>>2]&127](b)|0;Xb(d|0);wb(d|0);return d|0}function Xd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d+4|0;f=d;g=c[b>>2]|0;c[f>>2]=g;Xb(g|0);sg(e,f);f=c[a>>2]|0;b=a+4|0;if(!f)h=a+8|0;else{if((c[b>>2]|0)!=(f|0))c[b>>2]=f;Ow(f);f=a+8|0;c[f>>2]=0;c[b>>2]=0;c[a>>2]=0;h=f}c[a>>2]=c[e>>2];a=e+4|0;c[b>>2]=c[a>>2];b=e+8|0;c[h>>2]=c[b>>2];c[b>>2]=0;c[a>>2]=0;c[e>>2]=0;wb(g|0);i=d;return}function Yd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;c[f>>2]=d;ud[g&127](b,f);wb(c[f>>2]|0);i=e;return}function Zd(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function _d(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function $d(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;Fy(e,b+4|0,c[b>>2]|0);b=wd[a&127](e)|0;Hy(e);i=d;return b|0}function ae(a){a=a|0;var b=0;b=Mw(8)|0;$i(b,a);return b|0}function be(a,b){a=a|0;b=b|0;var d=0;d=wd[c[(c[b>>2]|0)+8>>2]&127](b)|0;Fy(a,d,yH(d|0)|0);return}function ce(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;ud[c[b>>2]&127](f,d);d=a[f>>0]|0;b=(d&1)==0;g=b?(d&255)>>>1:c[f+4>>2]|0;d=py(g+4|0)|0;c[d>>2]=g;zH(d+4|0,(b?f+1|0:c[f+8>>2]|0)|0,g|0)|0;Hy(f);i=e;return d|0}function de(a){a=a|0;return 416}function ee(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a+12>>2]|0;if(b){d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a>>2]|0;if(b){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}Ow(a);return}function fe(a){a=a|0;return sd[a&31]()|0}function ge(){var a=0,b=0,d=0,e=0,f=0;a=i;i=i+16|0;b=a;d=Mw(24)|0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;nk(d,b);f=c[b>>2]|0;if(!f){i=a;return d|0}if((c[e>>2]|0)!=(f|0))c[e>>2]=f;Ow(f);i=a;return d|0}function he(a,b){a=a|0;b=b|0;return wd[a&127](b)|0}function ie(a){a=a|0;var b=0;b=Mw(24)|0;nk(b,a);return b|0}function je(a,b,c){a=a|0;b=b|0;c=c|0;return Cd[a&63](b,c)|0}function ke(a,b){a=a|0;b=b|0;var c=0;c=Mw(24)|0;qk(c,a,b);return c|0}function le(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;ud[h&127](e,a);a=Mw(12)|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];i=d;return a|0}function me(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+32|0;f=e;xd[a&63](f,b,d);d=Mw(24)|0;c[d>>2]=c[f>>2];b=f+4|0;c[d+4>>2]=c[b>>2];a=f+8|0;c[d+8>>2]=c[a>>2];c[a>>2]=0;c[b>>2]=0;c[f>>2]=0;c[d+12>>2]=c[f+12>>2];c[d+16>>2]=c[f+16>>2];c[d+20>>2]=c[f+20>>2];i=e;return d|0}function ne(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+32|0;g=f;Bd[a&31](g,b,d,e);e=Mw(24)|0;c[e>>2]=c[g>>2];d=g+4|0;c[e+4>>2]=c[d>>2];b=g+8|0;c[e+8>>2]=c[b>>2];c[b>>2]=0;c[d>>2]=0;c[g>>2]=0;c[e+12>>2]=c[g+12>>2];c[e+16>>2]=c[g+16>>2];c[e+20>>2]=c[g+20>>2];i=f;return e|0}function oe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+32|0;e=d;ud[a&127](e,b);b=Mw(24)|0;c[b>>2]=c[e>>2];a=e+4|0;c[b+4>>2]=c[a>>2];f=e+8|0;c[b+8>>2]=c[f>>2];c[f>>2]=0;c[a>>2]=0;c[e>>2]=0;c[b+12>>2]=c[e+12>>2];c[b+16>>2]=c[e+16>>2];c[b+20>>2]=c[e+20>>2];i=d;return b|0}function pe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return od[a&127](b,c,d)|0}function qe(a,b,c){a=a|0;b=b|0;c=c|0;return Cd[a&63](b,c)|0}function re(a,b){a=a|0;b=b|0;return wd[a&127](b)|0}function se(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;Bd[a&31](g,b,d,e);e=Mw(12)|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];i=f;return e|0}function te(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;xd[a&63](f,b,d);d=Mw(12)|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];i=e;return d|0}function ue(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function ve(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function we(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1)){h=f;xd[h&63](a,d,e);return}else{h=c[(c[a>>2]|0)+f>>2]|0;xd[h&63](a,d,e);return}}function xe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1)){g=e;ud[g&127](a,d);return}else{g=c[(c[a>>2]|0)+e>>2]|0;ud[g&127](a,d);return}}function ye(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;return Cd[g&63](a,d)|0}function ze(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;td[f&255](a);return}else{f=c[(c[a>>2]|0)+d>>2]|0;td[f&255](a);return}}function Ae(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;ud[h&127](e,a);a=Mw(12)|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];i=d;return a|0}function Be(a,b){a=a|0;b=b|0;var d=0;d=_h(b)|0;c[a>>2]=d;b=Mw(16)|0;c[b+4>>2]=0;c[b+8>>2]=0;c[b>>2]=5872;c[b+12>>2]=d;c[a+4>>2]=b;return}function Ce(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;ud[c[a>>2]&127](e,b);b=Mw(8)|0;c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];i=d;return b|0}function De(a,b){a=a|0;b=b|0;return wd[a&127](b)|0}function Ee(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Fe(a){a=a|0;return a|0}function Ge(a){a=a|0;return a|0}function He(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function Ie(a){a=a|0;return sd[a&31]()|0}function Je(){var a=0,b=0;a=Mw(8)|0;b=a;c[b>>2]=0;c[b+4>>2]=0;Oh(a);c[a>>2]=10552;return a|0}function Ke(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;h=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=h;else k=c[(c[a>>2]|0)+h>>2]|0;Bd[k&31](g,a,d,e);e=Mw(12)|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];i=f;return e|0}function Le(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h;k=c[a>>2]|0;l=c[a+4>>2]|0;a=b+(l>>1)|0;if(!(l&1))m=k;else m=c[(c[a>>2]|0)+k>>2]|0;pd[m&15](j,a,d,e,f,g);g=Mw(12)|0;c[g>>2]=c[j>>2];c[g+4>>2]=c[j+4>>2];c[g+8>>2]=c[j+8>>2];i=h;return g|0}function Me(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;h=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=h;else k=c[(c[a>>2]|0)+h>>2]|0;Bd[k&31](g,a,d,e);e=Mw(12)|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];i=f;return e|0}function Ne(a){a=a|0;return 2144}function Oe(a){a=a|0;if(!a)return;zj(a);Ow(a);return}function Pe(a){a=a|0;return sd[a&31]()|0}function Qe(){var a=0,b=0,c=0;a=i;i=i+16|0;b=a;c=Mw(8)|0;wj(b);bl(c,b);zj(b);i=a;return c|0}function Re(a,b){a=a|0;b=b|0;return wd[a&127](b)|0}function Se(a){a=a|0;var b=0;b=Mw(8)|0;bl(b,a);return b|0}function Te(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;c[g>>2]=0;h=g+4|0;c[h>>2]=0;c[g+8>>2]=0;cl(a,b,d,e,g);e=c[g>>2]|0;if(!e){i=f;return}if((c[h>>2]|0)!=(e|0))c[h>>2]=e;Ow(e);i=f;return}function Ue(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;Bd[c[a>>2]&31](g,b,d,e);e=Mw(12)|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];i=f;return e|0}function Ve(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;cl(a,b,c,d,e);return}function We(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;qd[c[a>>2]&7](h,b,d,e,f);f=Mw(12)|0;c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];i=g;return f|0}function Xe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return dl(a,b,c,d)|0}function Ye(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;return Ad[c[a>>2]&31](b,d,e,f)|0}function Ze(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function _e(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function $e(a){a=a|0;return sd[a&31]()|0}function af(){var a=0,b=0,d=0;a=Mw(40)|0;b=a;d=b+36|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(d|0));c[a>>2]=12544;b=a+8|0;c[b>>2]=0;c[a+12>>2]=0;c[a+4>>2]=b;b=a+20|0;c[b>>2]=0;c[a+24>>2]=0;c[a+16>>2]=b;b=a+32|0;c[b>>2]=0;c[a+36>>2]=0;c[a+28>>2]=b;return a|0}function bf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function cf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1)){h=f;xd[h&63](a,d,e);return}else{h=c[(c[a>>2]|0)+f>>2]|0;xd[h&63](a,d,e);return}}function df(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1))g=e;else g=c[(c[a>>2]|0)+e>>2]|0;return Cd[g&63](a,d)|0}function ef(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1)){g=e;ud[g&127](a,d);return}else{g=c[(c[a>>2]|0)+e>>2]|0;ud[g&127](a,d);return}}function ff(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1)){h=f;xd[h&63](a,d,e);return}else{h=c[(c[a>>2]|0)+f>>2]|0;xd[h&63](a,d,e);return}}function gf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))j=g;else j=c[(c[a>>2]|0)+g>>2]|0;xd[j&63](f,a,d);d=Mw(12)|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];i=e;return d|0}function hf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;td[f&255](a);return}else{f=c[(c[a>>2]|0)+d>>2]|0;td[f&255](a);return}}function jf(a){a=a|0;return 2704}function kf(a){a=a|0;if(!a)return;Ow(a);return}function lf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+32|0;e=d+12|0;f=d;Fy(f,b+4|0,c[b>>2]|0);ud[a&127](e,f);a=Mw(12)|0;c[a>>2]=c[e>>2];b=e+4|0;c[a+4>>2]=c[b>>2];g=e+8|0;c[a+8>>2]=c[g>>2];c[g>>2]=0;c[b>>2]=0;c[e>>2]=0;Hy(f);i=d;return a|0}function mf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;ud[b&127](f,d);d=a[f>>0]|0;b=(d&1)==0;g=b?(d&255)>>>1:c[f+4>>2]|0;d=py(g+4|0)|0;c[d>>2]=g;zH(d+4|0,(b?f+1|0:c[f+8>>2]|0)|0,g|0)|0;Hy(f);i=e;return d|0}function nf(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;xd[b&63](g,d,e);e=a[g>>0]|0;d=(e&1)==0;b=d?(e&255)>>>1:c[g+4>>2]|0;e=py(b+4|0)|0;c[e>>2]=b;zH(e+4|0,(d?g+1|0:c[g+8>>2]|0)|0,b|0)|0;Hy(g);i=f;return e|0}function of(a,b){a=a|0;b=b|0;td[a&255](b);return}function pf(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function qf(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function rf(a){a=a|0;return sd[a&31]()|0}function sf(){var a=0;a=Mw(8)|0;Kl(a,120);return a|0}function tf(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=b;b=wd[a&127](e)|0;i=d;return b|0}function uf(a){a=a|0;var b=0;b=Mw(8)|0;Kl(b,c[a>>2]|0);return b|0}function vf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;td[f&255](a);return}else{f=c[(c[a>>2]|0)+d>>2]|0;td[f&255](a);return}}function wf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1)){h=f;xd[h&63](a,d,e);return}else{h=c[(c[a>>2]|0)+f>>2]|0;xd[h&63](a,d,e);return}}function xf(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=c[a>>2]|0;i=c[a+4>>2]|0;a=b+(i>>1)|0;if(!(i&1))j=h;else j=c[(c[a>>2]|0)+h>>2]|0;qd[j&7](a,d,e,f,g);return}function yf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function zf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))j=g;else j=c[(c[a>>2]|0)+g>>2]|0;xd[j&63](f,a,d);d=Mw(12)|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];i=e;return d|0}function Af(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1)){g=e;ud[g&127](a,d);return}else{g=c[(c[a>>2]|0)+e>>2]|0;ud[g&127](a,d);return}}function Bf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function Cf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;h=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=h;else k=c[(c[a>>2]|0)+h>>2]|0;Bd[k&31](g,a,d,e);e=Mw(12)|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];i=f;return e|0}function Df(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;j=c[a>>2]|0;k=c[a+4>>2]|0;a=b+(k>>1)|0;if(!(k&1))l=j;else l=c[(c[a>>2]|0)+j>>2]|0;qd[l&7](h,a,d,e,f);f=Mw(12)|0;c[f>>2]=c[h>>2];c[f+4>>2]=c[h+4>>2];c[f+8>>2]=c[h+8>>2];i=g;return f|0}function Ef(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Ff(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function Gf(a){a=a|0;return sd[a&31]()|0}function Hf(){var a=0;a=Mw(8)|0;yj(a);return a|0}function If(a){a=a|0;var b=0,c=0;b=i;i=i+16|0;c=b;td[a&255](c);a=Mw(8)|0;Bj(a,c);zj(c);i=b;return a|0}function Jf(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;g=c[b>>2]|0;h=c[b+4>>2]|0;b=d+(h>>1)|0;if(!(h&1))j=g;else j=c[(c[b>>2]|0)+g>>2]|0;ud[j&127](f,b);b=a[f>>0]|0;j=(b&1)==0;g=j?(b&255)>>>1:c[f+4>>2]|0;b=py(g+4|0)|0;c[b>>2]=g;zH(b+4|0,(j?f+1|0:c[f+8>>2]|0)|0,g|0)|0;Hy(f);i=e;return b|0}function Kf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))j=g;else j=c[(c[a>>2]|0)+g>>2]|0;xd[j&63](f,a,d);d=Mw(12)|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];i=e;return d|0}function Lf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;td[f&255](a);return}else{f=c[(c[a>>2]|0)+d>>2]|0;td[f&255](a);return}}function Mf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1)){g=e;ud[g&127](a,d);return}else{g=c[(c[a>>2]|0)+e>>2]|0;ud[g&127](a,d);return}}function Nf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;ud[h&127](e,a);a=Mw(12)|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];i=d;return a|0}function Of(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;h=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=h;else k=c[(c[a>>2]|0)+h>>2]|0;Bd[k&31](g,a,d,e);e=Mw(12)|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];i=f;return e|0}function Pf(a){a=a|0;return 3824}function Qf(a){a=a|0;if(!a)return;Ow(a);return}function Rf(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function Sf(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function Tf(a){a=a|0;return sd[a&31]()|0}function Uf(){var a=0;a=Mw(36)|0;Fk(a);return a|0}function Vf(a,b){a=a|0;b=b|0;return wd[a&127](b)|0}function Wf(a){a=a|0;var b=0;b=Mw(36)|0;Gk(b,a,2048);return b|0}function Xf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=i;i=i+16|0;f=e;c[f>>2]=d;d=Cd[a&63](b,f)|0;i=e;return d|0}function Yf(a,b){a=a|0;b=b|0;var d=0;d=Mw(36)|0;Gk(d,a,c[b>>2]|0);return d|0}function Zf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;ud[h&127](e,a);a=Mw(12)|0;c[a>>2]=c[e>>2];c[a+4>>2]=c[e+4>>2];c[a+8>>2]=c[e+8>>2];i=d;return a|0}function _f(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function $f(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1)){g=e;ud[g&127](a,d);return}else{g=c[(c[a>>2]|0)+e>>2]|0;ud[g&127](a,d);return}}function ag(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function bg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=c[a>>2]|0;f=c[a+4>>2]|0;a=b+(f>>1)|0;if(!(f&1)){g=e;ud[g&127](a,d);return}else{g=c[(c[a>>2]|0)+e>>2]|0;ud[g&127](a,d);return}}function cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function dg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;td[f&255](a);return}else{f=c[(c[a>>2]|0)+d>>2]|0;td[f&255](a);return}}function eg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;h=c[a>>2]|0;j=c[a+4>>2]|0;a=b+(j>>1)|0;if(!(j&1))k=h;else k=c[(c[a>>2]|0)+h>>2]|0;Bd[k&31](g,a,d,e);e=Mw(12)|0;c[e>>2]=c[g>>2];c[e+4>>2]=c[g+4>>2];c[e+8>>2]=c[g+8>>2];i=f;return e|0}function fg(a){a=a|0;return c[(c[a>>2]|0)+-4>>2]|0}function gg(a){a=a|0;if(!a)return;td[c[(c[a>>2]|0)+4>>2]&255](a);return}function hg(a,b){a=a|0;b=b|0;return wd[a&127](b)|0}function ig(a){a=a|0;var b=0;b=Mw(8)|0;Wk(b,a);return b|0}function jg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;h=c[a+4>>2]|0;a=b+(h>>1)|0;if(!(h&1))j=g;else j=c[(c[a>>2]|0)+g>>2]|0;xd[j&63](f,a,d);d=Mw(12)|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];i=e;return d|0}function kg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function lg(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[a>>2]|0;g=c[a+4>>2]|0;a=b+(g>>1)|0;if(!(g&1))h=f;else h=c[(c[a>>2]|0)+f>>2]|0;return od[h&127](a,d,e)|0}function mg(){Od(0);Pd(0);return}function ng(a){a=a|0;vy(a);Ow(a);return}function og(a){a=a|0;var b=0;b=c[a+12>>2]|0;if(!b)return;td[c[(c[b>>2]|0)+4>>2]&255](b);return}function pg(a,b){a=a|0;b=b|0;return ((c[b+4>>2]|0)==5912?a+12|0:0)|0}function qg(a){a=a|0;Ow(a);return}function rg(a){a=a|0;Na(a|0)|0;Vw()}function sg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=i;i=i+16|0;f=e;g=c[d>>2]|0;h=fd(6496)|0;j=Ja(g|0,h|0)|0;wb(h|0);k=+lb(j|0,79312,f|0);Db(c[f>>2]|0);h=~~k>>>0;wb(j|0);c[b>>2]=0;j=b+4|0;c[j>>2]=0;c[b+8>>2]=0;if(!h){i=e;return}g=b+8|0;l=0;while(1){m=c[d>>2]|0;c[f>>2]=l;n=Zb(79312,f|0)|0;o=Ja(m|0,n|0)|0;wb(n|0);k=+lb(o|0,79232,f|0);Db(c[f>>2]|0);n=~~k&255;m=c[j>>2]|0;p=c[g>>2]|0;if(m>>>0>=p>>>0){q=c[b>>2]|0;r=q;s=m-r+1|0;if((s|0)<0){t=6;break}u=q;v=p-u|0;if(v>>>0<1073741823){p=v<<1;v=p>>>0<s>>>0?s:p;p=c[j>>2]|0;s=p-u|0;if(!v){w=0;x=0;y=s;z=p}else{A=v;B=p;C=s;t=10}}else{s=c[j>>2]|0;A=2147483647;B=s;C=s-u|0;t=10}if((t|0)==10){t=0;w=A;x=Mw(A)|0;y=C;z=B}a[x+y>>0]=n;s=z-u|0;u=x+(y-s)|0;zH(u|0,q|0,s|0)|0;c[b>>2]=u;c[j>>2]=x+(y+1);c[g>>2]=x+w;if(r)Ow(r)}else{a[m>>0]=n;c[j>>2]=(c[j>>2]|0)+1}wb(o|0);l=l+1|0;if(l>>>0>=h>>>0){t=14;break}}if((t|0)==6)Kw(b);else if((t|0)==14){i=e;return}}function tg(a){a=a|0;return 216}function ug(a){a=a|0;var b=0,d=0;if(!a)return;b=c[a>>2]|0;if(b){d=a+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}Ow(a);return}function vg(a){a=a|0;return sd[a&31]()|0}function wg(){var a=0;a=Mw(12)|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return a|0}function xg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=b+4|0;f=c[e>>2]|0;g=b+8|0;if((f|0)!=(c[g>>2]|0)){a[f>>0]=a[d>>0]|0;c[e>>2]=(c[e>>2]|0)+1;return}h=c[b>>2]|0;i=h;j=f-i+1|0;if((j|0)<0)Kw(b);k=h;l=f-k|0;if(l>>>0<1073741823){f=l<<1;l=f>>>0<j>>>0?j:f;f=c[e>>2]|0;j=f-k|0;if(!l){m=0;n=0;o=j;p=f}else{q=l;r=f;s=j;t=8}}else{j=c[e>>2]|0;q=2147483647;r=j;s=j-k|0;t=8}if((t|0)==8){m=q;n=Mw(q)|0;o=s;p=r}a[n+o>>0]=a[d>>0]|0;d=p-k|0;k=n+(o-d)|0;zH(k|0,h|0,d|0)|0;c[b>>2]=k;c[e>>2]=n+(o+1);c[g>>2]=n+m;if(!i)return;Ow(i);return}function yg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;h=c[b>>2]|0;j=c[b+4>>2]|0;b=d+(j>>1)|0;if(!(j&1))k=h;else k=c[(c[b>>2]|0)+h>>2]|0;a[g>>0]=e;ud[k&127](b,g);i=f;return}function zg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+4|0;f=c[e>>2]|0;g=c[a>>2]|0;h=f-g|0;if(h>>>0<b>>>0){Hg(a,b-h|0,d);return}if(h>>>0<=b>>>0)return;h=g+b|0;if((f|0)==(h|0))return;c[e>>2]=h;return}function Ag(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g;j=c[b>>2]|0;k=c[b+4>>2]|0;b=d+(k>>1)|0;if(!(k&1))l=j;else l=c[(c[b>>2]|0)+j>>2]|0;a[h>>0]=f;xd[l&63](b,e,h);i=g;return}function Bg(a){a=a|0;return (c[a+4>>2]|0)-(c[a>>2]|0)|0}function Cg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a>>2]|0;e=c[a+4>>2]|0;a=b+(e>>1)|0;if(!(e&1)){f=d;g=wd[f&127](a)|0;return g|0}else{f=c[(c[a>>2]|0)+d>>2]|0;g=wd[f&127](a)|0;return g|0}return 0}function Dg(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=c[a>>2]|0;if(((c[a+4>>2]|0)-g|0)>>>0<=b>>>0){h=1;i=e;return h|0}c[f>>2]=d[g+b>>0];h=Zb(79232,f|0)|0;i=e;return h|0}function Eg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=Cd[c[a>>2]&63](b,d)|0;Xb(e|0);wb(e|0);return e|0}function Fg(b,d,e){b=b|0;d=d|0;e=e|0;a[(c[b>>2]|0)+d>>0]=a[e>>0]|0;return 1}function Gg(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g;j=c[b>>2]|0;a[h>>0]=f;f=od[j&127](d,e,h)|0;i=g;return f|0}function Hg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=b+8|0;g=c[f>>2]|0;h=b+4|0;i=c[h>>2]|0;j=i;if((g-j|0)>>>0>=d>>>0){k=d;l=i;do{a[l>>0]=a[e>>0]|0;l=(c[h>>2]|0)+1|0;c[h>>2]=l;k=k+-1|0}while((k|0)!=0);return}k=c[b>>2]|0;l=j-k+d|0;if((l|0)<0)Kw(b);j=k;k=g-j|0;if(k>>>0<1073741823){g=k<<1;k=g>>>0<l>>>0?l:g;g=(c[h>>2]|0)-j|0;if(!k){m=0;n=0;o=g}else{p=k;q=g;r=8}}else{p=2147483647;q=(c[h>>2]|0)-j|0;r=8}if((r|0)==8){m=p;n=Mw(p)|0;o=q}q=n+o|0;p=n+m|0;m=d;d=q;r=q;while(1){a[d>>0]=a[e>>0]|0;d=r+1|0;q=d;m=m+-1|0;if(!m){s=q;break}else r=q}r=c[b>>2]|0;m=(c[h>>2]|0)-r|0;d=n+(o-m)|0;zH(d|0,r|0,m|0)|0;c[b>>2]=d;c[h>>2]=s;c[f>>2]=p;if(!r)return;Ow(r);return}function Ig(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+16|0;e=d+12|0;f=d;g=c[b>>2]|0;h=b+4|0;j=c[h>>2]|0;if((g|0)==(j|0)){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;i=d;return}else{c[e>>2]=0;co(0,0,e,g,j-g|0)|0;g=c[e>>2]|0;j=Nw(g)|0;k=c[b>>2]|0;co(j,g,e,k,(c[h>>2]|0)-k|0)|0;Fy(f,j,c[e>>2]|0);Pw(j);Ey(a,f);Hy(f);i=d;return}}function Jg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+16|0;f=e+12|0;g=e;h=a[d>>0]|0;j=(h&1)==0;k=d+4|0;l=j?(h&255)>>>1:c[k>>2]|0;if(!l){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;i=e;return}c[f>>2]=0;h=d+8|0;m=d+1|0;eo(0,0,f,j?m:c[h>>2]|0,l)|0;l=c[f>>2]|0;c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;if(!l){n=0;o=0}else{if((l|0)<0)Kw(g);p=Mw(l)|0;c[j>>2]=p;c[g>>2]=p;c[g+8>>2]=p+l;q=l;l=p;do{a[l>>0]=0;l=(c[j>>2]|0)+1|0;c[j>>2]=l;q=q+-1|0}while((q|0)!=0);n=c[g>>2]|0;o=c[f>>2]|0}q=a[d>>0]|0;d=(q&1)==0;eo(n,o,f,d?m:c[h>>2]|0,d?(q&255)>>>1:c[k>>2]|0)|0;c[b>>2]=0;k=b+4|0;c[k>>2]=0;c[b+8>>2]=0;q=c[j>>2]|0;d=c[g>>2]|0;h=q-d|0;if((q|0)!=(d|0)){if((h|0)<0)Kw(b);d=Mw(h)|0;c[k>>2]=d;c[b>>2]=d;c[b+8>>2]=d+h;h=c[g>>2]|0;b=c[j>>2]|0;if((h|0)==(b|0))r=h;else{m=h;h=d;do{a[h>>0]=a[m>>0]|0;h=(c[k>>2]|0)+1|0;c[k>>2]=h;m=m+1|0}while((m|0)!=(b|0));r=c[g>>2]|0}}else r=q;if(!r){i=e;return}if((c[j>>2]|0)!=(r|0))c[j>>2]=r;Ow(r);i=e;return}function Kg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+112|0;f=e+96|0;g=e;h=e+80|0;j=e+64|0;k=g+48|0;l=g;m=l+48|0;do{c[l>>2]=0;l=l+4|0}while((l|0)<(m|0));c[k>>2]=1024;c[g+52>>2]=0;c[g+56>>2]=0;k=Mw(20)|0;c[k>>2]=0;c[k+4>>2]=65536;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=0;c[g+20>>2]=k;c[g+24>>2]=k;k=(a[d>>0]&1)==0?d+1|0:c[d+8>>2]|0;c[f>>2]=k;c[f+4>>2]=k;Qg(g,f)|0;xm(h);Fy(j,86712,0);Rg(h,g,j)|0;Hy(j);Am(b,h);ym(h);Sg(g);i=e;return}function Lg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a[d>>0]|0;f=(e&1)==0;g=f?d+1|0:c[d+8>>2]|0;h=f?(e&255)>>>1:c[d+4>>2]|0;d=g+h|0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;if(!h)return;if((h|0)<0)Kw(b);f=Mw(h)|0;c[e>>2]=f;c[b>>2]=f;c[b+8>>2]=f+h;h=g;g=f;do{a[g>>0]=a[h>>0]|0;g=(c[e>>2]|0)+1|0;c[e>>2]=g;h=h+1|0}while((h|0)!=(d|0));return}function Mg(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;Fy(a,d,(c[b+4>>2]|0)-d|0);return}function Ng(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;e=i;i=i+304|0;f=e+156|0;g=e+296|0;h=e+152|0;j=e+12|0;k=e;c[b>>2]=0;l=b+4|0;c[l>>2]=0;c[b+8>>2]=0;m=f+8|0;c[f>>2]=7132;c[f+60>>2]=7152;c[f+4>>2]=0;iz(f+60|0,m);c[f+132>>2]=0;c[f+136>>2]=-1;c[f>>2]=7172;c[f+60>>2]=7192;lz(m);c[m>>2]=7208;n=f+40|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[n+12>>2]=0;c[f+56>>2]=8;Tg(m,d);a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;d=j+60|0;m=j+8|0;n=j+4|0;o=j+60|0;p=j+60|0;q=j+132|0;r=j+136|0;s=j+40|0;t=j+56|0;u=b+8|0;while(1){v=Gz(f,g,2)|0;if(c[v+((c[(c[v>>2]|0)+-12>>2]|0)+16)>>2]&5){w=13;break}c[h>>2]=0;Fy(k,g,yH(g|0)|0);c[j>>2]=7132;c[d>>2]=7152;c[n>>2]=0;iz(o,m);c[q>>2]=0;c[r>>2]=-1;c[j>>2]=7172;c[p>>2]=7192;lz(m);c[m>>2]=7208;c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;c[s+12>>2]=0;c[t>>2]=8;Tg(m,k);v=j+((c[(c[j>>2]|0)+-12>>2]|0)+4)|0;c[v>>2]=c[v>>2]&-75|8;Fz(j,h)|0;Ug(j);Hy(k);v=c[h>>2]&255;x=c[l>>2]|0;if((x|0)!=(c[u>>2]|0)){a[x>>0]=v;c[l>>2]=(c[l>>2]|0)+1;continue}y=c[b>>2]|0;z=y;A=x-z+1|0;if((A|0)<0){w=6;break}B=y;C=x-B|0;if(C>>>0<1073741823){x=C<<1;C=x>>>0<A>>>0?A:x;x=c[l>>2]|0;A=x-B|0;if(!C){D=0;E=0;F=A;G=x}else{H=C;I=x;J=A;w=10}}else{A=c[l>>2]|0;H=2147483647;I=A;J=A-B|0;w=10}if((w|0)==10){w=0;D=H;E=Mw(H)|0;F=J;G=I}a[E+F>>0]=v;v=G-B|0;B=E+(F-v)|0;zH(B|0,y|0,v|0)|0;c[b>>2]=B;c[l>>2]=E+(F+1);c[u>>2]=E+D;if(!z)continue;Ow(z)}if((w|0)==6)Kw(b);else if((w|0)==13){Ug(f);i=e;return}}function Og(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+160|0;g=f+136|0;h=f;j=h+4|0;c[h>>2]=7292;c[h+56>>2]=7312;iz(h+56|0,j);c[h+128>>2]=0;c[h+132>>2]=-1;c[h>>2]=7332;c[h+56>>2]=7352;lz(j);c[j>>2]=7208;k=h+36|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[h+52>>2]=16;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;Tg(j,g);Hy(g);c[h+((c[(c[h>>2]|0)+-12>>2]|0)+76)>>2]=48;g=b+4|0;k=c[b>>2]|0;if((c[g>>2]|0)==(k|0)){Xg(a,j);Wg(h);i=f;return}if(e){e=k;l=0;do{m=h+((c[(c[h>>2]|0)+-12>>2]|0)+4)|0;c[m>>2]=c[m>>2]&-75|8;c[h+((c[(c[h>>2]|0)+-12>>2]|0)+12)>>2]=2;Oz(h,d[e+l>>0]|0)|0;l=l+1|0;Vg(h,(l&15|0)==0?7376:7384,1)|0;e=c[b>>2]|0}while(l>>>0<((c[g>>2]|0)-e|0)>>>0);Xg(a,j);Wg(h);i=f;return}else{e=k;k=0;do{l=h+((c[(c[h>>2]|0)+-12>>2]|0)+4)|0;c[l>>2]=c[l>>2]&-75|8;c[h+((c[(c[h>>2]|0)+-12>>2]|0)+12)>>2]=2;Oz(h,d[e+k>>0]|0)|0;e=c[b>>2]|0;k=k+1|0}while(k>>>0<((c[g>>2]|0)-e|0)>>>0);Xg(a,j);Wg(h);i=f;return}}function Pg(b){b=b|0;var d=0,e=0;d=c[b+4>>2]|0;e=c[b>>2]|0;if((d|0)==(e|0))return;b=d-e|0;d=e;while(1){b=b+-1|0;a[d>>0]=0;if(!b)break;else d=d+1|0}return}function Qg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+32|0;f=e;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[f>>2]=c[b+28>>2];g=f+4|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[f+20>>2]=256;h=f+24|0;j=f+28|0;k=f+24|0;l=k;c[l>>2]=0;c[l+4>>2]=0;l=d+4|0;m=c[l>>2]|0;n=c[d>>2]|0;while(1){o=n;p=a[o>>0]|0;if(!(p<<24>>24==9|p<<24>>24==13|p<<24>>24==10|p<<24>>24==32)){q=n;r=o;break}n=o+1|0}n=b+52|0;c[d>>2]=q;c[l>>2]=m;if(a[r>>0]|0){rh(f,d,b);if(!(c[h>>2]|0)){r=c[l>>2]|0;o=c[d>>2]|0;while(1){p=o;s=a[p>>0]|0;if(!(s<<24>>24==9|s<<24>>24==13|s<<24>>24==10|s<<24>>24==32)){t=o;u=p;break}o=p+1|0}c[d>>2]=t;c[l>>2]=r;if(a[u>>0]|0){c[h>>2]=2;c[j>>2]=t-r}}}else{c[h>>2]=1;c[j>>2]=q-m}m=k;k=c[m>>2]|0;q=c[m+4>>2]|0;m=f+8|0;c[f+12>>2]=c[m>>2];f=n;c[f>>2]=k;c[f+4>>2]=q;q=b+40|0;if(!k){k=c[q>>2]|0;f=k+-24|0;c[q>>2]=f;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];c[b+8>>2]=c[f+8>>2];c[b+12>>2]=c[f+12>>2];f=k+-8|0;c[b+16>>2]=c[f>>2];c[f>>2]=0}f=b+36|0;k=c[f>>2]|0;c[q>>2]=k;qy(k);c[f>>2]=0;c[q>>2]=0;c[b+44>>2]=0;qy(c[m>>2]|0);m=c[g>>2]|0;if(!m){i=e;return b|0}Ow(m);i=e;return b|0}function Rg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;f=i;i=i+80|0;g=f;h=f+60|0;j=f+48|0;k=f+36|0;l=f+24|0;m=c[d+16>>2]|0;if((m|0)==4){n=c[d>>2]|0;o=c[d+4>>2]|0;if(!o)p=0;else{q=n+(o*24|0)|0;o=0;while(1){q=q+-24|0;Fy(g,86712,0);r=(Rg(b,q,g)|0)+o|0;Hy(g);if((q|0)==(n|0)){p=r;break}else o=r}}o=(Lm(b,p)|0)+p|0;p=a[e>>0]|0;if(!(((p&1)==0?(p&255)>>>1:c[e+4>>2]|0)|0))s=o;else{Lg(h,e);p=(Hm(b,h)|0)+o|0;o=c[h>>2]|0;if(o){n=h+4|0;if((c[n>>2]|0)!=(o|0))c[n>>2]=o;Ow(o)}s=(Lm(b,p)|0)+p|0}t=s;i=f;return t|0}else if((m|0)==3){c[h>>2]=0;s=h+4|0;c[s>>2]=0;c[h+8>>2]=0;p=d+4|0;o=c[p>>2]|0;if(!o){u=0;v=0}else{n=h+8|0;q=c[d>>2]|0;r=o;while(1){if(!(c[q+16>>2]&4194304))w=c[q>>2]|0;else w=q;c[j>>2]=w;o=c[s>>2]|0;if((o|0)==(c[n>>2]|0)){kh(h,j);x=c[p>>2]|0}else{c[o>>2]=w;c[s>>2]=(c[s>>2]|0)+4;x=r}q=q+48|0;if((q|0)==((c[d>>2]|0)+(x*48|0)|0))break;else r=x}u=c[h>>2]|0;v=c[s>>2]|0}c[g>>2]=47;mh(u,v,g);v=c[s>>2]|0;if((v|0)==(c[h>>2]|0))y=0;else{u=g+16|0;x=g+4|0;r=v;v=0;while(1){r=r+-4|0;q=c[r>>2]|0;w=q;while(1)if(!(a[w>>0]|0)){z=w;break}else w=w+1|0;w=q;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[u>>2]=1048581;c[g>>2]=w;c[x>>2]=z-w;w=nh(d,g)|0;if((w|0)==((c[d>>2]|0)+((c[p>>2]|0)*48|0)|0))if((a[7656]|0)==0?(Da(7656)|0)!=0:0){c[1916]=0;c[1917]=0;c[1918]=0;c[1919]=0;c[1920]=0;$c(7656);A=7664}else A=7664;else A=w+24|0;w=c[r>>2]|0;Fy(k,w,yH(w|0)|0);w=Rg(b,A,k)|0;Hy(k);n=w+v|0;if((r|0)==(c[h>>2]|0)){y=n;break}else v=n}}v=(Lm(b,y)|0)+y|0;y=a[e>>0]|0;if(!(((y&1)==0?(y&255)>>>1:c[e+4>>2]|0)|0))B=v;else{Lg(l,e);y=(Hm(b,l)|0)+v|0;v=c[l>>2]|0;if(v){r=l+4|0;if((c[r>>2]|0)!=(v|0))c[r>>2]=v;Ow(v)}B=(Lm(b,y)|0)+y|0}y=c[h>>2]|0;v=y;if(y){r=c[s>>2]|0;if((r|0)!=(y|0))c[s>>2]=r+(~((r+-4-v|0)>>>2)<<2);Ow(y)}t=B;i=f;return t|0}else{if((m+-3|0)>>>0<2){B=Yb(8)|0;By(B,7688);dd(B|0,78680,39)}do if(!(m&1024)){if(m&16384){B=Yb(8)|0;Fy(g,7720,57);$i(B,g);dd(B|0,296,39)}if(m&256){C=Em(b,(m|0)==258)|0;break}if(!(m&1048576))if(!m){C=Fm(b)|0;break}else{B=Yb(8)|0;By(B,7784);dd(B|0,78680,39)}B=(m&4194304|0)==0?c[d>>2]|0:d;Fy(j,B,yH(B|0)|0);Lg(h,j);B=Hm(b,h)|0;y=c[h>>2]|0;if(y){v=h+4|0;if((c[v>>2]|0)!=(y|0))c[v>>2]=y;Ow(y)}Hy(j);C=B}else C=Cm(b,c[d>>2]|0)|0;while(0);d=a[e>>0]|0;if(!(((d&1)==0?(d&255)>>>1:c[e+4>>2]|0)|0))D=C;else{Lg(k,e);e=(Hm(b,k)|0)+C|0;C=c[k>>2]|0;if(C){d=k+4|0;if((c[d>>2]|0)!=(C|0))c[d>>2]=C;Ow(C)}D=(Lm(b,e)|0)+e|0}t=D;i=f;return t|0}return 0}function Sg(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;b=c[a+24>>2]|0;if(b){d=c[b>>2]|0;if(d){e=b+8|0;f=d;while(1){if((f|0)==(c[e>>2]|0)){g=f;break}d=c[f+8>>2]|0;qy(f);c[b>>2]=d;h=d;if(!d){g=h;break}else f=h}if((g|0)!=0?(g|0)==(c[e>>2]|0):0)c[g+4>>2]=0}g=c[b+16>>2]|0;if(g)Ow(g);Ow(b)}qy(c[a+36>>2]|0);b=c[a+32>>2]|0;if(!b)return;Ow(b);return}function Tg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b+32|0;Iy(e,d)|0;d=b+44|0;c[d>>2]=0;f=b+48|0;g=c[f>>2]|0;if(g&8){h=a[e>>0]|0;if(!(h&1)){i=((h&255)>>>1)+(e+1)|0;c[d>>2]=i;j=i;k=e+1|0;l=e+1|0}else{i=(c[b+40>>2]|0)+(c[b+36>>2]|0)|0;c[d>>2]=i;h=c[b+40>>2]|0;j=i;k=h;l=h}c[b+8>>2]=k;c[b+12>>2]=l;c[b+16>>2]=j}if(!(g&16))return;g=a[e>>0]|0;if(!(g&1)){j=(g&255)>>>1;c[d>>2]=e+1+j;m=10;n=j}else{j=c[b+36>>2]|0;c[d>>2]=(c[b+40>>2]|0)+j;m=(c[e>>2]&-2)+-1|0;n=j}Ly(e,m,0);m=a[e>>0]|0;if(!(m&1)){o=e+1|0;p=(m&255)>>>1;q=e+1|0}else{e=c[b+40>>2]|0;o=e;p=c[b+36>>2]|0;q=e}e=b+24|0;c[e>>2]=q;c[b+20>>2]=q;c[b+28>>2]=o+p;if(!(c[f>>2]&3))return;c[e>>2]=q+n;return}function Ug(a){a=a|0;var b=0,d=0;c[a>>2]=7172;b=a+60|0;c[b>>2]=7192;d=a+8|0;c[d>>2]=7208;Hy(a+40|0);jz(d);dz(b);return}function Vg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;f=i;i=i+32|0;g=f+16|0;h=f+8|0;j=f;Mz(h,b);if(!(a[h>>0]|0)){Nz(h);i=f;return b|0}k=c[(c[b>>2]|0)+-12>>2]|0;c[j>>2]=c[b+(k+24)>>2];l=b+k|0;m=c[b+(k+4)>>2]|0;n=d+e|0;e=b+(k+76)|0;k=c[e>>2]|0;if((k|0)==-1){c[g>>2]=hz(l)|0;o=_D(g,83696)|0;p=Cd[c[(c[o>>2]|0)+28>>2]&63](o,32)|0;YD(g);o=p<<24>>24;c[e>>2]=o;q=o}else q=k;c[g>>2]=c[j>>2];if(Yg(g,d,(m&176|0)==32?n:d,n,l,q&255)|0){Nz(h);i=f;return b|0}q=c[(c[b>>2]|0)+-12>>2]|0;cz(b+q|0,c[b+(q+16)>>2]|5);Nz(h);i=f;return b|0}function Wg(a){a=a|0;var b=0,d=0;c[a>>2]=7332;b=a+56|0;c[b>>2]=7352;d=a+4|0;c[d>>2]=7208;Hy(a+36|0);jz(d);dz(b);return}function Xg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=c[d+48>>2]|0;if(e&16){f=d+44|0;g=c[f>>2]|0;h=c[d+24>>2]|0;if(g>>>0<h>>>0){c[f>>2]=h;i=h}else i=g;g=c[d+20>>2]|0;h=i-g|0;if(h>>>0>4294967279)Jw(b);if(h>>>0<11){a[b>>0]=h<<1;j=b+1|0}else{f=h+16&-16;k=Mw(f)|0;c[b+8>>2]=k;c[b>>2]=f|1;c[b+4>>2]=h;j=k}if((g|0)==(i|0))l=j;else{k=g;g=j;while(1){a[g>>0]=a[k>>0]|0;k=k+1|0;if((k|0)==(i|0))break;else g=g+1|0}l=j+h|0}a[l>>0]=0;return}if(!(e&8)){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}e=c[d+8>>2]|0;l=c[d+16>>2]|0;d=l-e|0;if(d>>>0>4294967279)Jw(b);if(d>>>0<11){a[b>>0]=d<<1;m=b+1|0}else{h=d+16&-16;j=Mw(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=d;m=j}if((e|0)==(l|0))n=m;else{j=e;e=m;while(1){a[e>>0]=a[j>>0]|0;j=j+1|0;if((j|0)==(l|0))break;else e=e+1|0}n=m+d|0}a[n>>0]=0;return}function Yg(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+16|0;k=j;l=c[b>>2]|0;if(!l){m=0;i=j;return m|0}n=f;f=d;o=n-f|0;p=g+12|0;g=c[p>>2]|0;q=(g|0)>(o|0)?g-o|0:0;o=e;g=o-f|0;if((g|0)>0?(od[c[(c[l>>2]|0)+48>>2]&127](l,d,g)|0)!=(g|0):0){c[b>>2]=0;m=0;i=j;return m|0}do if((q|0)>0){Gy(k,q,h);if((od[c[(c[l>>2]|0)+48>>2]&127](l,(a[k>>0]&1)==0?k+1|0:c[k+8>>2]|0,q)|0)==(q|0)){Hy(k);break}c[b>>2]=0;Hy(k);m=0;i=j;return m|0}while(0);k=n-o|0;if((k|0)>0?(od[c[(c[l>>2]|0)+48>>2]&127](l,e,k)|0)!=(k|0):0){c[b>>2]=0;m=0;i=j;return m|0}c[p>>2]=0;m=l;i=j;return m|0}function Zg(a){a=a|0;Wg(a);Ow(a);return}function _g(a){a=a|0;Wg(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function $g(a){a=a|0;var b=0;b=a+(c[(c[a>>2]|0)+-12>>2]|0)|0;Wg(b);Ow(b);return}function ah(a){a=a|0;c[a>>2]=7208;Hy(a+32|0);jz(a);return}function bh(a){a=a|0;c[a>>2]=7208;Hy(a+32|0);jz(a);Ow(a);return}function ch(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;if(j>>>0<l>>>0){c[i>>2]=l;m=l}else m=j;j=m;i=h&24;if(!i){n=b;c[n>>2]=0;c[n+4>>2]=0;n=b+8|0;c[n>>2]=-1;c[n+4>>2]=-1;return}if((g|0)==1&(i|0)==24){i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}do if(!g){o=0;p=0}else if((g|0)==1)if(!(h&8)){i=l-(c[d+20>>2]|0)|0;o=i;p=((i|0)<0)<<31>>31;break}else{i=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;o=i;p=((i|0)<0)<<31>>31;break}else if((g|0)==2){i=d+32|0;if(!(a[i>>0]&1))q=i+1|0;else q=c[d+40>>2]|0;i=m-q|0;o=i;p=((i|0)<0)<<31>>31}else{i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}while(0);q=CH(o|0,p|0,e|0,f|0)|0;f=E;if((f|0)>=0){e=d+32|0;if(!(a[e>>0]&1))r=e+1|0;else r=c[d+40>>2]|0;e=m-r|0;r=((e|0)<0)<<31>>31;if(!((r|0)<(f|0)|(r|0)==(f|0)&e>>>0<q>>>0)){e=h&8;if(!((q|0)==0&(f|0)==0)){if((e|0)!=0?(c[d+12>>2]|0)==0:0){r=b;c[r>>2]=0;c[r+4>>2]=0;r=b+8|0;c[r>>2]=-1;c[r+4>>2]=-1;return}if((h&16|0)!=0&(l|0)==0){l=b;c[l>>2]=0;c[l+4>>2]=0;l=b+8|0;c[l>>2]=-1;c[l+4>>2]=-1;return}}if(e){c[d+12>>2]=(c[d+8>>2]|0)+q;c[d+16>>2]=j}if(h&16)c[k>>2]=(c[d+20>>2]|0)+q;d=b;c[d>>2]=0;c[d+4>>2]=0;d=b+8|0;c[d>>2]=q;c[d+4>>2]=f;return}}f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function dh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=d+8|0;pd[c[(c[b>>2]|0)+16>>2]&15](a,b,c[f>>2]|0,c[f+4>>2]|0,0,e);return}function eh(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else g=e;if(!(c[a+48>>2]&8)){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;b=a+12|0;if(f>>>0<g>>>0){a=c[b>>2]|0;c[e>>2]=g;i=a;j=g}else{i=c[b>>2]|0;j=f}if(i>>>0>=j>>>0){h=-1;return h|0}h=d[i>>0]|0;return h|0}function fh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else h=f;f=h;h=b+8|0;g=c[h>>2]|0;e=b+12|0;i=c[e>>2]|0;j=g;if(g>>>0>=i>>>0){k=-1;return k|0}if((d|0)==-1){c[h>>2]=g;c[e>>2]=i+-1;c[b+16>>2]=f;k=0;return k|0}if(!(c[b+48>>2]&16)){g=d&255;l=i+-1|0;if(g<<24>>24==(a[l>>0]|0)){m=g;n=l}else{k=-1;return k|0}}else{m=d&255;n=i+-1|0}c[h>>2]=j;c[e>>2]=n;c[b+16>>2]=f;a[n>>0]=m;k=d;return k|0}function gh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+16|0;f=e;if((d|0)==-1){g=0;i=e;return g|0}h=b+12|0;j=b+8|0;k=(c[h>>2]|0)-(c[j>>2]|0)|0;l=b+24|0;m=c[l>>2]|0;n=b+28|0;o=c[n>>2]|0;if((m|0)==(o|0)){p=b+48|0;if(!(c[p>>2]&16)){g=-1;i=e;return g|0}q=b+20|0;r=c[q>>2]|0;s=b+44|0;t=(c[s>>2]|0)-r|0;u=b+32|0;Oy(u,0);if(!(a[u>>0]&1))v=10;else v=(c[u>>2]&-2)+-1|0;Ly(u,v,0);v=a[u>>0]|0;if(!(v&1)){w=u+1|0;x=(v&255)>>>1}else{w=c[b+40>>2]|0;x=c[b+36>>2]|0}v=w+x|0;c[q>>2]=w;c[n>>2]=v;n=w+(m-r)|0;c[l>>2]=n;r=w+t|0;c[s>>2]=r;y=p;z=s;A=n;B=r;C=v}else{v=b+44|0;y=b+48|0;z=v;A=m;B=c[v>>2]|0;C=o}o=A+1|0;c[f>>2]=o;v=c[(o>>>0<B>>>0?z:f)>>2]|0;c[z>>2]=v;if(c[y>>2]&8){y=b+32|0;if(!(a[y>>0]&1))D=y+1|0;else D=c[b+40>>2]|0;c[j>>2]=D;c[h>>2]=D+k;c[b+16>>2]=v}if((A|0)==(C|0)){g=Cd[c[(c[b>>2]|0)+52>>2]&63](b,d&255)|0;i=e;return g|0}else{c[l>>2]=o;a[A>>0]=d;g=d&255;i=e;return g|0}return 0}function hh(a){a=a|0;Ug(a);Ow(a);return}function ih(a){a=a|0;Ug(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function jh(a){a=a|0;var b=0;b=a+(c[(c[a>>2]|0)+-12>>2]|0)|0;Ug(b);Ow(b);return}function kh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=a+4|0;e=c[a>>2]|0;f=e;g=((c[d>>2]|0)-f>>2)+1|0;if(g>>>0>1073741823)Kw(a);h=a+8|0;i=e;j=(c[h>>2]|0)-i|0;if(j>>2>>>0<536870911){k=j>>1;j=k>>>0<g>>>0?g:k;k=(c[d>>2]|0)-i|0;g=k>>2;if(!j){l=0;m=0;n=g;o=k}else{p=j;q=g;r=k;s=6}}else{k=(c[d>>2]|0)-i|0;p=1073741823;q=k>>2;r=k;s=6}if((s|0)==6){l=p;m=Mw(p<<2)|0;n=q;o=r}c[m+(n<<2)>>2]=c[b>>2];zH(m|0,e|0,o|0)|0;c[a>>2]=m;c[d>>2]=m+(n+1<<2);c[h>>2]=m+(l<<2);if(!f)return;Ow(f);return}function lh(a,b){a=a|0;b=b|0;return (ly(a,b)|0)<0|0}function mh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0;e=a;a=b;a:while(1){b=a;f=a+-4|0;g=e;b:while(1){h=g;i=b-h|0;j=i>>2;switch(j|0){case 2:{k=g;l=f;m=f;n=4;break a;break}case 3:{o=g;p=f;q=f;n=6;break a;break}case 4:{r=g;s=f;n=14;break a;break}case 5:{t=g;u=f;v=f;n=15;break a;break}case 1:case 0:{n=69;break a;break}default:{}}if((i|0)<124){w=g;x=a;n=21;break a}y=(j|0)/2|0;z=g+(y<<2)|0;do if((i|0)>3996){A=(j|0)/4|0;B=g+(A<<2)|0;C=g+(A+y<<2)|0;A=oh(g,B,z,C,d)|0;if(Cd[c[d>>2]&63](c[f>>2]|0,c[C>>2]|0)|0){D=c[C>>2]|0;c[C>>2]=c[f>>2];c[f>>2]=D;D=A+1|0;if(Cd[c[d>>2]&63](c[C>>2]|0,c[z>>2]|0)|0){E=c[z>>2]|0;c[z>>2]=c[C>>2];c[C>>2]=E;E=A+2|0;if(Cd[c[d>>2]&63](c[z>>2]|0,c[B>>2]|0)|0){C=c[B>>2]|0;c[B>>2]=c[z>>2];c[z>>2]=C;if(Cd[c[d>>2]&63](c[B>>2]|0,c[g>>2]|0)|0){C=c[g>>2]|0;c[g>>2]=c[B>>2];c[B>>2]=C;F=A+4|0}else F=A+3|0}else F=E}else F=D}else F=A}else{A=Cd[c[d>>2]&63](c[z>>2]|0,c[g>>2]|0)|0;D=Cd[c[d>>2]&63](c[f>>2]|0,c[z>>2]|0)|0;if(!A){if(!D){F=0;break}A=c[z>>2]|0;c[z>>2]=c[f>>2];c[f>>2]=A;if(!(Cd[c[d>>2]&63](c[z>>2]|0,c[g>>2]|0)|0)){F=1;break}A=c[g>>2]|0;c[g>>2]=c[z>>2];c[z>>2]=A;F=2;break}A=c[g>>2]|0;if(D){c[g>>2]=c[f>>2];c[f>>2]=A;F=1;break}c[g>>2]=c[z>>2];c[z>>2]=A;if(Cd[c[d>>2]&63](c[f>>2]|0,A)|0){A=c[z>>2]|0;c[z>>2]=c[f>>2];c[f>>2]=A;F=2}else F=1}while(0);do if(Cd[c[d>>2]&63](c[g>>2]|0,c[z>>2]|0)|0){G=f;H=F}else{y=f;while(1){j=y+-4|0;if((g|0)==(j|0))break;if(Cd[c[d>>2]&63](c[j>>2]|0,c[z>>2]|0)|0){I=j;n=51;break}else y=j}if((n|0)==51){n=0;y=c[g>>2]|0;c[g>>2]=c[I>>2];c[I>>2]=y;G=I;H=F+1|0;break}y=g+4|0;if(Cd[c[d>>2]&63](c[g>>2]|0,c[f>>2]|0)|0)J=y;else{if((y|0)==(f|0)){n=69;break a}else{K=g;L=y}while(1){if(Cd[c[d>>2]&63](c[g>>2]|0,c[L>>2]|0)|0){M=K;N=L;break}y=L+4|0;if((y|0)==(f|0)){n=69;break a}else{j=L;L=y;K=j}}j=c[N>>2]|0;c[N>>2]=c[f>>2];c[f>>2]=j;J=M+8|0}if((J|0)==(f|0)){n=69;break a}else{O=J;P=f}while(1){j=O;while(1){y=j+4|0;if(Cd[c[d>>2]&63](c[g>>2]|0,c[j>>2]|0)|0){Q=y;R=j;break}else j=y}j=P;while(1){y=j+-4|0;if(Cd[c[d>>2]&63](c[g>>2]|0,c[y>>2]|0)|0)j=y;else{S=y;break}}if(R>>>0>=S>>>0){g=R;continue b}j=c[R>>2]|0;c[R>>2]=c[S>>2];c[S>>2]=j;O=Q;P=S}}while(0);j=g+4|0;c:do if(j>>>0<G>>>0){y=j;i=G;A=z;D=H;while(1){E=y;while(1){C=E+4|0;if(Cd[c[d>>2]&63](c[E>>2]|0,c[A>>2]|0)|0)E=C;else{T=C;U=E;break}}E=i;while(1){C=E+-4|0;if(Cd[c[d>>2]&63](c[C>>2]|0,c[A>>2]|0)|0){V=C;break}else E=C}if(U>>>0>V>>>0){W=U;X=A;Y=D;break c}E=c[U>>2]|0;c[U>>2]=c[V>>2];c[V>>2]=E;y=T;i=V;A=(A|0)==(U|0)?V:A;D=D+1|0}}else{W=j;X=z;Y=H}while(0);if((W|0)!=(X|0)?Cd[c[d>>2]&63](c[X>>2]|0,c[W>>2]|0)|0:0){z=c[W>>2]|0;c[W>>2]=c[X>>2];c[X>>2]=z;Z=Y+1|0}else Z=Y;if(!Z){_=qh(g,W,d)|0;z=W+4|0;if(qh(z,a,d)|0){n=64;break}if(_){g=z;continue}}z=W;if((z-h|0)>=(b-z|0)){$=g;aa=W;n=68;break}mh(g,W,d);g=W+4|0}if((n|0)==64){n=0;if(_){n=69;break}else{e=g;a=W;continue}}else if((n|0)==68){n=0;mh(aa+4|0,a,d);e=$;a=aa;continue}}if((n|0)==4){if(!(Cd[c[d>>2]&63](c[l>>2]|0,c[k>>2]|0)|0))return;l=c[k>>2]|0;c[k>>2]=c[m>>2];c[m>>2]=l;return}else if((n|0)==6){l=o+4|0;m=Cd[c[d>>2]&63](c[l>>2]|0,c[o>>2]|0)|0;k=Cd[c[d>>2]&63](c[p>>2]|0,c[l>>2]|0)|0;if(!m){if(!k)return;m=c[l>>2]|0;c[l>>2]=c[q>>2];c[q>>2]=m;if(!(Cd[c[d>>2]&63](c[l>>2]|0,c[o>>2]|0)|0))return;m=c[o>>2]|0;c[o>>2]=c[l>>2];c[l>>2]=m;return}m=c[o>>2]|0;if(k){c[o>>2]=c[q>>2];c[q>>2]=m;return}c[o>>2]=c[l>>2];c[l>>2]=m;if(!(Cd[c[d>>2]&63](c[p>>2]|0,m)|0))return;m=c[l>>2]|0;c[l>>2]=c[q>>2];c[q>>2]=m;return}else if((n|0)==14){oh(r,r+4|0,r+8|0,s,d)|0;return}else if((n|0)==15){s=t+4|0;r=t+8|0;m=t+12|0;oh(t,s,r,m,d)|0;if(!(Cd[c[d>>2]&63](c[u>>2]|0,c[m>>2]|0)|0))return;u=c[m>>2]|0;c[m>>2]=c[v>>2];c[v>>2]=u;if(!(Cd[c[d>>2]&63](c[m>>2]|0,c[r>>2]|0)|0))return;u=c[r>>2]|0;v=c[m>>2]|0;c[r>>2]=v;c[m>>2]=u;if(!(Cd[c[d>>2]&63](v,c[s>>2]|0)|0))return;v=c[s>>2]|0;u=c[r>>2]|0;c[s>>2]=u;c[r>>2]=v;if(!(Cd[c[d>>2]&63](u,c[t>>2]|0)|0))return;u=c[t>>2]|0;c[t>>2]=c[s>>2];c[s>>2]=u;return}else if((n|0)==21){ph(w,x,d);return}else if((n|0)==69)return}function nh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;e=c[b>>2]|0;f=c[b+4>>2]|0;if(!f){g=e;return g|0}b=(c[d+16>>2]&4194304|0)==0;h=c[d+4>>2]|0;i=b?c[d>>2]|0:d;j=11-(a[d+11>>0]|0)|0;d=e+(f*48|0)|0;if(b){b=e;while(1){f=(c[b+16>>2]&4194304|0)==0;if(f)k=c[b+4>>2]|0;else k=11-(a[b+11>>0]|0)|0;if((h|0)==(k|0)){l=f?c[b>>2]|0:b;if((i|0)==(l|0)){g=b;m=17;break}if(!(ky(i,l,h)|0)){g=b;m=17;break}}b=b+48|0;if((b|0)==(d|0)){g=d;m=17;break}}if((m|0)==17)return g|0}else{b=e;while(1){e=(c[b+16>>2]&4194304|0)==0;if(e)n=c[b+4>>2]|0;else n=11-(a[b+11>>0]|0)|0;if((j|0)==(n|0)){h=e?c[b>>2]|0:b;if((i|0)==(h|0)){g=b;m=17;break}if(!(ky(i,h,j)|0)){g=b;m=17;break}}h=b+48|0;if((h|0)==(d|0)){g=h;m=17;break}else b=h}if((m|0)==17)return g|0}return 0}function oh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=Cd[c[f>>2]&63](c[b>>2]|0,c[a>>2]|0)|0;h=Cd[c[f>>2]&63](c[d>>2]|0,c[b>>2]|0)|0;do if(g){i=c[a>>2]|0;if(h){c[a>>2]=c[d>>2];c[d>>2]=i;j=1;break}c[a>>2]=c[b>>2];c[b>>2]=i;if(Cd[c[f>>2]&63](c[d>>2]|0,i)|0){i=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=i;j=2}else j=1}else if(h){i=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=i;if(Cd[c[f>>2]&63](c[b>>2]|0,c[a>>2]|0)|0){i=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=i;j=2}else j=1}else j=0;while(0);if(!(Cd[c[f>>2]&63](c[e>>2]|0,c[d>>2]|0)|0)){k=j;return k|0}h=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=h;if(!(Cd[c[f>>2]&63](c[d>>2]|0,c[b>>2]|0)|0)){k=j+1|0;return k|0}h=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=h;if(!(Cd[c[f>>2]&63](c[b>>2]|0,c[a>>2]|0)|0)){k=j+2|0;return k|0}f=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=f;k=j+3|0;return k|0}function ph(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=a+8|0;f=a+4|0;g=Cd[c[d>>2]&63](c[f>>2]|0,c[a>>2]|0)|0;h=Cd[c[d>>2]&63](c[e>>2]|0,c[f>>2]|0)|0;do if(g){i=c[a>>2]|0;if(h){c[a>>2]=c[e>>2];c[e>>2]=i;break}c[a>>2]=c[f>>2];c[f>>2]=i;if(Cd[c[d>>2]&63](c[e>>2]|0,i)|0){i=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=i}}else if(h?(i=c[f>>2]|0,j=c[e>>2]|0,c[f>>2]=j,c[e>>2]=i,Cd[c[d>>2]&63](j,c[a>>2]|0)|0):0){j=c[a>>2]|0;c[a>>2]=c[f>>2];c[f>>2]=j}while(0);f=a+12|0;if((f|0)==(b|0))return;else{k=f;l=e}while(1){if(Cd[c[d>>2]&63](c[k>>2]|0,c[l>>2]|0)|0){e=c[k>>2]|0;f=e;h=k;g=l;while(1){c[h>>2]=c[g>>2];if((g|0)==(a|0)){m=g;break}j=g+-4|0;if(Cd[c[d>>2]&63](f,c[j>>2]|0)|0){i=g;g=j;h=i}else{m=g;break}}c[m>>2]=e}g=k+4|0;if((g|0)==(b|0))break;else{h=k;k=g;l=h}}return}function qh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;switch(b-a>>2|0){case 2:{e=b+-4|0;if(!(Cd[c[d>>2]&63](c[e>>2]|0,c[a>>2]|0)|0)){f=1;return f|0}g=c[a>>2]|0;c[a>>2]=c[e>>2];c[e>>2]=g;f=1;return f|0}case 3:{g=a+4|0;e=b+-4|0;h=Cd[c[d>>2]&63](c[g>>2]|0,c[a>>2]|0)|0;i=Cd[c[d>>2]&63](c[e>>2]|0,c[g>>2]|0)|0;if(!h){if(!i){f=1;return f|0}h=c[g>>2]|0;c[g>>2]=c[e>>2];c[e>>2]=h;if(!(Cd[c[d>>2]&63](c[g>>2]|0,c[a>>2]|0)|0)){f=1;return f|0}h=c[a>>2]|0;c[a>>2]=c[g>>2];c[g>>2]=h;f=1;return f|0}h=c[a>>2]|0;if(i){c[a>>2]=c[e>>2];c[e>>2]=h;f=1;return f|0}c[a>>2]=c[g>>2];c[g>>2]=h;if(!(Cd[c[d>>2]&63](c[e>>2]|0,h)|0)){f=1;return f|0}h=c[g>>2]|0;c[g>>2]=c[e>>2];c[e>>2]=h;f=1;return f|0}case 1:case 0:{f=1;return f|0}case 4:{oh(a,a+4|0,a+8|0,b+-4|0,d)|0;f=1;return f|0}case 5:{h=a+4|0;e=a+8|0;g=a+12|0;i=b+-4|0;oh(a,h,e,g,d)|0;if(!(Cd[c[d>>2]&63](c[i>>2]|0,c[g>>2]|0)|0)){f=1;return f|0}j=c[g>>2]|0;c[g>>2]=c[i>>2];c[i>>2]=j;if(!(Cd[c[d>>2]&63](c[g>>2]|0,c[e>>2]|0)|0)){f=1;return f|0}j=c[e>>2]|0;i=c[g>>2]|0;c[e>>2]=i;c[g>>2]=j;if(!(Cd[c[d>>2]&63](i,c[h>>2]|0)|0)){f=1;return f|0}i=c[h>>2]|0;j=c[e>>2]|0;c[h>>2]=j;c[e>>2]=i;if(!(Cd[c[d>>2]&63](j,c[a>>2]|0)|0)){f=1;return f|0}j=c[a>>2]|0;c[a>>2]=c[h>>2];c[h>>2]=j;f=1;return f|0}default:{j=a+8|0;h=a+4|0;i=Cd[c[d>>2]&63](c[h>>2]|0,c[a>>2]|0)|0;e=Cd[c[d>>2]&63](c[j>>2]|0,c[h>>2]|0)|0;do if(i){g=c[a>>2]|0;if(e){c[a>>2]=c[j>>2];c[j>>2]=g;break}c[a>>2]=c[h>>2];c[h>>2]=g;if(Cd[c[d>>2]&63](c[j>>2]|0,g)|0){g=c[h>>2]|0;c[h>>2]=c[j>>2];c[j>>2]=g}}else if(e?(g=c[h>>2]|0,k=c[j>>2]|0,c[h>>2]=k,c[j>>2]=g,Cd[c[d>>2]&63](k,c[a>>2]|0)|0):0){k=c[a>>2]|0;c[a>>2]=c[h>>2];c[h>>2]=k}while(0);h=a+12|0;if((h|0)==(b|0)){f=1;return f|0}else{l=0;m=h;n=j}while(1){if(Cd[c[d>>2]&63](c[m>>2]|0,c[n>>2]|0)|0){j=c[m>>2]|0;h=j;e=m;i=n;while(1){c[e>>2]=c[i>>2];if((i|0)==(a|0)){o=i;break}k=i+-4|0;if(Cd[c[d>>2]&63](h,c[k>>2]|0)|0){g=i;i=k;e=g}else{o=i;break}}c[o>>2]=j;i=l+1|0;if((i|0)==8){p=m;break}else q=i}else q=l;i=m+4|0;if((i|0)==(b|0)){f=1;r=34;break}else{e=m;l=q;m=i;n=e}}if((r|0)==34)return f|0;f=(p+4|0)==(b|0);return f|0}}return 0}function rh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;f=c[d>>2]|0;switch(a[f>>0]|0){case 110:{g=f+2|0;c[d>>2]=g;if((a[f+1>>0]|0)==117){h=f+3|0;c[d>>2]=h;if((a[g>>0]|0)==108){i=f+4|0;c[d>>2]=i;if((a[h>>0]|0)==108){j=e+28|0;k=e+40|0;l=c[k>>2]|0;m=e+44|0;n=c[m>>2]|0;if((l+24|0)>>>0<n>>>0)o=l;else{p=e+36|0;q=c[p>>2]|0;if(!q){if(!(c[j>>2]|0)){r=Mw(1)|0;c[j>>2]=r;c[e+32>>2]=r}s=0;t=c[e+48>>2]|0}else{r=q;j=n-r|0;s=r;t=((j+1|0)>>>1)+j|0}j=l-s|0;s=j+24|0;l=t>>>0<s>>>0?s:t;if(!l){qy(q);u=0}else u=sy(q,l)|0;c[p>>2]=u;p=u+j|0;c[k>>2]=p;c[m>>2]=u+l;o=p}c[k>>2]=o+24;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=0;return}else v=i}else v=h}else v=g;g=v+-1-(c[d+4>>2]|0)|0;c[b+24>>2]=3;c[b+28>>2]=g;return}case 116:{g=f+2|0;c[d>>2]=g;if((a[f+1>>0]|0)==114){v=f+3|0;c[d>>2]=v;if((a[g>>0]|0)==117){h=f+4|0;c[d>>2]=h;if((a[v>>0]|0)==101){i=e+28|0;o=e+40|0;k=c[o>>2]|0;p=e+44|0;l=c[p>>2]|0;if((k+24|0)>>>0<l>>>0)w=k;else{u=e+36|0;m=c[u>>2]|0;if(!m){if(!(c[i>>2]|0)){j=Mw(1)|0;c[i>>2]=j;c[e+32>>2]=j}x=0;y=c[e+48>>2]|0}else{j=m;i=l-j|0;x=j;y=((i+1|0)>>>1)+i|0}i=k-x|0;x=i+24|0;k=y>>>0<x>>>0?x:y;if(!k){qy(m);z=0}else z=sy(m,k)|0;c[u>>2]=z;u=z+i|0;c[o>>2]=u;c[p>>2]=z+k;w=u}c[o>>2]=w+24;c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;c[w+12>>2]=0;c[w+16>>2]=258;return}else A=h}else A=v}else A=g;g=A+-1-(c[d+4>>2]|0)|0;c[b+24>>2]=3;c[b+28>>2]=g;return}case 91:{uh(b,d,e);return}case 34:{sh(b,d,e,0);return}case 123:{th(b,d,e);return}case 102:{g=f+2|0;c[d>>2]=g;if((a[f+1>>0]|0)==97){A=f+3|0;c[d>>2]=A;if((a[g>>0]|0)==108){v=f+4|0;c[d>>2]=v;if((a[A>>0]|0)==115){h=f+5|0;c[d>>2]=h;if((a[v>>0]|0)==101){f=e+28|0;w=e+40|0;o=c[w>>2]|0;u=e+44|0;k=c[u>>2]|0;if((o+24|0)>>>0<k>>>0)B=o;else{z=e+36|0;p=c[z>>2]|0;if(!p){if(!(c[f>>2]|0)){i=Mw(1)|0;c[f>>2]=i;c[e+32>>2]=i}C=0;D=c[e+48>>2]|0}else{i=p;f=k-i|0;C=i;D=((f+1|0)>>>1)+f|0}f=o-C|0;C=f+24|0;o=D>>>0<C>>>0?C:D;if(!o){qy(p);E=0}else E=sy(p,o)|0;c[z>>2]=E;z=E+f|0;c[w>>2]=z;c[u>>2]=E+o;B=z}c[w>>2]=B+24;c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[B+12>>2]=0;c[B+16>>2]=257;return}else F=h}else F=v}else F=A}else F=g;g=F+-1-(c[d+4>>2]|0)|0;c[b+24>>2]=3;c[b+28>>2]=g;return}default:{vh(b,d,e);return}}}function sh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;g=i;i=i+32|0;h=g;j=g+16|0;k=d;l=c[k+4>>2]|0;m=h;c[m>>2]=c[k>>2];c[m+4>>2]=l;l=h+8|0;c[l>>2]=d;c[j>>2]=b;d=j+4|0;c[d>>2]=0;Bh(b,h,j);if(c[b+24>>2]|0){n=c[l>>2]|0;o=h;p=o;q=c[p>>2]|0;r=o+4|0;s=r;t=c[s>>2]|0;u=n;v=u;c[v>>2]=q;w=u+4|0;x=w;c[x>>2]=t;i=g;return}b=c[d>>2]|0;d=b+-1|0;m=(c[j>>2]|0)+12|0;j=(c[m>>2]|0)+(0-b)|0;c[m>>2]=j;if(f){Ch(e,j,d,1)|0;n=c[l>>2]|0;o=h;p=o;q=c[p>>2]|0;r=o+4|0;s=r;t=c[s>>2]|0;u=n;v=u;c[v>>2]=q;w=u+4|0;x=w;c[x>>2]=t;i=g;return}f=e+28|0;m=e+40|0;k=c[m>>2]|0;y=e+44|0;z=c[y>>2]|0;if((k+24|0)>>>0<z>>>0)A=k;else{B=e+36|0;C=c[B>>2]|0;if(!C){if(!(c[f>>2]|0)){D=Mw(1)|0;c[f>>2]=D;c[e+32>>2]=D}E=0;F=c[e+48>>2]|0}else{D=C;f=z-D|0;E=D;F=((f+1|0)>>>1)+f|0}f=k-E|0;E=f+24|0;k=F>>>0<E>>>0?E:F;if(!k){qy(C);G=0}else G=sy(C,k)|0;c[B>>2]=G;B=G+f|0;c[m>>2]=B;c[y>>2]=G+k;A=B}c[m>>2]=A+24;m=c[e+20>>2]|0;e=A+16|0;c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[A+12>>2]=0;c[A+16>>2]=0;if(d>>>0<12){c[e>>2]=7340037;a[A+11>>0]=12-b;H=A}else{c[e>>2]=3145733;c[A+4>>2]=d;if(!b)I=0;else{e=b+3&-4;b=c[m>>2]|0;B=b;if((b|0)!=0?(k=c[b+4>>2]|0,(k+e|0)>>>0<=(c[b>>2]|0)>>>0):0){J=b;K=k}else{k=c[m+4>>2]|0;b=k>>>0>e>>>0?k:e;k=m+12|0;if(!(c[k>>2]|0)){G=Mw(1)|0;c[k>>2]=G;c[m+16>>2]=G}G=py(b+12|0)|0;c[G>>2]=b;c[G+4>>2]=0;c[G+8>>2]=B;c[m>>2]=G;J=G;K=0}c[J+4>>2]=K+e;I=J+12+K|0}c[A>>2]=I;H=I}zH(H|0,j|0,d|0)|0;a[H+d>>0]=0;n=c[l>>2]|0;o=h;p=o;q=c[p>>2]|0;r=o+4|0;s=r;t=c[s>>2]|0;u=n;v=u;c[v>>2]=q;w=u+4|0;x=w;c[x>>2]=t;i=g;return}function th(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;f=i;i=i+32|0;g=f;h=f+16|0;c[d>>2]=(c[d>>2]|0)+1;j=e+28|0;k=e+40|0;l=c[k>>2]|0;m=e+44|0;n=c[m>>2]|0;if((l+24|0)>>>0<n>>>0)o=l;else{p=e+36|0;q=c[p>>2]|0;if(!q){if(!(c[j>>2]|0)){r=Mw(1)|0;c[j>>2]=r;c[e+32>>2]=r}s=0;t=c[e+48>>2]|0}else{r=q;j=n-r|0;s=r;t=((j+1|0)>>>1)+j|0}j=l-s|0;s=j+24|0;l=t>>>0<s>>>0?s:t;if(!l){qy(q);u=0}else u=sy(q,l)|0;c[p>>2]=u;p=u+j|0;c[k>>2]=p;c[m>>2]=u+l;o=p}c[k>>2]=o+24;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[o+12>>2]=0;c[o+16>>2]=3;o=d+4|0;p=c[o>>2]|0;l=c[d>>2]|0;while(1){u=l;m=a[u>>0]|0;if(!(m<<24>>24==9|m<<24>>24==13|m<<24>>24==10|m<<24>>24==32)){v=l;w=u;break}l=u+1|0}c[d>>2]=v;c[o>>2]=p;v=a[w>>0]|0;if(v<<24>>24==125){c[d>>2]=w+1;l=c[k>>2]|0;c[l+-8>>2]=3;c[l+-24>>2]=0;c[l+-16>>2]=0;c[l+-20>>2]=0;i=f;return}l=g+8|0;k=h+4|0;u=b+24|0;m=b+28|0;a:do if(v<<24>>24==34){j=0;while(1){q=d;t=c[q+4>>2]|0;s=g;c[s>>2]=c[q>>2];c[s+4>>2]=t;c[l>>2]=d;c[h>>2]=b;c[k>>2]=0;Bh(b,g,h);if(!(c[u>>2]|0)){t=c[k>>2]|0;s=(c[h>>2]|0)+12|0;q=(c[s>>2]|0)+(0-t)|0;c[s>>2]=q;Ch(e,q,t+-1|0,1)|0}t=g;q=c[t+4>>2]|0;s=c[l>>2]|0;c[s>>2]=c[t>>2];c[s+4>>2]=q;if(c[u>>2]|0){x=38;break}q=c[o>>2]|0;s=c[d>>2]|0;while(1){t=s;r=a[t>>0]|0;if(!(r<<24>>24==9|r<<24>>24==13|r<<24>>24==10|r<<24>>24==32)){y=t;break}s=t+1|0}c[o>>2]=q;s=y+1|0;c[d>>2]=s;t=s;if((a[y>>0]|0)==58)z=t;else{A=q;B=t;x=25;break}while(1){t=z;s=a[t>>0]|0;if(!(s<<24>>24==9|s<<24>>24==13|s<<24>>24==10|s<<24>>24==32)){C=z;break}z=t+1|0}c[d>>2]=C;c[o>>2]=q;rh(b,d,e);if(c[u>>2]|0){x=38;break}t=c[o>>2]|0;s=c[d>>2]|0;while(1){r=s;n=a[r>>0]|0;if(!(n<<24>>24==9|n<<24>>24==13|n<<24>>24==10|n<<24>>24==32)){D=r;break}s=r+1|0}c[o>>2]=t;j=j+1|0;s=D+1|0;c[d>>2]=s;q=a[D>>0]|0;r=s;if((q|0)==44)E=r;else if((q|0)==125){F=j;x=36;break}else{G=t;H=r;x=37;break}while(1){r=E;q=a[r>>0]|0;if(!(q<<24>>24==9|q<<24>>24==13|q<<24>>24==10|q<<24>>24==32)){I=E;J=r;break}E=r+1|0}c[d>>2]=I;c[o>>2]=t;if((a[J>>0]|0)!=34){K=t;L=J;break a}}if((x|0)==25){c[u>>2]=5;c[m>>2]=B-A;i=f;return}else if((x|0)==36){Dh(e,F)|0;i=f;return}else if((x|0)==37){c[u>>2]=6;c[m>>2]=H-G;i=f;return}else if((x|0)==38){i=f;return}}else{K=p;L=w}while(0);c[u>>2]=4;c[m>>2]=L-K;i=f;return}function uh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;c[d>>2]=(c[d>>2]|0)+1;f=e+28|0;g=e+40|0;h=c[g>>2]|0;i=e+44|0;j=c[i>>2]|0;if((h+24|0)>>>0<j>>>0)k=h;else{l=e+36|0;m=c[l>>2]|0;if(!m){if(!(c[f>>2]|0)){n=Mw(1)|0;c[f>>2]=n;c[e+32>>2]=n}o=0;p=c[e+48>>2]|0}else{n=m;f=j-n|0;o=n;p=((f+1|0)>>>1)+f|0}f=h-o|0;o=f+24|0;h=p>>>0<o>>>0?o:p;if(!h){qy(m);q=0}else q=sy(m,h)|0;c[l>>2]=q;l=q+f|0;c[g>>2]=l;c[i>>2]=q+h;k=l}c[g>>2]=k+24;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[k+16>>2]=4;k=d+4|0;l=c[k>>2]|0;h=c[d>>2]|0;while(1){q=h;i=a[q>>0]|0;if(!(i<<24>>24==9|i<<24>>24==13|i<<24>>24==10|i<<24>>24==32)){r=h;s=q;break}h=q+1|0}c[d>>2]=r;c[k>>2]=l;if((a[s>>0]|0)==93){c[d>>2]=s+1;s=c[g>>2]|0;c[s+-8>>2]=4;c[s+-24>>2]=0;c[s+-16>>2]=0;c[s+-20>>2]=0;return}rh(b,d,e);s=b+24|0;if(c[s>>2]|0)return;g=b+28|0;l=0;while(1){r=c[k>>2]|0;h=c[d>>2]|0;while(1){q=h;i=a[q>>0]|0;if(!(i<<24>>24==9|i<<24>>24==13|i<<24>>24==10|i<<24>>24==32)){t=q;break}h=q+1|0}l=l+1|0;c[k>>2]=r;h=t+1|0;c[d>>2]=h;q=a[t>>0]|0;i=h;if((q|0)==44)u=i;else if((q|0)==93){v=l;w=25;break}else{x=r;y=i;w=26;break}while(1){i=u;q=a[i>>0]|0;if(!(q<<24>>24==9|q<<24>>24==13|q<<24>>24==10|q<<24>>24==32)){z=u;break}u=i+1|0}c[d>>2]=z;c[k>>2]=r;rh(b,d,e);if(c[s>>2]|0){w=27;break}}if((w|0)==25){Ah(e,v)|0;return}else if((w|0)==26){c[s>>2]=7;c[g>>2]=y-x;return}else if((w|0)==27)return}function vh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ga=0.0,ha=0,ia=0.0,ja=0.0,ka=0,la=0.0,ma=0,na=0.0,oa=0,pa=0.0,qa=0,ra=0,sa=0.0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0.0,za=0,Aa=0,Ba=0,Ca=0.0,Da=0,Ea=0.0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0.0,Qa=0,Ra=0,Sa=0,Ta=0;f=c[d>>2]|0;g=d+4|0;i=c[g>>2]|0;j=f;k=(a[j>>0]|0)==45;l=k?j+1|0:f;f=l;j=a[f>>0]|0;a:do if(j<<24>>24!=48){if((j+-49&255)>=9){c[b+24>>2]=3;c[b+28>>2]=l-i;m=l;c[d>>2]=m;c[g>>2]=i;return}n=f+1|0;o=n;p=(j<<24>>24)+-48|0;q=a[n>>0]|0;r=(q+-48&255)<10;b:do if(k){if(r){s=q;t=n;u=o;v=p;w=0}else{x=o;y=0;z=0;A=0.0;B=p;C=0;D=0;F=0;break a}while(1){if(v>>>0>214748363?(v|0)!=214748364|s<<24>>24>56:0){G=u;H=v;I=w;break b}t=t+1|0;J=t;K=(v*10|0)+-48+(s<<24>>24)|0;L=w+1|0;s=a[t>>0]|0;if((s+-48&255)>=10){x=J;y=0;z=0;A=0.0;B=K;C=L;D=0;F=0;break a}else{u=J;v=K;w=L}}}else{if(r){M=o;N=q;O=n;P=p;Q=0}else{x=o;y=0;z=0;A=0.0;B=p;C=0;D=0;F=0;break a}while(1){if(P>>>0>429496728?(P|0)!=429496729|N<<24>>24>53:0){G=M;H=P;I=Q;break b}O=O+1|0;L=O;K=(P*10|0)+-48+(N<<24>>24)|0;J=Q+1|0;N=a[O>>0]|0;if((N+-48&255)>=10){x=L;y=0;z=0;A=0.0;B=K;C=J;D=0;F=0;break a}else{M=L;P=K;Q=J}}}while(0);p=G;o=a[p>>0]|0;n=(o+-48&255)<10;c:do if(k){if(n){R=G;S=0;T=H;U=o;V=p;W=I}else{x=G;y=H;z=0;A=0.0;B=H;C=I;D=1;F=0;break a}while(1){if(S>>>0>214748364|(S|0)==214748364&T>>>0>3435973835?(T|0)!=-858993460|(S|0)!=214748364|U<<24>>24>56:0){X=T;Y=S;Z=R;_=W;break c}q=IH(T|0,S|0,10,0)|0;V=V+1|0;r=V;J=CH((U<<24>>24)+-48|0,0,q|0,E|0)|0;q=E;K=W+1|0;U=a[V>>0]|0;if((U+-48&255)>=10){x=r;y=J;z=q;A=0.0;B=H;C=K;D=1;F=0;break a}else{R=r;S=q;T=J;W=K}}}else{if(n){$=G;aa=0;ba=H;ca=o;da=p;ea=I}else{x=G;y=H;z=0;A=0.0;B=H;C=I;D=1;F=0;break a}while(1){if(aa>>>0>429496729|(aa|0)==429496729&ba>>>0>2576980376?(ba|0)!=-1717986919|(aa|0)!=429496729|ca<<24>>24>53:0){X=ba;Y=aa;Z=$;_=ea;break c}K=IH(ba|0,aa|0,10,0)|0;da=da+1|0;J=da;q=CH((ca<<24>>24)+-48|0,0,K|0,E|0)|0;K=E;r=ea+1|0;ca=a[da>>0]|0;if((ca+-48&255)>=10){x=J;y=q;z=K;A=0.0;B=H;C=r;D=1;F=0;break a}else{$=J;aa=K;ba=q;ea=r}}}while(0);fa=+(X>>>0)+4294967296.0*+(Y>>>0);p=Z;o=a[p>>0]|0;if((o+-48&255)<10){n=b+24|0;r=b+28|0;q=p;p=o;o=Z;ga=fa;while(1){if(ga>=1797693134862315758041281.0e283){ha=o;break}q=q+1|0;K=q;ia=ga*10.0+ +((p<<24>>24)+-48|0);p=a[q>>0]|0;if((p+-48&255)>=10){x=K;y=X;z=Y;A=ia;B=H;C=_;D=1;F=1;break a}else{o=K;ga=ia}}c[n>>2]=13;c[r>>2]=ha-i;m=ha;c[d>>2]=m;c[g>>2]=i;return}else{x=Z;y=X;z=Y;A=fa;B=H;C=_;D=1;F=1}}else{x=f+1|0;y=0;z=0;A=0.0;B=0;C=0;D=0;F=0}while(0);f=x;_=a[f>>0]|0;if(_<<24>>24==46){H=f+1|0;f=H;if(((a[H>>0]|0)+-48&255)>=10){c[b+24>>2]=14;c[b+28>>2]=f-i;m=f;c[d>>2]=m;c[g>>2]=i;return}if(F)ja=A;else ja=D?+(y>>>0)+4294967296.0*+(z>>>0):+(B>>>0);d:do if((C|0)<17){H=f;ga=ja;Y=0;X=C;while(1){Z=H;ia=ga;ha=Y;while(1){ea=Z;ba=a[ea>>0]|0;if((ba+-48&255)>=10){ka=Z;la=ia;ma=ha;break d}aa=ea+1|0;na=ia*10.0+ +((ba<<24>>24)+-48|0);ba=ha+-1|0;if(na>0.0){oa=aa;pa=na;qa=ba;break}else{Z=aa;ia=na;ha=ba}}X=X+1|0;if((X|0)>=17){ra=oa;sa=pa;ta=qa;ua=34;break}else{H=oa;ga=pa;Y=qa}}}else{ra=f;sa=ja;ta=0;ua=34}while(0);if((ua|0)==34){f=ra;if(((a[f>>0]|0)+-48&255)<10){qa=f;while(1){f=qa+1|0;if(((a[f>>0]|0)+-48&255)<10)qa=f;else{va=f;break}}ka=va;la=sa;ma=ta}else{ka=ra;la=sa;ma=ta}}wa=ka;xa=a[ka>>0]|0;ya=la;za=ma;Aa=1}else{wa=x;xa=_;ya=A;za=0;Aa=F}F=wa;if(!(xa<<24>>24==69|xa<<24>>24==101))if(!Aa)if(D)if(k){xa=vH(0,0,y|0,z|0)|0;wh(e,xa,E)|0;m=wa;c[d>>2]=m;c[g>>2]=i;return}else{xh(e,y,z)|0;m=wa;c[d>>2]=m;c[g>>2]=i;return}else if(k){yh(e,0-B|0)|0;m=wa;c[d>>2]=m;c[g>>2]=i;return}else{zh(e,B)|0;m=wa;c[d>>2]=m;c[g>>2]=i;return}else{Ba=wa;Ca=ya;Da=0}else{if(Aa)Ea=ya;else Ea=+((D?y:B)>>>0)+4294967296.0*+((D?z:0)>>>0);z=F+1|0;D=a[z>>0]|0;if(D<<24>>24==43){Fa=F+2|0;Ga=3;Ha=0}else if(D<<24>>24==45){Fa=F+2|0;Ga=3;Ha=1}else{Fa=z;Ga=2;Ha=0}z=Fa;D=a[Fa>>0]|0;if((D+-48&255)>=10){c[b+24>>2]=15;c[b+28>>2]=z-i;m=z;c[d>>2]=m;c[g>>2]=i;return}z=F+Ga|0;Ga=z;F=(D<<24>>24)+-48|0;do if(Ha){D=a[z>>0]|0;if((D+-48&255)<10){Fa=z;B=D;D=F;while(1){y=Fa+1|0;Aa=y;wa=(D*10|0)+-48+(B<<24>>24)|0;if((wa|0)>214748363?((a[y>>0]|0)+-48&255)<10:0){xa=y;while(1){y=xa+1|0;if(((a[y>>0]|0)+-48&255)<10)xa=y;else{Ia=y;break}}Ja=Ia}else Ja=Aa;Fa=Ja;B=a[Fa>>0]|0;if((B+-48&255)>=10){Ka=Ja;La=wa;break}else D=wa}}else{Ka=Ga;La=F}}else{D=308-za|0;B=a[z>>0]|0;if((B+-48&255)<10){Fa=b+24|0;xa=b+28|0;y=z;_=B;B=F;while(1){x=y+1|0;ma=(B*10|0)+-48+(_<<24>>24)|0;if((ma|0)>(D|0)){Ma=x;break}_=a[x>>0]|0;if((_+-48&255)>=10){Na=x;Oa=ma;ua=60;break}else{y=x;B=ma}}if((ua|0)==60){Ka=Na;La=Oa;break}B=Ma;c[Fa>>2]=13;c[xa>>2]=B-i;m=B;c[d>>2]=m;c[g>>2]=i;return}else{Ka=Ga;La=F}}while(0);Ba=Ka;Ca=Ea;Da=Ha?0-La|0:La}La=Da+za|0;do if((La|0)<-308)if((La+308|0)<-308)Pa=0.0;else Pa=Ca/1.e+308/+h[7816+(-308-La<<3)>>3];else if((La|0)>-1){Pa=Ca*+h[7816+(La<<3)>>3];break}else{Pa=Ca/+h[7816+(0-La<<3)>>3];break}while(0);Ca=k?-Pa:Pa;k=e+28|0;La=e+40|0;za=c[La>>2]|0;Da=e+44|0;Ha=c[Da>>2]|0;if((za+24|0)>>>0<Ha>>>0)Qa=za;else{Ka=e+36|0;F=c[Ka>>2]|0;if(!F){if(!(c[k>>2]|0)){Ga=Mw(1)|0;c[k>>2]=Ga;c[e+32>>2]=Ga}Ra=0;Sa=c[e+48>>2]|0}else{e=F;Ga=Ha-e|0;Ra=e;Sa=((Ga+1|0)>>>1)+Ga|0}Ga=za-Ra|0;Ra=Ga+24|0;za=Sa>>>0<Ra>>>0?Ra:Sa;if(!za){qy(F);Ta=0}else Ta=sy(F,za)|0;c[Ka>>2]=Ta;Ka=Ta+Ga|0;c[La>>2]=Ka;c[Da>>2]=Ta+za;Qa=Ka}c[La>>2]=Qa+24;c[Qa>>2]=0;c[Qa+4>>2]=0;c[Qa+8>>2]=0;c[Qa+12>>2]=0;c[Qa+16>>2]=16902;h[Qa>>3]=Ca;m=Ba;c[d>>2]=m;c[g>>2]=i;return}function wh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=a+28|0;f=a+40|0;g=c[f>>2]|0;h=a+44|0;i=c[h>>2]|0;if((g+24|0)>>>0<i>>>0)j=g;else{k=a+36|0;l=c[k>>2]|0;if(!l){if(!(c[e>>2]|0)){m=Mw(1)|0;c[e>>2]=m;c[a+32>>2]=m}n=0;o=c[a+48>>2]|0}else{a=l;m=i-a|0;n=a;o=((m+1|0)>>>1)+m|0}m=g-n|0;n=m+24|0;g=o>>>0<n>>>0?n:o;if(!g){qy(l);p=0}else p=sy(l,g)|0;c[k>>2]=p;k=p+m|0;c[f>>2]=k;c[h>>2]=p+g;j=k}c[f>>2]=j+24;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;f=j+16|0;c[f>>2]=4614;k=j;c[k>>2]=b;c[k+4>>2]=d;if((d|0)>-1|(d|0)==-1&b>>>0>4294967295){k=d>>>0>0|(d|0)==0&b>>>0>4294967295?12806:14854;c[f>>2]=k;if(d>>>0>0|(d|0)==0&b>>>0>2147483647)return 1;c[f>>2]=k|1024;return 1}else{if(!((d|0)>-1|(d|0)==-1&b>>>0>2147483647))return 1;c[f>>2]=5638;return 1}return 0}function xh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=a+28|0;f=a+40|0;g=c[f>>2]|0;h=a+44|0;i=c[h>>2]|0;if((g+24|0)>>>0<i>>>0)j=g;else{k=a+36|0;l=c[k>>2]|0;if(!l){if(!(c[e>>2]|0)){m=Mw(1)|0;c[e>>2]=m;c[a+32>>2]=m}n=0;o=c[a+48>>2]|0}else{a=l;m=i-a|0;n=a;o=((m+1|0)>>>1)+m|0}m=g-n|0;n=m+24|0;g=o>>>0<n>>>0?n:o;if(!g){qy(l);p=0}else p=sy(l,g)|0;c[k>>2]=p;k=p+m|0;c[f>>2]=k;c[h>>2]=p+g;j=k}c[f>>2]=j+24;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;c[j+12>>2]=0;f=j+16|0;c[f>>2]=8710;k=j;c[k>>2]=b;c[k+4>>2]=d;if((d|0)<0)return 1;c[f>>2]=12806;if(d>>>0>0|(d|0)==0&b>>>0>4294967295)return 1;c[f>>2]=d>>>0>0|(d|0)==0&b>>>0>2147483647?14854:15878;return 1}function yh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+28|0;e=a+40|0;f=c[e>>2]|0;g=a+44|0;h=c[g>>2]|0;if((f+24|0)>>>0<h>>>0)i=f;else{j=a+36|0;k=c[j>>2]|0;if(!k){if(!(c[d>>2]|0)){l=Mw(1)|0;c[d>>2]=l;c[a+32>>2]=l}m=0;n=c[a+48>>2]|0}else{a=k;l=h-a|0;m=a;n=((l+1|0)>>>1)+l|0}l=f-m|0;m=l+24|0;f=n>>>0<m>>>0?m:n;if(!f){qy(k);o=0}else o=sy(k,f)|0;c[j>>2]=o;j=o+l|0;c[e>>2]=j;c[g>>2]=o+f;i=j}c[e>>2]=i+24;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;e=i+16|0;c[e>>2]=5638;j=i;c[j>>2]=b;c[j+4>>2]=((b|0)<0)<<31>>31;if((b|0)<=-1)return 1;c[e>>2]=15878;return 1}function zh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=a+28|0;e=a+40|0;f=c[e>>2]|0;g=a+44|0;h=c[g>>2]|0;if((f+24|0)>>>0<h>>>0)i=f;else{j=a+36|0;k=c[j>>2]|0;if(!k){if(!(c[d>>2]|0)){l=Mw(1)|0;c[d>>2]=l;c[a+32>>2]=l}m=0;n=c[a+48>>2]|0}else{a=k;l=h-a|0;m=a;n=((l+1|0)>>>1)+l|0}l=f-m|0;m=l+24|0;f=n>>>0<m>>>0?m:n;if(!f){qy(k);o=0}else o=sy(k,f)|0;c[j>>2]=o;j=o+l|0;c[e>>2]=j;c[g>>2]=o+f;i=j}c[e>>2]=i+24;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;c[i+12>>2]=0;e=i+16|0;c[e>>2]=14854;j=i;c[j>>2]=b;c[j+4>>2]=0;if((b|0)<0)return 1;c[e>>2]=15878;return 1}function Ah(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=a+40|0;e=c[d>>2]|0;f=aa(b,-24)|0;g=e+f|0;c[d>>2]=g;d=e+(f+-24)|0;h=c[a+20>>2]|0;c[e+(f+-8)>>2]=4;if(!b){c[d>>2]=0;i=f+-16|0;j=e+i|0;c[j>>2]=b;k=f+-20|0;l=e+k|0;c[l>>2]=b;return 1}a=b*24|0;if(!a)m=0;else{n=c[h>>2]|0;o=n;if((n|0)!=0?(p=c[n+4>>2]|0,(p+a|0)>>>0<=(c[n>>2]|0)>>>0):0){q=n;r=p}else{p=c[h+4>>2]|0;n=p>>>0>a>>>0?p:a;p=h+12|0;if(!(c[p>>2]|0)){s=Mw(1)|0;c[p>>2]=s;c[h+16>>2]=s}s=py(n+12|0)|0;c[s>>2]=n;c[s+4>>2]=0;c[s+8>>2]=o;c[h>>2]=s;q=s;r=0}c[q+4>>2]=r+a;m=q+12+r|0}c[d>>2]=m;zH(m|0,g|0,a|0)|0;i=f+-16|0;j=e+i|0;c[j>>2]=b;k=f+-20|0;l=e+k|0;c[l>>2]=b;return 1}function Bh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=(c[d>>2]|0)+1|0;c[d>>2]=f;g=d+4|0;h=b+24|0;i=b+28|0;j=e+4|0;k=f;a:while(1){f=a[k>>0]|0;do if(f<<24>>24==92){l=k+2|0;c[d>>2]=l;m=a[k+1>>0]|0;n=a[10288+(m&255)>>0]|0;if(!(n<<24>>24)){if(m<<24>>24!=117){o=l;p=27;break a}l=Eh(b,d)|0;if(c[h>>2]|0){p=43;break a}if((l&-1024|0)==55296){m=c[d>>2]|0;q=m+1|0;c[d>>2]=q;if((a[m>>0]|0)!=92){r=q;p=21;break a}s=m+2|0;c[d>>2]=s;if((a[q>>0]|0)!=117){r=s;p=21;break a}s=Eh(b,d)|0;if(c[h>>2]|0){p=43;break a}if((s&-1024|0)!=56320){p=24;break a}t=(s+-56320|(l<<10)+-56623104)+65536|0}else t=l;Fh(e,t);break}l=c[e>>2]|0;s=l+12|0;q=c[s>>2]|0;m=l+16|0;u=c[m>>2]|0;if((q+1|0)>>>0<u>>>0)v=q;else{w=l+8|0;x=c[w>>2]|0;if(!x){if(!(c[l>>2]|0)){y=Mw(1)|0;c[l>>2]=y;c[l+4>>2]=y}z=0;A=c[l+20>>2]|0}else{l=x;y=u-l|0;z=l;A=((y+1|0)>>>1)+y|0}y=q-z|0;q=y+1|0;l=A>>>0<q>>>0?q:A;if(!l){qy(x);B=0}else B=sy(x,l)|0;c[w>>2]=B;w=B+y|0;c[s>>2]=w;c[m>>2]=B+l;v=w}c[s>>2]=v+1;a[v>>0]=n;c[j>>2]=(c[j>>2]|0)+1}else if(!(f<<24>>24)){C=k;p=39;break a}else if(f<<24>>24==34){D=k;p=28;break a}else{if((f&255)<32){E=k;p=41;break a}Gh(d,e)|0}while(0);k=c[d>>2]|0}if((p|0)==21){k=r+-2-(c[g>>2]|0)|0;c[h>>2]=9;c[i>>2]=k;return}else if((p|0)==24){k=(c[d>>2]|0)+-2-(c[g>>2]|0)|0;c[h>>2]=9;c[i>>2]=k;return}else if((p|0)==27){k=o+-1-(c[g>>2]|0)|0;c[h>>2]=10;c[i>>2]=k;return}else if((p|0)==28){c[d>>2]=D+1;D=c[e>>2]|0;e=D+12|0;d=c[e>>2]|0;k=D+16|0;o=c[k>>2]|0;if((d+1|0)>>>0<o>>>0)F=d;else{r=D+8|0;v=c[r>>2]|0;if(!v){if(!(c[D>>2]|0)){B=Mw(1)|0;c[D>>2]=B;c[D+4>>2]=B}G=0;H=c[D+20>>2]|0}else{D=v;B=o-D|0;G=D;H=((B+1|0)>>>1)+B|0}B=d-G|0;G=B+1|0;d=H>>>0<G>>>0?G:H;if(!d){qy(v);I=0}else I=sy(v,d)|0;c[r>>2]=I;r=I+B|0;c[e>>2]=r;c[k>>2]=I+d;F=r}c[e>>2]=F+1;a[F>>0]=0;c[j>>2]=(c[j>>2]|0)+1;return}else if((p|0)==39){j=C+-1-(c[g>>2]|0)|0;c[h>>2]=11;c[i>>2]=j;return}else if((p|0)==41){j=E+-1-(c[g>>2]|0)|0;c[h>>2]=10;c[i>>2]=j;return}else if((p|0)==43)return}function Ch(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=b+28|0;h=b+40|0;i=c[h>>2]|0;j=b+44|0;k=c[j>>2]|0;if((i+24|0)>>>0<k>>>0)l=i;else{m=b+36|0;n=c[m>>2]|0;if(!n){if(!(c[g>>2]|0)){o=Mw(1)|0;c[g>>2]=o;c[b+32>>2]=o}p=0;q=c[b+48>>2]|0}else{o=n;g=k-o|0;p=o;q=((g+1|0)>>>1)+g|0}g=i-p|0;p=g+24|0;i=q>>>0<p>>>0?p:q;if(!i){qy(n);r=0}else r=sy(n,i)|0;c[m>>2]=r;m=r+g|0;c[h>>2]=m;c[j>>2]=r+i;l=m}c[h>>2]=l+24;if(!f){c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=1048581;c[l>>2]=d;c[l+4>>2]=e;return 1}f=c[b+20>>2]|0;b=l+16|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;c[l+12>>2]=0;c[l+16>>2]=0;if(e>>>0<12){c[b>>2]=7340037;a[l+11>>0]=11-e;s=l}else{c[b>>2]=3145733;c[l+4>>2]=e;if((e|0)==-1)t=0;else{b=e+4&-4;h=c[f>>2]|0;m=h;if((h|0)!=0?(i=c[h+4>>2]|0,(i+b|0)>>>0<=(c[h>>2]|0)>>>0):0){u=h;v=i}else{i=c[f+4>>2]|0;h=i>>>0>b>>>0?i:b;i=f+12|0;if(!(c[i>>2]|0)){r=Mw(1)|0;c[i>>2]=r;c[f+16>>2]=r}r=py(h+12|0)|0;c[r>>2]=h;c[r+4>>2]=0;c[r+8>>2]=m;c[f>>2]=r;u=r;v=0}c[u+4>>2]=v+b;t=u+12+v|0}c[l>>2]=t;s=t}zH(s|0,d|0,e|0)|0;a[s+e>>0]=0;return 1}function Dh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=a+40|0;e=c[d>>2]|0;f=aa(b,-48)|0;g=e+f|0;c[d>>2]=g;d=e+(f+-24)|0;h=c[a+20>>2]|0;c[e+(f+-8)>>2]=3;if(!b){c[d>>2]=0;i=f+-16|0;j=e+i|0;c[j>>2]=b;k=f+-20|0;l=e+k|0;c[l>>2]=b;return 1}a=b*48|0;if(!a)m=0;else{n=c[h>>2]|0;o=n;if((n|0)!=0?(p=c[n+4>>2]|0,(p+a|0)>>>0<=(c[n>>2]|0)>>>0):0){q=n;r=p}else{p=c[h+4>>2]|0;n=p>>>0>a>>>0?p:a;p=h+12|0;if(!(c[p>>2]|0)){s=Mw(1)|0;c[p>>2]=s;c[h+16>>2]=s}s=py(n+12|0)|0;c[s>>2]=n;c[s+4>>2]=0;c[s+8>>2]=o;c[h>>2]=s;q=s;r=0}c[q+4>>2]=r+a;m=q+12+r|0}c[d>>2]=m;zH(m|0,g|0,a|0)|0;i=f+-16|0;j=e+i|0;c[j>>2]=b;k=f+-20|0;l=e+k|0;c[l>>2]=b;return 1}function Eh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=d+4|0;f=b+24|0;g=b+28|0;b=c[d>>2]|0;h=b+1|0;c[d>>2]=h;i=a[b>>0]|0;j=i<<24>>24;do if((i+-48&255)<10)k=j+-48|0;else{if((i+-65&255)<6){k=j+-55|0;break}if((i+-97&255)<6){k=j+-87|0;break}l=h+-1-(c[e>>2]|0)|0;c[f>>2]=8;c[g>>2]=l;m=0;return m|0}while(0);j=b+2|0;c[d>>2]=j;i=a[h>>0]|0;h=(i<<24>>24)+(k<<4)|0;do if((i+-48&255)<10)n=h+-48|0;else{if((i+-65&255)<6){n=h+-55|0;break}if((i+-97&255)<6){n=h+-87|0;break}k=j+-1-(c[e>>2]|0)|0;c[f>>2]=8;c[g>>2]=k;m=0;return m|0}while(0);h=b+3|0;c[d>>2]=h;i=a[j>>0]|0;j=(i<<24>>24)+(n<<4)|0;do if((i+-48&255)<10)o=j+-48|0;else{if((i+-65&255)<6){o=j+-55|0;break}if((i+-97&255)<6){o=j+-87|0;break}n=h+-1-(c[e>>2]|0)|0;c[f>>2]=8;c[g>>2]=n;m=0;return m|0}while(0);j=b+4|0;c[d>>2]=j;d=a[h>>0]|0;h=(d<<24>>24)+(o<<4)|0;if((d+-48&255)<10){m=h+-48|0;return m|0}if((d+-65&255)<6){m=h+-55|0;return m|0}if((d+-97&255)<6){m=h+-87|0;return m|0}else{h=j+-1-(c[e>>2]|0)|0;c[f>>2]=8;c[g>>2]=h;m=0;return m|0}return 0}function Fh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;if(d>>>0<128){e=d&255;f=c[b>>2]|0;g=f+12|0;h=c[g>>2]|0;i=f+16|0;j=c[i>>2]|0;if((h+1|0)>>>0<j>>>0)k=h;else{l=f+8|0;m=c[l>>2]|0;if(!m){if(!(c[f>>2]|0)){n=Mw(1)|0;c[f>>2]=n;c[f+4>>2]=n}o=0;p=c[f+20>>2]|0}else{f=m;n=j-f|0;o=f;p=((n+1|0)>>>1)+n|0}n=h-o|0;o=n+1|0;h=p>>>0<o>>>0?o:p;if(!h){qy(m);q=0}else q=sy(m,h)|0;c[l>>2]=q;l=q+n|0;c[g>>2]=l;c[i>>2]=q+h;k=l}c[g>>2]=k+1;a[k>>0]=e;e=b+4|0;c[e>>2]=(c[e>>2]|0)+1;return}if(d>>>0<2048){e=(d>>>6|192)&255;k=c[b>>2]|0;g=k+12|0;l=c[g>>2]|0;h=k+16|0;q=c[h>>2]|0;if((l+1|0)>>>0<q>>>0)r=l;else{i=k+8|0;n=c[i>>2]|0;if(!n){if(!(c[k>>2]|0)){m=Mw(1)|0;c[k>>2]=m;c[k+4>>2]=m}s=0;t=c[k+20>>2]|0}else{k=n;m=q-k|0;s=k;t=((m+1|0)>>>1)+m|0}m=l-s|0;s=m+1|0;l=t>>>0<s>>>0?s:t;if(!l){qy(n);u=0}else u=sy(n,l)|0;c[i>>2]=u;i=u+m|0;c[g>>2]=i;c[h>>2]=u+l;r=i}c[g>>2]=r+1;a[r>>0]=e;e=b+4|0;c[e>>2]=(c[e>>2]|0)+1;r=(d&63|128)&255;g=c[b>>2]|0;i=g+12|0;l=c[i>>2]|0;u=g+16|0;h=c[u>>2]|0;if((l+1|0)>>>0<h>>>0)v=l;else{m=g+8|0;n=c[m>>2]|0;if(!n){if(!(c[g>>2]|0)){t=Mw(1)|0;c[g>>2]=t;c[g+4>>2]=t}w=0;x=c[g+20>>2]|0}else{g=n;t=h-g|0;w=g;x=((t+1|0)>>>1)+t|0}t=l-w|0;w=t+1|0;l=x>>>0<w>>>0?w:x;if(!l){qy(n);y=0}else y=sy(n,l)|0;c[m>>2]=y;m=y+t|0;c[i>>2]=m;c[u>>2]=y+l;v=m}c[i>>2]=v+1;a[v>>0]=r;c[e>>2]=(c[e>>2]|0)+1;return}if(d>>>0<65536){e=(d>>>12|224)&255;r=c[b>>2]|0;v=r+12|0;i=c[v>>2]|0;m=r+16|0;l=c[m>>2]|0;if((i+1|0)>>>0<l>>>0)z=i;else{y=r+8|0;u=c[y>>2]|0;if(!u){if(!(c[r>>2]|0)){t=Mw(1)|0;c[r>>2]=t;c[r+4>>2]=t}A=0;B=c[r+20>>2]|0}else{r=u;t=l-r|0;A=r;B=((t+1|0)>>>1)+t|0}t=i-A|0;A=t+1|0;i=B>>>0<A>>>0?A:B;if(!i){qy(u);C=0}else C=sy(u,i)|0;c[y>>2]=C;y=C+t|0;c[v>>2]=y;c[m>>2]=C+i;z=y}c[v>>2]=z+1;a[z>>0]=e;e=b+4|0;c[e>>2]=(c[e>>2]|0)+1;z=(d>>>6&63|128)&255;v=c[b>>2]|0;y=v+12|0;i=c[y>>2]|0;C=v+16|0;m=c[C>>2]|0;if((i+1|0)>>>0<m>>>0)D=i;else{t=v+8|0;u=c[t>>2]|0;if(!u){if(!(c[v>>2]|0)){B=Mw(1)|0;c[v>>2]=B;c[v+4>>2]=B}E=0;F=c[v+20>>2]|0}else{v=u;B=m-v|0;E=v;F=((B+1|0)>>>1)+B|0}B=i-E|0;E=B+1|0;i=F>>>0<E>>>0?E:F;if(!i){qy(u);G=0}else G=sy(u,i)|0;c[t>>2]=G;t=G+B|0;c[y>>2]=t;c[C>>2]=G+i;D=t}c[y>>2]=D+1;a[D>>0]=z;c[e>>2]=(c[e>>2]|0)+1;z=(d&63|128)&255;D=c[b>>2]|0;y=D+12|0;t=c[y>>2]|0;i=D+16|0;G=c[i>>2]|0;if((t+1|0)>>>0<G>>>0)H=t;else{C=D+8|0;B=c[C>>2]|0;if(!B){if(!(c[D>>2]|0)){u=Mw(1)|0;c[D>>2]=u;c[D+4>>2]=u}I=0;J=c[D+20>>2]|0}else{D=B;u=G-D|0;I=D;J=((u+1|0)>>>1)+u|0}u=t-I|0;I=u+1|0;t=J>>>0<I>>>0?I:J;if(!t){qy(B);K=0}else K=sy(B,t)|0;c[C>>2]=K;C=K+u|0;c[y>>2]=C;c[i>>2]=K+t;H=C}c[y>>2]=H+1;a[H>>0]=z;c[e>>2]=(c[e>>2]|0)+1;return}e=(d>>>18|240)&255;z=c[b>>2]|0;H=z+12|0;y=c[H>>2]|0;C=z+16|0;t=c[C>>2]|0;if((y+1|0)>>>0<t>>>0)L=y;else{K=z+8|0;i=c[K>>2]|0;if(!i){if(!(c[z>>2]|0)){u=Mw(1)|0;c[z>>2]=u;c[z+4>>2]=u}M=0;N=c[z+20>>2]|0}else{z=i;u=t-z|0;M=z;N=((u+1|0)>>>1)+u|0}u=y-M|0;M=u+1|0;y=N>>>0<M>>>0?M:N;if(!y){qy(i);O=0}else O=sy(i,y)|0;c[K>>2]=O;K=O+u|0;c[H>>2]=K;c[C>>2]=O+y;L=K}c[H>>2]=L+1;a[L>>0]=e;e=b+4|0;c[e>>2]=(c[e>>2]|0)+1;L=(d>>>12&63|128)&255;H=c[b>>2]|0;K=H+12|0;y=c[K>>2]|0;O=H+16|0;C=c[O>>2]|0;if((y+1|0)>>>0<C>>>0)P=y;else{u=H+8|0;i=c[u>>2]|0;if(!i){if(!(c[H>>2]|0)){N=Mw(1)|0;c[H>>2]=N;c[H+4>>2]=N}Q=0;R=c[H+20>>2]|0}else{H=i;N=C-H|0;Q=H;R=((N+1|0)>>>1)+N|0}N=y-Q|0;Q=N+1|0;y=R>>>0<Q>>>0?Q:R;if(!y){qy(i);S=0}else S=sy(i,y)|0;c[u>>2]=S;u=S+N|0;c[K>>2]=u;c[O>>2]=S+y;P=u}c[K>>2]=P+1;a[P>>0]=L;c[e>>2]=(c[e>>2]|0)+1;L=(d>>>6&63|128)&255;P=c[b>>2]|0;K=P+12|0;u=c[K>>2]|0;y=P+16|0;S=c[y>>2]|0;if((u+1|0)>>>0<S>>>0)T=u;else{O=P+8|0;N=c[O>>2]|0;if(!N){if(!(c[P>>2]|0)){i=Mw(1)|0;c[P>>2]=i;c[P+4>>2]=i}U=0;V=c[P+20>>2]|0}else{P=N;i=S-P|0;U=P;V=((i+1|0)>>>1)+i|0}i=u-U|0;U=i+1|0;u=V>>>0<U>>>0?U:V;if(!u){qy(N);W=0}else W=sy(N,u)|0;c[O>>2]=W;O=W+i|0;c[K>>2]=O;c[y>>2]=W+u;T=O}c[K>>2]=T+1;a[T>>0]=L;c[e>>2]=(c[e>>2]|0)+1;L=(d&63|128)&255;d=c[b>>2]|0;b=d+12|0;T=c[b>>2]|0;K=d+16|0;O=c[K>>2]|0;if((T+1|0)>>>0<O>>>0)X=T;else{u=d+8|0;W=c[u>>2]|0;if(!W){if(!(c[d>>2]|0)){y=Mw(1)|0;c[d>>2]=y;c[d+4>>2]=y}Y=0;Z=c[d+20>>2]|0}else{d=W;y=O-d|0;Y=d;Z=((y+1|0)>>>1)+y|0}y=T-Y|0;Y=y+1|0;T=Z>>>0<Y>>>0?Y:Z;if(!T){qy(W);_=0}else _=sy(W,T)|0;c[u>>2]=_;u=_+y|0;c[b>>2]=u;c[K>>2]=_+T;X=u}c[b>>2]=X+1;a[X>>0]=L;c[e>>2]=(c[e>>2]|0)+1;return}function Gh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=c[b>>2]|0;c[b>>2]=e+1;b=a[e>>0]|0;e=c[d>>2]|0;f=e+12|0;g=c[f>>2]|0;h=e+16|0;i=c[h>>2]|0;if((g+1|0)>>>0<i>>>0){j=g;k=j+1|0;c[f>>2]=k;a[j>>0]=b;l=d+4|0;m=c[l>>2]|0;n=m+1|0;c[l>>2]=n;return 1}o=e+8|0;p=c[o>>2]|0;if(!p){if(!(c[e>>2]|0)){q=Mw(1)|0;c[e>>2]=q;c[e+4>>2]=q}r=0;s=c[e+20>>2]|0}else{e=p;q=i-e|0;r=e;s=((q+1|0)>>>1)+q|0}q=g-r|0;r=q+1|0;g=s>>>0<r>>>0?r:s;if(!g){qy(p);t=0}else t=sy(p,g)|0;c[o>>2]=t;o=t+q|0;c[f>>2]=o;c[h>>2]=t+g;j=o;k=j+1|0;c[f>>2]=k;a[j>>0]=b;l=d+4|0;m=c[l>>2]|0;n=m+1|0;c[l>>2]=n;return 1}function Hh(a){a=a|0;Ph(a);return}function Ih(a){a=a|0;Ph(a);Ow(a);return}function Jh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+80|0;g=f;h=f+8|0;j=f+52|0;k=f+16|0;l=f+40|0;m=f+56|0;n=f+68|0;o=f+32|0;p=f+28|0;q=f+12|0;r=f+4|0;s=f+36|0;t=bi(b)|0;c[a>>2]=0;u=a+4|0;c[u>>2]=0;c[a+8>>2]=0;ei(b);if(e?(Xh(k,b),e=c[a>>2]|0,c[a>>2]=c[k>>2],c[k>>2]=e,v=k+4|0,w=c[u>>2]|0,c[u>>2]=c[v>>2],c[v>>2]=w,x=a+8|0,y=k+8|0,k=c[x>>2]|0,c[x>>2]=c[y>>2],c[y>>2]=k,k=e,(e|0)!=0):0){if((w|0)!=(k|0))c[v>>2]=k;Ow(k)}wl(l,t,d);xl(m,t);c[n>>2]=c[u>>2];c[o>>2]=c[l>>2];t=l+4|0;c[p>>2]=c[t>>2];c[j>>2]=c[n>>2];c[h>>2]=c[o>>2];c[g>>2]=c[p>>2];Nh(a,j,h,g)|0;c[q>>2]=c[u>>2];c[r>>2]=c[m>>2];u=m+4|0;c[s>>2]=c[u>>2];c[j>>2]=c[q>>2];c[h>>2]=c[r>>2];c[g>>2]=c[s>>2];Nh(a,j,h,g)|0;fi(b);b=c[m>>2]|0;if(b){if((c[u>>2]|0)!=(b|0))c[u>>2]=b;Ow(b)}b=c[l>>2]|0;if(!b){i=f;return}if((c[t>>2]|0)!=(b|0))c[t>>2]=b;Ow(b);i=f;return}function Kh(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;h=i;i=i+16|0;j=h;ai(j,b,d);Lh(a,b,j,di(b,e,f,g)|0);g=c[j>>2]|0;if(!g){i=h;return}f=j+4|0;if((c[f>>2]|0)!=(g|0))c[f>>2]=g;Ow(g);i=h;return}function Lh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+64|0;g=f+52|0;h=f+16|0;j=f;k=f+28|0;l=f+40|0;m=f+56|0;n=f+12|0;o=f+24|0;p=f+20|0;q=f+8|0;r=f+4|0;wl(k,e,d);xl(l,e);c[a>>2]=0;e=a+4|0;c[e>>2]=0;c[a+8>>2]=0;c[m>>2]=0;c[n>>2]=c[k>>2];d=k+4|0;c[o>>2]=c[d>>2];c[j>>2]=c[m>>2];c[h>>2]=c[n>>2];c[g>>2]=c[o>>2];Nh(a,j,h,g)|0;c[p>>2]=c[e>>2];c[q>>2]=c[l>>2];e=l+4|0;c[r>>2]=c[e>>2];c[j>>2]=c[p>>2];c[h>>2]=c[q>>2];c[g>>2]=c[r>>2];Nh(a,j,h,g)|0;fi(b);b=c[l>>2]|0;if(b){if((c[e>>2]|0)!=(b|0))c[e>>2]=b;Ow(b)}b=c[k>>2]|0;if(!b){i=f;return}if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);i=f;return}function Mh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;ai(g,b,d);Lh(a,b,g,ci(b,e)|0);e=c[g>>2]|0;if(!e){i=f;return}b=g+4|0;if((c[b>>2]|0)!=(e|0))c[b>>2]=e;Ow(e);i=f;return}function Nh(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=c[b>>2]|0;h=c[d>>2]|0;d=h;i=g;j=d-i|0;k=c[e>>2]|0;l=c[f>>2]|0;f=l-k|0;if((f|0)<=0){m=h;return m|0}n=b+8|0;o=c[n>>2]|0;p=b+4|0;q=c[p>>2]|0;r=q;if((f|0)<=(o-r|0)){s=r-d|0;if((f|0)>(s|0)){t=k+s|0;u=t;v=l;if((t|0)==(v|0))w=q;else{x=t;t=q;while(1){a[t>>0]=a[x>>0]|0;y=(c[p>>2]|0)+1|0;c[p>>2]=y;x=x+1|0;if((x|0)==(v|0)){w=y;break}else t=y}}if((s|0)>0){z=w;A=u}else{m=h;return m|0}}else{z=q;A=l}u=z-(g+(j+f))|0;j=h+u|0;if(j>>>0<q>>>0){w=z;s=j;do{a[w>>0]=a[s>>0]|0;s=s+1|0;w=(c[p>>2]|0)+1|0;c[p>>2]=w}while((s|0)!=(q|0))}AH(z+(0-u)|0,h|0,u|0)|0;u=c[e>>2]|0;AH(h|0,u|0,A-u|0)|0;m=h;return m|0}u=r-i+f|0;if((u|0)<0)Kw(b);f=g;i=o-f|0;if(i>>>0<1073741823){o=i<<1;i=o>>>0<u>>>0?u:o;o=d-f|0;if(!i){B=0;C=0;D=o}else{E=i;F=o;G=15}}else{E=2147483647;F=d-f|0;G=15}if((G|0)==15){B=E;C=Mw(E)|0;D=F}F=C+D|0;E=F;G=C+B|0;B=k;k=l;if((B|0)==(k|0)){H=g;I=E}else{g=B;B=F;l=E;while(1){a[B>>0]=a[g>>0]|0;B=l+1|0;E=B;g=g+1|0;if((g|0)==(k|0)){J=E;break}else l=E}H=c[b>>2]|0;I=J}J=d-H|0;l=C+(D-J)|0;zH(l|0,H|0,J|0)|0;J=(c[p>>2]|0)-d|0;d=I;zH(d|0,h|0,J|0)|0;h=c[b>>2]|0;c[b>>2]=l;c[p>>2]=d+J;c[n>>2]=G;if(!h){m=F;return m|0}Ow(h);m=F;return m|0}function Oh(a){a=a|0;var b=0;c[a>>2]=10616;b=Mw(172)|0;gi(b);c[a+4>>2]=b;return}function Ph(a){a=a|0;var b=0,d=0;c[a>>2]=10616;b=c[a+4>>2]|0;if(!b)return;hi(b+160|0,c[b+164>>2]|0);ii(b+148|0,c[b+152>>2]|0);Mi(b+92|0);Di(b+28|0);a=c[b+16>>2]|0;if(a){d=b+20|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}gl(b+8|0);_k(b);Ow(b);return}function Qh(a){a=a|0;Ph(a);Ow(a);return}function Rh(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;if((c[b>>2]|0)!=(c[b+4>>2]|0)?(g=d+4|0,(c[d>>2]|0)!=(c[g>>2]|0)):0){h=ji((c[a+4>>2]|0)+148|0,b)|0;if((h|0)==(d|0)){i=e;return}ki(h,c[d>>2]|0,c[g>>2]|0);i=e;return}e=Yb(8)|0;Fy(f,10672,76);$i(e,f);dd(e|0,296,39)}function Sh(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+16|0;f=e+4|0;g=e;h=c[b+4>>2]|0;b=h+148|0;j=h+152|0;h=c[j>>2]|0;if(!h){i=e;return}k=c[d>>2]|0;l=c[d+4>>2]|0;a:do if((k|0)==(l|0)){d=h;while(1){m=c[d>>2]|0;if(!m){n=d;break}else d=m}}else{d=j;m=h;while(1){o=m;b:while(1){p=c[o+20>>2]|0;q=c[o+16>>2]|0;r=k;while(1){if((q|0)==(p|0))break;s=a[q>>0]|0;t=a[r>>0]|0;if((s&255)<(t&255))break;if((t&255)<(s&255)){u=o;break b}r=r+1|0;if((r|0)==(l|0)){u=o;break b}else q=q+1|0}o=c[o+4>>2]|0;if(!o){n=d;break a}}m=c[u>>2]|0;if(!m){n=u;break}else d=u}}while(0);if((n|0)==(j|0)){i=e;return}j=c[n+16>>2]|0;u=c[n+20>>2]|0;c:do if((j|0)!=(u|0)){h=k;d=j;while(1){if((h|0)==(l|0)){v=19;break}m=a[h>>0]|0;o=a[d>>0]|0;if((m&255)<(o&255)){v=19;break}if((o&255)<(m&255))break c;d=d+1|0;if((d|0)==(u|0))break c;else h=h+1|0}if((v|0)==19){i=e;return}}while(0);c[g>>2]=n;c[f>>2]=c[g>>2];li(b,f)|0;i=e;return}function Th(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=c[b+4>>2]|0;b=e+152|0;f=c[b>>2]|0;a:do if(f){g=c[d>>2]|0;h=c[d+4>>2]|0;b:do if((g|0)==(h|0)){i=f;while(1){j=c[i>>2]|0;if(!j){k=i;break}else i=j}}else{i=b;j=f;while(1){l=j;c:while(1){m=c[l+20>>2]|0;n=c[l+16>>2]|0;o=g;while(1){if((n|0)==(m|0))break;p=a[n>>0]|0;q=a[o>>0]|0;if((p&255)<(q&255))break;if((q&255)<(p&255)){r=l;break c}o=o+1|0;if((o|0)==(h|0)){r=l;break c}else n=n+1|0}l=c[l+4>>2]|0;if(!l){k=i;break b}}j=c[r>>2]|0;if(!j){k=r;break}else i=r}}while(0);if((k|0)!=(b|0)){i=c[k+16>>2]|0;j=c[k+20>>2]|0;d:do if((i|0)!=(j|0)){l=g;n=i;while(1){if((l|0)==(h|0))break a;o=a[l>>0]|0;m=a[n>>0]|0;if((o&255)<(m&255))break a;if((m&255)<(o&255))break d;n=n+1|0;if((n|0)==(j|0))break;else l=l+1|0}}while(0);if((k|0)!=(b|0)){s=1;return s|0}}}while(0);b=c[e+96>>2]|0;k=c[e+100>>2]|0;if((b|0)==(k|0)){s=0;return s|0}e=c[d>>2]|0;r=(c[d+4>>2]|0)-e|0;d=b;e:while(1){b=c[d+8>>2]|0;f=c[d+4>>2]|0;f:do if((b-f|0)==(r|0)){if((f|0)==(b|0)){s=1;t=26;break e}else{u=f;v=e}while(1){if((a[u>>0]|0)!=(a[v>>0]|0))break f;u=u+1|0;if((u|0)==(b|0)){s=1;t=26;break e}else v=v+1|0}}while(0);d=d+40|0;if((d|0)==(k|0)){s=0;t=26;break}}if((t|0)==26)return s|0;return 0}function Uh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+32|0;e=d;if((c[b>>2]|0)==(c[b+4>>2]|0)){f=Yb(8)|0;Fy(e,10752,51);$i(f,e);dd(f|0,296,39)}else{mi(d+16|0,(c[a+4>>2]|0)+160|0,b);i=d;return}}function Vh(a,b){a=a|0;b=b|0;ni((c[a+4>>2]|0)+160|0,b)|0;return}function Wh(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;a=c[b>>2]|0;d=a+148|0;e=a+152|0;ii(d,c[e>>2]|0);c[a+156>>2]=0;c[d>>2]=e;c[e>>2]=0;e=c[b>>2]|0;b=e+160|0;d=e+164|0;hi(b,c[d>>2]|0);c[e+168>>2]=0;c[b>>2]=d;c[d>>2]=0;return}function Xh(a,b){a=a|0;b=b|0;im(a,(c[b+4>>2]|0)+28|0);return}function Yh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;f=a+4|0;jm((c[f>>2]|0)+28|0,b);b=c[f>>2]|0;if((c[b+36>>2]|0)==2){jm(b+92|0,b+40|0);i=d;return}else{d=Yb(8)|0;Fy(e,10808,58);$i(d,e);dd(d|0,296,39)}}function Zh(a){a=a|0;return Fi(a)|0}function _h(a){a=a|0;return (c[a+4>>2]|0)+52|0}function $h(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e+8|0;g=e;Xm(f);en(f,b);Xm(g);dn(g,c,d);hn(a,f,g);Zm(g);Zm(f);i=e;return}function ai(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=i;i=i+16|0;g=f;h=Fi(e)|0;if(!h){c[b>>2]=0;j=b+4|0;c[j>>2]=0;c[b+8>>2]=0;k=e+4|0;l=c[k>>2]|0;m=c[e>>2]|0;n=l-m|0;if((l|0)==(m|0)){i=f;return}if((n|0)<0)Kw(b);m=Mw(n)|0;c[j>>2]=m;c[b>>2]=m;c[b+8>>2]=m+n;n=c[e>>2]|0;l=c[k>>2]|0;if((n|0)==(l|0)){i=f;return}else{o=n;p=m}do{a[p>>0]=a[o>>0]|0;p=(c[j>>2]|0)+1|0;c[j>>2]=p;o=o+1|0}while((o|0)!=(l|0));i=f;return}l=c[e>>2]|0;o=l+h|0;c[g>>2]=0;p=g+4|0;c[p>>2]=0;c[g+8>>2]=0;if((h|0)<0)Kw(g);j=Mw(h)|0;c[p>>2]=j;c[g>>2]=j;c[g+8>>2]=j+h;m=l;l=j;do{a[l>>0]=a[m>>0]|0;l=(c[p>>2]|0)+1|0;c[p>>2]=l;m=m+1|0}while((m|0)!=(o|0));o=(c[e>>2]|0)+h|0;h=c[e+4>>2]|0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;m=h-o|0;if((h|0)!=(o|0)){if((m|0)<0)Kw(b);l=Mw(m)|0;c[e>>2]=l;c[b>>2]=l;c[b+8>>2]=l+m;m=o;o=l;do{a[o>>0]=a[m>>0]|0;o=(c[e>>2]|0)+1|0;c[e>>2]=o;m=m+1|0}while((m|0)!=(h|0))}Yh(d,g);d=c[g>>2]|0;if(!d){i=f;return}if((c[p>>2]|0)!=(d|0))c[p>>2]=d;Ow(d);i=f;return}function bi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+32|0;d=b+24|0;e=b+12|0;f=b;g=a+4|0;a=(c[g>>2]|0)+8|0;il(d);fl(a,d)|0;gl(d);d=c[g>>2]|0;a=d+16|0;Xk(e,d,ll(d+8|0)|0);if((a|0)!=(e|0))ki(a,c[e>>2]|0,c[e+4>>2]|0);a=c[e>>2]|0;if(a){d=e+4|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}a=c[g>>2]|0;Xk(f,a,kl(a+8|0)|0);a=c[g>>2]|0;ol(a+8|0,a+16|0);rl((c[g>>2]|0)+8|0,f);if(nl((c[g>>2]|0)+8|0)|0)ql((c[g>>2]|0)+8|0,0);tl((c[g>>2]|0)+8|0);a=(c[g>>2]|0)+8|0;g=c[f>>2]|0;if(!g){i=b;return a|0}d=f+4|0;if((c[d>>2]|0)!=(g|0))c[d>>2]=g;Ow(g);i=b;return a|0}function ci(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+48|0;e=d+32|0;f=d+20|0;g=d+8|0;h=d;j=a+4|0;a=c[j>>2]|0;sk(e);k=c[a+108>>2]|0;if((k|0)==(c[a+112>>2]|0)){a=Yb(8)|0;Fy(f,10872,58);$i(a,f);dd(a|0,296,39)}jm(e,k+16|0);xk(g,e,k+28|0,b);tk(e);e=c[j>>2]|0;el(h);fl(e+8|0,h)|0;gl(h);h=c[j>>2]|0;jm(h+8|0,h+124|0);pl((c[j>>2]|0)+8|0,g);if(nl((c[j>>2]|0)+8|0)|0)ql((c[j>>2]|0)+8|0,0);tl((c[j>>2]|0)+8|0);h=(c[j>>2]|0)+8|0;j=c[g>>2]|0;if(!j){i=d;return h|0}e=g+4|0;if((c[e>>2]|0)!=(j|0))c[e>>2]=j;Ow(j);i=d;return h|0}function di(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;g=i;i=i+96|0;h=g+16|0;j=g+48|0;k=g+24|0;l=g+60|0;m=g+80|0;n=g;o=g+36|0;p=g+72|0;q=b+4|0;b=c[q>>2]|0;r=c[b+96>>2]|0;s=c[b+100>>2]|0;a:do if((r|0)!=(s|0)){b=c[d>>2]|0;t=(c[d+4>>2]|0)-b|0;u=r;b:while(1){v=c[u+8>>2]|0;w=c[u+4>>2]|0;c:do if((v-w|0)==(t|0)){if((w|0)==(v|0)){x=u;break b}else{y=w;z=b}while(1){if((a[y>>0]|0)!=(a[z>>0]|0))break c;y=y+1|0;if((y|0)==(v|0)){x=u;break b}else z=z+1|0}}while(0);u=u+40|0;if((u|0)==(s|0))break a}Xm(h);dn(h,e,f);on(o,h,x+28|0);Zm(h);u=c[q>>2]|0;el(p);fl(u+8|0,p)|0;gl(p);u=c[q>>2]|0;jm(u+8|0,u+124|0);pl((c[q>>2]|0)+8|0,o);if(nl((c[q>>2]|0)+8|0)|0)ql((c[q>>2]|0)+8|0,0);tl((c[q>>2]|0)+8|0);u=(c[q>>2]|0)+8|0;b=c[o>>2]|0;if(!b){i=g;return u|0}t=o+4|0;if((c[t>>2]|0)!=(b|0))c[t>>2]=b;Ow(b);i=g;return u|0}while(0);g=Yb(8)|0;Fy(m,10936,18);c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;o=a[m>>0]|0;q=(o&1)==0;p=q?(o&255)>>>1:c[m+4>>2]|0;Sy(l,q?m+1|0:c[m+8>>2]|0,p,p+25|0);Py(l,10960,25)|0;p=c[d>>2]|0;Fy(n,p,(c[d+4>>2]|0)-p|0);oi(k,l,n);c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;n=a[k>>0]|0;l=(n&1)==0;p=l?(n&255)>>>1:c[k+4>>2]|0;Sy(j,l?k+1|0:c[k+8>>2]|0,p,p+15|0);Py(j,10992,15)|0;$i(g,j);dd(g|0,296,39);return 0}function ei(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;b=i;i=i+144|0;d=b;e=b+48|0;f=b+112|0;g=b+8|0;h=b+124|0;j=b+136|0;k=b+32|0;l=b+100|0;m=b+88|0;n=b+20|0;o=a+4|0;a=c[o>>2]|0;p=c[a+96>>2]|0;q=a+100|0;r=c[q>>2]|0;if((r|0)==(p|0))s=a;else{a=r;do{r=a+-40|0;c[q>>2]=r;td[c[c[r>>2]>>2]&255](r);a=c[q>>2]|0}while((a|0)!=(p|0));s=c[o>>2]|0}p=c[s+108>>2]|0;a=s+112|0;q=c[a>>2]|0;if((q|0)==(p|0))t=s;else{s=q;do{q=s+-40|0;c[a>>2]=q;td[c[c[q>>2]>>2]&255](q);s=c[a>>2]|0}while((s|0)!=(p|0));t=c[o>>2]|0}p=c[t+148>>2]|0;if((p|0)==(t+152|0))u=t;else{t=e+4|0;s=e+4|0;a=e+28|0;q=f+4|0;r=e+16|0;v=g+4|0;w=p;x=p;while(1){p=w+16|0;Xm(d);en(d,w+28|0);c[e>>2]=11920;y=t;z=y+36|0;do{c[y>>2]=0;y=y+4|0}while((y|0)<(z|0));if((s|0)!=(p|0))ki(s,c[p>>2]|0,c[w+20>>2]|0);nn(f,d,(c[o>>2]|0)+16|0);ki(a,c[f>>2]|0,c[q>>2]|0);A=c[f>>2]|0;if(A){if((c[q>>2]|0)!=(A|0))c[q>>2]=A;Ow(A)}im(g,d);ki(r,c[g>>2]|0,c[v>>2]|0);A=c[g>>2]|0;if(A){if((c[v>>2]|0)!=(A|0))c[v>>2]=A;Ow(A)}A=c[o>>2]|0;B=A+100|0;C=c[B>>2]|0;if((C|0)==(c[A+104>>2]|0))qi(A+96|0,e);else{pi(C,e);c[B>>2]=(c[B>>2]|0)+40}Ti(e);Zm(d);B=x;C=c[B+4>>2]|0;if(!C){A=B;while(1){B=c[A+8>>2]|0;if((c[B>>2]|0)==(A|0)){D=B;break}else A=B}}else{A=C;while(1){p=c[A>>2]|0;if(!p){D=A;break}else A=p}}A=c[o>>2]|0;if((D|0)==(A+152|0)){u=A;break}else{w=D;x=D}}}D=c[u+160>>2]|0;if((D|0)==(u+164|0))E=u;else{x=e+4|0;w=e+16|0;d=k+4|0;v=e+28|0;g=l+4|0;r=h+4|0;q=D;D=u;while(1){u=q+16|0;Xk(h,D,16);rk(j,h,Zk(c[o>>2]|0,3072,8192)|0);c[e>>2]=12288;y=x;z=y+36|0;do{c[y>>2]=0;y=y+4|0}while((y|0)<(z|0));im(k,j);ki(w,c[k>>2]|0,c[d>>2]|0);f=c[k>>2]|0;if(f){if((c[d>>2]|0)!=(f|0))c[d>>2]=f;Ow(f)}vk(l,j,(c[o>>2]|0)+16|0,u);ki(v,c[l>>2]|0,c[g>>2]|0);f=c[l>>2]|0;if(f){if((c[g>>2]|0)!=(f|0))c[g>>2]=f;Ow(f)}f=c[o>>2]|0;a=f+112|0;s=c[a>>2]|0;if((s|0)==(c[f+116>>2]|0))si(f+108|0,e);else{ri(s,e);c[a>>2]=(c[a>>2]|0)+40}Xi(e);tk(j);a=c[h>>2]|0;if(a){if((c[r>>2]|0)!=(a|0))c[r>>2]=a;Ow(a)}a=c[q+4>>2]|0;if(!a){s=q;while(1){f=c[s+8>>2]|0;if((c[f>>2]|0)==(s|0)){F=f;break}else s=f}}else{s=a;while(1){u=c[s>>2]|0;if(!u){F=s;break}else s=u}}s=c[o>>2]|0;if((F|0)==(s+164|0)){E=s;break}else{q=F;D=s}}}D=E+124|0;im(m,E+8|0);if((D|0)!=(m|0))ki(D,c[m>>2]|0,c[m+4>>2]|0);D=c[m>>2]|0;if(D){E=m+4|0;if((c[E>>2]|0)!=(D|0))c[E>>2]=D;Ow(D)}D=c[o>>2]|0;o=c[D+136>>2]|0;E=D+140|0;if((c[E>>2]|0)!=(o|0))c[E>>2]=o;c[D+36>>2]=2;o=D+40|0;im(n,D+92|0);if((o|0)!=(n|0))ki(o,c[n>>2]|0,c[n+4>>2]|0);o=c[n>>2]|0;if(!o){i=b;return}D=n+4|0;if((c[D>>2]|0)!=(o|0))c[D>>2]=o;Ow(o);i=b;return}function fi(b){b=b|0;var d=0,e=0;d=b+4|0;ul((c[d>>2]|0)+8|0);b=c[d>>2]|0;d=c[b+20>>2]|0;e=c[b+16>>2]|0;if((d|0)==(e|0))return;b=d-e|0;d=e;while(1){b=b+-1|0;a[d>>0]=0;if(!b)break;else d=d+1|0}return}function gi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d+12|0;f=d;Fy(f,11008,24);g=a[f>>0]|0;h=(g&1)==0;j=h?f+1|0:c[f+8>>2]|0;k=h?(g&255)>>>1:c[f+4>>2]|0;g=j+k|0;c[e>>2]=0;h=e+4|0;c[h>>2]=0;c[e+8>>2]=0;if(k){if((k|0)<0)Kw(e);l=Mw(k)|0;c[h>>2]=l;c[e>>2]=l;c[e+8>>2]=l+k;k=j;j=l;do{a[j>>0]=a[k>>0]|0;j=(c[h>>2]|0)+1|0;c[h>>2]=j;k=k+1|0}while((k|0)!=(g|0))}Wk(b,e);g=c[e>>2]|0;if(g){if((c[h>>2]|0)!=(g|0))c[h>>2]=g;Ow(g)}Hy(f);el(b+8|0);f=b+28|0;g=b+16|0;h=g+72|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));c[f>>2]=11392;c[b+32>>2]=11048;c[b+40>>2]=0;c[b+44>>2]=0;c[b+48>>2]=0;c[b+52>>2]=12544;c[b+60>>2]=0;c[b+64>>2]=0;c[b+56>>2]=b+60;c[b+72>>2]=0;c[b+76>>2]=0;c[b+68>>2]=b+72;c[b+84>>2]=0;c[b+88>>2]=0;c[b+80>>2]=b+84;f=b+92|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[f+24>>2]=0;c[f+28>>2]=0;c[f>>2]=11728;f=b+96|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[b+120>>2]=11568;f=b+124|0;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;c[f+12>>2]=0;c[f+16>>2]=0;c[f+20>>2]=0;c[b+152>>2]=0;c[b+156>>2]=0;c[b+148>>2]=b+152;c[b+164>>2]=0;c[b+168>>2]=0;c[b+160>>2]=b+164;i=d;return}function hi(a,b){a=a|0;b=b|0;var d=0;if(!b)return;hi(a,c[b>>2]|0);hi(a,c[b+4>>2]|0);a=c[b+16>>2]|0;if(a){d=b+20|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}Ow(b);return}function ii(a,b){a=a|0;b=b|0;var d=0;if(!b)return;ii(a,c[b>>2]|0);ii(a,c[b+4>>2]|0);a=c[b+28>>2]|0;if(a){d=b+32|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}a=c[b+16>>2]|0;if(a){d=b+20|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}Ow(b);return}function ji(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;e=i;i=i+16|0;f=e+12|0;g=e;h=b+4|0;j=c[h>>2]|0;a:do if(j){k=c[d>>2]|0;l=c[d+4>>2]|0;b:do if((k|0)==(l|0)){m=c[j+16>>2]|0;n=c[j+20>>2]|0;if((m|0)==(n|0)){o=j;p=25}else{q=n;n=m;m=j;while(1){r=k;s=n;while(1){if((r|0)==(k|0))break;t=a[r>>0]|0;u=a[s>>0]|0;if((t&255)<(u&255))break;if((u&255)<(t&255)){o=m;p=25;break b}s=s+1|0;if((s|0)==(q|0)){o=m;p=25;break b}else r=r+1|0}r=c[m>>2]|0;if(!r){v=m;w=m;p=17;break b}n=c[r+16>>2]|0;q=c[r+20>>2]|0;if((n|0)==(q|0)){o=r;p=25;break}else m=r}}}else{m=j;while(1){q=c[m+16>>2]|0;n=c[m+20>>2]|0;c:do if((q|0)!=(n|0)){r=k;s=q;while(1){if((r|0)==(l|0))break;t=a[r>>0]|0;u=a[s>>0]|0;if((t&255)<(u&255))break;if((u&255)<(t&255)){x=q;y=k;p=18;break c}s=s+1|0;if((s|0)==(n|0)){x=q;y=k;p=18;break c}else r=r+1|0}r=c[m>>2]|0;if(!r){v=m;w=m;p=17;break b}else z=r}else{x=q;y=k;p=18}while(0);if((p|0)==18){while(1){p=0;if((x|0)==(n|0))break;q=a[x>>0]|0;r=a[y>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255)){o=m;p=25;break b}y=y+1|0;if((y|0)==(l|0)){o=m;p=25;break b}else{x=x+1|0;p=18}}n=m+4|0;q=c[n>>2]|0;if(!q){A=n;B=m;break}else z=q}m=z}c[f>>2]=B;C=A;D=B;break a}while(0);if((p|0)==17){c[f>>2]=w;C=v;D=w;break}else if((p|0)==25){c[f>>2]=o;E=f;F=o;G=o;p=27;break}}else{c[f>>2]=h;E=h;F=j;G=h;p=27}while(0);if((p|0)==27)if(!F){C=E;D=G}else{H=F;I=H+28|0;i=e;return I|0}wi(g,b,d);d=c[g>>2]|0;c[g>>2]=0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=D;c[C>>2]=d;D=c[c[b>>2]>>2]|0;if(!D)J=d;else{c[b>>2]=D;J=c[C>>2]|0}vi(c[b+4>>2]|0,J);J=b+8|0;c[J>>2]=(c[J>>2]|0)+1;H=d;I=H+28|0;i=e;return I|0}function ki(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=e-d|0;g=b+8|0;h=c[g>>2]|0;i=c[b>>2]|0;j=i;if(f>>>0<=(h-j|0)>>>0){k=b+4|0;l=(c[k>>2]|0)-j|0;if(f>>>0<=l>>>0){AH(i|0,d|0,f|0)|0;j=i+f|0;if((c[k>>2]|0)==(j|0))return;c[k>>2]=j;return}j=d+l|0;AH(i|0,d|0,l|0)|0;if((j|0)==(e|0))return;l=j;j=c[k>>2]|0;do{a[j>>0]=a[l>>0]|0;j=(c[k>>2]|0)+1|0;c[k>>2]=j;l=l+1|0}while((l|0)!=(e|0));return}if(!i)m=h;else{h=b+4|0;if((c[h>>2]|0)!=(i|0))c[h>>2]=i;Ow(i);c[g>>2]=0;c[h>>2]=0;c[b>>2]=0;m=0}h=(f|0)<0;if(h)Kw(b);i=m-0|0;if(i>>>0<1073741823){m=i<<1;i=m>>>0>=f>>>0;if(i|h^1)n=i?m:f;else Kw(b)}else n=2147483647;f=Mw(n)|0;m=b+4|0;c[m>>2]=f;c[b>>2]=f;c[g>>2]=f+n;if((d|0)==(e|0))return;else{o=d;p=f}do{a[p>>0]=a[o>>0]|0;p=(c[m>>2]|0)+1|0;c[m>>2]=p;o=o+1|0}while((o|0)!=(e|0));return}function li(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[b>>2]|0;b=c[d+4>>2]|0;if(!b){e=d;while(1){f=c[e+8>>2]|0;if((c[f>>2]|0)==(e|0)){g=f;break}else e=f}}else{e=b;while(1){b=c[e>>2]|0;if(!b){g=e;break}else e=b}}if((c[a>>2]|0)==(d|0))c[a>>2]=g;e=a+8|0;c[e>>2]=(c[e>>2]|0)+-1;ti(c[a+4>>2]|0,d);a=c[d+28>>2]|0;if(a){e=d+32|0;if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a)}a=c[d+16>>2]|0;if(!a){Ow(d);return g|0}e=d+20|0;if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);Ow(d);return g|0}function mi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;f=i;i=i+16|0;g=f+12|0;h=f;j=d+4|0;k=c[j>>2]|0;do if(k){l=c[e>>2]|0;m=c[e+4>>2]|0;n=(l|0)==(m|0);o=k;a:while(1){p=c[o+16>>2]|0;q=c[o+20>>2]|0;b:do if((p|0)!=(q|0)){r=l;s=p;while(1){if((r|0)==(m|0))break;t=a[r>>0]|0;u=a[s>>0]|0;if((t&255)<(u&255))break;if((u&255)<(t&255)){v=10;break b}s=s+1|0;if((s|0)==(q|0)){v=10;break b}else r=r+1|0}r=c[o>>2]|0;if(!r){w=o;x=o;v=9;break a}else y=r}else v=10;while(0);if((v|0)==10){v=0;if(n){z=o;v=18;break}else{A=p;B=l}while(1){if((A|0)==(q|0))break;r=a[A>>0]|0;s=a[B>>0]|0;if((r&255)<(s&255))break;if((s&255)<(r&255)){z=o;v=18;break a}B=B+1|0;if((B|0)==(m|0)){z=o;v=18;break a}else A=A+1|0}q=o+4|0;p=c[q>>2]|0;if(!p){C=q;D=o;v=17;break}else y=p}o=y}if((v|0)==9){c[g>>2]=x;E=w;F=x;break}else if((v|0)==17){c[g>>2]=D;E=C;F=D;break}else if((v|0)==18){c[g>>2]=z;E=g;F=z;break}}else{c[g>>2]=j;E=j;F=j}while(0);j=c[E>>2]|0;if(j){G=0;H=j;I=H;c[b>>2]=I;J=b+4|0;a[J>>0]=G;i=f;return}ui(h,d,e);e=c[h>>2]|0;c[h>>2]=0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=F;c[E>>2]=e;F=c[c[d>>2]>>2]|0;if(!F)K=e;else{c[d>>2]=F;K=c[E>>2]|0}vi(c[d+4>>2]|0,K);K=d+8|0;c[K>>2]=(c[K>>2]|0)+1;G=1;H=e;I=H;c[b>>2]=I;J=b+4|0;a[J>>0]=G;i=f;return}function ni(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=b+4|0;f=c[e>>2]|0;if(!f){g=0;return g|0}h=c[d>>2]|0;i=c[d+4>>2]|0;d=(h|0)==(i|0);j=e;k=f;a:while(1){b:do if(d)l=k;else{m=k;while(1){n=c[m+20>>2]|0;o=c[m+16>>2]|0;p=h;while(1){if((o|0)==(n|0))break;q=a[o>>0]|0;r=a[p>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255)){l=m;break b}p=p+1|0;if((p|0)==(i|0)){l=m;break b}else o=o+1|0}m=c[m+4>>2]|0;if(!m){s=j;break a}}}while(0);k=c[l>>2]|0;if(!k){s=l;break}else j=l}if((s|0)==(e|0)){g=0;return g|0}l=c[s+16>>2]|0;j=c[s+20>>2]|0;c:do if((l|0)!=(j|0)){k=h;d=l;while(1){if((k|0)==(i|0)){g=0;t=29;break}m=a[k>>0]|0;o=a[d>>0]|0;if((m&255)<(o&255)){g=0;t=29;break}if((o&255)<(m&255))break c;d=d+1|0;if((d|0)==(j|0))break c;else k=k+1|0}if((t|0)==29)return g|0}while(0);if((s|0)==(e|0)){g=0;return g|0}e=c[s+4>>2]|0;if(!e){t=s;while(1){j=c[t+8>>2]|0;if((c[j>>2]|0)==(t|0)){u=j;break}else t=j}}else{t=e;while(1){e=c[t>>2]|0;if(!e){u=t;break}else t=e}}if((c[b>>2]|0)==(s|0))c[b>>2]=u;u=b+8|0;c[u>>2]=(c[u>>2]|0)+-1;ti(f,s);f=c[s+16>>2]|0;if(f){u=s+20|0;if((c[u>>2]|0)!=(f|0))c[u>>2]=f;Ow(f)}Ow(s);g=1;return g|0}function oi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;f=a[d>>0]|0;g=(f&1)==0;h=g?(f&255)>>>1:c[d+4>>2]|0;f=a[e>>0]|0;i=(f&1)==0?(f&255)>>>1:c[e+4>>2]|0;Sy(b,g?d+1|0:c[d+8>>2]|0,h,i+h|0);Py(b,(a[e>>0]&1)==0?e+1|0:c[e+8>>2]|0,i)|0;return}function pi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=11920;e=b+4|0;c[e>>2]=0;f=b+8|0;c[f>>2]=0;c[b+12>>2]=0;g=d+8|0;h=c[g>>2]|0;i=d+4|0;j=c[i>>2]|0;k=h-j|0;if((h|0)!=(j|0)){if((k|0)<0)Kw(e);j=Mw(k)|0;c[f>>2]=j;c[e>>2]=j;c[b+12>>2]=j+k;k=c[i>>2]|0;i=c[g>>2]|0;if((k|0)!=(i|0)){g=k;k=j;do{a[k>>0]=a[g>>0]|0;k=(c[f>>2]|0)+1|0;c[f>>2]=k;g=g+1|0}while((g|0)!=(i|0))}}i=b+16|0;c[i>>2]=0;g=b+20|0;c[g>>2]=0;c[b+24>>2]=0;k=d+20|0;f=c[k>>2]|0;j=d+16|0;e=c[j>>2]|0;h=f-e|0;if((f|0)!=(e|0)){if((h|0)<0)Kw(i);e=Mw(h)|0;c[g>>2]=e;c[i>>2]=e;c[b+24>>2]=e+h;h=c[j>>2]|0;j=c[k>>2]|0;if((h|0)!=(j|0)){k=h;h=e;do{a[h>>0]=a[k>>0]|0;h=(c[g>>2]|0)+1|0;c[g>>2]=h;k=k+1|0}while((k|0)!=(j|0))}}j=b+28|0;c[j>>2]=0;k=b+32|0;c[k>>2]=0;c[b+36>>2]=0;h=d+32|0;g=c[h>>2]|0;e=d+28|0;d=c[e>>2]|0;i=g-d|0;if((g|0)==(d|0))return;if((i|0)<0)Kw(j);d=Mw(i)|0;c[k>>2]=d;c[j>>2]=d;c[b+36>>2]=d+i;i=c[e>>2]|0;e=c[h>>2]|0;if((i|0)==(e|0))return;else{l=i;m=d}do{a[m>>0]=a[l>>0]|0;m=(c[k>>2]|0)+1|0;c[k>>2]=m;l=l+1|0}while((l|0)!=(e|0));return}function qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=a+4|0;e=c[a>>2]|0;f=(((c[d>>2]|0)-e|0)/40|0)+1|0;if(f>>>0>107374182)Kw(a);g=a+8|0;h=e;e=((c[g>>2]|0)-h|0)/40|0;if(e>>>0<53687091){i=e<<1;e=i>>>0<f>>>0?f:i;i=((c[d>>2]|0)-h|0)/40|0;if(!e){j=0;k=0;l=i}else{m=e;n=i;o=6}}else{m=107374182;n=((c[d>>2]|0)-h|0)/40|0;o=6}if((o|0)==6){j=m;k=Mw(m*40|0)|0;l=n}n=k+(l*40|0)|0;m=n;o=k+(j*40|0)|0;pi(n,b);b=k+((l+1|0)*40|0)|0;l=c[a>>2]|0;k=c[d>>2]|0;if((k|0)==(l|0)){p=a;q=d;r=m;s=l;t=k}else{j=k;k=n;n=m;while(1){j=j+-40|0;pi(k+-40|0,j);k=n+-40|0;m=k;if((j|0)==(l|0)){u=m;break}else n=m}p=a;q=d;r=u;s=c[a>>2]|0;t=c[d>>2]|0}c[p>>2]=r;c[q>>2]=b;c[g>>2]=o;o=s;g=t;if((g|0)!=(o|0)){t=g;do{t=t+-40|0;td[c[c[t>>2]>>2]&255](t)}while((t|0)!=(o|0))}if(!s)return;Ow(s);return}function ri(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=12288;e=b+4|0;c[e>>2]=0;f=b+8|0;c[f>>2]=0;c[b+12>>2]=0;g=d+8|0;h=c[g>>2]|0;i=d+4|0;j=c[i>>2]|0;k=h-j|0;if((h|0)!=(j|0)){if((k|0)<0)Kw(e);j=Mw(k)|0;c[f>>2]=j;c[e>>2]=j;c[b+12>>2]=j+k;k=c[i>>2]|0;i=c[g>>2]|0;if((k|0)!=(i|0)){g=k;k=j;do{a[k>>0]=a[g>>0]|0;k=(c[f>>2]|0)+1|0;c[f>>2]=k;g=g+1|0}while((g|0)!=(i|0))}}i=b+16|0;c[i>>2]=0;g=b+20|0;c[g>>2]=0;c[b+24>>2]=0;k=d+20|0;f=c[k>>2]|0;j=d+16|0;e=c[j>>2]|0;h=f-e|0;if((f|0)!=(e|0)){if((h|0)<0)Kw(i);e=Mw(h)|0;c[g>>2]=e;c[i>>2]=e;c[b+24>>2]=e+h;h=c[j>>2]|0;j=c[k>>2]|0;if((h|0)!=(j|0)){k=h;h=e;do{a[h>>0]=a[k>>0]|0;h=(c[g>>2]|0)+1|0;c[g>>2]=h;k=k+1|0}while((k|0)!=(j|0))}}j=b+28|0;c[j>>2]=0;k=b+32|0;c[k>>2]=0;c[b+36>>2]=0;h=d+32|0;g=c[h>>2]|0;e=d+28|0;d=c[e>>2]|0;i=g-d|0;if((g|0)==(d|0))return;if((i|0)<0)Kw(j);d=Mw(i)|0;c[k>>2]=d;c[j>>2]=d;c[b+36>>2]=d+i;i=c[e>>2]|0;e=c[h>>2]|0;if((i|0)==(e|0))return;else{l=i;m=d}do{a[m>>0]=a[l>>0]|0;m=(c[k>>2]|0)+1|0;c[k>>2]=m;l=l+1|0}while((l|0)!=(e|0));return}function si(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;d=a+4|0;e=c[a>>2]|0;f=(((c[d>>2]|0)-e|0)/40|0)+1|0;if(f>>>0>107374182)Kw(a);g=a+8|0;h=e;e=((c[g>>2]|0)-h|0)/40|0;if(e>>>0<53687091){i=e<<1;e=i>>>0<f>>>0?f:i;i=((c[d>>2]|0)-h|0)/40|0;if(!e){j=0;k=0;l=i}else{m=e;n=i;o=6}}else{m=107374182;n=((c[d>>2]|0)-h|0)/40|0;o=6}if((o|0)==6){j=m;k=Mw(m*40|0)|0;l=n}n=k+(l*40|0)|0;m=n;o=k+(j*40|0)|0;ri(n,b);b=k+((l+1|0)*40|0)|0;l=c[a>>2]|0;k=c[d>>2]|0;if((k|0)==(l|0)){p=a;q=d;r=m;s=l;t=k}else{j=k;k=n;n=m;while(1){j=j+-40|0;ri(k+-40|0,j);k=n+-40|0;m=k;if((j|0)==(l|0)){u=m;break}else n=m}p=a;q=d;r=u;s=c[a>>2]|0;t=c[d>>2]|0}c[p>>2]=r;c[q>>2]=b;c[g>>2]=o;o=s;g=t;if((g|0)!=(o|0)){t=g;do{t=t+-40|0;td[c[c[t>>2]>>2]&255](t)}while((t|0)!=(o|0))}if(!s)return;Ow(s);return}function ti(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;e=c[d>>2]|0;if(e){f=c[d+4>>2]|0;if(!f){g=d;h=e}else{e=f;while(1){f=c[e>>2]|0;if(!f){g=e;h=0;break}else e=f}}}else{g=d;h=0}e=g+4|0;f=c[((h|0)==0?e:g)>>2]|0;h=(f|0)==0;i=g+8|0;if(!h)c[f+8>>2]=c[i>>2];j=c[i>>2]|0;k=c[j>>2]|0;if((k|0)==(g|0)){c[j>>2]=f;if((g|0)==(b|0)){l=f;m=0}else{l=b;m=c[j+4>>2]|0}}else{c[j+4>>2]=f;l=b;m=k}k=g+12|0;b=(a[k>>0]|0)==0;if((g|0)==(d|0))n=l;else{j=d+8|0;o=c[j>>2]|0;c[i>>2]=o;i=o;if((c[c[j>>2]>>2]|0)==(d|0))c[i>>2]=g;else c[i+4>>2]=g;i=c[d>>2]|0;c[g>>2]=i;c[i+8>>2]=g;i=c[d+4>>2]|0;c[e>>2]=i;if(i)c[i+8>>2]=g;a[k>>0]=a[d+12>>0]|0;n=(l|0)==(d|0)?g:l}if(b|(n|0)==0)return;if(h){p=n;q=m}else{a[f+12>>0]=1;return}while(1){f=c[q+8>>2]|0;m=q+12|0;n=(a[m>>0]|0)!=0;if((c[f>>2]|0)==(q|0)){if(n){r=p;s=q}else{a[m>>0]=1;a[f+12>>0]=0;h=c[f>>2]|0;b=h+4|0;l=c[b>>2]|0;c[f>>2]=l;if(l)c[l+8>>2]=f;l=f+8|0;c[h+8>>2]=c[l>>2];g=c[l>>2]|0;if((c[g>>2]|0)==(f|0))c[g>>2]=h;else c[g+4>>2]=h;c[b>>2]=f;c[l>>2]=h;h=c[q+4>>2]|0;r=(p|0)==(h|0)?q:p;s=c[h>>2]|0}t=c[s>>2]|0;u=(t|0)==0;if(!u?(a[t+12>>0]|0)==0:0){v=t;w=s;x=66;break}h=c[s+4>>2]|0;if((h|0)!=0?(a[h+12>>0]|0)==0:0){x=65;break}a[s+12>>0]=0;h=c[s+8>>2]|0;l=h+12|0;if((h|0)==(r|0)|(a[l>>0]|0)==0){y=l;x=62;break}l=c[h+8>>2]|0;z=r;A=(c[l>>2]|0)==(h|0)?l+4|0:l}else{if(n){B=p;C=q}else{a[m>>0]=1;a[f+12>>0]=0;m=f+4|0;n=c[m>>2]|0;l=c[n>>2]|0;c[m>>2]=l;if(l)c[l+8>>2]=f;l=f+8|0;c[n+8>>2]=c[l>>2];m=c[l>>2]|0;if((c[m>>2]|0)==(f|0))c[m>>2]=n;else c[m+4>>2]=n;c[n>>2]=f;c[l>>2]=n;n=c[q>>2]|0;B=(p|0)==(n|0)?q:p;C=c[n+4>>2]|0}n=c[C>>2]|0;if((n|0)!=0?(a[n+12>>0]|0)==0:0){D=C;E=n;F=C;x=36;break}l=c[C+4>>2]|0;if((l|0)!=0?(a[l+12>>0]|0)==0:0){G=n;H=C;I=l;J=C;x=37;break}a[C+12>>0]=0;l=c[C+8>>2]|0;if((l|0)==(B|0)){K=B;x=34;break}if(!(a[l+12>>0]|0)){K=l;x=34;break}n=c[l+8>>2]|0;z=B;A=(c[n>>2]|0)==(l|0)?n+4|0:n}p=z;q=c[A>>2]|0}if((x|0)==34){a[K+12>>0]=1;return}else if((x|0)==36){K=c[F+4>>2]|0;if(!K){L=D;M=E;N=F;x=38}else{G=E;H=D;I=K;J=F;x=37}}else if((x|0)==62){a[y>>0]=1;return}else if((x|0)==65)if(u){O=s;x=67}else{v=t;w=s;x=66}if((x|0)==37)if(!(a[I+12>>0]|0)){P=I;Q=J;x=44}else{L=H;M=G;N=J;x=38}else if((x|0)==66)if(!(a[v+12>>0]|0)){R=v;S=w;x=73}else{O=w;x=67}if((x|0)==38){a[M+12>>0]=1;a[N+12>>0]=0;w=M+4|0;v=c[w>>2]|0;c[L>>2]=v;if(v)c[v+8>>2]=N;v=N+8|0;c[M+8>>2]=c[v>>2];L=c[v>>2]|0;if((c[L>>2]|0)==(N|0))c[L>>2]=M;else c[L+4>>2]=M;c[w>>2]=N;c[v>>2]=M;P=N;Q=M;x=44}else if((x|0)==67){M=O+4|0;N=c[M>>2]|0;a[N+12>>0]=1;a[O+12>>0]=0;v=c[N>>2]|0;c[M>>2]=v;if(v)c[v+8>>2]=O;v=O+8|0;c[N+8>>2]=c[v>>2];M=c[v>>2]|0;if((c[M>>2]|0)==(O|0))c[M>>2]=N;else c[M+4>>2]=N;c[N>>2]=O;c[v>>2]=N;R=O;S=N;x=73}if((x|0)==44){N=c[Q+8>>2]|0;O=N+12|0;a[Q+12>>0]=a[O>>0]|0;a[O>>0]=1;a[P+12>>0]=1;P=N+4|0;O=c[P>>2]|0;Q=c[O>>2]|0;c[P>>2]=Q;if(Q)c[Q+8>>2]=N;Q=N+8|0;c[O+8>>2]=c[Q>>2];P=c[Q>>2]|0;if((c[P>>2]|0)==(N|0))c[P>>2]=O;else c[P+4>>2]=O;c[O>>2]=N;c[Q>>2]=O;return}else if((x|0)==73){x=c[S+8>>2]|0;O=x+12|0;a[S+12>>0]=a[O>>0]|0;a[O>>0]=1;a[R+12>>0]=1;R=c[x>>2]|0;O=R+4|0;S=c[O>>2]|0;c[x>>2]=S;if(S)c[S+8>>2]=x;S=x+8|0;c[R+8>>2]=c[S>>2];Q=c[S>>2]|0;if((c[Q>>2]|0)==(x|0))c[Q>>2]=R;else c[Q+4>>2]=R;c[O>>2]=x;c[S>>2]=R;return}}function ui(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=Mw(28)|0;g=d+4|0;d=f+16|0;c[d>>2]=0;h=f+20|0;c[h>>2]=0;i=f+24|0;c[i>>2]=0;j=e+4|0;k=c[j>>2]|0;l=c[e>>2]|0;m=k-l|0;if((k|0)!=(l|0)){if((m|0)<0)Kw(d);l=Mw(m)|0;c[h>>2]=l;c[d>>2]=l;c[i>>2]=l+m;m=c[e>>2]|0;e=c[j>>2]|0;if((m|0)!=(e|0)){j=m;m=l;do{a[m>>0]=a[j>>0]|0;m=(c[h>>2]|0)+1|0;c[h>>2]=m;j=j+1|0}while((j|0)!=(e|0))}}c[b>>2]=f;f=b+4|0;c[f>>2]=g;c[f+4>>2]=1;return}function vi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=(d|0)==(b|0);a[d+12>>0]=e&1;if(e)return;else f=d;while(1){d=c[f+8>>2]|0;e=d+12|0;if(a[e>>0]|0){g=37;break}h=d+8|0;i=f;f=c[h>>2]|0;j=c[f>>2]|0;if((j|0)==(d|0)){k=c[f+4>>2]|0;if(!k){l=i;m=d;n=h;o=h;p=f;q=f;g=7;break}r=k+12|0;if(a[r>>0]|0){l=i;m=d;n=h;o=h;p=f;q=f;g=7;break}a[e>>0]=1;a[f+12>>0]=(f|0)==(b|0)&1;a[r>>0]=1}else{if(!j){s=i;t=h;u=d;v=h;w=f;x=f;g=24;break}r=j+12|0;if(a[r>>0]|0){s=i;t=h;u=d;v=h;w=f;x=f;g=24;break}a[e>>0]=1;a[f+12>>0]=(f|0)==(b|0)&1;a[r>>0]=1}if((f|0)==(b|0)){g=37;break}}if((g|0)==7){if((c[m>>2]|0)==(l|0)){y=m;z=q}else{q=m+4|0;l=c[q>>2]|0;b=c[l>>2]|0;c[q>>2]=b;if(!b)A=p;else{c[b+8>>2]=m;A=c[n>>2]|0}b=l+8|0;c[b>>2]=A;A=c[o>>2]|0;if((c[A>>2]|0)==(m|0))c[A>>2]=l;else c[A+4>>2]=l;c[l>>2]=m;c[n>>2]=l;y=l;z=c[b>>2]|0}a[y+12>>0]=1;a[z+12>>0]=0;y=c[z>>2]|0;b=y+4|0;l=c[b>>2]|0;c[z>>2]=l;if(l)c[l+8>>2]=z;l=z+8|0;c[y+8>>2]=c[l>>2];n=c[l>>2]|0;if((c[n>>2]|0)==(z|0))c[n>>2]=y;else c[n+4>>2]=y;c[b>>2]=z;c[l>>2]=y;return}else if((g|0)==24){if((c[u>>2]|0)==(s|0)){s=c[u>>2]|0;y=s+4|0;l=c[y>>2]|0;c[u>>2]=l;if(!l)B=w;else{c[l+8>>2]=u;B=c[t>>2]|0}l=s+8|0;c[l>>2]=B;B=c[v>>2]|0;if((c[B>>2]|0)==(u|0))c[B>>2]=s;else c[B+4>>2]=s;c[y>>2]=u;c[t>>2]=s;C=s;D=c[l>>2]|0}else{C=u;D=x}a[C+12>>0]=1;a[D+12>>0]=0;C=D+4|0;x=c[C>>2]|0;u=c[x>>2]|0;c[C>>2]=u;if(u)c[u+8>>2]=D;u=D+8|0;c[x+8>>2]=c[u>>2];C=c[u>>2]|0;if((c[C>>2]|0)==(D|0))c[C>>2]=x;else c[C+4>>2]=x;c[x>>2]=D;c[u>>2]=x;return}else if((g|0)==37)return}function wi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=Mw(40)|0;g=d+4|0;d=f+16|0;c[d>>2]=0;h=f+20|0;c[h>>2]=0;i=f+24|0;c[i>>2]=0;j=e+4|0;k=c[j>>2]|0;l=c[e>>2]|0;m=k-l|0;if((k|0)!=(l|0)){if((m|0)<0)Kw(d);l=Mw(m)|0;c[h>>2]=l;c[d>>2]=l;c[i>>2]=l+m;m=c[e>>2]|0;e=c[j>>2]|0;if((m|0)!=(e|0)){j=m;m=l;do{a[m>>0]=a[j>>0]|0;m=(c[h>>2]|0)+1|0;c[h>>2]=m;j=j+1|0}while((j|0)!=(e|0))}}c[f+28>>2]=0;c[f+32>>2]=0;c[f+36>>2]=0;c[b>>2]=f;f=b+4|0;c[f>>2]=g;c[f+4>>2]=257;return}function xi(a){a=a|0;var b=0,d=0;c[a>>2]=11048;b=c[a+8>>2]|0;if(!b)return;d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);return}function yi(a){a=a|0;var b=0,d=0;c[a>>2]=11048;b=c[a+8>>2]|0;if(!b){Ow(a);return}d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);Ow(a);return}function zi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;g=a+8|0;xd[c[(c[a>>2]|0)+16>>2]&63](a,g,11144);h=Jm(b,g)|0;g=Im(b,0,h)|0;Ai(f,c[a+4>>2]|0);a=g+h+(Km(b,f)|0)|0;Hy(f);f=a+d+(Lm(b,a)|0)|0;i=e;return f|0}function Ai(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;f=e+12|0;g=e;switch(d|0){case 0:{Fy(b,11704,9);i=e;return}case 3:{Fy(b,11184,9);i=e;return}case 1:{Fy(b,11152,9);i=e;return}case 4:{Fy(b,11200,9);i=e;return}case 2:{Fy(b,11168,9);i=e;return}case 5:{Fy(b,11216,11);i=e;return}default:{e=Yb(8)|0;Fy(g,11232,18);c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;b=a[g>>0]|0;d=(b&1)==0;h=d?(b&255)>>>1:c[g+4>>2]|0;Sy(f,d?g+1|0:c[g+8>>2]|0,h,h+35|0);Py(f,11256,35)|0;$i(e,f);dd(e|0,296,39)}}}function Bi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+48|0;f=e+36|0;g=e+24|0;h=e+12|0;j=e;vm(d)|0;um(f,d);c[b+4>>2]=Ci(f)|0;Hy(f);if(!(qm(d,0)|0)){f=Yb(8)|0;Fy(j,11232,18);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;k=a[j>>0]|0;l=(k&1)==0;m=l?(k&255)>>>1:c[j+4>>2]|0;Sy(h,l?j+1|0:c[j+8>>2]|0,m,m+44|0);Py(h,11296,44)|0;$i(f,h);dd(f|0,296,39)}f=b+8|0;tm(g,d);if((f|0)!=(g|0))ki(f,c[g>>2]|0,c[g+4>>2]|0);f=c[g>>2]|0;if(!f){i=e;return}d=g+4|0;if((c[d>>2]|0)!=(f|0))c[d>>2]=f;Ow(f);i=e;return}function Ci(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;d=i;i=i+96|0;e=d+12|0;f=d+48|0;g=d+24|0;h=d+60|0;j=d+84|0;k=d;l=d+36|0;m=d+72|0;Fy(e,11704,9);n=a[e>>0]|0;o=(n&1)==0;p=o?(n&255)>>>1:c[e+4>>2]|0;n=a[b>>0]|0;q=(n&1)==0;r=b+4|0;if((p|0)==((q?(n&255)>>>1:c[r>>2]|0)|0)){n=(ky(o?e+1|0:c[e+8>>2]|0,q?b+1|0:c[b+8>>2]|0,p)|0)==0;Hy(e);if(n){s=0;i=d;return s|0}}else Hy(e);Fy(f,11152,9);e=a[f>>0]|0;n=(e&1)==0;p=n?(e&255)>>>1:c[f+4>>2]|0;e=a[b>>0]|0;q=(e&1)==0;if((p|0)==((q?(e&255)>>>1:c[r>>2]|0)|0)){e=(ky(n?f+1|0:c[f+8>>2]|0,q?b+1|0:c[b+8>>2]|0,p)|0)==0;Hy(f);if(e){s=1;i=d;return s|0}}else Hy(f);Fy(g,11168,9);f=a[g>>0]|0;e=(f&1)==0;p=e?(f&255)>>>1:c[g+4>>2]|0;f=a[b>>0]|0;q=(f&1)==0;if((p|0)==((q?(f&255)>>>1:c[r>>2]|0)|0)){f=(ky(e?g+1|0:c[g+8>>2]|0,q?b+1|0:c[b+8>>2]|0,p)|0)==0;Hy(g);if(f){s=2;i=d;return s|0}}else Hy(g);Fy(h,11184,9);g=a[h>>0]|0;f=(g&1)==0;p=f?(g&255)>>>1:c[h+4>>2]|0;g=a[b>>0]|0;q=(g&1)==0;if((p|0)==((q?(g&255)>>>1:c[r>>2]|0)|0)){g=(ky(f?h+1|0:c[h+8>>2]|0,q?b+1|0:c[b+8>>2]|0,p)|0)==0;Hy(h);if(g){s=3;i=d;return s|0}}else Hy(h);Fy(j,11200,9);h=a[j>>0]|0;g=(h&1)==0;p=g?(h&255)>>>1:c[j+4>>2]|0;h=a[b>>0]|0;q=(h&1)==0;if((p|0)==((q?(h&255)>>>1:c[r>>2]|0)|0)){h=(ky(g?j+1|0:c[j+8>>2]|0,q?b+1|0:c[b+8>>2]|0,p)|0)==0;Hy(j);if(h){s=4;i=d;return s|0}}else Hy(j);Fy(k,11216,11);j=a[k>>0]|0;h=(j&1)==0;p=h?(j&255)>>>1:c[k+4>>2]|0;j=a[b>>0]|0;q=(j&1)==0;if((p|0)!=((q?(j&255)>>>1:c[r>>2]|0)|0)){Hy(k);t=Yb(8)|0;Fy(m,11232,18);c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;u=a[m>>0]|0;v=u&1;w=v<<24>>24==0;x=m+4|0;y=c[x>>2]|0;z=u&255;A=z>>>1;B=w?A:y;C=m+8|0;D=c[C>>2]|0;E=m+1|0;F=w?E:D;G=B+39|0;Sy(l,F,B,G);Py(l,11344,39)|0;$i(t,l);dd(t|0,296,39)}r=(ky(h?k+1|0:c[k+8>>2]|0,q?b+1|0:c[b+8>>2]|0,p)|0)==0;Hy(k);if(r){s=5;i=d;return s|0}else{t=Yb(8)|0;Fy(m,11232,18);c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;u=a[m>>0]|0;v=u&1;w=v<<24>>24==0;x=m+4|0;y=c[x>>2]|0;z=u&255;A=z>>>1;B=w?A:y;C=m+8|0;D=c[C>>2]|0;E=m+1|0;F=w?E:D;G=B+39|0;Sy(l,F,B,G);Py(l,11344,39)|0;$i(t,l);dd(t|0,296,39)}return 0}function Di(a){a=a|0;c[a>>2]=11392;bj(a+24|0);xi(a+4|0);return}function Ei(a){a=a|0;c[a>>2]=11392;bj(a+24|0);xi(a+4|0);Ow(a);return}function Fi(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+8|0;f=d+4|0;g=d;h=c[b>>2]|0;j=c[b+4>>2]|0;if((h|0)==(j|0)){i=d;return 0}c[e>>2]=h;if((a[h>>0]|0)!=48){i=d;return 0}c[e>>2]=h+1;c[f>>2]=0;b=Nn(e,j,f)|0;if((b|0)==0|(b|0)==-96){c[f>>2]=(c[e>>2]|0)-h+(c[f>>2]|0);c[g>>2]=0;h=Pn(e,j,g)|0;i=d;return ((c[g>>2]|h|0)==0?c[f>>2]|0:0)|0}else{i=d;return 0}return 0}function Gi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=a+24|0;if(dj(d)|0)e=0;else{f=oj(d,b,0)|0;e=(Im(b,0,f)|0)+f|0}f=(zi(a+4|0,b,0)|0)+e|0;e=f+(Cm(b,0)|0)|0;return (Lm(b,e)|0)+c+e|0}function Hi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+12|0;g=e;vm(d)|0;if(nm(d)|0){h=Yb(8)|0;Fy(g,11488,22);c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;j=a[g>>0]|0;k=(j&1)==0;l=k?(j&255)>>>1:c[g+4>>2]|0;Sy(f,k?g+1|0:c[g+8>>2]|0,l,l+43|0);Py(f,11512,43)|0;$i(h,f);dd(h|0,296,39)}Bi(b+4|0,d);if(!(qm(d,0)|0)){i=e;return}pj(b+24|0,d);i=e;return}function Ii(a){a=a|0;var b=0,d=0;c[a>>2]=11568;b=c[a+16>>2]|0;if(b){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+4>>2]|0;if(!b)return;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);return}function Ji(a){a=a|0;var b=0,d=0;c[a>>2]=11568;b=c[a+16>>2]|0;if(b){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+4>>2]|0;if(!b){Ow(a);return}d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);Ow(a);return}function Ki(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;g=a+16|0;if((c[g>>2]|0)==(c[a+20>>2]|0))h=0;else{j=Gm(b,g)|0;h=(Im(b,0,j)|0)+j|0}j=a+4|0;xd[c[(c[a>>2]|0)+16>>2]&63](a,j,11672);a=Jm(b,j)|0;Fy(f,11704,9);j=a+h+(Km(b,f)|0)|0;Hy(f);f=j+d+(Lm(b,j)|0)|0;i=e;return f|0}function Li(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+48|0;e=d+24|0;f=d+12|0;g=d;vm(b)|0;um(e,b);Hy(e);e=a+4|0;tm(f,b);if((e|0)!=(f|0))ki(e,c[f>>2]|0,c[f+4>>2]|0);e=c[f>>2]|0;if(e){h=f+4|0;if((c[h>>2]|0)!=(e|0))c[h>>2]=e;Ow(e)}if(!(qm(b,0)|0)){i=d;return}e=a+16|0;rm(g,b);if((e|0)!=(g|0))ki(e,c[g>>2]|0,c[g+4>>2]|0);e=c[g>>2]|0;if(!e){i=d;return}b=g+4|0;if((c[b>>2]|0)!=(e|0))c[b>>2]=e;Ow(e);i=d;return}function Mi(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a>>2]=11728;Ii(a+28|0);b=a+16|0;d=c[b>>2]|0;if(d){e=a+20|0;f=c[e>>2]|0;if((f|0)==(d|0))g=d;else{h=f;do{f=h+-40|0;c[e>>2]=f;td[c[c[f>>2]>>2]&255](f);h=c[e>>2]|0}while((h|0)!=(d|0));g=c[b>>2]|0}Ow(g)}g=a+4|0;b=c[g>>2]|0;if(!b)return;d=a+8|0;a=c[d>>2]|0;if((a|0)==(b|0))i=b;else{h=a;do{a=h+-40|0;c[d>>2]=a;td[c[c[a>>2]>>2]&255](a);h=c[d>>2]|0}while((h|0)!=(b|0));i=c[g>>2]|0}Ow(i);return}function Ni(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a>>2]=11728;Ii(a+28|0);b=a+16|0;d=c[b>>2]|0;if(d){e=a+20|0;f=c[e>>2]|0;if((f|0)==(d|0))g=d;else{h=f;do{f=h+-40|0;c[e>>2]=f;td[c[c[f>>2]>>2]&255](f);h=c[e>>2]|0}while((h|0)!=(d|0));g=c[b>>2]|0}Ow(g)}g=a+4|0;b=c[g>>2]|0;if(!b){Ow(a);return}d=a+8|0;h=c[d>>2]|0;if((h|0)==(b|0))i=b;else{e=h;do{h=e+-40|0;c[d>>2]=h;td[c[c[h>>2]>>2]&255](h);e=c[d>>2]|0}while((e|0)!=(b|0));i=c[g>>2]|0}Ow(i);Ow(a);return}function Oi(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=i;i=i+80|0;g=f+64|0;h=f+52|0;j=f+40|0;k=f+24|0;l=f+12|0;m=f;im(g,b+28|0);n=Jm(d,g)|0;o=c[g>>2]|0;if(o){p=g+4|0;if((c[p>>2]|0)!=(o|0))c[p>>2]=o;Ow(o)}c[h>>2]=0;o=h+4|0;c[o>>2]=0;c[h+8>>2]=0;p=b+8|0;g=b+4|0;q=b+20|0;r=b+16|0;Qi(h,(((c[q>>2]|0)-(c[r>>2]|0)|0)/40|0)+(((c[p>>2]|0)-(c[g>>2]|0)|0)/40|0)|0);b=c[g>>2]|0;a:do if((b|0)!=(c[p>>2]|0)){s=h+8|0;t=j+4|0;u=b;while(1){im(j,u);v=c[o>>2]|0;if((v|0)==(c[s>>2]|0))Ri(h,j);else{c[v>>2]=0;w=v+4|0;c[w>>2]=0;c[v+8>>2]=0;x=c[t>>2]|0;y=c[j>>2]|0;z=x-y|0;if((x|0)!=(y|0)){if((z|0)<0)break;y=Mw(z)|0;c[w>>2]=y;c[v>>2]=y;c[v+8>>2]=y+z;z=c[j>>2]|0;x=c[t>>2]|0;if((z|0)!=(x|0)){A=z;z=y;do{a[z>>0]=a[A>>0]|0;z=(c[w>>2]|0)+1|0;c[w>>2]=z;A=A+1|0}while((A|0)!=(x|0))}}c[o>>2]=(c[o>>2]|0)+12}x=c[j>>2]|0;if(x){if((c[t>>2]|0)!=(x|0))c[t>>2]=x;Ow(x)}u=u+40|0;if((u|0)==(c[p>>2]|0))break a}Kw(v)}while(0);v=c[r>>2]|0;b:do if((v|0)!=(c[q>>2]|0)){j=h+8|0;b=m+4|0;u=l+4|0;t=v;while(1){xm(k);im(l,t);s=Jm(k,l)|0;x=c[l>>2]|0;if(x){if((c[u>>2]|0)!=(x|0))c[u>>2]=x;Ow(x)}Im(k,3,s)|0;Am(m,k);B=c[o>>2]|0;if((B|0)==(c[j>>2]|0))Ri(h,m);else{c[B>>2]=0;s=B+4|0;c[s>>2]=0;c[B+8>>2]=0;x=c[b>>2]|0;A=c[m>>2]|0;z=x-A|0;if((x|0)!=(A|0)){if((z|0)<0)break;A=Mw(z)|0;c[s>>2]=A;c[B>>2]=A;c[B+8>>2]=A+z;z=c[m>>2]|0;x=c[b>>2]|0;if((z|0)!=(x|0)){w=z;z=A;do{a[z>>0]=a[w>>0]|0;z=(c[s>>2]|0)+1|0;c[s>>2]=z;w=w+1|0}while((w|0)!=(x|0))}}c[o>>2]=(c[o>>2]|0)+12}x=c[m>>2]|0;if(x){if((c[b>>2]|0)!=(x|0))c[b>>2]=x;Ow(x)}ym(k);t=t+40|0;if((t|0)==(c[q>>2]|0))break b}Kw(B)}while(0);B=Mm(d,h)|0;if((c[q>>2]|0)==(c[r>>2]|0))C=(c[p>>2]|0)==(c[g>>2]|0)?0:2;else C=3;g=B+n+(Cm(d,C)|0)|0;C=g+e+(Lm(d,g)|0)|0;g=c[h>>2]|0;if(!g){i=f;return C|0}d=c[o>>2]|0;if((d|0)==(g|0))D=g;else{e=d;while(1){d=e+-12|0;c[o>>2]=d;n=c[d>>2]|0;if(!n)E=d;else{d=e+-8|0;if((c[d>>2]|0)!=(n|0))c[d>>2]=n;Ow(n);E=c[o>>2]|0}if((E|0)==(g|0))break;else e=E}D=c[h>>2]|0}Ow(D);i=f;return C|0}function Pi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+144|0;f=e+12|0;g=e+56|0;h=e+24|0;j=e+72|0;k=e+124|0;l=e;m=e+44|0;n=e+112|0;o=b+4|0;p=c[o>>2]|0;q=b+8|0;r=c[q>>2]|0;if((r|0)!=(p|0)){s=r;do{r=s+-40|0;c[q>>2]=r;td[c[c[r>>2]>>2]&255](r);s=c[q>>2]|0}while((s|0)!=(p|0))}p=b+16|0;s=c[p>>2]|0;r=b+20|0;t=c[r>>2]|0;if((t|0)!=(s|0)){u=t;do{t=u+-40|0;c[r>>2]=t;td[c[c[t>>2]>>2]&255](t);u=c[r>>2]|0}while((u|0)!=(s|0))}vm(d)|0;nm(d)|0;if((qm(d,0)|0)!=0?(tm(f,d),s=c[f>>2]|0,(s|0)!=0):0){u=f+4|0;if((c[u>>2]|0)!=(s|0))c[u>>2]=s;Ow(s)}s=wm(d)|0;a:do if(s){u=j+4|0;f=b+12|0;t=g+4|0;v=j+4|0;w=b+24|0;x=k+4|0;y=s;while(1){tm(g,d);lm(h,g);if(!(qm(h,3)|0)){if(qm(h,1)|0)break;if(qm(h,2)|0)break;if(qm(h,4)|0)break;c[j>>2]=11920;z=u;A=z+36|0;do{c[z>>2]=0;z=z+4|0}while((z|0)<(A|0));jm(j,g);B=c[q>>2]|0;if((B|0)==(c[f>>2]|0))qi(o,j);else{pi(B,j);c[q>>2]=(c[q>>2]|0)+40}Ti(j)}else{c[j>>2]=12288;z=v;A=z+36|0;do{c[z>>2]=0;z=z+4|0}while((z|0)<(A|0));tm(k,h);jm(j,k);B=c[k>>2]|0;if(B){if((c[x>>2]|0)!=(B|0))c[x>>2]=B;Ow(B)}B=c[r>>2]|0;if((B|0)==(c[w>>2]|0))si(p,j);else{ri(B,j);c[r>>2]=(c[r>>2]|0)+40}Xi(j)}B=(c[t>>2]|0)-(c[g>>2]|0)|0;C=y;y=y-B|0;mm(h);D=c[g>>2]|0;if(D){if((c[t>>2]|0)!=(D|0))c[t>>2]=D;Ow(D)}if(C>>>0<=B>>>0)break a}t=Yb(8)|0;Fy(m,11832,24);c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;y=a[m>>0]|0;w=(y&1)==0;x=w?(y&255)>>>1:c[m+4>>2]|0;Sy(l,w?m+1|0:c[m+8>>2]|0,x,x+42|0);Py(l,11864,42)|0;$i(t,l);dd(t|0,296,39)}while(0);tm(n,d);jm(b+28|0,n);b=c[n>>2]|0;if(!b){i=e;return}d=n+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);i=e;return}function Qi(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d;f=c[a>>2]|0;if((((c[a+8>>2]|0)-f|0)/12|0)>>>0>=b>>>0){i=d;return}g=((c[a+4>>2]|0)-f|0)/12|0;c[e+12>>2]=0;c[e+16>>2]=a+8;if(!b)h=0;else h=Mw(b*12|0)|0;c[e>>2]=h;f=h+(g*12|0)|0;g=e+8|0;c[g>>2]=f;j=e+4|0;c[j>>2]=f;c[e+12>>2]=h+(b*12|0);Si(a,e);a=c[j>>2]|0;j=c[g>>2]|0;if((j|0)!=(a|0)){b=~(((j+-12-a|0)>>>0)/12|0);h=j;do{f=h;h=h+-12|0;k=c[h>>2]|0;if(k){l=f+-8|0;if((c[l>>2]|0)!=(k|0))c[l>>2]=k;Ow(k)}}while((h|0)!=(a|0));c[g>>2]=j+(b*12|0)}b=c[e>>2]|0;if(!b){i=d;return}Ow(b);i=d;return}\nfunction Nn(a,b,e){a=a|0;b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=c[a>>2]|0;g=b;b=g-f|0;if((b|0)<1){h=-96;return h|0}i=d[f>>0]|0;do if(i&128){j=i&127;if((j|0)==4)if((b|0)<5){h=-96;return h|0}else{k=(d[f+2>>0]|0)<<16|(d[f+1>>0]|0)<<24|(d[f+3>>0]|0)<<8|(d[f+4>>0]|0);c[e>>2]=k;l=f+5|0;c[a>>2]=l;m=l;n=k;break}else if((j|0)==1)if((b|0)<2){h=-96;return h|0}else{k=d[f+1>>0]|0;c[e>>2]=k;l=f+2|0;c[a>>2]=l;m=l;n=k;break}else if((j|0)==2)if((b|0)<3){h=-96;return h|0}else{k=(d[f+1>>0]|0)<<8|(d[f+2>>0]|0);c[e>>2]=k;l=f+3|0;c[a>>2]=l;m=l;n=k;break}else if((j|0)==3)if((b|0)<4){h=-96;return h|0}else{j=(d[f+2>>0]|0)<<8|(d[f+1>>0]|0)<<16|(d[f+3>>0]|0);c[e>>2]=j;k=f+4|0;c[a>>2]=k;m=k;n=j;break}else{h=-100;return h|0}}else{j=f+1|0;c[a>>2]=j;k=d[f>>0]|0;c[e>>2]=k;m=j;n=k}while(0);h=n>>>0>(g-m|0)>>>0?-96:0;return h|0}function On(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0;g=c[a>>2]|0;if((b-g|0)<1){h=-96;return h|0}if((d[g>>0]|0|0)!=(f|0)){h=-98;return h|0}c[a>>2]=g+1;h=Nn(a,b,e)|0;return h|0}function Pn(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g;j=c[b>>2]|0;if((e-j|0)>=1)if((a[j>>0]|0)==2){c[b>>2]=j+1;j=Nn(b,e,h)|0;if(!j){e=c[h>>2]|0;if(e>>>0<=4?(k=c[b>>2]|0,(a[k>>0]|0)>=0):0){c[f>>2]=0;l=e+-1|0;c[h>>2]=l;if(!e)m=0;else{e=0;n=k;k=l;while(1){e=d[n>>0]|e<<8;c[f>>2]=e;n=n+1|0;c[b>>2]=n;if(!k)break;else k=k+-1|0}c[h>>2]=-1;m=0}}else m=-100}else m=j}else m=-98;else m=-96;i=g;return m|0}function Qn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;f=i;i=i+16|0;g=f;h=c[b>>2]|0;if((d-h|0)>=1)if((a[h>>0]|0)==2){c[b>>2]=h+1;h=Nn(b,d,g)|0;if(!h){d=c[g>>2]|0;g=vo(e,c[b>>2]|0,d)|0;c[b>>2]=(c[b>>2]|0)+d;j=g}else j=h}else j=-98;else j=-96;i=f;return j|0}function Rn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=c[b>>2]|0;if((d-f|0)<1){g=-96;return g|0}if((a[f>>0]|0)!=3){g=-98;return g|0}c[b>>2]=f+1;f=Nn(b,d,e)|0;if(f){g=f;return g|0}f=c[e>>2]|0;c[e>>2]=f+-1;if(f>>>0<2){g=-104;return g|0}else{g=c[b>>2]|0;c[b>>2]=g+1;return ((a[g>>0]|0)==0?0:-104)|0}return 0}function Sn(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+16|0;j=h;k=c[b>>2]|0;l=e;if((l-k|0)<1){m=-96;i=h;return m|0}if((a[k>>0]|0)!=48){m=-98;i=h;return m|0}c[b>>2]=k+1;k=Nn(b,e,j)|0;if(k){m=k;i=h;return m|0}k=c[b>>2]|0;if((l-k|0)<1){m=-96;i=h;return m|0}c[f>>2]=d[k>>0];l=c[j>>2]|0;j=k+l|0;e=f+4|0;if((l|0)<1){m=-96;i=h;return m|0}if((a[k>>0]|0)!=6){m=-98;i=h;return m|0}c[b>>2]=k+1;k=Nn(b,j,e)|0;if(k){m=k;i=h;return m|0}c[f+8>>2]=c[b>>2];f=c[e>>2]|0;e=c[b>>2]|0;k=e+f|0;c[b>>2]=k;if((k|0)==(j|0)){a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;l=g+4|0;a[g+3>>0]=0;a[l>>0]=0;a[l+1>>0]=0;a[l+2>>0]=0;n=l+4|0;a[l+3>>0]=0;a[n>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;m=0;i=h;return m|0}c[g>>2]=d[k>>0];c[b>>2]=e+(f+1);f=g+4|0;e=Nn(b,j,f)|0;if(e){m=e;i=h;return m|0}c[g+8>>2]=c[b>>2];g=(c[b>>2]|0)+(c[f>>2]|0)|0;c[b>>2]=g;m=(g|0)==(j|0)?0:-102;i=h;return m|0}function Tn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;g=Sn(a,b,d,f)|0;if(g){h=g;i=e;return h|0}g=c[f>>2]|0;if((g|0)==0|(g|0)==5){i=e;return ((c[f+4>>2]|0)==0?0:-104)|0}else{h=-104;i=e;return h|0}return 0}function Un(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0<128){f=c[b>>2]|0;if((f-d|0)<1){g=-108;return g|0}h=f+-1|0;c[b>>2]=h;a[h>>0]=e;g=1;return g|0}h=c[b>>2]|0;f=h-d|0;if(e>>>0<256){if((f|0)<2){g=-108;return g|0}d=h+-1|0;c[b>>2]=d;a[d>>0]=e;d=(c[b>>2]|0)+-1|0;c[b>>2]=d;a[d>>0]=-127;g=2;return g|0}else{if((f|0)<3){g=-108;return g|0}f=h+-1|0;c[b>>2]=f;a[f>>0]=e;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=e>>>8;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=-126;g=3;return g|0}return 0}function Vn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=c[b>>2]|0;if((f-d|0)<1){g=-108;return g|0}d=f+-1|0;c[b>>2]=d;a[d>>0]=e;g=1;return g|0}function Wn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=c[a>>2]|0;if(f>>>0<b>>>0){g=-108;return g|0}if((f-b|0)>>>0<e>>>0){g=-108;return g|0}b=f+(0-e)|0;c[a>>2]=b;zH(b|0,d|0,e|0)|0;g=e;return g|0}function Xn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=ro(e)|0;g=c[b>>2]|0;if(g>>>0<d>>>0){h=-108;return h|0}i=d;if((g-i|0)>>>0<f>>>0){h=-108;return h|0}d=g+(0-f)|0;c[b>>2]=d;g=wo(e,d,f)|0;if(g){h=g;return h|0}do if((c[e>>2]|0)==1?(g=c[b>>2]|0,(a[g>>0]|0)<0):0)if((g-i|0)<1){h=-108;return h|0}else{d=g+-1|0;c[b>>2]=d;a[d>>0]=0;j=f+1|0;break}else j=f;while(0);do if(j>>>0<128){f=c[b>>2]|0;if((f-i|0)<1){h=-108;return h|0}else{e=f+-1|0;c[b>>2]=e;a[e>>0]=j;k=1;break}}else{e=c[b>>2]|0;f=e-i|0;if(j>>>0<256)if((f|0)<2){h=-108;return h|0}else{d=e+-1|0;c[b>>2]=d;a[d>>0]=j;d=(c[b>>2]|0)+-1|0;c[b>>2]=d;a[d>>0]=-127;k=2;break}else if((f|0)<3){h=-108;return h|0}else{f=e+-1|0;c[b>>2]=f;a[f>>0]=j;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=j>>>8;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=-126;k=3;break}}while(0);f=c[b>>2]|0;if((f-i|0)<1){h=-108;return h|0}i=f+-1|0;c[b>>2]=i;a[i>>0]=2;h=j+1+k|0;return h|0}function Yn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=c[b>>2]|0;f=d;if((e-f|0)<1)return -108;d=e+-1|0;c[b>>2]=d;a[d>>0]=0;d=c[b>>2]|0;if((d-f|0)<1)g=-108;else{f=d+-1|0;c[b>>2]=f;a[f>>0]=5;g=1}return (g>>>31^1)+g|0}function Zn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=c[b>>2]|0;if(g>>>0<d>>>0){h=-108;return h|0}i=d;if((g-i|0)>>>0<f>>>0){h=-108;return h|0}d=g+(0-f)|0;c[b>>2]=d;zH(d|0,e|0,f|0)|0;if((f|0)<0){h=f;return h|0}do if(f>>>0<128){e=c[b>>2]|0;if((e-i|0)<1){h=-108;return h|0}else{d=e+-1|0;c[b>>2]=d;a[d>>0]=f;j=1;break}}else{d=c[b>>2]|0;e=d-i|0;if(f>>>0<256)if((e|0)<2){h=-108;return h|0}else{g=d+-1|0;c[b>>2]=g;a[g>>0]=f;g=(c[b>>2]|0)+-1|0;c[b>>2]=g;a[g>>0]=-127;j=2;break}else if((e|0)<3){h=-108;return h|0}else{e=d+-1|0;c[b>>2]=e;a[e>>0]=f;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=f>>>8;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=-126;j=3;break}}while(0);e=c[b>>2]|0;if((e-i|0)<1){h=-108;return h|0}i=e+-1|0;c[b>>2]=i;a[i>>0]=6;h=f+1+j|0;return h|0}function _n(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;if(!g){h=c[b>>2]|0;i=d;if((h-i|0)<1){j=-108;return j|0}k=h+-1|0;c[b>>2]=k;a[k>>0]=0;k=c[b>>2]|0;if((k-i|0)<1)l=-108;else{i=k+-1|0;c[b>>2]=i;a[i>>0]=5;l=1}i=(l>>>31^1)+l|0;if((i|0)<0){j=i;return j|0}else m=i}else m=g;g=c[b>>2]|0;if(g>>>0<d>>>0){j=-108;return j|0}i=d;if((g-i|0)>>>0<f>>>0){j=-108;return j|0}d=g+(0-f)|0;c[b>>2]=d;zH(d|0,e|0,f|0)|0;if((f|0)<0){j=f;return j|0}do if(f>>>0<128){e=c[b>>2]|0;if((e-i|0)<1){j=-108;return j|0}else{d=e+-1|0;c[b>>2]=d;a[d>>0]=f;n=1;break}}else{d=c[b>>2]|0;e=d-i|0;if(f>>>0<256)if((e|0)<2){j=-108;return j|0}else{g=d+-1|0;c[b>>2]=g;a[g>>0]=f;g=(c[b>>2]|0)+-1|0;c[b>>2]=g;a[g>>0]=-127;n=2;break}else if((e|0)<3){j=-108;return j|0}else{e=d+-1|0;c[b>>2]=e;a[e>>0]=f;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=f>>>8;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=-126;n=3;break}}while(0);e=c[b>>2]|0;if((e-i|0)<1){j=-108;return j|0}d=e+-1|0;c[b>>2]=d;a[d>>0]=6;d=f+1+n|0;if((d|0)<0){j=d;return j|0}n=d+m|0;do if(n>>>0<128){m=c[b>>2]|0;if((m-i|0)<1){j=-108;return j|0}else{d=m+-1|0;c[b>>2]=d;a[d>>0]=n;o=1;break}}else{d=c[b>>2]|0;m=d-i|0;if(n>>>0<256)if((m|0)<2){j=-108;return j|0}else{f=d+-1|0;c[b>>2]=f;a[f>>0]=n;f=(c[b>>2]|0)+-1|0;c[b>>2]=f;a[f>>0]=-127;o=2;break}else if((m|0)<3){j=-108;return j|0}else{m=d+-1|0;c[b>>2]=m;a[m>>0]=n;m=(c[b>>2]|0)+-1|0;c[b>>2]=m;a[m>>0]=n>>>8;m=(c[b>>2]|0)+-1|0;c[b>>2]=m;a[m>>0]=-126;o=3;break}}while(0);m=c[b>>2]|0;if((m-i|0)<1){j=-108;return j|0}i=m+-1|0;c[b>>2]=i;a[i>>0]=48;j=n+1+o|0;return j|0}function $n(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[b>>2]|0;g=d;if((f-g|0)<1){h=-108;return h|0}d=f+-1|0;c[b>>2]=d;a[d>>0]=((e|0)!=0)<<31>>31;e=c[b>>2]|0;if((e-g|0)<1){h=-108;return h|0}d=e+-1|0;c[b>>2]=d;a[d>>0]=1;d=c[b>>2]|0;if((d-g|0)<1){h=-108;return h|0}g=d+-1|0;c[b>>2]=g;a[g>>0]=1;h=3;return h|0}function ao(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+16|0;g=f;h=c[b>>2]|0;j=d;d=h-j|0;k=e>>>24&255;l=e>>>16&255;m=e>>>8&255;n=e&255;if((d|0)<1){o=-108;i=f;return o|0}if(!(k<<24>>24)){p=0;q=l<<24>>24>-1}else if(k<<24>>24==-1){p=l<<24>>24<0;q=0}else{p=0;q=0}if(p|q){if(l<<24>>24==-1){r=m<<24>>24<0;s=0}else if(!(l<<24>>24)){r=0;s=m<<24>>24>-1}else{r=0;s=0}if(r|s){if(m<<24>>24==-1){t=n<<24>>24<0;u=0}else if(!(m<<24>>24)){t=0;u=n<<24>>24>-1}else{t=0;u=0}if(t|u)v=0;else{w=0;x=20}}else{y=0;x=15}}else{a[g>>0]=k;y=1;x=15}if((x|0)==15){a[g+y>>0]=l;w=y+1|0;x=20}if((x|0)==20){a[g+w>>0]=m;v=w+1|0}w=v+1|0;a[g+v>>0]=n;if((d|0)<(w|0)){o=-108;i=f;return o|0}d=h+~v|0;c[b>>2]=d;zH(d|0,g|0,w|0)|0;g=c[b>>2]|0;if((g-j|0)<1){o=-108;i=f;return o|0}d=g+-1|0;c[b>>2]=d;a[d>>0]=w;w=c[b>>2]|0;if((w-j|0)<1){o=-108;i=f;return o|0}j=w+-1|0;c[b>>2]=j;a[j>>0]=2;o=v+3|0;i=f;return o|0}function bo(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;g=c[b>>2]|0;if(g>>>0<d>>>0){h=-108;return h|0}i=d;if((g-i|0)>>>0<f>>>0){h=-108;return h|0}d=g+(0-f)|0;c[b>>2]=d;zH(d|0,e|0,f|0)|0;if((f|0)<0){h=f;return h|0}do if(f>>>0<128){e=c[b>>2]|0;if((e-i|0)<1){h=-108;return h|0}else{d=e+-1|0;c[b>>2]=d;a[d>>0]=f;j=1;break}}else{d=c[b>>2]|0;e=d-i|0;if(f>>>0<256)if((e|0)<2){h=-108;return h|0}else{g=d+-1|0;c[b>>2]=g;a[g>>0]=f;g=(c[b>>2]|0)+-1|0;c[b>>2]=g;a[g>>0]=-127;j=2;break}else if((e|0)<3){h=-108;return h|0}else{e=d+-1|0;c[b>>2]=e;a[e>>0]=f;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=f>>>8;e=(c[b>>2]|0)+-1|0;c[b>>2]=e;a[e>>0]=-126;j=3;break}}while(0);e=c[b>>2]|0;if((e-i|0)<1){h=-108;return h|0}i=e+-1|0;c[b>>2]=i;a[i>>0]=4;h=f+1+j|0;return h|0}function co(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if(!h){c[f>>2]=0;i=0;return i|0}j=(h>>>0)/3|0;k=(((h>>>0)%3|0|0)!=0&1)+j|0;if(k>>>0>1073741823){c[f>>2]=-1;i=-42;return i|0}l=k<<2|1;if(l>>>0>e>>>0){c[f>>2]=l;i=-42;return i|0}l=j*3|0;if(!l){m=g;n=0;o=b}else{j=g;g=0;e=b;while(1){k=d[j>>0]|0;p=d[j+1>>0]|0;q=j+3|0;r=d[j+2>>0]|0;a[e>>0]=a[18520+(k>>>2)>>0]|0;a[e+1>>0]=a[18520+(k<<4&48|p>>>4)>>0]|0;a[e+2>>0]=a[18520+(p<<2&60|r>>>6)>>0]|0;p=e+4|0;a[e+3>>0]=a[18520+(r&63)>>0]|0;r=g+3|0;if(r>>>0<l>>>0){j=q;g=r;e=p}else{m=q;n=r;o=p;break}}}if(n>>>0<h>>>0){e=d[m>>0]|0;g=(n+1|0)>>>0<h>>>0;if(g)s=d[m+1>>0]|0;else s=0;a[o>>0]=a[18520+(e>>>2)>>0]|0;a[o+1>>0]=a[18520+(s>>>4|e<<4&48)>>0]|0;if(g)t=a[18520+(s<<2&60)>>0]|0;else t=61;a[o+2>>0]=t;a[o+3>>0]=61;u=o+4|0}else u=o;c[f>>2]=u-b;a[u>>0]=0;i=0;return i|0}function eo(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;do if(h){i=0;j=0;k=0;while(1){a:do if(i>>>0<h>>>0){l=i;m=0;while(1){if((a[g+l>>0]|0)!=32){n=l;o=m;break a}p=l+1|0;q=m+1|0;if(p>>>0<h>>>0){l=p;m=q}else{n=p;o=q;break}}}else{n=i;o=0}while(0);if((n|0)==(h|0)){r=h;s=j;t=k;u=17;break}m=a[g+n>>0]|0;if((h-n|0)>>>0>1&m<<24>>24==13)if((a[g+(n+1)>>0]|0)==10){v=j;w=k}else{x=13;u=9}else if(m<<24>>24==10){v=j;w=k}else{x=m;u=9}if((u|0)==9){u=0;if(o){y=-44;u=31;break}if(x<<24>>24==61){m=j+1|0;if(m>>>0>2){y=-44;u=31;break}else z=m}else if(x<<24>>24<0){y=-44;u=31;break}else z=j;m=a[18584+(x&255)>>0]|0;if(m<<24>>24==127){y=-44;u=31;break}if((z|0)!=0&(m&255)<64){y=-44;u=31;break}v=z;w=k+1|0}m=n+1|0;if(m>>>0<h>>>0){i=m;j=v;k=w}else{r=m;s=v;t=w;u=17;break}}if((u|0)==17){if(!t)break;k=(((t*6|0)+7|0)>>>3)-s|0;if((b|0)==0|k>>>0>e>>>0){c[f>>2]=k;y=-42;return y|0}if(!r)A=b;else{k=g;j=r;i=3;m=0;l=b;q=0;while(1){p=a[k>>0]|0;if(!(p<<24>>24==32|p<<24>>24==10|p<<24>>24==13)){B=p<<24>>24==61&1;C=i-B|0;D=d[18584+(p&255)>>0]&63|q<<6;p=m+1|0;if((p|0)==4){if((i|0)==(B|0))E=l;else{a[l>>0]=q>>>10;E=l+1|0}if(C>>>0>1){B=E+1|0;a[E>>0]=q>>>2;if(C>>>0>2){a[B>>0]=D;F=C;G=0;H=E+2|0;I=D}else{F=2;G=0;H=B;I=D}}else{F=C;G=0;H=E;I=D}}else{F=C;G=p;H=l;I=D}}else{F=i;G=m;H=l;I=q}j=j+-1|0;if(!j){A=H;break}else{k=k+1|0;i=F;m=G;l=H;q=I}}}c[f>>2]=A-b;y=0;return y|0}else if((u|0)==31)return y|0}while(0);c[f>>2]=0;y=0;return y|0}function fo(a){a=a|0;if(!a)return;c[a>>2]=1;c[a+4>>2]=0;c[a+8>>2]=0;return}function go(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;if(!b)return;d=b+8|0;e=c[d>>2]|0;f=b+4|0;if(e){g=c[f>>2]<<2;if(!g)h=e;else{i=g;g=e;while(1){i=i+-1|0;a[g>>0]=0;if(!i)break;else g=g+1|0}h=c[d>>2]|0}qy(h)}c[b>>2]=1;c[f>>2]=0;c[d>>2]=0;return}function ho(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if(d>>>0>1e4){e=-16;return e|0}f=b+4|0;g=c[f>>2]|0;if(g>>>0>=d>>>0){e=0;return e|0}h=ry(d,4)|0;if(!h){e=-16;return e|0}i=b+8|0;b=c[i>>2]|0;if(!b)j=i;else{k=g<<2;zH(h|0,b|0,k|0)|0;if(!k)l=b;else{g=k;k=b;while(1){g=g+-1|0;a[k>>0]=0;if(!g)break;else k=k+1|0}l=c[i>>2]|0}qy(l);j=i}c[f>>2]=d;c[j>>2]=h;e=0;return e|0}function io(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b+4|0;f=c[e>>2]|0;if(f>>>0>d>>>0){g=b+8|0;h=f;while(1){i=h+-1|0;if(!i){j=h;break}if(!(c[(c[g>>2]|0)+(i<<2)>>2]|0))h=i;else{j=h;break}}h=j>>>0<d>>>0?d:j;j=ry(h,4)|0;if(!j){k=-16;return k|0}i=c[g>>2]|0;if(!i)l=g;else{zH(j|0,i|0,h<<2|0)|0;m=f<<2;if(!m)n=i;else{o=m;m=i;while(1){o=o+-1|0;a[m>>0]=0;if(!o)break;else m=m+1|0}n=c[g>>2]|0}qy(n);l=g}c[e>>2]=h;c[l>>2]=j;k=0;return k|0}if(d>>>0>1e4){k=-16;return k|0}if(f>>>0>=d>>>0){k=0;return k|0}j=ry(d,4)|0;if(!j){k=-16;return k|0}l=b+8|0;b=c[l>>2]|0;if(!b)p=l;else{h=f<<2;zH(j|0,b|0,h|0)|0;if(!h)q=b;else{f=h;h=b;while(1){f=f+-1|0;a[h>>0]=0;if(!f)break;else h=h+1|0}q=c[l>>2]|0}qy(q);p=l}c[e>>2]=d;c[p>>2]=j;k=0;return k|0}function jo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if((b|0)==(d|0)){e=0;return e|0}f=d+8|0;g=c[f>>2]|0;if(!g){if(!b){e=0;return e|0}h=b+8|0;i=c[h>>2]|0;j=b+4|0;if(i){k=c[j>>2]<<2;if(!k)l=i;else{m=k;k=i;while(1){m=m+-1|0;a[k>>0]=0;if(!m)break;else k=k+1|0}l=c[h>>2]|0}qy(l)}c[b>>2]=1;c[j>>2]=0;c[h>>2]=0;e=0;return e|0}h=c[d+4>>2]|0;while(1){j=h+-1|0;if(!j){n=h;break}if(!(c[g+(j<<2)>>2]|0))h=j;else{n=h;break}}c[b>>2]=c[d>>2];if(n>>>0>1e4){e=-16;return e|0}d=b+4|0;h=c[d>>2]|0;if(h>>>0<n>>>0){g=ry(n,4)|0;if(!g){e=-16;return e|0}j=b+8|0;l=c[j>>2]|0;if(!l)o=j;else{k=h<<2;zH(g|0,l|0,k|0)|0;if(!k)p=l;else{m=k;k=l;while(1){m=m+-1|0;a[k>>0]=0;if(!m)break;else k=k+1|0}p=c[j>>2]|0}qy(p);o=j}c[d>>2]=n;c[o>>2]=g;q=j;r=c[d>>2]|0}else{q=b+8|0;r=h}BH(c[q>>2]|0,0,r<<2|0)|0;zH(c[q>>2]|0,c[f>>2]|0,n<<2|0)|0;e=0;return e|0}function ko(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;c[e>>2]=c[a>>2];c[e+4>>2]=c[a+4>>2];c[e+8>>2]=c[a+8>>2];c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];c[b>>2]=c[e>>2];c[b+4>>2]=c[e+4>>2];c[b+8>>2]=c[e+8>>2];i=d;return}function lo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=e&255;e=d+4|0;g=c[e>>2]|0;if(g>>>0>1e4){h=-16;return h|0}i=b+4|0;j=c[i>>2]|0;if(j>>>0<g>>>0){k=ry(g,4)|0;if(!k){h=-16;return h|0}l=b+8|0;m=c[l>>2]|0;if(!m)n=l;else{o=j<<2;zH(k|0,m|0,o|0)|0;if(!o)p=m;else{j=o;o=m;while(1){j=j+-1|0;a[o>>0]=0;if(!j)break;else o=o+1|0}p=c[l>>2]|0}qy(p);n=l}c[i>>2]=g;c[n>>2]=k;q=c[e>>2]|0}else q=g;g=(0-f&128|f)>>>7;f=0-(g^1)|0;k=0-g|0;c[b>>2]=(c[d>>2]&k)+(c[b>>2]&f);if(!q)r=0;else{q=c[b+8>>2]|0;g=c[d+8>>2]|0;d=0;while(1){n=q+(d<<2)|0;c[n>>2]=(c[g+(d<<2)>>2]&k)+(c[n>>2]&f);n=d+1|0;if(n>>>0<(c[e>>2]|0)>>>0)d=n;else{r=n;break}}}if(r>>>0>=(c[i>>2]|0)>>>0){h=0;return h|0}d=c[b+8>>2]|0;b=r;do{r=d+(b<<2)|0;c[r>>2]=c[r>>2]&f;b=b+1|0}while(b>>>0<(c[i>>2]|0)>>>0);h=0;return h|0}function mo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((b|0)==(d|0)){f=0;return f|0}g=e&255;e=(0-g&128|g)>>>7;g=d+4|0;h=c[g>>2]|0;if(h>>>0>1e4){f=-16;return f|0}i=b+4|0;j=c[i>>2]|0;if(j>>>0<h>>>0){k=ry(h,4)|0;if(!k){f=-16;return f|0}l=b+8|0;m=c[l>>2]|0;if(!m)n=l;else{o=j<<2;zH(k|0,m|0,o|0)|0;if(!o)p=m;else{q=o;o=m;while(1){q=q+-1|0;a[o>>0]=0;if(!q)break;else o=o+1|0}p=c[l>>2]|0}qy(p);n=l}c[i>>2]=h;c[n>>2]=k;r=c[i>>2]|0}else r=j;if(r>>>0>1e4){f=-16;return f|0}j=c[g>>2]|0;if(j>>>0<r>>>0){k=ry(r,4)|0;if(!k){f=-16;return f|0}n=d+8|0;h=c[n>>2]|0;if(!h)s=n;else{l=j<<2;zH(k|0,h|0,l|0)|0;if(!l)t=h;else{j=l;l=h;while(1){j=j+-1|0;a[l>>0]=0;if(!j)break;else l=l+1|0}t=c[n>>2]|0}qy(t);s=n}c[g>>2]=r;c[s>>2]=k;u=c[i>>2]|0}else u=r;r=c[b>>2]|0;k=0-(e^1)|0;s=0-e|0;c[b>>2]=(c[d>>2]&s)+(r&k);c[d>>2]=(c[d>>2]&k)+(r&s);if(!u){f=0;return f|0}u=c[b+8>>2]|0;b=c[d+8>>2]|0;d=0;do{r=u+(d<<2)|0;e=c[r>>2]|0;g=b+(d<<2)|0;c[r>>2]=(c[g>>2]&s)+(e&k);c[g>>2]=(c[g>>2]&k)+(e&s);d=d+1|0}while(d>>>0<(c[i>>2]|0)>>>0);f=0;return f|0}function no(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+4|0;e=c[d>>2]|0;if(!e){f=ry(1,4)|0;if(!f){g=-16;return g|0}h=a+8|0;i=c[h>>2]|0;if(i)qy(i);c[d>>2]=1;c[h>>2]=f;j=h;k=f;l=4}else{f=a+8|0;j=f;k=c[f>>2]|0;l=e<<2}BH(k|0,0,l|0)|0;c[c[j>>2]>>2]=(b|0)<0?0-b|0:b;c[a>>2]=b>>31|1;g=0;return g|0}function oo(a,b){a=a|0;b=b|0;var d=0;if(c[a+4>>2]<<5>>>0<=b>>>0){d=0;return d|0}d=(c[(c[a+8>>2]|0)+(b>>>5<<2)>>2]|0)>>>(b&31)&1;return d|0}function po(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=d>>>5;g=d&31;h=e&255;if((e&255)>=2){i=-4;return i|0}j=b+4|0;k=c[j>>2]|0;if(k<<5>>>0<=d>>>0){if(!(e<<24>>24)){i=0;return i|0}e=f+1|0;if(e>>>0>1e4){i=-16;return i|0}if(k>>>0<e>>>0){d=ry(e,4)|0;if(!d){i=-16;return i|0}l=b+8|0;m=c[l>>2]|0;if(!m)n=l;else{o=k<<2;zH(d|0,m|0,o|0)|0;if(!o)p=m;else{k=o;o=m;while(1){k=k+-1|0;a[o>>0]=0;if(!k)break;else o=o+1|0}p=c[l>>2]|0}qy(p);n=l}c[j>>2]=e;c[n>>2]=d}}d=(c[b+8>>2]|0)+(f<<2)|0;c[d>>2]=c[d>>2]&~(1<<g)|h<<g;i=0;return i|0}function qo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;b=c[a+4>>2]|0;if(!b){d=0;return d|0}e=c[a+8>>2]|0;a=b;while(1){b=a+-1|0;if(!b){f=e;g=4;break}h=c[e+(b<<2)>>2]|0;if(!h)a=b;else{i=h;j=b;g=6;break}}if((g|0)==4){k=c[f>>2]|0;l=32}else if((g|0)==6){k=i;l=(j<<5)+32|0}if((k|0)>-1){j=0;i=-2147483648;while(1){i=i>>>1;g=j+1|0;if(!(g>>>0<32&(i&k|0)==0)){m=g;break}else j=g}}else m=0;d=l-m|0;return d|0}function ro(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=c[a+4>>2]|0;if(!b){d=0;return d|0}e=c[a+8>>2]|0;a=b;while(1){b=a+-1|0;if(!b){f=4;break}g=c[e+(b<<2)>>2]|0;if(!g)a=b;else{h=g;i=b;f=6;break}}if((f|0)==4){j=c[e>>2]|0;k=39}else if((f|0)==6){j=h;k=(i<<5)+39|0}if((j|0)>-1){i=0;h=-2147483648;while(1){h=h>>>1;f=i+1|0;if(!(f>>>0<32&(h&j|0)==0)){l=f;break}else i=f}}else l=0;d=(k-l|0)>>>3;return d|0}function so(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;f=i;i=i+32|0;g=f+16|0;h=f+12|0;j=f;if((d+-2|0)>>>0>14){k=-4;i=f;return k|0}c[j>>2]=1;l=j+4|0;c[l>>2]=0;m=j+8|0;c[m>>2]=0;n=yH(e|0)|0;a:do if((d|0)==16){if(n>>>0>1073741823){k=-4;i=f;return k|0}o=((n&7|0)!=0&1)+(n>>>3&134217727)|0;if(o>>>0>1e4)p=-16;else{q=b+4|0;r=c[q>>2]|0;if(r>>>0<o>>>0){s=ry(o,4)|0;if(!s){p=-16;break}t=b+8|0;u=c[t>>2]|0;if(!u)v=t;else{w=r<<2;zH(s|0,u|0,w|0)|0;if(!w)x=u;else{y=w;w=u;while(1){y=y+-1|0;a[w>>0]=0;if(!y)break;else w=w+1|0}x=c[t>>2]|0}qy(x);v=t}c[q>>2]=o;c[v>>2]=s;z=c[q>>2]|0}else z=r;if(!z){w=ry(1,4)|0;if(!w){p=-16;break}y=b+8|0;u=c[y>>2]|0;if(u)qy(u);c[q>>2]=1;c[y>>2]=w;A=y;B=w;C=4}else{w=b+8|0;A=w;B=c[w>>2]|0;C=z<<2}BH(B|0,0,C|0)|0;c[c[A>>2]>>2]=0;c[b>>2]=1;w=n;y=0;u=0;while(1){if(!w){p=u;break a}else if((w|0)==1?(a[e>>0]|0)==45:0){D=u;break}E=w+-1|0;F=a[e+E>>0]|0;G=F<<24>>24;H=(F+-97&255)<6?G+-87|0:(F+-65&255)<6?G+-55|0:(F+-48&255)<10?G+-48|0:255;G=H>>>0<16;F=G?0:-6;if(!G){p=F;break a}G=(c[A>>2]|0)+(y>>>3<<2)|0;c[G>>2]=c[G>>2]|H<<(y<<2&28);w=E;y=y+1|0;u=F}c[b>>2]=-1;p=D}}else{u=b+4|0;y=c[u>>2]|0;if(!y){w=ry(1,4)|0;if(!w){p=-16;break}q=b+8|0;r=c[q>>2]|0;if(r)qy(r);c[u>>2]=1;c[q>>2]=w;I=q;J=w;K=4}else{w=b+8|0;I=w;J=c[w>>2]|0;K=y<<2}BH(J|0,0,K|0)|0;c[c[I>>2]>>2]=0;c[b>>2]=1;if(!n)p=0;else{y=g+4|0;w=g+8|0;q=g+4|0;u=g+8|0;r=g+4|0;s=g+8|0;o=0;while(1){if((o|0)==0?(a[e>>0]|0)==45:0)c[b>>2]=-1;else L=37;do if((L|0)==37){L=0;t=a[e+o>>0]|0;F=t<<24>>24;E=(t+-97&255)<6?F+-87|0:(t+-65&255)<6?F+-55|0:(t+-48&255)<10?F+-48|0:255;if(E>>>0>=d>>>0){p=-6;break a}c[g>>2]=1;c[y>>2]=1;c[w>>2]=h;c[h>>2]=d;F=Fo(j,b,g)|0;if(F){p=F;break a}if((c[b>>2]|0)==1){c[h>>2]=(E|0)<0?0-E|0:E;c[g>>2]=E>>31|1;c[q>>2]=1;c[u>>2]=h;F=Do(b,j,g)|0;if(!F)break;else{p=F;break a}}else{c[h>>2]=(E|0)<0?0-E|0:E;c[g>>2]=E>>31|1;c[r>>2]=1;c[s>>2]=h;E=Eo(b,j,g)|0;if(!E)break;else{p=E;break a}}}while(0);o=o+1|0;if(o>>>0>=n>>>0){p=0;break}}}}while(0);n=c[m>>2]|0;if(n){g=c[l>>2]<<2;if(!g)M=n;else{b=g;g=n;while(1){b=b+-1|0;a[g>>0]=0;if(!b)break;else g=g+1|0}M=c[m>>2]|0}qy(M)}c[j>>2]=1;c[l>>2]=0;c[m>>2]=0;k=p;i=f;return k|0}function to(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e+4|0;g=e;c[f>>2]=1;c[f+4>>2]=1;c[f+8>>2]=g;c[g>>2]=d;d=Fo(a,b,f)|0;i=e;return d|0}function uo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e+4|0;g=e;c[g>>2]=(d|0)<0?0-d|0:d;c[f>>2]=d>>31|1;c[f+4>>2]=1;c[f+8>>2]=g;g=Eo(a,b,f)|0;i=e;return g|0}function vo(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;a:do if(!f)g=0;else{h=0;while(1){if(a[e+h>>0]|0){g=h;break a}i=h+1|0;if(i>>>0<f>>>0)h=i;else{g=i;break}}}while(0);h=f-g|0;i=((h&3|0)!=0&1)+(h>>>2)|0;if(i>>>0>1e4){j=-16;return j|0}k=b+4|0;l=c[k>>2]|0;if(l>>>0<i>>>0){m=ry(i,4)|0;if(!m){j=-16;return j|0}n=b+8|0;o=c[n>>2]|0;if(!o)p=n;else{q=l<<2;zH(m|0,o|0,q|0)|0;if(!q)r=o;else{s=q;q=o;while(1){s=s+-1|0;a[q>>0]=0;if(!s)break;else q=q+1|0}r=c[n>>2]|0}qy(r);p=n}c[k>>2]=i;c[p>>2]=m;t=c[k>>2]|0}else t=l;if(!t){l=ry(1,4)|0;if(!l){j=-16;return j|0}m=b+8|0;p=c[m>>2]|0;if(p)qy(p);c[k>>2]=1;c[m>>2]=l;u=m;v=l;w=4}else{l=b+8|0;u=l;v=c[l>>2]|0;w=t<<2}BH(v|0,0,w|0)|0;c[c[u>>2]>>2]=0;c[b>>2]=1;if(g>>>0>=f>>>0){j=0;return j|0}g=c[b+8>>2]|0;b=f;f=0;do{b=b+-1|0;u=g+(f>>>2<<2)|0;c[u>>2]=c[u>>2]|d[e+b>>0]<<(f<<3&24);f=f+1|0}while((f|0)!=(h|0));j=0;return j|0}function wo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;f=c[b+4>>2]|0;if(!f){BH(d|0,0,e|0)|0;g=0;return g|0}h=c[b+8>>2]|0;i=f;while(1){f=i+-1|0;if(!f){j=5;break}k=c[h+(f<<2)>>2]|0;if(!k)i=f;else{l=k;m=f;j=7;break}}if((j|0)==5){n=c[h>>2]|0;o=39}else if((j|0)==7){n=l;o=(m<<5)+39|0}if((n|0)>-1){m=0;l=-2147483648;while(1){l=l>>>1;j=m+1|0;if(!(j>>>0<32&(l&n|0)==0)){p=j;break}else m=j}}else p=0;m=(o-p|0)>>>3;if(m>>>0>e>>>0){g=-8;return g|0}BH(d|0,0,e|0)|0;if(!m){g=0;return g|0}p=b+8|0;b=e;e=0;o=m;while(1){b=b+-1|0;a[d+b>>0]=(c[(c[p>>2]|0)+(e>>>2<<2)>>2]|0)>>>(e<<3&24);o=o+-1|0;if(!o){g=0;break}else e=e+1|0}return g|0}function xo(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=d>>>5;f=d&31;g=b+4|0;h=c[g>>2]|0;if(!h)i=0;else{j=c[b+8>>2]|0;k=h;while(1){l=k+-1|0;if(!l){m=4;break}n=c[j+(l<<2)>>2]|0;if(!n)k=l;else{o=n;p=l;m=6;break}}if((m|0)==4){q=c[j>>2]|0;r=32}else if((m|0)==6){q=o;r=(p<<5)+32|0}if((q|0)>-1){p=0;o=-2147483648;while(1){o=o>>>1;m=p+1|0;if(!(m>>>0<32&(o&q|0)==0)){s=m;break}else p=m}}else s=0;i=r-s|0}s=i+d|0;if(h<<5>>>0<s>>>0){d=((s&31|0)!=0&1)+(s>>>5)|0;if(d>>>0>1e4){t=-16;return t|0}if(h>>>0<d>>>0){s=ry(d,4)|0;if(!s){t=-16;return t|0}i=b+8|0;r=c[i>>2]|0;if(!r)u=i;else{p=h<<2;zH(s|0,r|0,p|0)|0;if(!p)v=r;else{h=p;p=r;while(1){h=h+-1|0;a[p>>0]=0;if(!h)break;else p=p+1|0}v=c[i>>2]|0}qy(v);u=i}c[g>>2]=d;c[u>>2]=s}}if(e){s=c[g>>2]|0;if(s>>>0>e>>>0){u=~e;d=c[b+8>>2]|0;i=s;do{v=i;i=i+-1|0;c[d+(i<<2)>>2]=c[d+(v+u<<2)>>2]}while(i>>>0>e>>>0);w=e}else w=s;if(w){s=c[b+8>>2]|0;i=w;do{i=i+-1|0;c[s+(i<<2)>>2]=0}while((i|0)!=0)}}if(!f){t=0;return t|0}if(e>>>0>=(c[g>>2]|0)>>>0){t=0;return t|0}i=c[b+8>>2]|0;b=32-f|0;s=e;e=0;while(1){w=i+(s<<2)|0;u=c[w>>2]|0;c[w>>2]=u<<f|e;s=s+1|0;if(s>>>0>=(c[g>>2]|0)>>>0){t=0;break}else e=u>>>b}return t|0}function yo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=b>>>5;e=b&31;b=a+4|0;f=c[b>>2]|0;if(d>>>0<=f>>>0?(g=(d|0)==(f|0),h=(e|0)!=0,!(h&g)):0){if(d){if(g){i=d;j=0}else{g=c[a+8>>2]|0;k=0;while(1){c[g+(k<<2)>>2]=c[g+(k+d<<2)>>2];l=k+1|0;m=c[b>>2]|0;if(l>>>0<(m-d|0)>>>0)k=l;else{i=m;j=l;break}}}if(j>>>0<i>>>0){k=c[a+8>>2]|0;d=j;do{c[k+(d<<2)>>2]=0;d=d+1|0;j=c[b>>2]|0}while(d>>>0<j>>>0);n=j}else n=i}else n=f;if((n|0)==0|h^1){o=0;return o|0}h=c[a+8>>2]|0;i=32-e|0;d=n;n=0;while(1){d=d+-1|0;k=h+(d<<2)|0;j=c[k>>2]|0;c[k>>2]=j>>>e|n;if(!d){o=0;break}else n=j<<i}return o|0}if(!f){i=ry(1,4)|0;if(!i){o=-16;return o|0}n=a+8|0;d=c[n>>2]|0;if(d)qy(d);c[b>>2]=1;c[n>>2]=i;p=n;q=i;r=4}else{i=a+8|0;p=i;q=c[i>>2]|0;r=f<<2}BH(q|0,0,r|0)|0;c[c[p>>2]>>2]=0;c[a>>2]=1;o=0;return o|0}function zo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+8|0;e=c[a+4>>2]|0;while(1){if(!e){f=0;break}g=e+-1|0;if(!(c[(c[d>>2]|0)+(g<<2)>>2]|0))e=g;else{f=e;break}}e=b+8|0;g=c[b+4>>2]|0;while(1){if(!g){h=0;break}i=g+-1|0;if(!(c[(c[e>>2]|0)+(i<<2)>>2]|0))g=i;else{h=g;break}}if(!(h|f)){j=0;return j|0}if(f>>>0>h>>>0){j=c[a>>2]|0;return j|0}if(h>>>0>f>>>0){j=0-(c[b>>2]|0)|0;return j|0}h=c[a>>2]|0;a=c[b>>2]|0;if((h|0)>0&(a|0)<0){j=1;return j|0}if((a|0)>0&(h|0)<0){j=-1;return j|0}else k=f;while(1){if(!k){j=0;l=18;break}k=k+-1|0;f=c[(c[d>>2]|0)+(k<<2)>>2]|0;a=c[(c[e>>2]|0)+(k<<2)>>2]|0;if(f>>>0>a>>>0){j=h;l=18;break}if(f>>>0<a>>>0){l=17;break}}if((l|0)==17){j=0-h|0;return j|0}else if((l|0)==18)return j|0;return 0}function Ao(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=(b|0)<0?0-b|0:b;e=b>>31|1;b=a+8|0;f=c[a+4>>2]|0;while(1){if(!f){g=0;break}h=f+-1|0;if(!(c[(c[b>>2]|0)+(h<<2)>>2]|0))f=h;else{g=f;break}}f=(d|0)==0?0:1;if(!(f|g)){i=0;return i|0}if(g>>>0>f>>>0){i=c[a>>2]|0;return i|0}if(f>>>0>g>>>0){i=0-e|0;return i|0}f=c[a>>2]|0;if((e|0)<0&(f|0)>0){i=1;return i|0}if((e|0)>0&(f|0)<0){i=-1;return i|0}else j=g;while(1){if(!j){i=0;k=15;break}j=j+-1|0;g=c[(c[b>>2]|0)+(j<<2)>>2]|0;if(g>>>0>d>>>0){i=f;k=15;break}if(g>>>0<d>>>0){k=14;break}}if((k|0)==14){i=0-f|0;return i|0}else if((k|0)==15)return i|0;return 0}function Bo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=(b|0)==(e|0);g=f?d:e;e=f?b:d;if((e|0)!=(b|0)?(d=jo(b,e)|0,(d|0)!=0):0){h=d;return h|0}c[b>>2]=1;d=g+8|0;e=c[g+4>>2]|0;while(1){if(!e){i=0;break}g=e+-1|0;if(!(c[(c[d>>2]|0)+(g<<2)>>2]|0))e=g;else{j=e;k=6;break}}if((k|0)==6)if(j>>>0>1e4){h=-16;return h|0}else i=j;j=b+4|0;e=c[j>>2]|0;if(e>>>0<i>>>0){g=ry(i,4)|0;if(!g){h=-16;return h|0}f=b+8|0;l=c[f>>2]|0;if(!l)m=f;else{n=e<<2;zH(g|0,l|0,n|0)|0;if(!n)o=l;else{e=n;n=l;while(1){e=e+-1|0;a[n>>0]=0;if(!e)break;else n=n+1|0}o=c[f>>2]|0}qy(o);m=f}c[j>>2]=i;c[m>>2]=g;p=f}else p=b+8|0;b=c[p>>2]|0;if(!i){h=0;return h|0}f=0;g=0;m=c[d>>2]|0;d=b;while(1){o=(c[d>>2]|0)+f|0;c[d>>2]=o;n=o+(c[m>>2]|0)|0;c[d>>2]=n;e=(n>>>0<(c[m>>2]|0)>>>0&1)+(o>>>0<f>>>0&1)|0;g=g+1|0;if((g|0)==(i|0)){q=e;break}else{f=e;m=m+4|0;d=d+4|0}}if(!q){h=0;return h|0}d=b;m=q;q=i;f=b+(i<<2)|0;while(1){i=c[j>>2]|0;b=q;q=q+1|0;if(b>>>0<i>>>0){r=d;s=f}else{if(q>>>0>1e4){h=-16;k=34;break}if(i>>>0<q>>>0){g=ry(q,4)|0;if(!g){h=-16;k=34;break}if(d){e=i<<2;zH(g|0,d|0,e|0)|0;if(!e)t=d;else{i=e;e=d;while(1){i=i+-1|0;a[e>>0]=0;if(!i)break;else e=e+1|0}t=c[p>>2]|0}qy(t)}c[j>>2]=q;c[p>>2]=g;u=g}else u=d;r=u;s=u+(b<<2)|0}e=(c[s>>2]|0)+m|0;c[s>>2]=e;i=e>>>0<m>>>0;if(!i){h=0;k=34;break}else{d=r;m=i&1;f=s+4|0}}if((k|0)==34)return h|0;return 0}function Co(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=i;i=i+16|0;g=f;h=d+8|0;j=c[d+4>>2]|0;while(1){if(!j){k=0;break}l=j+-1|0;if(!(c[(c[h>>2]|0)+(l<<2)>>2]|0))j=l;else{k=j;break}}j=e+8|0;l=c[e+4>>2]|0;while(1){if(!l){m=0;break}n=l+-1|0;if(!(c[(c[j>>2]|0)+(n<<2)>>2]|0))l=n;else{m=l;break}}a:do if(!(k>>>0>m>>>0|(m|k|0)==0)){if(m>>>0>k>>>0){o=-10;i=f;return o|0}else p=k;while(1){if(!p)break a;p=p+-1|0;l=c[(c[h>>2]|0)+(p<<2)>>2]|0;n=c[(c[j>>2]|0)+(p<<2)>>2]|0;if(l>>>0>n>>>0)break a;if(l>>>0<n>>>0){o=-10;break}}i=f;return o|0}while(0);c[g>>2]=1;p=g+4|0;c[p>>2]=0;j=g+8|0;c[j>>2]=0;if((b|0)==(e|0)){h=jo(g,e)|0;if(!h){q=g;r=14}else s=h}else{q=e;r=14}b:do if((r|0)==14){if((b|0)!=(d|0)?(e=jo(b,d)|0,(e|0)!=0):0){s=e;break}c[b>>2]=1;e=q+8|0;h=c[q+4>>2]|0;while(1){if(!h){s=0;break b}k=h+-1|0;m=c[e>>2]|0;if(!(c[m+(k<<2)>>2]|0))h=k;else{t=m;u=h;break}}h=c[b+8>>2]|0;e=t;m=h;k=0;n=0;while(1){l=c[m>>2]|0;v=l-k|0;c[m>>2]=v;w=c[e>>2]|0;x=(v>>>0<w>>>0&1)+(l>>>0<k>>>0&1)|0;c[m>>2]=v-w;n=n+1|0;if((n|0)==(u|0)){y=x;break}else{e=e+4|0;m=m+4|0;k=x}}if(!y)s=0;else{k=h+(u<<2)|0;m=y;while(1){e=c[k>>2]|0;n=e>>>0<m>>>0;c[k>>2]=e-m;if(n){k=k+4|0;m=n&1}else{s=0;break}}}}while(0);y=c[j>>2]|0;if(y){u=c[p>>2]<<2;if(!u)z=y;else{t=u;u=y;while(1){t=t+-1|0;a[u>>0]=0;if(!t)break;else u=u+1|0}z=c[j>>2]|0}qy(z)}c[g>>2]=1;c[p>>2]=0;c[j>>2]=0;o=s;i=f;return o|0}function Do(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=c[b>>2]|0;if((aa(c[d>>2]|0,e)|0)>=0){f=Bo(a,b,d)|0;if(f){g=f;return g|0}c[a>>2]=e;g=0;return g|0}f=b+8|0;h=c[b+4>>2]|0;while(1){if(!h){i=0;break}j=h+-1|0;if(!(c[(c[f>>2]|0)+(j<<2)>>2]|0))h=j;else{i=h;break}}h=d+8|0;j=c[d+4>>2]|0;while(1){if(!j){k=0;break}l=j+-1|0;if(!(c[(c[h>>2]|0)+(l<<2)>>2]|0))j=l;else{k=j;break}}a:do if(!(i>>>0>k>>>0|(k|i|0)==0)){if(k>>>0<=i>>>0){j=i;do{if(!j)break a;j=j+-1|0;l=c[(c[f>>2]|0)+(j<<2)>>2]|0;m=c[(c[h>>2]|0)+(j<<2)>>2]|0;if(l>>>0>m>>>0)break a}while(l>>>0>=m>>>0)}j=Co(a,d,b)|0;if(j){g=j;return g|0}c[a>>2]=0-e;g=0;return g|0}while(0);h=Co(a,b,d)|0;if(h){g=h;return g|0}c[a>>2]=e;g=0;return g|0}function Eo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=c[b>>2]|0;if((aa(c[d>>2]|0,e)|0)<=0){f=Bo(a,b,d)|0;if(f){g=f;return g|0}c[a>>2]=e;g=0;return g|0}f=b+8|0;h=c[b+4>>2]|0;while(1){if(!h){i=0;break}j=h+-1|0;if(!(c[(c[f>>2]|0)+(j<<2)>>2]|0))h=j;else{i=h;break}}h=d+8|0;j=c[d+4>>2]|0;while(1){if(!j){k=0;break}l=j+-1|0;if(!(c[(c[h>>2]|0)+(l<<2)>>2]|0))j=l;else{k=j;break}}a:do if(!(i>>>0>k>>>0|(k|i|0)==0)){if(k>>>0<=i>>>0){j=i;do{if(!j)break a;j=j+-1|0;l=c[(c[f>>2]|0)+(j<<2)>>2]|0;m=c[(c[h>>2]|0)+(j<<2)>>2]|0;if(l>>>0>m>>>0)break a}while(l>>>0>=m>>>0)}j=Co(a,d,b)|0;if(j){g=j;return g|0}c[a>>2]=0-e;g=0;return g|0}while(0);h=Co(a,b,d)|0;if(h){g=h;return g|0}c[a>>2]=e;g=0;return g|0}function Fo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;f=i;i=i+32|0;g=f+12|0;h=f;c[g>>2]=1;j=g+4|0;c[j>>2]=0;k=g+8|0;c[k>>2]=0;c[h>>2]=1;l=h+4|0;c[l>>2]=0;m=h+8|0;c[m>>2]=0;if((b|0)==(d|0)){n=jo(g,b)|0;if(!n){o=g;p=3}else q=n}else{o=d;p=3}do if((p|0)==3){if((b|0)==(e|0)){d=jo(h,b)|0;if(!d)r=h;else{q=d;break}}else r=e;d=o+8|0;n=c[o+4>>2]|0;while(1){if(!n){s=0;break}g=n+-1|0;if(!(c[(c[d>>2]|0)+(g<<2)>>2]|0))n=g;else{s=n;break}}n=r+8|0;g=c[r+4>>2]|0;while(1){if(!g){t=0;break}u=g+-1|0;if(!(c[(c[n>>2]|0)+(u<<2)>>2]|0))g=u;else{t=g;break}}g=t+s|0;if(g>>>0>1e4)q=-16;else{u=b+4|0;v=c[u>>2]|0;if(v>>>0<g>>>0){w=ry(g,4)|0;if(!w){q=-16;break}x=b+8|0;y=c[x>>2]|0;if(!y)z=x;else{A=v<<2;zH(w|0,y|0,A|0)|0;if(!A)B=y;else{C=A;A=y;while(1){C=C+-1|0;a[A>>0]=0;if(!C)break;else A=A+1|0}B=c[x>>2]|0}qy(B);z=x}c[u>>2]=g;c[z>>2]=w;D=c[u>>2]|0}else D=v;if(!D){A=ry(1,4)|0;if(!A){q=-16;break}C=b+8|0;y=c[C>>2]|0;if(y)qy(y);c[u>>2]=1;c[C>>2]=A;E=C;F=A;G=4}else{A=b+8|0;E=A;F=c[A>>2]|0;G=D<<2}BH(F|0,0,G|0)|0;c[c[E>>2]>>2]=0;c[b>>2]=1;if(t){A=b+8|0;C=t;do{C=C+-1|0;Oo(s,c[d>>2]|0,(c[A>>2]|0)+(C<<2)|0,c[(c[n>>2]|0)+(C<<2)>>2]|0)}while((C|0)!=0)}c[b>>2]=aa(c[r>>2]|0,c[o>>2]|0)|0;q=0}}while(0);o=c[m>>2]|0;if(o){r=c[l>>2]<<2;if(!r)H=o;else{b=r;r=o;while(1){b=b+-1|0;a[r>>0]=0;if(!b)break;else r=r+1|0}H=c[m>>2]|0}qy(H)}c[h>>2]=1;c[l>>2]=0;c[m>>2]=0;m=c[k>>2]|0;if(!m){i=f;return q|0}l=c[j>>2]<<2;if(!l)I=m;else{j=l;l=m;while(1){j=j+-1|0;a[l>>0]=0;if(!j)break;else l=l+1|0}I=c[k>>2]|0}qy(I);i=f;return q|0}function Go(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0;g=i;i=i+80|0;h=g+24|0;j=g+40|0;k=g+44|0;l=g+56|0;m=g+12|0;n=g;o=g+36|0;p=c[f+4>>2]|0;q=f+8|0;r=p;do{if(!r){s=-12;t=173;break}r=r+-1|0}while((c[(c[q>>2]|0)+(r<<2)>>2]|0)==0);if((t|0)==173){i=g;return s|0}if(!(c[f>>2]|0)){s=-12;i=g;return s|0}c[k>>2]=1;r=k+4|0;c[r>>2]=0;u=k+8|0;c[u>>2]=0;c[l>>2]=1;v=l+4|0;c[v>>2]=0;w=l+8|0;c[w>>2]=0;c[m>>2]=1;x=m+4|0;c[x>>2]=0;y=m+8|0;c[y>>2]=0;c[n>>2]=1;z=n+4|0;c[z>>2]=0;A=n+8|0;c[A>>2]=0;c[o>>2]=0;B=e+4|0;C=e+8|0;D=c[B>>2]|0;while(1){if(!D){F=0;break}G=D+-1|0;if(!(c[(c[C>>2]|0)+(G<<2)>>2]|0))D=G;else{F=D;break}}D=p;while(1){if(!D){H=0;break}p=D+-1|0;if(!(c[(c[q>>2]|0)+(p<<2)>>2]|0))D=p;else{H=D;break}}a:do if(!(F>>>0>H>>>0|(H|F|0)==0)){if(H>>>0<=F>>>0){D=F;do{if(!D){t=26;break a}D=D+-1|0;p=c[(c[C>>2]|0)+(D<<2)>>2]|0;G=c[(c[q>>2]|0)+(D<<2)>>2]|0;if(p>>>0>G>>>0){t=26;break a}}while(p>>>0>=G>>>0)}if(b){D=b+4|0;G=c[D>>2]|0;if(!G){p=ry(1,4)|0;if(!p){I=0;J=-16;break}K=b+8|0;L=c[K>>2]|0;if(L)qy(L);c[D>>2]=1;c[K>>2]=p;M=K;N=p;O=4}else{p=b+8|0;M=p;N=c[p>>2]|0;O=G<<2}BH(N|0,0,O|0)|0;c[c[M>>2]>>2]=0;c[b>>2]=1}if(!d){s=0;i=g;return s|0}G=jo(d,e)|0;if(!G){s=0;i=g;return s|0}else{I=0;J=G}}else t=26;while(0);b:do if((t|0)==26){M=jo(k,e)|0;if(!M){O=jo(l,f)|0;if(!O){c[l>>2]=1;c[k>>2]=1;N=(c[B>>2]|0)+2|0;if(N>>>0<=1e4){q=c[x>>2]|0;if(q>>>0<N>>>0){C=ry(N,4)|0;if(!C){I=0;J=-16;break}F=c[y>>2]|0;if(!F)P=y;else{H=q<<2;zH(C|0,F|0,H|0)|0;if(!H)Q=F;else{G=H;H=F;while(1){G=G+-1|0;a[H>>0]=0;if(!G)break;else H=H+1|0}Q=c[y>>2]|0}qy(Q);P=y}c[x>>2]=N;c[P>>2]=C;R=c[x>>2]|0}else R=q;if(!R){H=ry(1,4)|0;if(!H){I=0;J=-16;break}G=c[y>>2]|0;if(G)qy(G);c[x>>2]=1;c[y>>2]=H;S=H;T=4}else{S=c[y>>2]|0;T=R<<2}BH(S|0,0,T|0)|0;c[c[y>>2]>>2]=0;c[m>>2]=1;H=c[z>>2]|0;if(H>>>0<2){G=ry(2,4)|0;if(!G){I=0;J=-16;break}F=c[A>>2]|0;if(!F)U=A;else{p=H<<2;zH(G|0,F|0,p|0)|0;if(!p)V=F;else{H=p;p=F;while(1){H=H+-1|0;a[p>>0]=0;if(!H)break;else p=p+1|0}V=c[A>>2]|0}qy(V);U=A}c[z>>2]=2;c[U>>2]=G}p=ry(3,4)|0;if(p){H=c[o>>2]|0;if(H)qy(H);c[o>>2]=p;p=c[v>>2]|0;if(p){H=c[w>>2]|0;q=p;while(1){q=q+-1|0;if(!q){t=59;break}C=c[H+(q<<2)>>2]|0;if(C){W=C;break}}if((t|0)==59)W=c[H>>2]|0;if((W|0)>-1){q=0;G=-2147483648;while(1){G=G>>>1;C=q+1|0;if(!(C>>>0<32&(G&W|0)==0)){X=C;break}else q=C}}else X=0;q=0-X&31;if((q|0)==31){Y=p;Z=0}else{_=q;t=64}}else{_=0;t=64}if((t|0)==64){q=_^31;G=xo(k,q)|0;if(G){I=12;J=G;break}G=xo(l,q)|0;if(G){I=12;J=G;break}Y=c[v>>2]|0;Z=q}q=(c[r>>2]|0)+-1|0;G=Y+-1|0;H=1-Y|0;C=q-G|0;N=C<<5;F=xo(l,N)|0;if(!F){c:while(1){K=c[u>>2]|0;D=c[r>>2]|0;while(1){if(!D){$=0;break}L=D+-1|0;if(!(c[K+(L<<2)>>2]|0))D=L;else{$=D;break}}D=c[w>>2]|0;L=c[v>>2]|0;while(1){if(!L){ba=0;break}ca=L+-1|0;if(!(c[D+(ca<<2)>>2]|0))L=ca;else{ba=L;break}}d:do if(ba|$){e:do if($>>>0>ba>>>0)da=c[k>>2]|0;else{if(ba>>>0>$>>>0){da=0-(c[l>>2]|0)|0;break}L=c[k>>2]|0;ca=c[l>>2]|0;if((L|0)>0&(ca|0)<0)break d;if((L|0)<0&(ca|0)>0)break c;else ea=$;do{if(!ea)break d;ea=ea+-1|0;ca=c[K+(ea<<2)>>2]|0;fa=c[D+(ea<<2)>>2]|0;if(ca>>>0>fa>>>0){da=L;break e}}while(ca>>>0>=fa>>>0);da=0-L|0}while(0);if((da|0)<=-1)break c}while(0);D=(c[y>>2]|0)+(C<<2)|0;c[D>>2]=(c[D>>2]|0)+1;D=Eo(k,k,l)|0;if(D){I=12;J=D;break b}}C=yo(l,N)|0;if(!C){if(q>>>0>G>>>0){p=H+-1|0;D=(G|0)==0;K=h+4|0;fa=h+8|0;ca=Y+-2|0;ga=h+4|0;ha=h+8|0;ia=q;while(1){ja=c[u>>2]|0;ka=c[ja+(ia<<2)>>2]|0;la=c[(c[w>>2]|0)+(G<<2)>>2]|0;if(ka>>>0<la>>>0){ma=ia+-1|0;na=JH(c[ja+(ma<<2)>>2]|0,ka|0,la|0,0)|0;la=E;ka=c[y>>2]|0;c[ka+(p+ia<<2)>>2]=la>>>0>0|(la|0)==0&na>>>0>4294967295?-1:na;oa=ma;pa=ka}else{ka=c[y>>2]|0;c[ka+(p+ia<<2)>>2]=-1;oa=ia+-1|0;pa=ka}ka=ia-G+-1|0;ma=pa+(ka<<2)|0;na=(c[ma>>2]|0)+1|0;c[ma>>2]=na;ma=ia>>>0<2;la=ia+-2|0;ja=pa;qa=na;f:while(1){c[ja+(ka<<2)>>2]=qa+-1;na=c[z>>2]|0;if(!na){ra=ry(1,4)|0;if(!ra){I=12;J=-16;break b}sa=c[A>>2]|0;if(sa)qy(sa);c[z>>2]=1;c[A>>2]=ra;ta=ra;ua=4}else{ta=c[A>>2]|0;ua=na<<2}BH(ta|0,0,ua|0)|0;na=c[A>>2]|0;c[na>>2]=0;c[n>>2]=1;ra=c[w>>2]|0;if(D)va=0;else va=c[ra+(ca<<2)>>2]|0;c[na>>2]=va;c[na+4>>2]=c[ra+(G<<2)>>2];ra=c[(c[y>>2]|0)+(ka<<2)>>2]|0;c[h>>2]=1;c[K>>2]=1;c[fa>>2]=j;c[j>>2]=ra;ra=Fo(n,n,h)|0;if(ra){I=12;J=ra;break b}ra=c[o>>2]|0;c[ra>>2]=0;c[ra+4>>2]=0;c[ra+8>>2]=0;c[ra>>2]=0;if(ma){ra=c[o>>2]|0;c[ra>>2]=0;wa=c[u>>2]|0;xa=ra}else{ra=c[u>>2]|0;na=c[o>>2]|0;c[na>>2]=c[ra+(la<<2)>>2];wa=ra;xa=na}c[xa+4>>2]=c[wa+(oa<<2)>>2];na=c[o>>2]|0;c[na+8>>2]=c[wa+(ia<<2)>>2];ra=c[A>>2]|0;sa=c[z>>2]|0;while(1){if(!sa){ya=0;break}za=sa+-1|0;if(!(c[ra+(za<<2)>>2]|0))sa=za;else{ya=sa;break}}sa=3;while(1){if(!sa){Aa=0;break}za=sa+-1|0;if(!(c[na+(za<<2)>>2]|0))sa=za;else{Aa=sa;break}}if(!(Aa|ya))break;g:do if(ya>>>0>Aa>>>0)Ba=c[n>>2]|0;else{if(Aa>>>0>ya>>>0)break f;sa=c[n>>2]|0;if((sa|0)<0)break f;else Ca=ya;do{if(!Ca)break f;Ca=Ca+-1|0;za=c[ra+(Ca<<2)>>2]|0;Da=c[na+(Ca<<2)>>2]|0;if(za>>>0>Da>>>0){Ba=sa;break g}}while(za>>>0>=Da>>>0);Ba=0-sa|0}while(0);if((Ba|0)<=0)break;na=c[y>>2]|0;ja=na;qa=c[na+(ka<<2)>>2]|0}qa=c[(c[y>>2]|0)+(ka<<2)>>2]|0;c[h>>2]=1;c[ga>>2]=1;c[ha>>2]=j;c[j>>2]=qa;qa=Fo(n,l,h)|0;if(qa){I=12;J=qa;break b}qa=ka<<5;ja=xo(n,qa)|0;if(ja){I=12;J=ja;break b}ja=Eo(k,k,n)|0;if(ja){I=12;J=ja;break b}ja=c[u>>2]|0;la=c[r>>2]|0;while(1){if(!la)break;la=la+-1|0;if(c[ja+(la<<2)>>2]|0){t=129;break}}do if((t|0)==129){t=0;if((c[k>>2]|0)>=0)break;la=jo(n,l)|0;if(la){I=12;J=la;break b}la=xo(n,qa)|0;if(la){I=12;J=la;break b}la=Do(k,k,n)|0;if(la){I=12;J=la;break b}la=(c[y>>2]|0)+(ka<<2)|0;c[la>>2]=(c[la>>2]|0)+-1}while(0);if(oa>>>0>G>>>0)ia=oa;else break}}if(b){ia=jo(b,m)|0;if(ia){I=12;J=ia;break}c[b>>2]=aa(c[f>>2]|0,c[e>>2]|0)|0}if(d){ia=yo(k,Z)|0;if(!ia){c[k>>2]=c[e>>2];G=jo(d,k)|0;if(!G){ha=d+8|0;ga=c[d+4>>2]|0;while(1){if(!ga){t=144;break}ga=ga+-1|0;if(c[(c[ha>>2]|0)+(ga<<2)>>2]|0){t=145;break}}if((t|0)==144)Ea=d;else if((t|0)==145)if(!(c[d>>2]|0))Ea=d;else{I=12;J=0;break}c[Ea>>2]=1;I=12;J=0}else{I=12;J=G}}else{I=12;J=ia}}else{I=12;J=0}}else{I=12;J=C}}else{I=12;J=F}}else{I=0;J=-16}}else{I=0;J=-16}}else{I=0;J=O}}else{I=0;J=M}}while(0);Ea=c[u>>2]|0;if(Ea){d=c[r>>2]<<2;if(!d)Fa=Ea;else{t=d;d=Ea;while(1){t=t+-1|0;a[d>>0]=0;if(!t)break;else d=d+1|0}Fa=c[u>>2]|0}qy(Fa)}c[k>>2]=1;c[r>>2]=0;c[u>>2]=0;u=c[w>>2]|0;if(u){r=c[v>>2]<<2;if(!r)Ga=u;else{k=r;r=u;while(1){k=k+-1|0;a[r>>0]=0;if(!k)break;else r=r+1|0}Ga=c[w>>2]|0}qy(Ga)}c[l>>2]=1;c[v>>2]=0;c[w>>2]=0;w=c[y>>2]|0;if(w){v=c[x>>2]<<2;if(!v)Ha=w;else{l=v;v=w;while(1){l=l+-1|0;a[v>>0]=0;if(!l)break;else v=v+1|0}Ha=c[y>>2]|0}qy(Ha)}c[m>>2]=1;c[x>>2]=0;c[y>>2]=0;y=c[A>>2]|0;if(y){x=c[z>>2]<<2;if(!x)Ia=y;else{m=x;x=y;while(1){m=m+-1|0;a[x>>0]=0;if(!m)break;else x=x+1|0}Ia=c[A>>2]|0}qy(Ia)}c[n>>2]=1;c[z>>2]=0;c[A>>2]=0;A=c[o>>2]|0;if(A){if(!I)Ja=A;else{z=I;I=A;while(1){z=z+-1|0;a[I>>0]=0;if(!z)break;else I=I+1|0}Ja=c[o>>2]|0}qy(Ja)}c[o>>2]=0;s=J;i=g;return s|0}function Ho(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=d+4|0;f=d+8|0;g=c[e>>2]|0;while(1){if(!g)break;g=g+-1|0;if(c[(c[f>>2]|0)+(g<<2)>>2]|0){h=4;break}}if((h|0)==4?(c[d>>2]|0)<0:0){i=-10;return i|0}g=Go(0,a,b,d)|0;if(g){i=g;return i|0}g=a+4|0;b=a+8|0;a:while(1){j=c[g>>2]|0;k=j;do{if(!k){l=j;break a}k=k+-1|0}while((c[(c[b>>2]|0)+(k<<2)>>2]|0)==0);if((c[a>>2]|0)>=0){l=j;break}k=Do(a,a,d)|0;if(k){i=k;h=32;break}}if((h|0)==32)return i|0;k=l;b:while(1){if(k){l=k+-1|0;if(!(c[(c[b>>2]|0)+(l<<2)>>2]|0)){k=l;continue}else m=k}else m=0;l=c[e>>2]|0;while(1){if(!l){n=0;break}o=l+-1|0;if(!(c[(c[f>>2]|0)+(o<<2)>>2]|0))l=o;else{n=l;break}}c:do if(n|m){d:do if(m>>>0>n>>>0)p=c[a>>2]|0;else{if(n>>>0>m>>>0){p=0-(c[d>>2]|0)|0;break}l=c[a>>2]|0;j=c[d>>2]|0;if((l|0)>0&(j|0)<0)break c;if((l|0)<0&(j|0)>0){i=0;h=32;break b}else q=m;do{if(!q)break c;q=q+-1|0;j=c[(c[b>>2]|0)+(q<<2)>>2]|0;o=c[(c[f>>2]|0)+(q<<2)>>2]|0;if(j>>>0>o>>>0){p=l;break d}}while(j>>>0>=o>>>0);p=0-l|0}while(0);if((p|0)<=-1){i=0;h=32;break b}}while(0);o=Eo(a,a,d)|0;if(o){i=o;h=32;break}k=c[g>>2]|0}if((h|0)==32)return i|0;return 0}function Io(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0;h=i;i=i+1600|0;j=h+1588|0;k=h+1576|0;l=h+1564|0;m=h+1552|0;n=h+16|0;o=h;p=f+4|0;q=c[p>>2]|0;r=f+8|0;s=q;while(1){if(!s)break;s=s+-1|0;if(c[(c[r>>2]|0)+(s<<2)>>2]|0){t=4;break}}if((t|0)==4?(c[f>>2]|0)<0:0){u=-4;i=h;return u|0}s=c[c[r>>2]>>2]|0;if(!(s&1)){u=-4;i=h;return u|0}v=e+4|0;w=c[v>>2]|0;x=e+8|0;y=w;while(1){if(!y)break;y=y+-1|0;if(c[(c[x>>2]|0)+(y<<2)>>2]|0){t=9;break}}if((t|0)==9?(c[e>>2]|0)<0:0){u=-4;i=h;return u|0}e=((s<<1)+4&8)+s|0;y=aa(2-(aa(e,s)|0)|0,e)|0;e=aa(2-(aa(y,s)|0)|0,y)|0;y=aa(2-(aa(e,s)|0)|0,0-e|0)|0;c[l>>2]=1;e=l+4|0;c[e>>2]=0;s=l+8|0;c[s>>2]=0;c[m>>2]=1;z=m+4|0;c[z>>2]=0;A=m+8|0;c[A>>2]=0;c[o>>2]=1;B=o+4|0;c[B>>2]=0;C=o+8|0;c[C>>2]=0;BH(n|0,0,1536)|0;if(w){D=c[x>>2]|0;E=w;while(1){w=E+-1|0;if(!w){t=13;break}F=c[D+(w<<2)>>2]|0;if(!F)E=w;else{G=F;H=w;break}}if((t|0)==13){G=c[D>>2]|0;H=0}if((G|0)>-1){D=0;E=-2147483648;while(1){E=E>>>1;w=D+1|0;if(!(w>>>0<32&(E&G|0)==0)){I=w;break}else D=w}}else I=0;D=(H<<5)+32-I|0;if(D>>>0<=671)if(D>>>0<=239)if(D>>>0>79)J=4;else{K=D;t=20}else J=5;else J=6}else{K=0;t=20}if((t|0)==20)J=K>>>0>23?3:1;K=q+1|0;a:do if(K>>>0<=1e4){q=b+4|0;D=c[q>>2]|0;do if(D>>>0<K>>>0){I=ry(K,4)|0;if(!I){L=-16;break a}H=b+8|0;G=c[H>>2]|0;if(!G){c[q>>2]=K;c[H>>2]=I;M=n+12|0;N=0;break}E=D<<2;zH(I|0,G|0,E|0)|0;if(!E)O=G;else{w=E;E=G;while(1){w=w+-1|0;a[E>>0]=0;if(!w)break;else E=E+1|0}O=c[H>>2]|0}qy(O);c[q>>2]=K;c[H>>2]=I;M=n+12|0;N=c[n+16>>2]|0}else{M=n+12|0;N=0}while(0);q=n+16|0;if(N>>>0<K>>>0){D=ry(K,4)|0;if(!D){L=-16;break}E=n+20|0;w=c[E>>2]|0;if(!w)P=E;else{G=N<<2;zH(D|0,w|0,G|0)|0;if(!G)Q=w;else{F=G;G=w;while(1){F=F+-1|0;a[G>>0]=0;if(!F)break;else G=G+1|0}Q=c[E>>2]|0}qy(Q);P=E}c[q>>2]=K;c[P>>2]=D}G=K<<1;if(G>>>0<=1e4){F=c[z>>2]|0;if(F>>>0<G>>>0){w=ry(G,4)|0;if(!w){L=-16;break}R=c[A>>2]|0;if(!R)S=A;else{T=F<<2;zH(w|0,R|0,T|0)|0;if(!T)U=R;else{F=T;T=R;while(1){F=F+-1|0;a[T>>0]=0;if(!F)break;else T=T+1|0}U=c[A>>2]|0}qy(U);S=A}c[z>>2]=G;c[S>>2]=w}T=(c[d>>2]|0)==-1;if(T){F=jo(o,d)|0;if(F){L=F;break}c[o>>2]=1;V=o}else V=d;F=(g|0)==0;if(!F?(c[g+8>>2]|0)!=0:0){c[l>>2]=c[g>>2];c[l+4>>2]=c[g+4>>2];c[l+8>>2]=c[g+8>>2]}else{D=c[e>>2]|0;if(!D){q=ry(1,4)|0;if(!q){L=-16;break}E=c[s>>2]|0;if(E)qy(E);c[e>>2]=1;c[s>>2]=q;W=q;X=4}else{W=c[s>>2]|0;X=D<<2}BH(W|0,0,X|0)|0;c[c[s>>2]>>2]=1;c[l>>2]=1;D=xo(l,c[p>>2]<<6)|0;if(D){L=D;break}D=Ho(l,l,f)|0;if(D){L=D;break}if(!F){c[g>>2]=c[l>>2];c[g+4>>2]=c[l+4>>2];c[g+8>>2]=c[l+8>>2]}}F=V+8|0;D=c[V+4>>2]|0;while(1){if(!D){Y=0;break}q=D+-1|0;if(!(c[(c[F>>2]|0)+(q<<2)>>2]|0))D=q;else{Y=D;break}}D=c[p>>2]|0;while(1){if(!D){Z=0;break}w=D+-1|0;if(!(c[(c[r>>2]|0)+(w<<2)>>2]|0))D=w;else{Z=D;break}}b:do if(Z|Y){c:do if(Y>>>0<=Z>>>0){if(Z>>>0>Y>>>0){_=0-(c[f>>2]|0)|0;t=83;break}D=c[V>>2]|0;w=c[f>>2]|0;if((D|0)>0&(w|0)<0){t=84;break b}if(!((D|0)<0&(w|0)>0)){w=Y;do{if(!w){t=84;break b}w=w+-1|0;G=c[(c[F>>2]|0)+(w<<2)>>2]|0;q=c[(c[r>>2]|0)+(w<<2)>>2]|0;if(G>>>0>q>>>0){_=D;t=83;break c}}while(G>>>0>=q>>>0);_=0-D|0;t=83}}else{_=c[V>>2]|0;t=83}while(0);if((t|0)==83?(_|0)>-1:0){t=84;break}I=jo(M,V)|0;if(I){L=I;break a}}else t=84;while(0);if((t|0)==84?(F=Ho(M,V,f)|0,(F|0)!=0):0){L=F;break}Po(M,l,f,y,m);F=jo(b,l)|0;if(!F){c[j>>2]=1;c[k>>2]=1;c[k+4>>2]=1;c[k+8>>2]=j;Po(b,k,f,y,m);if(J>>>0>1){I=J+-1|0;H=1<<I;w=n+(H*12|0)|0;q=(c[p>>2]|0)+1|0;if(q>>>0>1e4){L=-16;break}G=n+(H*12|0)+4|0;E=c[G>>2]|0;if(E>>>0<q>>>0){R=ry(q,4)|0;if(!R){L=-16;break}$=n+(H*12|0)+8|0;ba=c[$>>2]|0;if(!ba)ca=$;else{da=E<<2;zH(R|0,ba|0,da|0)|0;if(!da)ea=ba;else{E=da;da=ba;while(1){E=E+-1|0;a[da>>0]=0;if(!E)break;else da=da+1|0}ea=c[$>>2]|0}qy(ea);ca=$}c[G>>2]=q;c[ca>>2]=R}da=jo(w,M)|0;if(da){L=da;break}if(I){da=0;do{Po(w,w,f,y,m);da=da+1|0}while((da|0)!=(I|0))}I=H+1|0;da=1<<J;if(I>>>0<da>>>0){w=H;R=I;while(1){I=n+(R*12|0)|0;q=(c[p>>2]|0)+1|0;if(q>>>0>1e4){L=-16;break a}G=n+(R*12|0)+4|0;$=c[G>>2]|0;if($>>>0<q>>>0){E=ry(q,4)|0;if(!E){L=-16;break a}ba=n+(R*12|0)+8|0;fa=c[ba>>2]|0;if(!fa)ga=ba;else{ha=$<<2;zH(E|0,fa|0,ha|0)|0;if(!ha)ia=fa;else{$=ha;ha=fa;while(1){$=$+-1|0;a[ha>>0]=0;if(!$)break;else ha=ha+1|0}ia=c[ba>>2]|0}qy(ia);ga=ba}c[G>>2]=q;c[ga>>2]=E}ha=jo(I,n+(w*12|0)|0)|0;if(ha){L=ha;break a}Po(I,M,f,y,m);ha=R+1|0;if(ha>>>0<da>>>0){$=R;R=ha;w=$}else break}}}w=0;R=0;da=c[v>>2]|0;H=0;$=0;d:while(1){e:do if((H|0)==1){ha=w;fa=da;while(1){if(!ha){if(!fa){ja=R;ka=$;break d}la=32;ma=fa+-1|0}else{la=ha;ma=fa}na=la+-1|0;oa=(c[(c[x>>2]|0)+(ma<<2)>>2]|0)>>>na&1;if(oa){pa=na;qa=oa;ra=ma;break e}Po(b,b,f,y,m);ha=na;fa=ma}}else{fa=w;ha=da;while(1){if(!fa){if(!ha){ja=R;ka=$;break d}sa=32;ta=ha+-1|0}else{sa=fa;ta=ha}D=sa+-1|0;na=(c[(c[x>>2]|0)+(ta<<2)>>2]|0)>>>D&1;if(!(na|H)){fa=D;ha=ta}else{pa=D;qa=na;ra=ta;break}}}while(0);I=R+1|0;E=qa<<J-I|$;if((J|0)==(I|0))ua=0;else{w=pa;R=I;da=ra;H=2;$=E;continue}do{Po(b,b,f,y,m);ua=ua+1|0}while(ua>>>0<J>>>0);Po(b,n+(E*12|0)|0,f,y,m);w=pa;R=0;da=ra;H=1;$=0}if(ja){$=1<<J;H=0;da=ka;do{Po(b,b,f,y,m);da=da<<1;if(da&$)Po(b,M,f,y,m);H=H+1|0}while((H|0)!=(ja|0))}c[j>>2]=1;c[k>>2]=1;c[k+4>>2]=1;c[k+8>>2]=j;Po(b,k,f,y,m);if(T){c[b>>2]=-1;L=Do(b,f,b)|0}else L=0}else L=F}else L=-16}else L=-16;while(0);b=1<<J+-1;f=1<<J;if(b>>>0<f>>>0){J=b;do{b=n+(J*12|0)+8|0;y=c[b>>2]|0;k=n+(J*12|0)+4|0;if(y){j=c[k>>2]<<2;if(!j)va=y;else{ja=j;j=y;while(1){ja=ja+-1|0;a[j>>0]=0;if(!ja)break;else j=j+1|0}va=c[b>>2]|0}qy(va)}c[n+(J*12|0)>>2]=1;c[k>>2]=0;c[b>>2]=0;J=J+1|0}while((J|0)!=(f|0))}f=n+20|0;J=c[f>>2]|0;va=n+16|0;if(J){j=c[va>>2]<<2;if(!j)wa=J;else{ja=j;j=J;while(1){ja=ja+-1|0;a[j>>0]=0;if(!ja)break;else j=j+1|0}wa=c[f>>2]|0}qy(wa)}c[n+12>>2]=1;c[va>>2]=0;c[f>>2]=0;f=c[A>>2]|0;if(f){va=c[z>>2]<<2;if(!va)xa=f;else{n=va;va=f;while(1){n=n+-1|0;a[va>>0]=0;if(!n)break;else va=va+1|0}xa=c[A>>2]|0}qy(xa)}c[m>>2]=1;c[z>>2]=0;c[A>>2]=0;A=c[C>>2]|0;if(A){z=c[B>>2]<<2;if(!z)ya=A;else{m=z;z=A;while(1){m=m+-1|0;a[z>>0]=0;if(!m)break;else z=z+1|0}ya=c[C>>2]|0}qy(ya)}c[o>>2]=1;c[B>>2]=0;c[C>>2]=0;if((g|0)!=0?(c[g+8>>2]|0)!=0:0){u=L;i=h;return u|0}g=c[s>>2]|0;if(g){C=c[e>>2]<<2;if(!C)za=g;else{B=C;C=g;while(1){B=B+-1|0;a[C>>0]=0;if(!B)break;else C=C+1|0}za=c[s>>2]|0}qy(za)}c[l>>2]=1;c[e>>2]=0;c[s>>2]=0;u=L;i=h;return u|0}function Jo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;f=i;i=i+32|0;g=f+12|0;h=f;c[g>>2]=1;j=g+4|0;c[j>>2]=0;k=g+8|0;c[k>>2]=0;c[h>>2]=1;l=h+4|0;c[l>>2]=0;m=h+8|0;c[m>>2]=0;n=jo(g,d)|0;a:do if(!n){d=jo(h,e)|0;if(!d){o=c[j>>2]|0;b:do if(!o)p=0;else{q=c[k>>2]|0;r=0;s=0;while(1){t=c[q+(s<<2)>>2]|0;u=r;v=0;while(1){if(1<<v&t){p=u;break b}v=v+1|0;w=u+1|0;if(v>>>0>=32){x=w;break}else u=w}u=s+1|0;if(u>>>0<o>>>0){r=x;s=u}else{p=0;break}}}while(0);o=c[l>>2]|0;c:do if(!o)y=0;else{s=c[m>>2]|0;r=0;q=0;while(1){u=c[s+(q<<2)>>2]|0;v=r;t=0;while(1){if(1<<t&u){y=v;break c}t=t+1|0;w=v+1|0;if(t>>>0>=32){z=w;break}else v=w}v=q+1|0;if(v>>>0<o>>>0){r=z;q=v}else{y=0;break}}}while(0);o=y>>>0<p>>>0?y:p;q=yo(g,o)|0;if(!q){r=yo(h,o)|0;if(!r){c[h>>2]=1;c[g>>2]=1;d:while(1){s=c[j>>2]|0;v=c[k>>2]|0;t=s;do{if(!t)break d;t=t+-1|0}while((c[v+(t<<2)>>2]|0)==0);if(!(c[g>>2]|0))break;e:do if(!s)A=0;else{t=0;u=0;while(1){w=c[v+(u<<2)>>2]|0;B=t;C=0;while(1){if(1<<C&w){A=B;break e}C=C+1|0;D=B+1|0;if(C>>>0>=32){E=D;break}else B=D}B=u+1|0;if(B>>>0<s>>>0){t=E;u=B}else{A=0;break}}}while(0);s=yo(g,A)|0;if(s){F=s;break a}s=c[l>>2]|0;f:do if(!s)G=0;else{v=c[m>>2]|0;u=0;t=0;while(1){B=c[v+(t<<2)>>2]|0;C=u;w=0;while(1){if(1<<w&B){G=C;break f}w=w+1|0;D=C+1|0;if(w>>>0>=32){H=D;break}else C=D}C=t+1|0;if(C>>>0<s>>>0){u=H;t=C}else{G=0;break}}}while(0);s=yo(h,G)|0;if(s){F=s;break a}s=c[k>>2]|0;t=c[j>>2]|0;while(1){if(!t){I=0;break}u=t+-1|0;if(!(c[s+(u<<2)>>2]|0))t=u;else{I=t;break}}t=c[m>>2]|0;u=c[l>>2]|0;while(1){if(!u){J=0;break}v=u+-1|0;if(!(c[t+(v<<2)>>2]|0))u=v;else{J=u;break}}g:do if(J|I){h:do if(I>>>0<=J>>>0){if(J>>>0>I>>>0){K=0-(c[h>>2]|0)|0;L=52;break}u=c[g>>2]|0;v=c[h>>2]|0;if((u|0)>0&(v|0)<0)break g;if(!((u|0)<0&(v|0)>0)){v=I;do{if(!v)break g;v=v+-1|0;C=c[s+(v<<2)>>2]|0;w=c[t+(v<<2)>>2]|0;if(C>>>0>w>>>0){K=u;L=52;break h}}while(C>>>0>=w>>>0);K=0-u|0;L=52}}else{K=c[g>>2]|0;L=52}while(0);if((L|0)==52?(L=0,(K|0)>-1):0)break;v=Co(h,h,g)|0;if(v){F=v;break a}v=c[l>>2]|0;if(v){w=c[m>>2]|0;C=v;v=0;while(1){B=C+-1|0;D=w+(B<<2)|0;M=c[D>>2]|0;c[D>>2]=M>>>1|v;if(!B)continue d;else{C=B;v=M<<31}}}v=ry(1,4)|0;if(!v){F=-16;break a}C=c[m>>2]|0;if(C)qy(C);c[l>>2]=1;c[m>>2]=v;c[v>>2]=0;c[h>>2]=1;continue d}while(0);t=Co(g,g,h)|0;if(t){F=t;break a}t=c[j>>2]|0;if(t){s=c[k>>2]|0;v=t;t=0;while(1){C=v+-1|0;w=s+(C<<2)|0;M=c[w>>2]|0;c[w>>2]=M>>>1|t;if(!C)continue d;else{v=C;t=M<<31}}}t=ry(1,4)|0;if(!t){F=-16;break a}v=c[k>>2]|0;if(v)qy(v);c[j>>2]=1;c[k>>2]=t;c[t>>2]=0;c[g>>2]=1}t=xo(h,o)|0;if(!t)F=jo(b,h)|0;else F=t}else F=r}else F=q}else F=d}else F=n;while(0);n=c[k>>2]|0;if(n){h=c[j>>2]<<2;if(!h)N=n;else{b=h;h=n;while(1){b=b+-1|0;a[h>>0]=0;if(!b)break;else h=h+1|0}N=c[k>>2]|0}qy(N)}c[g>>2]=1;c[j>>2]=0;c[k>>2]=0;k=c[m>>2]|0;if(!k){i=f;return F|0}j=c[l>>2]<<2;if(!j)O=k;else{l=j;j=k;while(1){l=l+-1|0;a[j>>0]=0;if(!l)break;else j=j+1|0}O=c[m>>2]|0}qy(O);i=f;return F|0}function Ko(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+1024|0;f=e;if(b>>>0<=1024){g=od[c&127](d,f,b)|0;if(!g)h=vo(a,f,b)|0;else h=g}else h=-4;i=e;return h|0}function Lo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0;f=i;i=i+112|0;g=f+84|0;h=f+48|0;j=f+12|0;k=f+24|0;l=f+96|0;m=f;n=f+36|0;o=f+72|0;p=f+60|0;q=e+4|0;r=e+8|0;s=c[q>>2]|0;do{if(!s){t=-4;u=197;break}s=s+-1|0}while((c[(c[r>>2]|0)+(s<<2)>>2]|0)==0);if((u|0)==197){i=f;return t|0}if((c[e>>2]|0)<1){t=-4;i=f;return t|0}c[h>>2]=1;s=h+4|0;c[s>>2]=0;v=h+8|0;c[v>>2]=0;c[j>>2]=1;w=j+4|0;c[w>>2]=0;x=j+8|0;c[x>>2]=0;c[k>>2]=1;y=k+4|0;c[y>>2]=0;z=k+8|0;c[z>>2]=0;c[l>>2]=1;A=l+4|0;c[A>>2]=0;B=l+8|0;c[B>>2]=0;c[g>>2]=1;C=g+4|0;c[C>>2]=0;D=g+8|0;c[D>>2]=0;c[m>>2]=1;E=m+4|0;c[E>>2]=0;F=m+8|0;c[F>>2]=0;c[n>>2]=1;G=n+4|0;c[G>>2]=0;H=n+8|0;c[H>>2]=0;c[o>>2]=1;I=o+4|0;c[I>>2]=0;J=o+8|0;c[J>>2]=0;c[p>>2]=1;K=p+4|0;c[K>>2]=0;L=p+8|0;c[L>>2]=0;M=Jo(g,d,e)|0;a:do if(!M){N=c[D>>2]|0;O=c[C>>2]|0;while(1){if(!O){P=-14;break a}Q=O+-1|0;if(!(c[N+(Q<<2)>>2]|0))O=Q;else{R=O;break}}O=c[g>>2]|0;b:do if(R>>>0>1){S=O;u=15}else{if((O|0)<0){P=-14;break a}else T=1;do{if(!T)break b;T=T+-1|0;Q=c[N+(T<<2)>>2]|0;if(Q>>>0>1){S=O;u=15;break b}}while((Q|0)!=0);S=0-O|0;u=15}while(0);if((u|0)==15?(S|0)!=0:0){P=-14;break}O=Ho(h,d,e)|0;if(!O){N=jo(j,h)|0;if(!N){Q=jo(m,e)|0;if(!Q){U=jo(n,e)|0;if(!U){V=c[y>>2]|0;if(!V){W=ry(1,4)|0;if(!W){P=-16;break}X=c[z>>2]|0;if(X)qy(X);c[y>>2]=1;c[z>>2]=W;Y=W;Z=4}else{Y=c[z>>2]|0;Z=V<<2}BH(Y|0,0,Z|0)|0;c[c[z>>2]>>2]=1;c[k>>2]=1;V=c[A>>2]|0;if(!V){W=ry(1,4)|0;if(!W){P=-16;break}X=c[B>>2]|0;if(X)qy(X);c[A>>2]=1;c[B>>2]=W;_=W;$=4}else{_=c[B>>2]|0;$=V<<2}BH(_|0,0,$|0)|0;c[c[B>>2]>>2]=0;c[l>>2]=1;V=c[I>>2]|0;if(!V){W=ry(1,4)|0;if(!W){P=-16;break}X=c[J>>2]|0;if(X)qy(X);c[I>>2]=1;c[J>>2]=W;aa=W;ba=4}else{aa=c[J>>2]|0;ba=V<<2}BH(aa|0,0,ba|0)|0;c[c[J>>2]>>2]=0;c[o>>2]=1;V=c[K>>2]|0;if(!V){W=ry(1,4)|0;if(!W){P=-16;break}X=c[L>>2]|0;if(X)qy(X);c[K>>2]=1;c[L>>2]=W;ca=L;da=W;ea=4}else{ca=L;da=c[L>>2]|0;ea=V<<2}BH(da|0,0,ea|0)|0;c[c[L>>2]>>2]=1;c[p>>2]=1;c:while(1){V=c[x>>2]|0;if(!(c[V>>2]&1)){W=c[w>>2]|0;if(!W){X=ry(1,4)|0;if(!X){P=-16;break a}if(V)qy(V);c[w>>2]=1;c[x>>2]=X;c[X>>2]=0;c[j>>2]=1}else{X=W;W=0;while(1){X=X+-1|0;fa=V+(X<<2)|0;ga=c[fa>>2]|0;c[fa>>2]=ga>>>1|W;if(!X)break;else W=ga<<31}}if(!((c[c[z>>2]>>2]&1|0)==0?(c[c[B>>2]>>2]&1|0)==0:0)){W=Do(k,k,m)|0;if(W){P=W;break a}W=Eo(l,l,h)|0;if(W){P=W;break a}}W=c[y>>2]|0;if(!W){X=ry(1,4)|0;if(!X){P=-16;break a}ga=c[z>>2]|0;if(ga)qy(ga);c[y>>2]=1;c[z>>2]=X;c[X>>2]=0;c[k>>2]=1}else{X=c[z>>2]|0;ga=W;W=0;while(1){ga=ga+-1|0;fa=X+(ga<<2)|0;ha=c[fa>>2]|0;c[fa>>2]=ha>>>1|W;if(!ga)break;else W=ha<<31}}W=c[A>>2]|0;if(W){ga=c[B>>2]|0;X=W;W=0;while(1){ha=X+-1|0;fa=ga+(ha<<2)|0;ia=c[fa>>2]|0;c[fa>>2]=ia>>>1|W;if(!ha)continue c;else{X=ha;W=ia<<31}}}W=ry(1,4)|0;if(!W){P=-16;break a}X=c[B>>2]|0;if(X)qy(X);c[A>>2]=1;c[B>>2]=W;c[W>>2]=0;c[l>>2]=1;continue}W=c[H>>2]|0;if(!(c[W>>2]&1)){X=W;while(1){ga=c[G>>2]|0;if(!ga){ia=ry(1,4)|0;if(!ia){P=-16;break a}if(X)qy(X);c[G>>2]=1;c[H>>2]=ia;c[ia>>2]=0;c[n>>2]=1}else{ia=ga;ga=0;while(1){ia=ia+-1|0;ha=X+(ia<<2)|0;fa=c[ha>>2]|0;c[ha>>2]=fa>>>1|ga;if(!ia)break;else ga=fa<<31}}if(!((c[c[J>>2]>>2]&1|0)==0?(c[c[L>>2]>>2]&1|0)==0:0)){ga=Do(o,o,m)|0;if(ga){P=ga;break a}ga=Eo(p,p,h)|0;if(ga){P=ga;break a}}ga=c[I>>2]|0;if(!ga){ia=ry(1,4)|0;if(!ia){P=-16;break a}fa=c[J>>2]|0;if(fa)qy(fa);c[I>>2]=1;c[J>>2]=ia;c[ia>>2]=0;c[o>>2]=1}else{ia=c[J>>2]|0;fa=ga;ga=0;while(1){fa=fa+-1|0;ha=ia+(fa<<2)|0;ja=c[ha>>2]|0;c[ha>>2]=ja>>>1|ga;if(!fa)break;else ga=ja<<31}}ga=c[K>>2]|0;if(!ga){fa=ry(1,4)|0;if(!fa){P=-16;break a}ia=c[L>>2]|0;if(ia)qy(ia);c[K>>2]=1;c[ca>>2]=fa;c[fa>>2]=0;c[p>>2]=1}else{fa=c[L>>2]|0;ia=ga;ga=0;while(1){ia=ia+-1|0;ja=fa+(ia<<2)|0;ha=c[ja>>2]|0;c[ja>>2]=ha>>>1|ga;if(!ia)break;else ga=ha<<31}}ga=c[H>>2]|0;if(!(c[ga>>2]&1))X=ga;else{ka=ga;break}}la=c[x>>2]|0;ma=ka}else{la=V;ma=W}X=c[w>>2]|0;while(1){if(!X){na=0;break}ga=X+-1|0;if(!(c[la+(ga<<2)>>2]|0))X=ga;else{na=X;break}}X=c[G>>2]|0;while(1){if(!X){oa=0;break}W=X+-1|0;if(!(c[ma+(W<<2)>>2]|0))X=W;else{oa=X;break}}d:do if(oa|na){e:do if(na>>>0>oa>>>0){pa=c[j>>2]|0;u=114}else{if(oa>>>0>na>>>0){pa=0-(c[n>>2]|0)|0;u=114;break}X=c[j>>2]|0;W=c[n>>2]|0;if((X|0)>0&(W|0)<0){u=115;break d}if((X|0)<0&(W|0)>0)break;else qa=na;do{if(!qa){u=115;break d}qa=qa+-1|0;W=c[la+(qa<<2)>>2]|0;V=c[ma+(qa<<2)>>2]|0;if(W>>>0>V>>>0){pa=X;u=114;break e}}while(W>>>0>=V>>>0);pa=0-X|0;u=114}while(0);if((u|0)==114?(u=0,(pa|0)>-1):0){u=115;break}V=Eo(n,n,j)|0;if(V){P=V;break a}V=Eo(o,o,k)|0;if(V){P=V;break a}V=Eo(p,p,l)|0;if(V){P=V;break a}}else u=115;while(0);if((u|0)==115){u=0;V=Eo(j,j,n)|0;if(V){P=V;break a}V=Eo(k,k,o)|0;if(V){P=V;break a}V=Eo(l,l,p)|0;if(V){P=V;break a}}V=c[x>>2]|0;W=c[w>>2]|0;do{if(!W)break c;W=W+-1|0}while((c[V+(W<<2)>>2]|0)==0);if(!(c[j>>2]|0))break}f:while(1){W=c[I>>2]|0;V=c[J>>2]|0;ga=W;do{if(!ga){ra=V;sa=W;break f}ga=ga+-1|0}while((c[V+(ga<<2)>>2]|0)==0);if((c[o>>2]|0)>=0){ra=V;sa=W;break}ga=Do(o,o,e)|0;if(ga){P=ga;break a}}g:while(1){ga=sa;while(1){if(!ga){ta=0;break}ia=ga+-1|0;if(!(c[ra+(ia<<2)>>2]|0))ga=ia;else{ta=ga;break}}ga=c[q>>2]|0;while(1){if(!ga){ua=0;break}W=ga+-1|0;if(!(c[(c[r>>2]|0)+(W<<2)>>2]|0))ga=W;else{ua=ga;break}}h:do if(ua|ta){i:do if(ta>>>0>ua>>>0)va=c[o>>2]|0;else{if(ua>>>0>ta>>>0){va=0-(c[e>>2]|0)|0;break}ga=c[o>>2]|0;W=c[e>>2]|0;if((ga|0)>0&(W|0)<0)break h;if((ga|0)<0&(W|0)>0)break g;else wa=ta;do{if(!wa)break h;wa=wa+-1|0;W=c[ra+(wa<<2)>>2]|0;V=c[(c[r>>2]|0)+(wa<<2)>>2]|0;if(W>>>0>V>>>0){va=ga;break i}}while(W>>>0>=V>>>0);va=0-ga|0}while(0);if((va|0)<=-1)break g}while(0);X=Eo(o,o,e)|0;if(X){P=X;break a}ra=c[J>>2]|0;sa=c[I>>2]|0}P=jo(b,o)|0}else P=U}else P=Q}else P=N}else P=O}else P=M;while(0);M=c[v>>2]|0;if(M){b=c[s>>2]<<2;if(!b)xa=M;else{sa=b;b=M;while(1){sa=sa+-1|0;a[b>>0]=0;if(!sa)break;else b=b+1|0}xa=c[v>>2]|0}qy(xa)}c[h>>2]=1;c[s>>2]=0;c[v>>2]=0;v=c[x>>2]|0;if(v){s=c[w>>2]<<2;if(!s)ya=v;else{h=s;s=v;while(1){h=h+-1|0;a[s>>0]=0;if(!h)break;else s=s+1|0}ya=c[x>>2]|0}qy(ya)}c[j>>2]=1;c[w>>2]=0;c[x>>2]=0;x=c[z>>2]|0;if(x){w=c[y>>2]<<2;if(!w)za=x;else{j=w;w=x;while(1){j=j+-1|0;a[w>>0]=0;if(!j)break;else w=w+1|0}za=c[z>>2]|0}qy(za)}c[k>>2]=1;c[y>>2]=0;c[z>>2]=0;z=c[B>>2]|0;if(z){y=c[A>>2]<<2;if(!y)Aa=z;else{k=y;y=z;while(1){k=k+-1|0;a[y>>0]=0;if(!k)break;else y=y+1|0}Aa=c[B>>2]|0}qy(Aa)}c[l>>2]=1;c[A>>2]=0;c[B>>2]=0;B=c[D>>2]|0;if(B){A=c[C>>2]<<2;if(!A)Ba=B;else{l=A;A=B;while(1){l=l+-1|0;a[A>>0]=0;if(!l)break;else A=A+1|0}Ba=c[D>>2]|0}qy(Ba)}c[g>>2]=1;c[C>>2]=0;c[D>>2]=0;D=c[F>>2]|0;if(D){C=c[E>>2]<<2;if(!C)Ca=D;else{g=C;C=D;while(1){g=g+-1|0;a[C>>0]=0;if(!g)break;else C=C+1|0}Ca=c[F>>2]|0}qy(Ca)}c[m>>2]=1;c[E>>2]=0;c[F>>2]=0;F=c[H>>2]|0;if(F){E=c[G>>2]<<2;if(!E)Da=F;else{m=E;E=F;while(1){m=m+-1|0;a[E>>0]=0;if(!m)break;else E=E+1|0}Da=c[H>>2]|0}qy(Da)}c[n>>2]=1;c[G>>2]=0;c[H>>2]=0;H=c[J>>2]|0;if(H){G=c[I>>2]<<2;if(!G)Ea=H;else{n=G;G=H;while(1){n=n+-1|0;a[G>>0]=0;if(!n)break;else G=G+1|0}Ea=c[J>>2]|0}qy(Ea)}c[o>>2]=1;c[I>>2]=0;c[J>>2]=0;J=c[L>>2]|0;if(J){I=c[K>>2]<<2;if(!I)Fa=J;else{o=I;I=J;while(1){o=o+-1|0;a[I>>0]=0;if(!o)break;else I=I+1|0}Fa=c[L>>2]|0}qy(Fa)}c[p>>2]=1;c[K>>2]=0;c[L>>2]=0;t=P;i=f;return t|0}function Mo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+16|0;f=e;c[f>>2]=1;g=c[a+4>>2]|0;c[f+4>>2]=g;h=c[a+8>>2]|0;c[f+8>>2]=h;a=h;h=g;while(1){if(!h){j=-14;k=32;break}h=h+-1|0;if(c[a+(h<<2)>>2]|0){l=g;break}}if((k|0)==32){i=e;return j|0}while(1){if(!l){m=g;break}h=l+-1|0;if(!(c[a+(h<<2)>>2]|0))l=h;else{n=l;k=6;break}}a:do if((k|0)==6)if(n>>>0>1)m=g;else{l=1;while(1){if(!l){j=-14;break}l=l+-1|0;if((c[a+(l<<2)>>2]|0)!=1){m=g;break a}}i=e;return j|0}while(0);while(1){if(!m)break;n=m+-1|0;if(!(c[a+(n<<2)>>2]|0))m=n;else{o=m;k=11;break}}b:do if((k|0)==11?o>>>0<=1:0){m=1;while(1){if(!m){j=0;break}m=m+-1|0;if((c[a+(m<<2)>>2]|0)!=2)break b}i=e;return j|0}while(0);o=c[a>>2]&1;if(!o){j=-14;i=e;return j|0}m=(g|0)==0;n=0;c:while(1){l=c[18712+(n<<2)>>2]|0;h=l>>31;p=h|1;q=g;while(1){if(!q){r=0;break}s=q+-1|0;if(!(c[a+(s<<2)>>2]|0))q=s;else{r=q;break}}d:do if(r>>>0<=1){if(!r)if((p|0)>-1){j=h&-10;k=32;break c}else break;if((p|0)>=0){q=r;while(1){if(!q){j=0;k=32;break c}q=q+-1|0;s=c[a+(q<<2)>>2]|0;if(s>>>0>l>>>0)break d;if(s>>>0<l>>>0){j=0;k=32;break c}}}}while(0);if((l|0)==2)t=o;else if((l|0)==1){j=-14;k=32;break}else{if(m){j=-14;k=32;break}else{u=g;v=0}while(1){u=u+-1|0;p=c[a+(u<<2)>>2]|0;h=(((((p>>>16|v<<16)>>>0)%(l>>>0)|0)<<16|p&65535)>>>0)%(l>>>0)|0;if(!u){t=h;break}else v=h}}n=n+1|0;if(!t){j=-14;k=32;break}if((n|0)==167){k=31;break}}if((k|0)==31){j=Qo(f,b,d)|0;i=e;return j|0}else if((k|0)==32){i=e;return j|0}return 0}function No(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;h=i;i=i+1040|0;j=h+16|0;k=h+12|0;l=h;if((d+-3|0)>>>0>8189){m=-4;i=h;return m|0}c[l>>2]=1;n=l+4|0;c[n>>2]=0;o=l+8|0;c[o>>2]=0;p=((d&31|0)!=0&1)+(d>>>5)<<2;a:do if(p>>>0<=1024){q=od[f&127](g,j,p)|0;if(!q){r=vo(b,j,p)|0;if(!r){s=b+4|0;t=c[s>>2]|0;if(t){u=c[b+8>>2]|0;v=t;while(1){w=v+-1|0;if(!w){x=9;break}y=c[u+(w<<2)>>2]|0;if(!y)v=w;else{z=y;A=w;break}}if((x|0)==9){z=c[u>>2]|0;A=0}if((z|0)>-1){v=0;w=-2147483648;while(1){w=w>>>1;y=v+1|0;if(!(y>>>0<32&(w&z|0)==0)){B=y;break}else v=y}}else B=0;v=(A<<5)+32-B|0;if(v>>>0>d>>>0){w=yo(b,1-d+v|0)|0;if(w){C=w;break}D=c[s>>2]|0}else D=t}else D=0;w=d+-1|0;v=w>>>5;u=w&31;if(D<<5>>>0<=w>>>0){w=v+1|0;if(w>>>0<=1e4)if(D>>>0<w>>>0){y=ry(w,4)|0;if(y){E=b+8|0;F=c[E>>2]|0;if(!F)G=E;else{H=D<<2;zH(y|0,F|0,H|0)|0;if(!H)I=F;else{J=H;H=F;while(1){J=J+-1|0;a[H>>0]=0;if(!J)break;else H=H+1|0}I=c[E>>2]|0}qy(I);G=E}c[s>>2]=w;c[G>>2]=y;x=27}}else x=27}else x=27;if((x|0)==27){H=1<<u;J=(c[b+8>>2]|0)+(v<<2)|0;c[J>>2]=c[J>>2]&~H|H}H=b+8|0;J=c[H>>2]|0;t=c[J>>2]|0;c[J>>2]=t|1;if(!e){F=j+4|0;K=j+8|0;while(1){L=Mo(b,f,g)|0;if((L|0)!=-14){C=L;break a}c[k>>2]=2;c[j>>2]=1;c[F>>2]=1;c[K>>2]=k;L=Do(b,b,j)|0;if(L){C=L;break a}}}c[J>>2]=t|3;K=c[s>>2]|0;if(!K)M=0;else{F=K;K=0;while(1){F=F+-1|0;v=c[J+(F<<2)>>2]|0;u=(((((v>>>16|K<<16)>>>0)%3|0)<<16|v&65535)>>>0)%3|0;if(!F){M=u;break}else K=u}}K=(M|0)!=0&(c[b>>2]|0)<0?M^3:M;if(!K){c[k>>2]=8;c[j>>2]=1;c[j+4>>2]=1;c[j+8>>2]=k;F=Do(b,b,j)|0;if(F){C=F;break}}else if((K|0)==1?(c[k>>2]=4,c[j>>2]=1,c[j+4>>2]=1,c[j+8>>2]=k,K=Do(b,b,j)|0,(K|0)!=0):0){C=K;break}K=jo(l,b)|0;if(!K){F=c[n>>2]|0;if(!F){J=ry(1,4)|0;if(!J){C=-16;break}t=c[o>>2]|0;if(t)qy(t);c[n>>2]=1;c[o>>2]=J;c[J>>2]=0;c[l>>2]=1}else{J=c[o>>2]|0;t=F;F=0;while(1){t=t+-1|0;u=J+(t<<2)|0;v=c[u>>2]|0;c[u>>2]=v>>>1|F;if(!t)break;else F=v<<31}}F=j+4|0;t=j+8|0;J=j+4|0;v=j+8|0;while(1){u=c[H>>2]|0;y=c[u>>2]&1;b:do if(y){w=c[s>>2]|0;E=(w|0)==0;L=0;do{N=c[18712+(L<<2)>>2]|0;O=N>>31|1;P=w;while(1){if(!P){Q=0;break}R=P+-1|0;if(!(c[u+(R<<2)>>2]|0))P=R;else{Q=P;break}}c:do if(Q>>>0<=1){if(!Q){S=0-O|0;x=62;break}P=c[b>>2]|0;if(!((O|0)<0&(P|0)>0)){if((O|0)>0&(P|0)<0){C=1;break a}else T=Q;do{if(!T){C=1;break a}T=T+-1|0;R=c[u+(T<<2)>>2]|0;if(R>>>0>N>>>0){S=P;x=62;break c}}while(R>>>0>=N>>>0);S=0-P|0;x=62}}else{S=c[b>>2]|0;x=62}while(0);if((x|0)==62?(x=0,O=(S|0)<1,O):0){C=O?1:-10;break a}if((N|0)==2)U=y;else if((N|0)==1)break b;else{if(E)V=0;else{O=w;R=0;while(1){O=O+-1|0;W=c[u+(O<<2)>>2]|0;X=(((((W>>>16|R<<16)>>>0)%(N>>>0)|0)<<16|W&65535)>>>0)%(N>>>0)|0;if(!O){V=X;break}else R=X}}U=(V|0)!=0&(c[b>>2]|0)<0?N-V|0:V}L=L+1|0;if(!U)break b}while((L|0)!=167);L=c[o>>2]|0;w=c[L>>2]&1;if(w){E=c[n>>2]|0;R=c[l>>2]|0;O=(E|0)==0;X=(R|0)<0;W=(R|0)>0;Y=0-R|0;Z=0;do{_=c[18712+(Z<<2)>>2]|0;$=_>>31|1;aa=E;while(1){if(!aa){ba=0;break}ca=aa+-1|0;if(!(c[L+(ca<<2)>>2]|0))aa=ca;else{ba=aa;break}}d:do if(ba>>>0<=1){if(!ba){da=0-$|0;x=82;break}if(!(($|0)<0&W)){if(($|0)>0&X){C=1;break a}else ea=ba;while(1){if(!ea){C=1;break a}ea=ea+-1|0;aa=c[L+(ea<<2)>>2]|0;if(aa>>>0>_>>>0){da=R;x=82;break d}if(aa>>>0<_>>>0){da=Y;x=82;break}}}}else{da=R;x=82}while(0);if((x|0)==82?(x=0,$=(da|0)<1,$):0){C=$?1:-10;break a}if((_|0)==2)fa=w;else if((_|0)==1)break b;else{if(O)ga=0;else{$=E;P=0;while(1){$=$+-1|0;aa=c[L+($<<2)>>2]|0;N=(((((aa>>>16|P<<16)>>>0)%(_>>>0)|0)<<16|aa&65535)>>>0)%(_>>>0)|0;if(!$){ga=N;break}else P=N}}fa=(ga|0)!=0&X?_-ga|0:ga}Z=Z+1|0;if(!fa)break b}while((Z|0)!=167);Z=Qo(b,f,g)|0;if((Z|0)==-14)break;else if(Z){C=Z;break a}Z=Qo(l,f,g)|0;if((Z|0)!=-14){C=Z;break a}}}while(0);c[k>>2]=12;c[j>>2]=1;c[F>>2]=1;c[t>>2]=k;u=Do(b,b,j)|0;if(u){C=u;break a}c[k>>2]=6;c[j>>2]=1;c[J>>2]=1;c[v>>2]=k;u=Do(l,l,j)|0;if(u){C=u;break}}}else C=K}else C=r}else{ha=q;x=4}}else{ha=-4;x=4}while(0);if((x|0)==4)C=ha;ha=c[o>>2]|0;if(ha){x=c[n>>2]<<2;if(!x)ia=ha;else{j=x;x=ha;while(1){j=j+-1|0;a[x>>0]=0;if(!j)break;else x=x+1|0}ia=c[o>>2]|0}qy(ia)}c[l>>2]=1;c[n>>2]=0;c[o>>2]=0;m=C;i=h;return m|0}function Oo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0;if(a>>>0>15){f=a+-16|0;g=f&-16;h=g+16|0;i=d+(h<<2)|0;j=b;k=a;l=d;m=0;while(1){n=IH(c[j>>2]|0,0,e|0,0)|0;o=n+m|0;n=c[l>>2]|0;p=o+n|0;q=(o>>>0<m>>>0&1)+E+(p>>>0<n>>>0&1)|0;n=l+4|0;c[l>>2]=p;p=IH(c[j+4>>2]|0,0,e|0,0)|0;o=q+p|0;p=c[n>>2]|0;r=o+p|0;s=(o>>>0<q>>>0&1)+E+(r>>>0<p>>>0&1)|0;p=l+8|0;c[n>>2]=r;r=IH(c[j+8>>2]|0,0,e|0,0)|0;n=s+r|0;r=c[p>>2]|0;q=n+r|0;o=(n>>>0<s>>>0&1)+E+(q>>>0<r>>>0&1)|0;r=l+12|0;c[p>>2]=q;q=IH(c[j+12>>2]|0,0,e|0,0)|0;p=o+q|0;q=c[r>>2]|0;s=p+q|0;n=(p>>>0<o>>>0&1)+E+(s>>>0<q>>>0&1)|0;q=l+16|0;c[r>>2]=s;s=IH(c[j+16>>2]|0,0,e|0,0)|0;r=n+s|0;s=c[q>>2]|0;o=r+s|0;p=(r>>>0<n>>>0&1)+E+(o>>>0<s>>>0&1)|0;s=l+20|0;c[q>>2]=o;o=IH(c[j+20>>2]|0,0,e|0,0)|0;q=p+o|0;o=c[s>>2]|0;n=q+o|0;r=(q>>>0<p>>>0&1)+E+(n>>>0<o>>>0&1)|0;o=l+24|0;c[s>>2]=n;n=IH(c[j+24>>2]|0,0,e|0,0)|0;s=r+n|0;n=c[o>>2]|0;p=s+n|0;q=(s>>>0<r>>>0&1)+E+(p>>>0<n>>>0&1)|0;n=l+28|0;c[o>>2]=p;p=IH(c[j+28>>2]|0,0,e|0,0)|0;o=q+p|0;p=c[n>>2]|0;r=o+p|0;s=(o>>>0<q>>>0&1)+E+(r>>>0<p>>>0&1)|0;p=l+32|0;c[n>>2]=r;r=IH(c[j+32>>2]|0,0,e|0,0)|0;n=s+r|0;r=c[p>>2]|0;q=n+r|0;o=(n>>>0<s>>>0&1)+E+(q>>>0<r>>>0&1)|0;r=l+36|0;c[p>>2]=q;q=IH(c[j+36>>2]|0,0,e|0,0)|0;p=o+q|0;q=c[r>>2]|0;s=p+q|0;n=(p>>>0<o>>>0&1)+E+(s>>>0<q>>>0&1)|0;q=l+40|0;c[r>>2]=s;s=IH(c[j+40>>2]|0,0,e|0,0)|0;r=n+s|0;s=c[q>>2]|0;o=r+s|0;p=(r>>>0<n>>>0&1)+E+(o>>>0<s>>>0&1)|0;s=l+44|0;c[q>>2]=o;o=IH(c[j+44>>2]|0,0,e|0,0)|0;q=p+o|0;o=c[s>>2]|0;n=q+o|0;r=(q>>>0<p>>>0&1)+E+(n>>>0<o>>>0&1)|0;o=l+48|0;c[s>>2]=n;n=IH(c[j+48>>2]|0,0,e|0,0)|0;s=r+n|0;n=c[o>>2]|0;p=s+n|0;q=(s>>>0<r>>>0&1)+E+(p>>>0<n>>>0&1)|0;n=l+52|0;c[o>>2]=p;p=IH(c[j+52>>2]|0,0,e|0,0)|0;o=q+p|0;p=c[n>>2]|0;r=o+p|0;s=(o>>>0<q>>>0&1)+E+(r>>>0<p>>>0&1)|0;p=l+56|0;c[n>>2]=r;r=IH(c[j+56>>2]|0,0,e|0,0)|0;n=s+r|0;r=c[p>>2]|0;q=n+r|0;o=(n>>>0<s>>>0&1)+E+(q>>>0<r>>>0&1)|0;r=l+60|0;c[p>>2]=q;q=IH(c[j+60>>2]|0,0,e|0,0)|0;p=o+q|0;q=c[r>>2]|0;s=p+q|0;n=(p>>>0<o>>>0&1)+E+(s>>>0<q>>>0&1)|0;c[r>>2]=s;k=k+-16|0;if(k>>>0<=15){t=n;break}else{j=j+64|0;l=l+64|0;m=n}}u=f-g|0;v=b+(h<<2)|0;w=i;x=t}else{u=a;v=b;w=d;x=0}if(u>>>0>7){d=u+-8|0;b=d&-8;a=b+8|0;t=w+(a<<2)|0;i=u;h=v;g=w;f=x;while(1){m=IH(c[h>>2]|0,0,e|0,0)|0;l=m+f|0;m=c[g>>2]|0;j=l+m|0;k=(l>>>0<f>>>0&1)+E+(j>>>0<m>>>0&1)|0;m=g+4|0;c[g>>2]=j;j=IH(c[h+4>>2]|0,0,e|0,0)|0;l=k+j|0;j=c[m>>2]|0;n=l+j|0;s=(l>>>0<k>>>0&1)+E+(n>>>0<j>>>0&1)|0;j=g+8|0;c[m>>2]=n;n=IH(c[h+8>>2]|0,0,e|0,0)|0;m=s+n|0;n=c[j>>2]|0;k=m+n|0;l=(m>>>0<s>>>0&1)+E+(k>>>0<n>>>0&1)|0;n=g+12|0;c[j>>2]=k;k=IH(c[h+12>>2]|0,0,e|0,0)|0;j=l+k|0;k=c[n>>2]|0;s=j+k|0;m=(j>>>0<l>>>0&1)+E+(s>>>0<k>>>0&1)|0;k=g+16|0;c[n>>2]=s;s=IH(c[h+16>>2]|0,0,e|0,0)|0;n=m+s|0;s=c[k>>2]|0;l=n+s|0;j=(n>>>0<m>>>0&1)+E+(l>>>0<s>>>0&1)|0;s=g+20|0;c[k>>2]=l;l=IH(c[h+20>>2]|0,0,e|0,0)|0;k=j+l|0;l=c[s>>2]|0;m=k+l|0;n=(k>>>0<j>>>0&1)+E+(m>>>0<l>>>0&1)|0;l=g+24|0;c[s>>2]=m;m=IH(c[h+24>>2]|0,0,e|0,0)|0;s=n+m|0;m=c[l>>2]|0;j=s+m|0;k=(s>>>0<n>>>0&1)+E+(j>>>0<m>>>0&1)|0;m=g+28|0;c[l>>2]=j;j=IH(c[h+28>>2]|0,0,e|0,0)|0;l=k+j|0;j=c[m>>2]|0;n=l+j|0;s=(l>>>0<k>>>0&1)+E+(n>>>0<j>>>0&1)|0;c[m>>2]=n;i=i+-8|0;if(i>>>0<=7){y=s;break}else{h=h+32|0;g=g+32|0;f=s}}z=d-b|0;A=v+(a<<2)|0;B=t;C=y}else{z=u;A=v;B=w;C=x}if(!z){D=B;F=C}else{x=z;w=A;A=B;v=C;while(1){C=IH(c[w>>2]|0,0,e|0,0)|0;u=C+v|0;C=c[A>>2]|0;y=u+C|0;t=(u>>>0<v>>>0&1)+E+(y>>>0<C>>>0&1)|0;c[A>>2]=y;x=x+-1|0;if(!x){G=t;break}else{w=w+4|0;A=A+4|0;v=t}}D=B+(z<<2)|0;F=G}while(1){G=(c[D>>2]|0)+F|0;c[D>>2]=G;z=G>>>0<F>>>0;if(z){D=D+4|0;F=z&1}else break}return}function Po(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=f+8|0;BH(c[g>>2]|0,0,c[f+4>>2]<<2|0)|0;f=c[g>>2]|0;h=d+4|0;i=c[h>>2]|0;j=c[b+4>>2]|0;k=j>>>0<i>>>0?j:i;j=(i|0)==0;l=a+8|0;if(j)m=f;else{n=b+8|0;b=d+8|0;o=i+2|0;p=f;q=0;while(1){r=c[(c[l>>2]|0)+(q<<2)>>2]|0;s=c[n>>2]|0;t=aa((aa(c[s>>2]|0,r)|0)+(c[p>>2]|0)|0,e)|0;Oo(k,s,p,r);Oo(i,c[b>>2]|0,p,t);c[p>>2]=r;c[p+(o<<2)>>2]=0;q=q+1|0;if((q|0)==(i|0))break;else p=p+4|0}m=f+(i<<2)|0}zH(c[l>>2]|0,m|0,(i<<2)+4|0)|0;m=c[a+4>>2]|0;while(1){if(!m){u=0;break}a=m+-1|0;if(!(c[(c[l>>2]|0)+(a<<2)>>2]|0))m=a;else{u=m;break}}m=d+8|0;d=c[h>>2]|0;while(1){if(!d){v=0;break}h=d+-1|0;if(!(c[(c[m>>2]|0)+(h<<2)>>2]|0))d=h;else{v=d;break}}a:do if(!(u>>>0>v>>>0|(v|u|0)==0)){if(v>>>0<=u>>>0){d=u;do{if(!d)break a;d=d+-1|0;h=c[(c[l>>2]|0)+(d<<2)>>2]|0;a=c[(c[m>>2]|0)+(d<<2)>>2]|0;if(h>>>0>a>>>0)break a}while(h>>>0>=a>>>0)}d=c[g>>2]|0;if(j)return;a=c[l>>2]|0;h=d;f=0;p=0;while(1){q=c[h>>2]|0;o=q-f|0;c[h>>2]=o;b=c[a>>2]|0;k=(o>>>0<b>>>0&1)+(q>>>0<f>>>0&1)|0;c[h>>2]=o-b;p=p+1|0;if((p|0)==(i|0)){w=k;break}else{a=a+4|0;h=h+4|0;f=k}}if(!w)return;f=d+(i<<2)|0;h=w;while(1){a=c[f>>2]|0;p=a>>>0<h>>>0;c[f>>2]=a-h;if(p){f=f+4|0;h=p&1}else break}return}while(0);w=c[l>>2]|0;if(j)return;j=c[m>>2]|0;m=w;l=0;g=0;while(1){u=c[m>>2]|0;v=u-l|0;c[m>>2]=v;h=c[j>>2]|0;f=(v>>>0<h>>>0&1)+(u>>>0<l>>>0&1)|0;c[m>>2]=v-h;g=g+1|0;if((g|0)==(i|0)){x=f;break}else{j=j+4|0;m=m+4|0;l=f}}if(!x)return;l=w+(i<<2)|0;i=x;while(1){x=c[l>>2]|0;w=x>>>0<i>>>0;c[l>>2]=x-i;if(w){l=l+4|0;i=w&1}else break}return}function Qo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;f=i;i=i+1088|0;g=f+24|0;h=f+1060|0;j=f+1064|0;k=f+1076|0;l=f+12|0;m=f;n=f+1048|0;c[j>>2]=1;o=j+4|0;c[o>>2]=0;p=j+8|0;c[p>>2]=0;c[k>>2]=1;q=k+4|0;c[q>>2]=0;r=k+8|0;c[r>>2]=0;c[l>>2]=1;s=l+4|0;c[s>>2]=0;t=l+8|0;c[t>>2]=0;c[m>>2]=1;u=m+4|0;c[u>>2]=0;v=m+8|0;c[v>>2]=0;c[n>>2]=1;w=n+4|0;c[w>>2]=0;x=n+8|0;c[x>>2]=0;c[h>>2]=1;c[g>>2]=1;c[g+4>>2]=1;c[g+8>>2]=h;h=Eo(j,b,g)|0;a:do if(!h){y=c[o>>2]|0;b:do if(!y)z=0;else{A=c[p>>2]|0;B=0;C=0;while(1){D=c[A+(C<<2)>>2]|0;E=B;F=0;while(1){if(1<<F&D){z=E;break b}F=F+1|0;G=E+1|0;if(F>>>0>=32){H=G;break}else E=G}E=C+1|0;if(E>>>0<y>>>0){B=H;C=E}else{z=0;break}}}while(0);y=jo(k,j)|0;if(!y){C=yo(k,z)|0;if(!C){B=b+4|0;A=c[B>>2]|0;if(A){E=c[b+8>>2]|0;F=A;while(1){D=F+-1|0;if(!D){I=13;break}G=c[E+(D<<2)>>2]|0;if(!G)F=D;else{J=G;K=D;break}}if((I|0)==13){J=c[E>>2]|0;K=0}if((J|0)>-1){F=0;D=-2147483648;while(1){D=D>>>1;G=F+1|0;if(!(G>>>0<32&(D&J|0)==0)){L=G;break}else F=G}}else L=0;F=(K<<5)+32-L|0;if(F>>>0<=1299)if(F>>>0<=849)if(F>>>0<=649)if(F>>>0<=349)if(F>>>0>249)M=12;else{N=F;I=22}else M=8;else M=4;else M=3;else M=2}else{N=0;I=22}if((I|0)==22)M=N>>>0>149?18:27;F=z>>>0>1;D=A<<2;c:do if(D>>>0<=1024){E=D;G=0;d:while(1){O=od[d&127](e,g,E)|0;if(O){P=O;break c}O=vo(m,g,E)|0;if(O){Q=O;break a}O=c[u>>2]|0;R=c[v>>2]|0;S=O;while(1){if(!S){T=0;break}U=S+-1|0;if(!(c[R+(U<<2)>>2]|0))S=U;else{T=S;break}}S=c[o>>2]|0;U=c[p>>2]|0;V=S;while(1){if(!V){W=0;break}X=V+-1|0;if(!(c[U+(X<<2)>>2]|0))V=X;else{W=V;break}}e:do if(W|T){f:do if(T>>>0>W>>>0)Y=c[m>>2]|0;else{if(W>>>0>T>>>0){Y=0-(c[j>>2]|0)|0;break}V=c[m>>2]|0;X=c[j>>2]|0;if((V|0)>0&(X|0)<0){I=45;break e}if((V|0)<0&(X|0)>0){Z=R;break e}else _=T;do{if(!_){I=45;break e}_=_+-1|0;X=c[R+(_<<2)>>2]|0;$=c[U+(_<<2)>>2]|0;if(X>>>0>$>>>0){Y=V;break f}}while(X>>>0>=$>>>0);Y=0-V|0}while(0);if((Y|0)<=-1)Z=R;else I=45}else I=45;while(0);if((I|0)==45){I=0;if(!O)aa=0;else{$=O;while(1){X=$+-1|0;if(!X){I=47;break}ba=c[R+(X<<2)>>2]|0;if(!ba)$=X;else{ca=ba;da=X;break}}if((I|0)==47){I=0;ca=c[R>>2]|0;da=0}if((ca|0)>-1){$=0;O=-2147483648;while(1){O=O>>>1;X=$+1|0;if(!(X>>>0<32&(O&ca|0)==0)){ea=X;break}else $=X}}else ea=0;aa=(da<<5)+32-ea|0}if(!S)fa=0;else{$=S;while(1){O=$+-1|0;if(!O){I=54;break}R=c[U+(O<<2)>>2]|0;if(!R)$=O;else{ga=R;ha=O;break}}if((I|0)==54){I=0;ga=c[U>>2]|0;ha=0}if((ga|0)>-1){$=0;S=-2147483648;while(1){S=S>>>1;O=$+1|0;if(!(O>>>0<32&(S&ga|0)==0)){ia=O;break}else $=O}}else ia=0;fa=(ha<<5)+32-ia|0}$=yo(m,aa+1-fa|0)|0;if($){Q=$;break a}Z=c[v>>2]|0}c[Z>>2]=c[Z>>2]|3;$=c[B>>2]<<2;if($>>>0>1024){ja=-4;I=63;break}else{ka=$;la=0}g:while(1){$=od[d&127](e,g,ka)|0;if($){ja=$;I=63;break d}$=vo(m,g,ka)|0;if($){Q=$;break a}$=c[u>>2]|0;if(!$)ma=0;else{S=c[v>>2]|0;U=$;while(1){$=U+-1|0;if(!$){I=68;break}O=c[S+($<<2)>>2]|0;if(!O)U=$;else{na=O;oa=$;break}}if((I|0)==68){I=0;na=c[S>>2]|0;oa=0}if((na|0)>-1){U=0;$=-2147483648;while(1){$=$>>>1;O=U+1|0;if(!(O>>>0<32&($&na|0)==0)){pa=O;break}else U=O}}else pa=0;ma=(oa<<5)+32-pa|0}U=c[o>>2]|0;if(!U)qa=0;else{$=c[p>>2]|0;S=U;while(1){U=S+-1|0;if(!U){I=76;break}O=c[$+(U<<2)>>2]|0;if(!O)S=U;else{ra=O;sa=U;break}}if((I|0)==76){I=0;ra=c[$>>2]|0;sa=0}if((ra|0)>-1){S=0;U=-2147483648;while(1){U=U>>>1;O=S+1|0;if(!(O>>>0<32&(U&ra|0)==0)){ta=O;break}else S=O}}else ta=0;qa=(sa<<5)+32-ta|0}if(ma>>>0>qa>>>0?(S=yo(m,ma-qa|0)|0,(S|0)!=0):0){Q=S;break a}if((la|0)>30){ua=-14;I=227;break d}la=la+1|0;S=c[u>>2]|0;U=c[v>>2]|0;$=S;while(1){if(!$){va=0;break}O=$+-1|0;if(!(c[U+(O<<2)>>2]|0))$=O;else{va=$;break}}$=c[p>>2]|0;O=c[o>>2]|0;while(1){if(!O){wa=0;break}R=O+-1|0;if(!(c[$+(R<<2)>>2]|0))O=R;else{wa=O;break}}h:do if(wa|va){i:do if(va>>>0>wa>>>0){xa=c[m>>2]|0;I=101}else{if(wa>>>0>va>>>0){xa=0-(c[j>>2]|0)|0;I=101;break}O=c[m>>2]|0;R=c[j>>2]|0;if((O|0)>0&(R|0)<0)break h;if((O|0)<0&(R|0)>0){ya=S;break}else za=va;do{if(!za)break h;za=za+-1|0;R=c[U+(za<<2)>>2]|0;X=c[$+(za<<2)>>2]|0;if(R>>>0>X>>>0){xa=O;I=101;break i}}while(R>>>0>=X>>>0);xa=0-O|0;I=101}while(0);if((I|0)==101){I=0;if((xa|0)>-1)break;else ya=S}while(1){if(!ya)break h;V=ya+-1|0;if(!(c[U+(V<<2)>>2]|0))ya=V;else{Aa=ya;break}}V=c[m>>2]|0;j:do if(Aa>>>0>1)Ba=V;else{if((V|0)<0)break h;else Ca=1;do{if(!Ca)break h;Ca=Ca+-1|0;X=c[U+(Ca<<2)>>2]|0;if(X>>>0>1){Ba=V;break j}}while((X|0)!=0);Ba=0-V|0}while(0);if((Ba|0)>=1)break g}while(0);ka=c[B>>2]<<2;if(ka>>>0>1024){ja=-4;I=63;break d}}U=Io(m,m,k,b,n)|0;if(U){Q=U;break a}U=c[u>>2]|0;S=c[v>>2]|0;$=U;while(1){if(!$){Da=0;break}V=$+-1|0;if(!(c[S+(V<<2)>>2]|0))$=V;else{Da=$;break}}$=c[p>>2]|0;V=c[o>>2]|0;while(1){if(!V){Ea=0;break}O=V+-1|0;if(!(c[$+(O<<2)>>2]|0))V=O;else{Ea=V;break}}k:do if(Ea|Da){l:do if(Da>>>0<=Ea>>>0){if(Ea>>>0>Da>>>0){Fa=0-(c[j>>2]|0)|0;I=130;break}V=c[m>>2]|0;O=c[j>>2]|0;if((V|0)>0&(O|0)<0)Ga=U;else{if((V|0)<0&(O|0)>0){Ga=U;break}else Ha=Da;do{if(!Ha)break k;Ha=Ha+-1|0;O=c[S+(Ha<<2)>>2]|0;X=c[$+(Ha<<2)>>2]|0;if(O>>>0>X>>>0){Fa=V;I=130;break l}}while(O>>>0>=X>>>0);Fa=0-V|0;I=130}}else{Fa=c[m>>2]|0;I=130}while(0);if((I|0)==130){I=0;if(!Fa)break;else Ga=U}while(1){if(!Ga)break;X=Ga+-1|0;if(!(c[S+(X<<2)>>2]|0))Ga=X;else{Ia=Ga;I=133;break}}m:do if((I|0)==133){I=0;X=c[m>>2]|0;n:do if(Ia>>>0>1)Ja=X;else{if((X|0)<0)break m;else Ka=1;do{if(!Ka)break k;Ka=Ka+-1|0;O=c[S+(Ka<<2)>>2]|0;if(O>>>0>1){Ja=X;break n}}while((O|0)!=0);Ja=0-X|0}while(0);if(!Ja)break k}while(0);o:do if(F){X=S;V=U;O=1;while(1){R=V;while(1){if(!R){La=0;break}ba=R+-1|0;if(!(c[X+(ba<<2)>>2]|0))R=ba;else{La=R;break}}R=c[p>>2]|0;ba=c[o>>2]|0;while(1){if(!ba){Ma=0;break}Na=ba+-1|0;if(!(c[R+(Na<<2)>>2]|0))ba=Na;else{Ma=ba;break}}if(!(Ma|La)){Oa=X;Pa=V;break o}p:do if(La>>>0>Ma>>>0){Qa=c[m>>2]|0;I=158}else{if(Ma>>>0>La>>>0){Qa=0-(c[j>>2]|0)|0;I=158;break}ba=c[m>>2]|0;Na=c[j>>2]|0;if((ba|0)>0&(Na|0)<0)break;if((ba|0)<0&(Na|0)>0)break;else Ra=La;do{if(!Ra){Oa=X;Pa=V;break o}Ra=Ra+-1|0;Na=c[X+(Ra<<2)>>2]|0;Sa=c[R+(Ra<<2)>>2]|0;if(Na>>>0>Sa>>>0){Qa=ba;I=158;break p}}while(Na>>>0>=Sa>>>0);Qa=0-ba|0;I=158}while(0);if((I|0)==158?(I=0,(Qa|0)==0):0){Oa=X;Pa=V;break o}R=Fo(l,m,m)|0;if(R){Q=R;break a}R=Ho(m,l,b)|0;if(R){Q=R;break a}R=c[u>>2]|0;Sa=c[v>>2]|0;Na=R;while(1){if(!Na)break;Ta=Na+-1|0;if(!(c[Sa+(Ta<<2)>>2]|0))Na=Ta;else{Ua=Na;I=164;break}}q:do if((I|0)==164){I=0;Na=c[m>>2]|0;r:do if(Ua>>>0>1)Va=Na;else{if((Na|0)<0)break q;else Wa=1;do{if(!Wa){Oa=Sa;Pa=R;break o}Wa=Wa+-1|0;Ta=c[Sa+(Wa<<2)>>2]|0;if(Ta>>>0>1){Va=Na;break r}}while((Ta|0)!=0);Va=0-Na|0}while(0);if(!Va){Oa=Sa;Pa=R;break o}}while(0);O=O+1|0;if(O>>>0>=z>>>0){Oa=Sa;Pa=R;break}else{X=Sa;V=R}}}else{Oa=S;Pa=U}while(0);V=Pa;while(1){if(!V){Xa=0;break}X=V+-1|0;if(!(c[Oa+(X<<2)>>2]|0))V=X;else{Xa=V;break}}V=c[p>>2]|0;X=c[o>>2]|0;while(1){if(!X){Ya=0;break}O=X+-1|0;if(!(c[V+(O<<2)>>2]|0))X=O;else{Ya=X;break}}s:do if(Ya|Xa){t:do if(Xa>>>0>Ya>>>0)Za=c[m>>2]|0;else{if(Ya>>>0>Xa>>>0){Za=0-(c[j>>2]|0)|0;break}X=c[m>>2]|0;O=c[j>>2]|0;if((X|0)>0&(O|0)<0){Q=-14;break a}if((X|0)<0&(O|0)>0){Q=-14;break a}else _a=Xa;do{if(!_a){$a=Pa;break s}_a=_a+-1|0;O=c[Oa+(_a<<2)>>2]|0;Na=c[V+(_a<<2)>>2]|0;if(O>>>0>Na>>>0){Za=X;break t}}while(O>>>0>=Na>>>0);Za=0-X|0}while(0);if(Za){Q=-14;break a}else $a=Pa}else $a=Pa;while(0);while(1){if(!$a)break k;V=$a+-1|0;if(!(c[Oa+(V<<2)>>2]|0))$a=V;else{ab=$a;break}}V=c[m>>2]|0;u:do if(ab>>>0>1)bb=V;else{if((V|0)<0)break k;else cb=1;do{if(!cb){Q=-14;break a}cb=cb+-1|0;R=c[Oa+(cb<<2)>>2]|0;if(R>>>0>1){bb=V;break u}}while((R|0)!=0);bb=0-V|0}while(0);if(!bb){Q=-14;break a}}while(0);G=G+1|0;if(G>>>0>=M>>>0){Q=0;break a}E=c[B>>2]<<2;if(E>>>0>1024){P=-4;break c}}if((I|0)==63){Q=ja;break a}else if((I|0)==227){i=f;return ua|0}}else P=-4;while(0);Q=P}else Q=C}else Q=y}else Q=h;while(0);h=c[p>>2]|0;if(h){P=c[o>>2]<<2;if(!P)db=h;else{I=P;P=h;while(1){I=I+-1|0;a[P>>0]=0;if(!I)break;else P=P+1|0}db=c[p>>2]|0}qy(db)}c[j>>2]=1;c[o>>2]=0;c[p>>2]=0;p=c[r>>2]|0;if(p){o=c[q>>2]<<2;if(!o)eb=p;else{j=o;o=p;while(1){j=j+-1|0;a[o>>0]=0;if(!j)break;else o=o+1|0}eb=c[r>>2]|0}qy(eb)}c[k>>2]=1;c[q>>2]=0;c[r>>2]=0;r=c[t>>2]|0;if(r){q=c[s>>2]<<2;if(!q)fb=r;else{k=q;q=r;while(1){k=k+-1|0;a[q>>0]=0;if(!k)break;else q=q+1|0}fb=c[t>>2]|0}qy(fb)}c[l>>2]=1;c[s>>2]=0;c[t>>2]=0;t=c[v>>2]|0;if(t){s=c[u>>2]<<2;if(!s)gb=t;else{l=s;s=t;while(1){l=l+-1|0;a[s>>0]=0;if(!l)break;else s=s+1|0}gb=c[v>>2]|0}qy(gb)}c[m>>2]=1;c[u>>2]=0;c[v>>2]=0;v=c[x>>2]|0;if(v){u=c[w>>2]<<2;if(!u)hb=v;else{m=u;u=v;while(1){m=m+-1|0;a[u>>0]=0;if(!m)break;else u=u+1|0}hb=c[x>>2]|0}qy(hb)}c[n>>2]=1;c[w>>2]=0;c[x>>2]=0;ua=Q;i=f;return ua|0}function Ro(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=c[4847]|0;if(!b){d=0;return d|0}else{e=b;f=19384}while(1){if((c[f>>2]|0)==(a|0)){d=e;g=4;break}e=c[f+12>>2]|0;if(!e){d=0;g=4;break}else f=f+8|0}if((g|0)==4)return d|0;return 0}function So(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=c[4847]|0;if(!e){f=0;return f|0}else{g=e;h=19384}while(1){if(((c[c[g+28>>2]>>2]|0)==(a|0)?(c[g+8>>2]|0)==(b|0):0)?(c[g+4>>2]|0)==(d|0):0){f=g;i=6;break}g=c[h+12>>2]|0;if(!g){f=0;i=6;break}else h=h+8|0}if((i|0)==6)return f|0;return 0}function To(a){a=a|0;var b=0;b=a;a=b+64|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function Uo(b){b=b|0;var d=0,e=0;if(!b)return;d=b+60|0;e=c[d>>2]|0;if(e)td[c[(c[(c[b>>2]|0)+28>>2]|0)+24>>2]&255](e);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[b+4>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;a[b+8>>0]=0;a[b+9>>0]=0;a[b+10>>0]=0;a[b+11>>0]=0;a[b+12>>0]=0;a[b+13>>0]=0;a[b+14>>0]=0;a[b+15>>0]=0;a[b+16>>0]=0;a[b+17>>0]=0;a[b+18>>0]=0;a[b+19>>0]=0;a[b+20>>0]=0;a[b+21>>0]=0;a[b+22>>0]=0;a[b+23>>0]=0;a[b+24>>0]=0;a[b+25>>0]=0;a[b+26>>0]=0;a[b+27>>0]=0;a[b+28>>0]=0;a[b+29>>0]=0;a[b+30>>0]=0;a[b+31>>0]=0;a[b+32>>0]=0;a[b+33>>0]=0;a[b+34>>0]=0;a[b+35>>0]=0;a[b+36>>0]=0;a[b+37>>0]=0;a[b+38>>0]=0;a[b+39>>0]=0;a[b+40>>0]=0;a[b+41>>0]=0;a[b+42>>0]=0;a[b+43>>0]=0;a[b+44>>0]=0;a[b+45>>0]=0;a[b+46>>0]=0;a[b+47>>0]=0;a[b+48>>0]=0;a[b+49>>0]=0;a[b+50>>0]=0;a[b+51>>0]=0;a[b+52>>0]=0;a[b+53>>0]=0;a[b+54>>0]=0;a[b+55>>0]=0;a[b+56>>0]=0;a[b+57>>0]=0;a[b+58>>0]=0;a[b+59>>0]=0;a[d>>0]=0;a[b+61>>0]=0;a[b+62>>0]=0;a[b+63>>0]=0;return}function Vo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((a|0)==0|(b|0)==0){d=-24832;return d|0}e=a;f=e+64|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));e=sd[c[(c[b+28>>2]|0)+20>>2]&31]()|0;c[a+60>>2]=e;if(!e){d=-24960;return d|0}c[a>>2]=b;if((c[b+4>>2]|0)!=2){d=0;return d|0}c[a+12>>2]=34;c[a+16>>2]=61;d=0;return d|0}function Wo(a,b){a=a|0;b=b|0;var d=0;if(!a){d=-24832;return d|0}if((c[(c[a>>2]|0)+4>>2]|0)!=2){d=-24832;return d|0}switch(b|0){case 1:{c[a+12>>2]=35;c[a+16>>2]=62;d=0;return d|0}case 0:{c[a+12>>2]=34;c[a+16>>2]=61;d=0;return d|0}case 3:{c[a+12>>2]=37;c[a+16>>2]=64;d=0;return d|0}case 2:{c[a+12>>2]=36;c[a+16>>2]=63;d=0;return d|0}case 4:{c[a+12>>2]=0;c[a+16>>2]=65;d=0;return d|0}default:{d=-24704;return d|0}}return 0}function Xo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(!a){f=-24832;return f|0}g=c[a>>2]|0;if(!g){f=-24832;return f|0}if((c[g+20>>2]&2|0)==0?(c[g+8>>2]|0)!=(d|0):0){f=-24832;return f|0}c[a+4>>2]=d;c[a+8>>2]=e;if((e|0)!=1?(h=c[g+4>>2]|0,!((h|0)==5|(h|0)==3)):0){if(e){f=-24832;return f|0}f=od[c[(c[g+28>>2]|0)+16>>2]&127](c[a+60>>2]|0,b,d)|0;return f|0}f=od[c[(c[g+28>>2]|0)+12>>2]&127](c[a+60>>2]|0,b,d)|0;return f|0}function Yo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if((b|0)==0|(f|0)==0){e=-24832;return e|0}if(d>>>0>16){e=-24704;return e|0}if(!(c[f+20>>2]&1)){g=c[f+16>>2]|0;if(g>>>0>d>>>0){e=-24832;return e|0}else h=g}else h=d;zH(a+40|0,b|0,h|0)|0;c[a+56>>2]=h;e=0;return e|0}function Zo(a){a=a|0;var b=0;if((a|0)!=0?(c[a>>2]|0)!=0:0){c[a+36>>2]=0;b=0}else b=-24832;return b|0}function _o(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if(!f){e=-24832;return e|0}if((c[f+4>>2]|0)!=6){e=0;return e|0}e=fr(c[a+60>>2]|0,c[a+8>>2]|0,a+40|0,c[a+56>>2]|0,b,d)|0;return e|0}function $o(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;if(!a){g=-24832;return g|0}h=c[a>>2]|0;if((f|0)==0|(h|0)==0){g=-24832;return g|0}c[f>>2]=0;i=c[h+4>>2]|0;if((i|0)==1){if((c[h+24>>2]|0)!=(d|0)){g=-25216;return g|0}c[f>>2]=d;g=Ad[c[(c[h+28>>2]|0)+4>>2]&31](c[a+60>>2]|0,c[a+8>>2]|0,b,e)|0;return g|0}if((b|0)==(e|0)){if(c[a+36>>2]|0){g=-24832;return g|0}if((d>>>0)%((c[h+24>>2]|0)>>>0)|0){g=-24832;return g|0}}if((i|0)==6){j=a+8|0;k=c[j>>2]|0;if((k|0)==1){l=a+36|0;m=c[l>>2]|0;if((m+d|0)>>>0<(c[h+24>>2]|0)>>>0){n=l;o=m;p=14}else{q=l;r=m}}else if((k|0)==0?(k=a+36|0,m=c[k>>2]|0,(m+d|0)>>>0<=(c[h+24>>2]|0)>>>0):0){n=k;o=m;p=14}else p=12;if((p|0)==12){m=a+36|0;q=m;r=c[m>>2]|0}else if((p|0)==14){zH(a+20+o|0,b|0,d|0)|0;c[n>>2]=(c[n>>2]|0)+d;g=0;return g|0}if(!r){s=e;t=d;u=b;v=h}else{n=(c[h+24>>2]|0)-r|0;zH(a+20+r|0,b|0,n|0)|0;r=(c[q>>2]|0)+n|0;c[q>>2]=r;o=gr(c[a+60>>2]|0,r,a+20|0,e)|0;if(o){g=o;return g|0}o=c[a>>2]|0;if(!o)w=0;else{c[f>>2]=(c[f>>2]|0)+(c[o+24>>2]|0);w=c[o+24>>2]|0}c[q>>2]=0;s=e+w|0;t=d-n|0;u=b+n|0;v=o}if(!t){g=0;return g|0}o=(v|0)==0;if(o)x=0;else x=c[v+24>>2]|0;n=(t>>>0)%(x>>>0)|0;if(!n)if((c[j>>2]|0)!=0|o)y=0;else y=c[v+24>>2]|0;else y=n;n=t-y|0;zH(a+20|0,u+n|0,y|0)|0;c[q>>2]=(c[q>>2]|0)+y;if((t|0)==(y|0)){g=0;return g|0}y=gr(c[a+60>>2]|0,n,u,s)|0;if(y){g=y;return g|0}c[f>>2]=(c[f>>2]|0)+n;g=0;return g|0}else if((i|0)==2){i=a+8|0;n=c[i>>2]|0;if((n|0)==1){y=a+36|0;s=c[y>>2]|0;if((s+d|0)>>>0<(c[h+24>>2]|0)>>>0){z=y;A=s;p=33}else{B=y;C=s}}else if((n|0)==0?(n=a+36|0,s=c[n>>2]|0,(s+d|0)>>>0<=(c[h+24>>2]|0)>>>0):0){z=n;A=s;p=33}else p=31;if((p|0)==31){s=a+36|0;B=s;C=c[s>>2]|0}else if((p|0)==33){zH(a+20+A|0,b|0,d|0)|0;c[z>>2]=(c[z>>2]|0)+d;g=0;return g|0}if(!C){D=e;E=b;F=d}else{z=(c[h+24>>2]|0)-C|0;zH(a+20+C|0,b|0,z|0)|0;C=c[a>>2]|0;if(!C)G=0;else G=c[C+24>>2]|0;h=vd[c[(c[C+28>>2]|0)+8>>2]&63](c[a+60>>2]|0,c[i>>2]|0,G,a+40|0,a+20|0,e)|0;if(h){g=h;return g|0}h=c[a>>2]|0;if(!h)H=0;else{c[f>>2]=(c[f>>2]|0)+(c[h+24>>2]|0);H=c[h+24>>2]|0}c[B>>2]=0;D=e+H|0;E=b+z|0;F=d-z|0}if(!F){g=0;return g|0}z=c[a>>2]|0;d=(z|0)==0;if(d)I=0;else I=c[z+24>>2]|0;b=(F>>>0)%(I>>>0)|0;if(!b)if((c[i>>2]|0)!=0|d)J=0;else J=c[z+24>>2]|0;else J=b;b=F-J|0;zH(a+20|0,E+b|0,J|0)|0;c[B>>2]=(c[B>>2]|0)+J;if((F|0)==(J|0)){g=0;return g|0}J=vd[c[(c[z+28>>2]|0)+8>>2]&63](c[a+60>>2]|0,c[i>>2]|0,b,a+40|0,E,D)|0;if(J){g=J;return g|0}c[f>>2]=(c[f>>2]|0)+b;g=0;return g|0}else{g=-24704;return g|0}return 0}function ap(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if((d|0)==0|(f|0)==0){e=-24832;return e|0}c[d>>2]=0;switch(c[f+4>>2]|0){case 2:{g=a+8|0;h=c[g>>2]|0;do if((h|0)!=1){i=c[a+36>>2]|0;if((c[f+24>>2]|0)==(i|0)){j=f;k=h}else return ((i|0)==0&(c[a+12>>2]|0)==0?0:-25216)|0}else{i=c[a+12>>2]|0;if(i){xd[i&63](a+20|0,c[f+24>>2]|0,c[a+36>>2]|0);j=c[a>>2]|0;k=c[g>>2]|0;break}e=(c[a+36>>2]|0)==0?0:-25216;return e|0}while(0);if(!j)l=0;else l=c[j+24>>2]|0;f=vd[c[(c[j+28>>2]|0)+8>>2]&63](c[a+60>>2]|0,k,l,a+40|0,a+20|0,b)|0;if(f){e=f;return e|0}if(!(c[g>>2]|0)){g=c[a>>2]|0;if(!g)m=0;else m=c[g+24>>2]|0;e=od[c[a+16>>2]&127](b,m,d)|0;return e|0}else{m=c[a>>2]|0;if(!m)n=0;else n=c[m+24>>2]|0;c[d>>2]=n;e=0;return e|0}break}case 7:case 5:case 3:{e=0;return e|0}case 1:{e=(c[a+36>>2]|0)==0?0:-25216;return e|0}case 6:{n=a+36|0;c[d>>2]=c[n>>2];e=gr(c[a+60>>2]|0,c[n>>2]|0,a+20|0,b)|0;return e|0}default:{e=-24704;return e|0}}return 0}function bp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-24832;return e|0}f=c[a>>2]|0;if((b|0)==0|(f|0)==0){e=-24832;return e|0}if((c[a+8>>2]|0)!=1){e=-24832;return e|0}if((c[f+4>>2]|0)!=6){e=0;return e|0}e=hr(c[a+60>>2]|0,b,d)|0;return e|0}function cp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+16|0;g=f;if(((b|0)!=0?(h=c[b>>2]|0,(h|0)!=0):0)?(c[b+8>>2]|0)==0:0)if((c[h+4>>2]|0)==6)if(e>>>0<=16){h=hr(c[b+60>>2]|0,g,e)|0;if(!h)if(!e)j=0;else{b=0;k=0;while(1){l=(a[g+k>>0]^a[d+k>>0])&255|b;k=k+1|0;if((k|0)==(e|0)){m=l;break}else b=l}j=(m|0)==0?0:-25344}else j=h}else j=-24832;else j=0;else j=-24832;i=f;return j|0}function dp(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;j=i;i=i+16|0;k=j;do if((a|0)!=0?(l=c[a>>2]|0,!((b|0)==0|(l|0)==0)):0)if(d>>>0<=16){if(!(c[l+20>>2]&1)){m=c[l+16>>2]|0;if(m>>>0>d>>>0){n=-24832;break}else o=m}else o=d;zH(a+40|0,b|0,o|0)|0;c[a+56>>2]=o;c[a+36>>2]=0;m=$o(a,e,f,g,h)|0;if(!m){l=ap(a,g+(c[h>>2]|0)|0,k)|0;if(!l){c[h>>2]=(c[h>>2]|0)+(c[k>>2]|0);n=0}else n=l}else n=m}else n=-24704;else n=-24832;while(0);i=j;return n|0}function ep(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=c-d|0;if((c|0)==(d|0))return;c=e&255;f=0;g=0;do{a[b+(f+d)>>0]=c;g=g+1<<24>>24;f=g&255}while(f>>>0<e>>>0);return}function fp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if((b|0)==0|(e|0)==0){f=-24832;return f|0}g=a[b+(d+-1)>>0]|0;h=g&255;i=d-h|0;c[e>>2]=i;e=h>>>0>d>>>0|g<<24>>24==0;if(!d)j=e;else{h=e;e=0;while(1){k=(e>>>0>=i>>>0?(a[b+e>>0]^g)&255:0)|h&255;e=e+1|0;if((e|0)==(d|0)){j=k;break}else h=k}}f=(j&255|0)!=0?-25088:0;return f|0}function gp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=c-d|0;a[b+d>>0]=-128;if(e>>>0>1){f=1;g=1}else return;do{a[b+(f+d)>>0]=0;g=g+1<<24>>24;f=g&255}while(f>>>0<e>>>0);return}function hp(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if((b|0)==0|(f|0)==0){g=-24832;return g|0}c[f>>2]=0;if(!e){g=-25088;return g|0}else{h=0;i=255;j=0;k=e}while(1){k=k+-1|0;e=b+k|0;l=j&255;j=(a[e>>0]|0)!=0|l;h=((j|0)!=(l|0)?k:0)|h;c[f>>2]=h;m=(((j|0)==(l|0)|d[e>>0])^128)&(i&255);if(!k){n=m;break}else i=m}g=(n|0)!=0?-25088:0;return g|0}function ip(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=c-d|0;if(e>>>0>1){f=d+-1|0;d=1;g=1;do{a[b+(f+d)>>0]=0;g=g+1<<24>>24;d=g&255}while(d>>>0<e>>>0)}a[b+(c+-1)>>0]=e;return}function jp(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;if((b|0)==0|(f|0)==0){g=-24832;return g|0}h=e+-1|0;i=a[b+h>>0]|0;j=i&255;k=e-j|0;c[f>>2]=k;f=j>>>0>e>>>0|i<<24>>24==0;if(!h)l=f;else{i=f;f=0;while(1){e=(f>>>0>=k>>>0?d[b+f>>0]|0:0)|i&255;f=f+1|0;if((f|0)==(h|0)){l=e;break}else i=e}}g=(l&255|0)!=0?-25088:0;return g|0}function kp(a,b,c){a=a|0;b=b|0;c=c|0;if(b>>>0<=c>>>0)return;BH(a+c|0,0,b-c|0)|0;return}function lp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if((b|0)==0|(e|0)==0){f=-24832;return f|0}c[e>>2]=0;if(!d){f=0;return f|0}else{g=0;h=0;i=d}do{d=i;i=i+-1|0;j=h&255;h=(a[b+i>>0]|0)!=0|j;g=((h|0)!=(j|0)?d:0)|g;c[e>>2]=g}while((i|0)!=0);f=0;return f|0}function mp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((a|0)==0|(d|0)==0){e=-24832;return e|0}c[d>>2]=b;e=0;return e|0}function np(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return gq(a,c,d)|0}function op(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return hq(a,b,c,d,e,f)|0}function pp(a,b,c){a=a|0;b=b|0;c=c|0;return cq(a,b)|0}function qp(a,b,c){a=a|0;b=b|0;c=c|0;return dq(a,b)|0}function rp(){var a=0,b=0;a=ry(1,384)|0;if(!a){b=0;return b|0}Xp(a);b=a;return b|0}function sp(a){a=a|0;Yp(a);qy(a);return}function tp(a,b,c){a=a|0;b=b|0;c=c|0;return aq(a,b)|0}function up(a,b,c){a=a|0;b=b|0;c=c|0;return bq(a,b)|0}function vp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return eq(a,c,d)|0}function wp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return fq(a,b,c,d,e,f)|0}function xp(a,b,c){a=a|0;b=b|0;c=c|0;return _p(a,b)|0}function yp(a,b,c){a=a|0;b=b|0;c=c|0;return $p(a,b)|0}function zp(){var a=0,b=0;a=ry(1,128)|0;if(!a){b=0;return b|0}Vp(a);b=a;return b|0}function Ap(a){a=a|0;Wp(a);qy(a);return}function Bp(a,b,c){a=a|0;b=b|0;c=c|0;return Nu(a,2,b,c)|0}function Cp(){var a=0;a=ry(1,64)|0;if(!a)return a|0;Mu(a);return a|0}function Dp(a){a=a|0;Ou(a);qy(a);return}function Ep(a,b,c){a=a|0;b=b|0;c=c|0;return er(a,2,b,c)|0}function Fp(){var a=0;a=ry(1,392)|0;if(!a)return a|0;dr(a);return a|0}function Gp(a){a=a|0;ir(a);qy(a);return}function Hp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Ku(a,b,c,d)|0}function Ip(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Lu(a,b,c,d,e,f)|0}function Jp(a,b,c){a=a|0;b=b|0;c=c|0;return Gu(a,b,c)|0}function Kp(a,b,c){a=a|0;b=b|0;c=c|0;return Hu(a,b,c)|0}function Lp(){var a=0,b=0;a=ry(1,280)|0;if(!a){b=0;return b|0}Eu(a);b=a;return b|0}function Mp(a){a=a|0;Fu(a);qy(a);return}function Np(a){a=a|0;BH(a|0,0,320)|0;return}function Op(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+416|0;k=j+32|0;l=j;m=l;n=m+32|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));m=b+32|0;Eu(m);n=b+312|0;c[n>>2]=d;d=b+316|0;c[d>>2]=e;e=b+24|0;c[e>>2]=h;c[b+28>>2]=1e4;Gu(m,l,256)|0;l=c[e>>2]|0;if((l+g|0)>>>0>384){o=-56;i=j;return o|0}BH(k|0,0,384)|0;if(od[c[n>>2]&127](c[d>>2]|0,k,l)|0){o=-52;i=j;return o|0}l=c[e>>2]|0;if((f|0)!=0&(g|0)!=0){zH(k+l|0,f|0,g|0)|0;p=l+g|0}else p=l;Tp(k,k,p);Up(b,k);c[b+16>>2]=1;o=0;i=j;return o|0}function Pp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Op(a,b,c,d,e,48)|0}function Qp(b){b=b|0;var c=0,d=0;if(!b)return;Fu(b+32|0);c=320;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function Rp(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;h=i;i=i+448|0;j=h+64|0;k=h+16|0;l=h;if(e>>>0>1024){m=-54;i=h;return m|0}if(g>>>0>256){m=-56;i=h;return m|0}n=k;o=n+48|0;do{a[n>>0]=0;n=n+1|0}while((n|0)<(o|0));n=b+16|0;if((c[n>>2]|0)<=(c[b+28>>2]|0)?(c[b+20>>2]|0)==0:0){if(g){Tp(k,f,g);Up(b,k)}}else p=5;do if((p|0)==5){o=b+24|0;q=c[o>>2]|0;if((q+g|0)>>>0<=384){BH(j|0,0,384)|0;if(!(od[c[b+312>>2]&127](c[b+316>>2]|0,j,q)|0)){q=c[o>>2]|0;if((f|0)!=0&(g|0)!=0){zH(j+q|0,f|0,g|0)|0;r=q+g|0}else r=q;Tp(j,j,r);Up(b,j);c[n>>2]=1;break}else s=-52}else s=-56;m=s;i=h;return m|0}while(0);if(e){s=b+32|0;j=e;e=d;while(1){d=16;do{if((d|0)<=0)break;d=d+-1|0;r=b+d|0;g=(a[r>>0]|0)+1<<24>>24;a[r>>0]=g}while(g<<24>>24==0);Ku(s,1,b,l)|0;d=j>>>0>16?16:j;zH(e|0,l|0,d|0)|0;if((j|0)==(d|0))break;else{j=j-d|0;e=e+d|0}}}Up(b,k);c[n>>2]=(c[n>>2]|0)+1;m=0;i=h;return m|0}function Sp(a,b,c){a=a|0;b=b|0;c=c|0;return Rp(a,b,c,0,0)|0}function Tp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;e=i;i=i+800|0;f=e+376|0;g=e+328|0;h=e+296|0;j=e+280|0;k=e;if(d>>>0>384){i=e;return}BH(f|0,0,416)|0;Eu(k);a[f+16>>0]=d>>>24;a[f+17>>0]=d>>>16;a[f+18>>0]=d>>>8;a[f+19>>0]=d;a[f+23>>0]=48;zH(f+24|0,c|0,d|0)|0;a[f+(d+24)>>0]=-128;a[h>>0]=0;a[h+1>>0]=1;a[h+2>>0]=2;a[h+3>>0]=3;a[h+4>>0]=4;a[h+5>>0]=5;a[h+6>>0]=6;a[h+7>>0]=7;a[h+8>>0]=8;a[h+9>>0]=9;a[h+10>>0]=10;a[h+11>>0]=11;a[h+12>>0]=12;a[h+13>>0]=13;a[h+14>>0]=14;a[h+15>>0]=15;a[h+16>>0]=16;a[h+17>>0]=17;a[h+18>>0]=18;a[h+19>>0]=19;a[h+20>>0]=20;a[h+21>>0]=21;a[h+22>>0]=22;a[h+23>>0]=23;a[h+24>>0]=24;a[h+25>>0]=25;a[h+26>>0]=26;a[h+27>>0]=27;a[h+28>>0]=28;a[h+29>>0]=29;a[h+30>>0]=30;a[h+31>>0]=31;c=d+25|0;Gu(k,h,256)|0;h=f+3|0;if(!c){l=j;m=l+16|0;do{a[l>>0]=0;l=l+1|0}while((l|0)<(m|0));l=g;n=j;m=l+16|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(m|0));d=a[h>>0]|0;l=j;m=l+16|0;do{a[l>>0]=0;l=l+1|0}while((l|0)<(m|0));l=g+16|0;n=j;m=l+16|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(m|0));l=j;m=l+16|0;do{a[l>>0]=0;l=l+1|0}while((l|0)<(m|0));o=g+32|0;l=o;n=j;m=l+16|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(m|0));a[h>>0]=d+3<<24>>24;p=o}else{o=j+1|0;d=j+2|0;q=j+3|0;r=j+4|0;s=j+5|0;t=j+6|0;u=j+7|0;v=j+8|0;w=j+9|0;x=j+10|0;y=j+11|0;z=j+12|0;A=j+13|0;B=j+14|0;C=j+15|0;D=0;do{l=j;m=l+16|0;do{a[l>>0]=0;l=l+1|0}while((l|0)<(m|0));E=0;F=0;G=0;H=0;I=0;J=0;K=0;L=0;M=0;N=0;O=0;P=0;Q=0;R=0;S=0;T=0;U=f;V=c;while(1){a[j>>0]=L^a[U>>0];a[o>>0]=M^a[U+1>>0];a[d>>0]=N^a[U+2>>0];a[q>>0]=O^a[U+3>>0];a[r>>0]=P^a[U+4>>0];a[s>>0]=Q^a[U+5>>0];a[t>>0]=R^a[U+6>>0];a[u>>0]=S^a[U+7>>0];a[v>>0]=T^a[U+8>>0];a[w>>0]=E^a[U+9>>0];a[x>>0]=F^a[U+10>>0];a[y>>0]=G^a[U+11>>0];a[z>>0]=H^a[U+12>>0];a[A>>0]=I^a[U+13>>0];a[B>>0]=J^a[U+14>>0];a[C>>0]=K^a[U+15>>0];W=V>>>0<16?V:16;Ku(k,1,j,j)|0;if((V|0)==(W|0))break;E=a[w>>0]|0;F=a[x>>0]|0;G=a[y>>0]|0;H=a[z>>0]|0;I=a[A>>0]|0;J=a[B>>0]|0;K=a[C>>0]|0;L=a[j>>0]|0;M=a[o>>0]|0;N=a[d>>0]|0;O=a[q>>0]|0;P=a[r>>0]|0;Q=a[s>>0]|0;R=a[t>>0]|0;S=a[u>>0]|0;T=a[v>>0]|0;U=U+16|0;V=V-W|0}l=g+D|0;n=j;m=l+16|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(m|0));a[h>>0]=(a[h>>0]|0)+1<<24>>24;D=D+16|0}while((D|0)<48);p=g+32|0}Gu(k,g,256)|0;Ku(k,1,p,p)|0;l=b;n=p;m=l+16|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(m|0));Ku(k,1,p,p)|0;l=b+16|0;n=p;m=l+16|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(m|0));Ku(k,1,p,p)|0;l=b+32|0;n=p;m=l+16|0;do{a[l>>0]=a[n>>0]|0;l=l+1|0;n=n+1|0}while((l|0)<(m|0));Fu(k);i=e;return}function Up(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;d=i;i=i+48|0;e=d;f=e;g=f+48|0;do{a[f>>0]=0;f=f+1|0}while((f|0)<(g|0));h=b+32|0;j=16;do{if((j|0)<=0)break;j=j+-1|0;k=b+j|0;l=(a[k>>0]|0)+1<<24>>24;a[k>>0]=l}while(l<<24>>24==0);Ku(h,1,b,e)|0;j=e+16|0;l=16;do{if((l|0)<=0)break;l=l+-1|0;k=b+l|0;m=(a[k>>0]|0)+1<<24>>24;a[k>>0]=m}while(m<<24>>24==0);Ku(h,1,b,j)|0;j=e+32|0;l=16;do{if((l|0)<=0)break;l=l+-1|0;m=b+l|0;k=(a[m>>0]|0)+1<<24>>24;a[m>>0]=k}while(k<<24>>24==0);Ku(h,1,b,j)|0;j=0;do{l=e+j|0;a[l>>0]=a[l>>0]^a[c+j>>0];j=j+1|0}while((j|0)!=48);Gu(h,e,256)|0;f=b;b=e+32|0;g=f+16|0;do{a[f>>0]=a[b>>0]|0;f=f+1|0;b=b+1|0}while((f|0)<(g|0));i=d;return}function Vp(a){a=a|0;var b=0;b=a;a=b+128|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function Wp(b){b=b|0;var c=0,d=0;if(!b)return;c=128;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function Xp(a){a=a|0;BH(a|0,0,384)|0;return}function Yp(b){b=b|0;var c=0,d=0;if(!b)return;c=384;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function Zp(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=d[b>>0]|0;f=(d[b+1>>0]|0)<<16|e<<24|(d[b+2>>0]|0)<<8|(d[b+3>>0]|0);g=(d[b+5>>0]|0)<<16|(d[b+4>>0]|0)<<24|(d[b+6>>0]|0)<<8|(d[b+7>>0]|0);b=(g>>>4^f)&252645135;h=b^f;i=b<<4^g;g=(i^f)&269488144^i;i=a;a=(c[20456+((h>>>8&15)<<2)>>2]<<2|c[20456+((h&15)<<2)>>2]<<3|c[20456+((h>>>16&15)<<2)>>2]<<1|c[20456+((h>>>24&15)<<2)>>2]|c[20456+((h>>>5&15)<<2)>>2]<<7|c[20456+((h>>>13&15)<<2)>>2]<<6|c[20456+((h>>>21&15)<<2)>>2]<<5|c[20456+(e>>>5<<2)>>2]<<4)&268435455;e=(c[20520+((g>>>9&15)<<2)>>2]<<2|c[20520+((g>>>1&15)<<2)>>2]<<3|c[20520+((g>>>17&15)<<2)>>2]<<1|c[20520+((g>>>25&15)<<2)>>2]|c[20520+((g>>>4&15)<<2)>>2]<<7|c[20520+((g>>>12&15)<<2)>>2]<<6|c[20520+((g>>>20&15)<<2)>>2]<<5|c[20520+(g>>>28<<2)>>2]<<4)&268435455;g=0;while(1){if((g|0)>=2?!((g|0)==8|(g|0)==15):0){j=a<<2&268435452|a>>>26;k=e<<2&268435452|e>>>26}else{j=a<<1&268435454|a>>>27;k=e<<1&268435454|e>>>27}h=j<<10;f=k>>>14;b=k>>>3;c[i>>2]=j<<4&603979776|j<<28&268435456|j<<14&134217728|j<<18&34078720|j<<6&16777216|j<<9&2097152|j>>>1&1048576|h&262144|j<<2&131072|j>>>10&65536|k&256|k>>>13&8192|k>>>4&4096|k<<6&2048|k>>>1&1024|f&512|k>>>5&32|k>>>10&16|b&8|k>>>18&4|k>>>26&2|k>>>24&1;l=j<<15;c[i+4>>2]=l&536870912|j<<17&268435456|h&134217728|j<<22&67108864|j>>>2&33554432|j<<1&16777216|j<<16&2097152|j<<11&1048576|j<<3&524288|j>>>6&262144|l&131072|j>>>4&65536|k&512|k>>>2&8192|k<<8&4096|f&2056|k>>>9&1024|k<<7&256|k>>>7&32|b&17|k<<2&4|k>>>21&2;g=g+1|0;if((g|0)==16)break;else{i=i+8|0;a=j;e=k}}return}function _p(a,b){a=a|0;b=b|0;Zp(a,b);return 0}function $p(a,b){a=a|0;b=b|0;var d=0,e=0;Zp(a,b);b=c[a>>2]|0;d=a+120|0;c[a>>2]=c[d>>2];c[d>>2]=b;b=a+4|0;d=c[b>>2]|0;e=a+124|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+8|0;e=c[d>>2]|0;b=a+112|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+12|0;b=c[e>>2]|0;d=a+116|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+16|0;d=c[b>>2]|0;e=a+104|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+20|0;e=c[d>>2]|0;b=a+108|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+24|0;b=c[e>>2]|0;d=a+96|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+28|0;d=c[b>>2]|0;e=a+100|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+32|0;e=c[d>>2]|0;b=a+88|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+36|0;b=c[e>>2]|0;d=a+92|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+40|0;d=c[b>>2]|0;e=a+80|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+44|0;e=c[d>>2]|0;b=a+84|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+48|0;b=c[e>>2]|0;d=a+72|0;c[e>>2]=c[d>>2];c[d>>2]=b;b=a+52|0;d=c[b>>2]|0;e=a+76|0;c[b>>2]=c[e>>2];c[e>>2]=d;d=a+56|0;e=c[d>>2]|0;b=a+64|0;c[d>>2]=c[b>>2];c[b>>2]=e;e=a+60|0;b=c[e>>2]|0;d=a+68|0;c[e>>2]=c[d>>2];c[d>>2]=b;return 0}function aq(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;i=i+384|0;e=d;iq(b,e,c);c=384;b=e;while(1){c=c+-1|0;a[b>>0]=0;if(!c)break;else b=b+1|0}i=d;return 0}function bq(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;i=i+384|0;e=d;iq(e,b,c);c=384;b=e;while(1){c=c+-1|0;a[b>>0]=0;if(!c)break;else b=b+1|0}i=d;return 0}function cq(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;i=i+384|0;e=d;jq(b,e,c);c=384;b=e;while(1){c=c+-1|0;a[b>>0]=0;if(!c)break;else b=b+1|0}i=d;return 0}function dq(b,c){b=b|0;c=c|0;var d=0,e=0;d=i;i=i+384|0;e=d;jq(e,b,c);c=384;b=e;while(1){c=c+-1|0;a[b>>0]=0;if(!c)break;else b=b+1|0}i=d;return 0}function eq(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=(d[e+1>>0]|0)<<16|(d[e>>0]|0)<<24|(d[e+2>>0]|0)<<8|(d[e+3>>0]|0);h=(d[e+5>>0]|0)<<16|(d[e+4>>0]|0)<<24|(d[e+6>>0]|0)<<8|(d[e+7>>0]|0);e=(h^g>>>4)&252645135;i=e^h;h=e<<4^g;g=h>>>16^i&65535;e=g^i;i=g<<16^h;h=(e>>>2^i)&858993459;g=h^i;i=h<<2^e;e=(i>>>8^g)&16711935;h=e^g;g=e<<8^i;i=g<<1;e=(i^h)&-1431655766;j=e^h;h=b;b=j<<1|j>>>31;j=e^(i|g>>>31);g=0;while(1){i=c[h>>2]^j;e=c[h+4>>2]^(j<<28|j>>>4);k=c[20584+((i&63)<<2)>>2]^b^c[20840+((i>>>8&63)<<2)>>2]^c[21096+((i>>>16&63)<<2)>>2]^c[21352+((i>>>24&63)<<2)>>2]^c[21608+((e&63)<<2)>>2]^c[21864+((e>>>8&63)<<2)>>2]^c[22120+((e>>>16&63)<<2)>>2]^c[22376+((e>>>24&63)<<2)>>2];e=c[h+8>>2]^k;i=c[h+12>>2]^(k<<28|k>>>4);l=c[20584+((e&63)<<2)>>2]^j^c[20840+((e>>>8&63)<<2)>>2]^c[21096+((e>>>16&63)<<2)>>2]^c[21352+((e>>>24&63)<<2)>>2]^c[21608+((i&63)<<2)>>2]^c[21864+((i>>>8&63)<<2)>>2]^c[22120+((i>>>16&63)<<2)>>2]^c[22376+((i>>>24&63)<<2)>>2];g=g+1|0;if((g|0)==8){m=k;n=l;break}else{h=h+16|0;b=k;j=l}}j=n<<31|n>>>1;n=(j^m)&-1431655766;b=n^j;j=(n^m)>>>1|m<<31;m=(j>>>8^b)&16711935;n=m^b;b=m<<8^j;j=(b>>>2^n)&858993459;m=j^n;n=j<<2^b;b=n&65535^m>>>16;j=b^n;n=b<<16^m;m=(n>>>4^j)&252645135;b=m^j;j=m<<4^n;a[f>>0]=j>>>24;a[f+1>>0]=j>>>16;a[f+2>>0]=j>>>8;a[f+3>>0]=j;a[f+4>>0]=b>>>24;a[f+5>>0]=b>>>16;a[f+6>>0]=b>>>8;a[f+7>>0]=b;return 0}function fq(b,c,e,f,g,h){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if(e&7){i=-50;return i|0}j=(e|0)==0;if((c|0)==1){if(j){i=0;return i|0}c=f+1|0;k=f+2|0;l=f+3|0;m=f+4|0;n=f+5|0;o=f+6|0;p=f+7|0;q=g;r=h;s=e;t=a[f>>0]|0;while(1){a[r>>0]=t^a[q>>0];a[r+1>>0]=a[c>>0]^a[q+1>>0];a[r+2>>0]=a[k>>0]^a[q+2>>0];a[r+3>>0]=a[l>>0]^a[q+3>>0];a[r+4>>0]=a[m>>0]^a[q+4>>0];a[r+5>>0]=a[n>>0]^a[q+5>>0];a[r+6>>0]=a[o>>0]^a[q+6>>0];a[r+7>>0]=a[p>>0]^a[q+7>>0];eq(b,r,r)|0;u=r;v=u;w=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=u+4|0;u=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=f;x=v;a[x>>0]=w;a[x+1>>0]=w>>8;a[x+2>>0]=w>>16;a[x+3>>0]=w>>24;x=v+4|0;a[x>>0]=u;a[x+1>>0]=u>>8;a[x+2>>0]=u>>16;a[x+3>>0]=u>>24;s=s+-8|0;if(!s){i=0;break}else{q=q+8|0;r=r+8|0;t=w&255}}return i|0}else{if(j){i=0;return i|0}j=f+1|0;t=f+2|0;r=f+3|0;q=f+4|0;s=f+5|0;p=f+6|0;o=f+7|0;n=h;h=g;g=e;while(1){e=h;m=e;l=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=e+4|0;e=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;eq(b,h,n)|0;a[n>>0]=a[f>>0]^a[n>>0];m=n+1|0;a[m>>0]=a[j>>0]^a[m>>0];m=n+2|0;a[m>>0]=a[t>>0]^a[m>>0];m=n+3|0;a[m>>0]=a[r>>0]^a[m>>0];m=n+4|0;a[m>>0]=a[q>>0]^a[m>>0];m=n+5|0;a[m>>0]=a[s>>0]^a[m>>0];m=n+6|0;a[m>>0]=a[p>>0]^a[m>>0];m=n+7|0;a[m>>0]=a[o>>0]^a[m>>0];m=f;k=m;a[k>>0]=l;a[k+1>>0]=l>>8;a[k+2>>0]=l>>16;a[k+3>>0]=l>>24;l=m+4|0;a[l>>0]=e;a[l+1>>0]=e>>8;a[l+2>>0]=e>>16;a[l+3>>0]=e>>24;g=g+-8|0;if(!g){i=0;break}else{n=n+8|0;h=h+8|0}}return i|0}return 0}function gq(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=(d[e+1>>0]|0)<<16|(d[e>>0]|0)<<24|(d[e+2>>0]|0)<<8|(d[e+3>>0]|0);h=(d[e+5>>0]|0)<<16|(d[e+4>>0]|0)<<24|(d[e+6>>0]|0)<<8|(d[e+7>>0]|0);e=(h^g>>>4)&252645135;i=e^h;h=e<<4^g;g=h>>>16^i&65535;e=g^i;i=g<<16^h;h=(e>>>2^i)&858993459;g=h^i;i=h<<2^e;e=(i>>>8^g)&16711935;h=e^g;g=e<<8^i;i=g<<1;e=(i^h)&-1431655766;j=e^h;h=b+128|0;k=b;l=j<<1|j>>>31;j=e^(i|g>>>31);g=0;while(1){i=c[k>>2]^j;e=c[k+4>>2]^(j<<28|j>>>4);m=c[20584+((i&63)<<2)>>2]^l^c[20840+((i>>>8&63)<<2)>>2]^c[21096+((i>>>16&63)<<2)>>2]^c[21352+((i>>>24&63)<<2)>>2]^c[21608+((e&63)<<2)>>2]^c[21864+((e>>>8&63)<<2)>>2]^c[22120+((e>>>16&63)<<2)>>2]^c[22376+((e>>>24&63)<<2)>>2];e=c[k+8>>2]^m;i=c[k+12>>2]^(m<<28|m>>>4);n=c[20584+((e&63)<<2)>>2]^j^c[20840+((e>>>8&63)<<2)>>2]^c[21096+((e>>>16&63)<<2)>>2]^c[21352+((e>>>24&63)<<2)>>2]^c[21608+((i&63)<<2)>>2]^c[21864+((i>>>8&63)<<2)>>2]^c[22120+((i>>>16&63)<<2)>>2]^c[22376+((i>>>24&63)<<2)>>2];g=g+1|0;if((g|0)==8){o=m;p=n;break}else{k=k+16|0;l=m;j=n}}j=b+256|0;l=b+112|0;k=h;h=o;o=p;p=0;while(1){g=c[k>>2]^h;n=c[l+20>>2]^(h<<28|h>>>4);m=c[20584+((g&63)<<2)>>2]^o^c[20840+((g>>>8&63)<<2)>>2]^c[21096+((g>>>16&63)<<2)>>2]^c[21352+((g>>>24&63)<<2)>>2]^c[21608+((n&63)<<2)>>2]^c[21864+((n>>>8&63)<<2)>>2]^c[22120+((n>>>16&63)<<2)>>2]^c[22376+((n>>>24&63)<<2)>>2];n=c[l+24>>2]^m;g=c[l+28>>2]^(m<<28|m>>>4);i=c[20584+((n&63)<<2)>>2]^h^c[20840+((n>>>8&63)<<2)>>2]^c[21096+((n>>>16&63)<<2)>>2]^c[21352+((n>>>24&63)<<2)>>2]^c[21608+((g&63)<<2)>>2]^c[21864+((g>>>8&63)<<2)>>2]^c[22120+((g>>>16&63)<<2)>>2]^c[22376+((g>>>24&63)<<2)>>2];p=p+1|0;if((p|0)==8){q=m;r=i;break}else{g=k;k=k+16|0;h=i;o=m;l=g}}l=b+240|0;b=j;j=r;r=q;q=0;while(1){o=c[b>>2]^r;h=c[l+20>>2]^(r<<28|r>>>4);k=c[20584+((o&63)<<2)>>2]^j^c[20840+((o>>>8&63)<<2)>>2]^c[21096+((o>>>16&63)<<2)>>2]^c[21352+((o>>>24&63)<<2)>>2]^c[21608+((h&63)<<2)>>2]^c[21864+((h>>>8&63)<<2)>>2]^c[22120+((h>>>16&63)<<2)>>2]^c[22376+((h>>>24&63)<<2)>>2];h=c[l+24>>2]^k;o=c[l+28>>2]^(k<<28|k>>>4);p=c[20584+((h&63)<<2)>>2]^r^c[20840+((h>>>8&63)<<2)>>2]^c[21096+((h>>>16&63)<<2)>>2]^c[21352+((h>>>24&63)<<2)>>2]^c[21608+((o&63)<<2)>>2]^c[21864+((o>>>8&63)<<2)>>2]^c[22120+((o>>>16&63)<<2)>>2]^c[22376+((o>>>24&63)<<2)>>2];q=q+1|0;if((q|0)==8){s=k;t=p;break}else{o=b;b=b+16|0;j=k;r=p;l=o}}l=t<<31|t>>>1;t=(l^s)&-1431655766;r=t^l;l=(t^s)>>>1|s<<31;s=(l>>>8^r)&16711935;t=s^r;r=s<<8^l;l=(r>>>2^t)&858993459;s=l^t;t=l<<2^r;r=t&65535^s>>>16;l=r^t;t=r<<16^s;s=(t>>>4^l)&252645135;r=s^l;l=s<<4^t;a[f>>0]=l>>>24;a[f+1>>0]=l>>>16;a[f+2>>0]=l>>>8;a[f+3>>0]=l;a[f+4>>0]=r>>>24;a[f+5>>0]=r>>>16;a[f+6>>0]=r>>>8;a[f+7>>0]=r;return 0}function hq(b,c,e,f,g,h){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;if(e&7){i=-50;return i|0}j=(e|0)==0;if((c|0)==1){if(j){i=0;return i|0}c=f+1|0;k=f+2|0;l=f+3|0;m=f+4|0;n=f+5|0;o=f+6|0;p=f+7|0;q=g;r=h;s=e;t=a[f>>0]|0;while(1){a[r>>0]=t^a[q>>0];a[r+1>>0]=a[c>>0]^a[q+1>>0];a[r+2>>0]=a[k>>0]^a[q+2>>0];a[r+3>>0]=a[l>>0]^a[q+3>>0];a[r+4>>0]=a[m>>0]^a[q+4>>0];a[r+5>>0]=a[n>>0]^a[q+5>>0];a[r+6>>0]=a[o>>0]^a[q+6>>0];a[r+7>>0]=a[p>>0]^a[q+7>>0];gq(b,r,r)|0;u=r;v=u;w=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=u+4|0;u=d[v>>0]|d[v+1>>0]<<8|d[v+2>>0]<<16|d[v+3>>0]<<24;v=f;x=v;a[x>>0]=w;a[x+1>>0]=w>>8;a[x+2>>0]=w>>16;a[x+3>>0]=w>>24;x=v+4|0;a[x>>0]=u;a[x+1>>0]=u>>8;a[x+2>>0]=u>>16;a[x+3>>0]=u>>24;s=s+-8|0;if(!s){i=0;break}else{q=q+8|0;r=r+8|0;t=w&255}}return i|0}else{if(j){i=0;return i|0}j=f+1|0;t=f+2|0;r=f+3|0;q=f+4|0;s=f+5|0;p=f+6|0;o=f+7|0;n=h;h=g;g=e;while(1){e=h;m=e;l=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;m=e+4|0;e=d[m>>0]|d[m+1>>0]<<8|d[m+2>>0]<<16|d[m+3>>0]<<24;gq(b,h,n)|0;a[n>>0]=a[f>>0]^a[n>>0];m=n+1|0;a[m>>0]=a[j>>0]^a[m>>0];m=n+2|0;a[m>>0]=a[t>>0]^a[m>>0];m=n+3|0;a[m>>0]=a[r>>0]^a[m>>0];m=n+4|0;a[m>>0]=a[q>>0]^a[m>>0];m=n+5|0;a[m>>0]=a[s>>0]^a[m>>0];m=n+6|0;a[m>>0]=a[p>>0]^a[m>>0];m=n+7|0;a[m>>0]=a[o>>0]^a[m>>0];m=f;k=m;a[k>>0]=l;a[k+1>>0]=l>>8;a[k+2>>0]=l>>16;a[k+3>>0]=l>>24;l=m+4|0;a[l>>0]=e;a[l+1>>0]=e>>8;a[l+2>>0]=e>>16;a[l+3>>0]=e>>24;g=g+-8|0;if(!g){i=0;break}else{n=n+8|0;h=h+8|0}}return i|0}return 0}function iq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;Zp(a,d);Zp(b+128|0,d+8|0);d=0;do{e=b+(d<<2)|0;c[e>>2]=c[a+(30-d<<2)>>2];f=d|1;g=b+(f<<2)|0;c[g>>2]=c[a+(31-d<<2)>>2];c[a+(d+32<<2)>>2]=c[b+(62-d<<2)>>2];c[a+(d+33<<2)>>2]=c[b+(63-d<<2)>>2];h=d+64|0;c[a+(h<<2)>>2]=c[a+(d<<2)>>2];i=d+65|0;c[a+(i<<2)>>2]=c[a+(f<<2)>>2];c[b+(h<<2)>>2]=c[e>>2];c[b+(i<<2)>>2]=c[g>>2];d=d+2|0}while((d|0)<32);return}function jq(a,b,d){a=a|0;b=b|0;d=d|0;Zp(a,d);Zp(b+128|0,d+8|0);Zp(a+256|0,d+16|0);d=0;do{c[b+(d<<2)>>2]=c[a+(94-d<<2)>>2];c[b+((d|1)<<2)>>2]=c[a+(95-d<<2)>>2];c[a+(d+32<<2)>>2]=c[b+(62-d<<2)>>2];c[a+(d+33<<2)>>2]=c[b+(63-d<<2)>>2];c[b+(d+64<<2)>>2]=c[a+(30-d<<2)>>2];c[b+(d+65<<2)>>2]=c[a+(31-d<<2)>>2];d=d+2|0}while((d|0)<32);return}function kq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+144|0;k=j+104|0;l=j+72|0;m=j+40|0;n=j;if(!b){o=-20352;i=j;return o|0}if((c[b>>2]|0)==9){p=wo(e,l,32)|0;if(!p){q=l+31|0;r=a[l>>0]|0;a[l>>0]=a[q>>0]|0;a[q>>0]=r;r=l+1|0;q=l+30|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=l+2|0;q=l+29|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=l+3|0;q=l+28|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=l+4|0;q=l+27|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=l+5|0;q=l+26|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=l+6|0;q=l+25|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=l+7|0;q=l+24|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=l+8|0;q=l+23|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=l+9|0;q=l+22|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=l+10|0;q=l+21|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=l+11|0;q=l+20|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=l+12|0;q=l+19|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=l+13|0;q=l+18|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=l+14|0;q=l+17|0;r=a[s>>0]|0;a[s>>0]=a[q>>0]|0;a[q>>0]=r;r=l+15|0;q=l+16|0;s=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=s;s=wo(f,m,32)|0;if(!s){q=m+31|0;r=a[m>>0]|0;a[m>>0]=a[q>>0]|0;a[q>>0]=r;r=m+1|0;q=m+30|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+2|0;q=m+29|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+3|0;q=m+28|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+4|0;q=m+27|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+5|0;q=m+26|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+6|0;q=m+25|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+7|0;q=m+24|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+8|0;q=m+23|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+9|0;q=m+22|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+10|0;q=m+21|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+11|0;q=m+20|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+12|0;q=m+19|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+13|0;q=m+18|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;t=m+14|0;q=m+17|0;r=a[t>>0]|0;a[t>>0]=a[q>>0]|0;a[q>>0]=r;r=m+15|0;q=m+16|0;t=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=t;if(!(tv(k,l,m)|0)){l=k+31|0;t=a[k>>0]|0;a[k>>0]=a[l>>0]|0;a[l>>0]=t;t=k+1|0;l=k+30|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;q=k+2|0;l=k+29|0;t=a[q>>0]|0;a[q>>0]=a[l>>0]|0;a[l>>0]=t;t=k+3|0;l=k+28|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;q=k+4|0;l=k+27|0;t=a[q>>0]|0;a[q>>0]=a[l>>0]|0;a[l>>0]=t;t=k+5|0;l=k+26|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;q=k+6|0;l=k+25|0;t=a[q>>0]|0;a[q>>0]=a[l>>0]|0;a[l>>0]=t;t=k+7|0;l=k+24|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;q=k+8|0;l=k+23|0;t=a[q>>0]|0;a[q>>0]=a[l>>0]|0;a[l>>0]=t;t=k+9|0;l=k+22|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;q=k+10|0;l=k+21|0;t=a[q>>0]|0;a[q>>0]=a[l>>0]|0;a[l>>0]=t;t=k+11|0;l=k+20|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;q=k+12|0;l=k+19|0;t=a[q>>0]|0;a[q>>0]=a[l>>0]|0;a[l>>0]=t;t=k+13|0;l=k+18|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;q=k+14|0;l=k+17|0;t=a[q>>0]|0;a[q>>0]=a[l>>0]|0;a[l>>0]=t;t=k+15|0;l=k+16|0;q=a[t>>0]|0;a[t>>0]=a[l>>0]|0;a[l>>0]=q;u=vo(d,k,32)|0}else u=-20352}else u=s}else u=p;a[m>>0]=0;a[m+1>>0]=0;a[m+2>>0]=0;a[m+3>>0]=0;a[m+4>>0]=0;a[m+5>>0]=0;a[m+6>>0]=0;a[m+7>>0]=0;a[m+8>>0]=0;a[m+9>>0]=0;a[m+10>>0]=0;a[m+11>>0]=0;a[m+12>>0]=0;a[m+13>>0]=0;a[m+14>>0]=0;a[m+15>>0]=0;a[m+16>>0]=0;a[m+17>>0]=0;a[m+18>>0]=0;a[m+19>>0]=0;a[m+20>>0]=0;a[m+21>>0]=0;a[m+22>>0]=0;a[m+23>>0]=0;a[m+24>>0]=0;a[m+25>>0]=0;a[m+26>>0]=0;a[m+27>>0]=0;a[m+28>>0]=0;a[m+29>>0]=0;a[m+30>>0]=0;a[m+31>>0]=0;a[k>>0]=0;a[k+1>>0]=0;a[k+2>>0]=0;a[k+3>>0]=0;a[k+4>>0]=0;a[k+5>>0]=0;a[k+6>>0]=0;a[k+7>>0]=0;a[k+8>>0]=0;a[k+9>>0]=0;a[k+10>>0]=0;a[k+11>>0]=0;a[k+12>>0]=0;a[k+13>>0]=0;a[k+14>>0]=0;a[k+15>>0]=0;a[k+16>>0]=0;a[k+17>>0]=0;a[k+18>>0]=0;a[k+19>>0]=0;a[k+20>>0]=0;a[k+21>>0]=0;a[k+22>>0]=0;a[k+23>>0]=0;a[k+24>>0]=0;a[k+25>>0]=0;a[k+26>>0]=0;a[k+27>>0]=0;a[k+28>>0]=0;a[k+29>>0]=0;a[k+30>>0]=0;a[k+31>>0]=0;o=u;i=j;return o|0}else{oq(n);u=Aq(b,e)|0;if(!u){k=yq(b,n,f,e,g,h)|0;if(!k)if(!(vq(n)|0))v=jo(d,n)|0;else v=-20352;else v=k}else v=u;qq(n);o=v;i=j;return o|0}return 0}function lq(a){a=a|0;BH(a|0,0,308)|0;return}function mq(a){a=a|0;if(!a)return;rq(a);qq(a+136|0);qq(a+172|0);qq(a+224|0);qq(a+260|0);go(a+124|0);go(a+208|0);go(a+296|0);return}function nq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if(!a){h=-20352;return h|0}i=a+208|0;j=kq(a,i,a+172|0,a+124|0,f,g)|0;if(j){h=j;return h|0}if((ro(i)|0)>>>0>e>>>0){h=-20352;return h|0}e=c[a+88>>2]|0;a=((e&7|0)!=0&1)+(e>>>3)|0;c[b>>2]=a;h=wo(i,d,a)|0;return h|0}function oq(a){a=a|0;if(!a)return;fo(a);fo(a+12|0);fo(a+24|0);return}function pq(a){a=a|0;var b=0,d=0;if(!a)return;b=a;d=b+124|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(d|0));fo(a+124|0);fo(a+136|0);fo(a+148|0);fo(a+160|0);return}function qq(a){a=a|0;if(!a)return;go(a);go(a+12|0);go(a+24|0);return}function rq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!b)return;if((c[b+96>>2]|0)!=1){go(b+4|0);go(b+16|0);go(b+28|0);go(b+40|0);go(b+52|0);go(b+64|0);go(b+76|0)}d=b+116|0;e=c[d>>2]|0;if(e){f=b+120|0;g=c[f>>2]|0;if(!g)h=e;else{i=e;e=g;g=0;while(1){j=i+(g*36|0)|0;if(!j)k=e;else{go(j);go(i+(g*36|0)+12|0);go(i+(g*36|0)+24|0);k=c[f>>2]|0}j=g+1|0;if(j>>>0>=k>>>0)break;i=c[d>>2]|0;e=k;g=j}h=c[d>>2]|0}qy(h)}h=124;d=b;while(1){h=h+-1|0;a[d>>0]=0;if(!h)break;else d=d+1|0}return}function sq(a){a=a|0;if(!a)return;rq(a);go(a+124|0);go(a+136|0);go(a+148|0);go(a+160|0);return}function tq(a,b){a=a|0;b=b|0;var c=0,d=0;c=jo(a,b)|0;if(c){d=c;return d|0}c=jo(a+12|0,b+12|0)|0;if(c){d=c;return d|0}d=jo(a+24|0,b+24|0)|0;return d|0}function uq(a,b){a=a|0;b=b|0;return Mq(a,c[b>>2]|0)|0}function vq(a){a=a|0;return (Ao(a+24|0,0)|0)==0|0}function wq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if(e>>>0>1){i=-20352;return i|0}if(!(Ao(d+24|0,0)|0)){if(!h){i=-20224;return i|0}a[g>>0]=0;c[f>>2]=1;i=0;return i|0}j=ro(b+4|0)|0;if((e|0)==1){b=j+1|0;c[f>>2]=b;if(b>>>0>h>>>0){i=-20224;return i|0}a[g>>0]=(oo(d+12|0,0)|0)+2;i=wo(d,g+1|0,j)|0;return i|0}else if(!e){e=j<<1|1;c[f>>2]=e;if(e>>>0>h>>>0){i=-20224;return i|0}a[g>>0]=4;h=wo(d,g+1|0,j)|0;if(h){i=h;return i|0}i=wo(d+12|0,g+(j+1)|0,j)|0;return i|0}else{i=0;return i|0}return 0}function xq(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;if(!e){f=-20352;return f|0}if(!(a[d>>0]|0)){if((e|0)!=1){f=-20352;return f|0}g=no(c,1)|0;if(g){f=g;return f|0}g=no(c+12|0,1)|0;if(g){f=g;return f|0}f=no(c+24|0,0)|0;return f|0}g=ro(b+4|0)|0;if((a[d>>0]|0)!=4){f=-20096;return f|0}if((g<<1|1|0)!=(e|0)){f=-20352;return f|0}e=vo(c,d+1|0,g)|0;if(e){f=e;return f|0}e=vo(c+12|0,d+(g+1)|0,g)|0;if(e){f=e;return f|0}f=no(c+24|0,1)|0;return f|0}function yq(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;k=i;i=i+544|0;l=k+408|0;m=k+96|0;n=k;o=k+132|0;p=k+396|0;q=k+532|0;r=k+84|0;s=k+120|0;t=k+108|0;u=k+48|0;v=k+36|0;w=g+24|0;if(Ao(w,1)|0){x=-20352;i=k;return x|0}y=zq(b,f)|0;if(y){x=y;i=k;return x|0}y=Aq(b,g)|0;if(y){x=y;i=k;return x|0}if(!(c[b+48>>2]|0)){x=-20352;i=k;return x|0}if(!(c[b+60>>2]|0)){fo(u);y=u+12|0;fo(y);z=u+24|0;fo(z);fo(v);A=jo(v,g)|0;a:do if(!A){B=jo(u,g)|0;if(!B){C=jo(y,g+12|0)|0;if(!C){D=jo(z,w)|0;if(!D){E=no(e,1)|0;if(!E){F=e+24|0;G=no(F,0)|0;if(!G){go(e+12|0);H=b+4|0;while(1){if((zo(u,H)|0)<=-1)break;I=Co(u,u,H)|0;if(I){J=I;break a}}if(h){I=((c[b+88>>2]|0)+7|0)>>>3;fo(l);K=0;b:while(1){Ko(l,I,h,j)|0;while(1){if((zo(l,H)|0)<=-1)break;L=yo(l,1)|0;if(L){M=L;break b}}if((K|0)>10){N=21;break}if((Ao(l,1)|0)<1)K=K+1|0;else{N=23;break}}if((N|0)==21){J=-19712;break}if((N|0)==23){K=Fo(u,u,l)|0;if(!K){I=Gq(u,b)|0;if(!I){L=Fo(z,z,l)|0;if(!L)M=Gq(z,b)|0;else M=L}else M=I}else M=K}go(l);if(M){J=M;break}}K=b+16|0;I=qo(f)|0;while(1){if(!I)break;I=I+-1|0;L=(oo(f,I)|0)&255;O=mo(e,u,L)|0;if(O){J=O;break a}O=mo(F,z,L)|0;if(O){J=O;break a}fo(l);fo(m);fo(n);fo(o);fo(p);fo(q);fo(r);fo(s);fo(t);O=Do(l,e,F)|0;c:do if(!O){while(1){if((zo(l,H)|0)<=-1)break;P=Co(l,l,H)|0;if(P){Q=P;break c}}P=Fo(m,l,l)|0;if(P){Q=P;break}P=Gq(m,b)|0;if(P){Q=P;break}P=Eo(n,e,F)|0;if(P){Q=P;break}while(1){if((c[n>>2]|0)>=0)break;if(!(Ao(n,0)|0))break;P=Do(n,n,H)|0;if(P){Q=P;break c}}P=Fo(o,n,n)|0;if(P){Q=P;break}P=Gq(o,b)|0;if(P){Q=P;break}P=Eo(p,m,o)|0;if(P){Q=P;break}while(1){if((c[p>>2]|0)>=0)break;if(!(Ao(p,0)|0))break;P=Do(p,p,H)|0;if(P){Q=P;break c}}P=Do(q,u,z)|0;if(P){Q=P;break}while(1){if((zo(q,H)|0)<=-1)break;P=Co(q,q,H)|0;if(P){Q=P;break c}}P=Eo(r,u,z)|0;if(P){Q=P;break}while(1){if((c[r>>2]|0)>=0)break;if(!(Ao(r,0)|0))break;P=Do(r,r,H)|0;if(P){Q=P;break c}}P=Fo(s,r,l)|0;if(P){Q=P;break}P=Gq(s,b)|0;if(P){Q=P;break}P=Fo(t,q,n)|0;if(P){Q=P;break}P=Gq(t,b)|0;if(P){Q=P;break}P=Do(u,s,t)|0;if(P){Q=P;break}P=Gq(u,b)|0;if(P){Q=P;break}P=Fo(u,u,u)|0;if(P){Q=P;break}P=Gq(u,b)|0;if(P){Q=P;break}P=Eo(z,s,t)|0;if(P){Q=P;break}while(1){if((c[z>>2]|0)>=0)break;if(!(Ao(z,0)|0))break;P=Do(z,z,H)|0;if(P){Q=P;break c}}P=Fo(z,z,z)|0;if(P){Q=P;break}P=Gq(z,b)|0;if(P){Q=P;break}P=Fo(z,v,z)|0;if(P){Q=P;break}P=Gq(z,b)|0;if(P){Q=P;break}P=Fo(e,m,o)|0;if(P){Q=P;break}P=Gq(e,b)|0;if(P){Q=P;break}P=Fo(F,K,p)|0;if(P){Q=P;break}P=Gq(F,b)|0;if(P){Q=P;break}P=Do(F,o,F)|0;if(P){Q=P;break}while(1){if((zo(F,H)|0)<=-1)break;P=Co(F,F,H)|0;if(P){Q=P;break c}}P=Fo(F,p,F)|0;if(P){Q=P;break}Q=Gq(F,b)|0}else Q=O;while(0);go(l);go(m);go(n);go(o);go(p);go(q);go(r);go(s);go(t);if(Q){J=Q;break a}O=mo(e,u,L)|0;if(O){J=O;break a}O=mo(F,z,L)|0;if(O){J=O;break a}}K=Lo(F,F,H)|0;if(!K){I=Fo(e,e,F)|0;if(!I){O=Gq(e,b)|0;if(!O)J=no(F,1)|0;else J=O}else J=I}else J=K}else J=G}else J=E}else J=D}else J=C}else J=B}else J=A;while(0);go(u);go(y);go(z);go(v);x=J;i=k;return x|0}fo(p);fo(q);J=b+76|0;if((oo(J,0)|0)==1){v=b+92|0;z=(c[v>>2]|0)>>>0>383?5:4;y=g+12|0;if(!(zo(y,b+52|0)|0))R=(zo(g,b+40|0)|0)==0&1;else R=0;u=R<<24>>24!=0;A=R+z<<24>>24;z=(A&255)>6?6:A&255;A=c[v>>2]|0;v=z>>>0<A>>>0?z:2;z=v+-1|0;Q=1<<z;t=Q&255;s=((A+-1+v|0)>>>0)/(v>>>0)|0;if(R<<24>>24!=0?(R=c[b+116>>2]|0,(R|0)!=0):0){S=R;N=119}else N=92;d:do if((N|0)==92){R=Q&255;A=ry(R,36)|0;if(!A){T=A;U=-19840}else{r=jo(A,g)|0;e:do if(!r){M=jo(A+12|0,y)|0;if(!M){K=jo(A+24|0,w)|0;if(!K){I=(z|0)==0;f:do if(I)V=0;else{if(!s){O=1;P=0;while(1){W=A+(O*36|0)|0;X=O>>>1;Y=jo(W,A+(X*36|0)|0)|0;if(Y){Z=Y;break e}Y=jo(A+(O*36|0)+12|0,A+(X*36|0)+12|0)|0;if(Y){Z=Y;break e}Y=jo(A+(O*36|0)+24|0,A+(X*36|0)+24|0)|0;if(Y){Z=Y;break e}Y=P+1<<24>>24;c[l+((P&255)<<2)>>2]=W;O=O<<1&254;if(O>>>0>=Q>>>0){V=Y;break f}else P=Y}}else{_=1;$=0}while(1){P=A+(_*36|0)|0;O=_>>>1;Y=jo(P,A+(O*36|0)|0)|0;if(Y){Z=Y;break e}Y=jo(A+(_*36|0)+12|0,A+(O*36|0)+12|0)|0;if(Y){Z=Y;break e}Y=jo(A+(_*36|0)+24|0,A+(O*36|0)+24|0)|0;if(!Y)ba=0;else{Z=Y;break e}do{Y=Hq(b,P,P)|0;ba=ba+1|0;if(Y){Z=Y;break e}}while(ba>>>0<s>>>0);Y=$+1<<24>>24;c[l+(($&255)<<2)>>2]=P;_=_<<1&254;if(_>>>0>=Q>>>0){V=Y;break}else $=Y}}while(0);L=Iq(b,l,V&255)|0;if(!L){if(I)ca=0;else{Y=1;O=0;while(1){if(!Y)da=O;else{W=A+(Y*36|0)|0;X=Y;ea=O;while(1){X=X+-1|0;fa=A+((X+Y|0)*36|0)|0;ga=Jq(b,fa,A+(X*36|0)|0,W)|0;if(ga){Z=ga;break e}ga=ea+1<<24>>24;c[l+((ea&255)<<2)>>2]=fa;if(!X){da=ga;break}else ea=ga}}Y=Y<<1&254;if(Y>>>0>=Q>>>0){ca=da;break}else O=da}}O=Iq(b,l,ca&255)|0;if(O){T=A;U=O;break d}if(!u){S=A;N=119;break d}c[b+116>>2]=A;c[b+120>>2]=R;S=A;N=119;break d}else Z=L}else Z=K}else Z=M}else Z=r;while(0);T=A;U=Z}}while(0);if((N|0)==119){Z=oo(f,0)|0;ca=jo(p,f)|0;if(!ca){da=Eo(q,J,f)|0;if(!da){f=(Z|0)!=1;Z=lo(p,q,f&1)|0;if(!Z){BH(o|0,0,s+1|0)|0;if(s){J=0;do{V=o+J|0;$=a[V>>0]|0;_=0;while(1){ba=((oo(p,(aa(_,s)|0)+J|0)|0)<<_|$&255)&255;_=_+1|0;if((_|0)==(v|0)){ha=ba;break}else $=ba}a[V>>0]=ha;J=J+1|0}while((J|0)!=(s|0));J=a[o>>0]|0;ha=0;v=1;while(1){$=o+v|0;_=d[$>>0]|0;A=_^ha;ba=A&1^1;w=J&255;y=w&0-ba;J=(y^A)&255;a[$>>0]=J;a[o+(v+-1)>>0]=ba<<7|w;v=v+1|0;if(v>>>0>s>>>0)break;else ha=y&A|_&ha}}fo(n);ha=n+12|0;fo(ha);v=n+24|0;fo(v);J=a[o+s>>0]|0;_=(J&255)>>>1&63;A=t<<24>>24==0;g:do if(A){ia=e+12|0;N=134}else{t=e+12|0;y=Q&255;w=0;while(1){ba=(w|0)==(_|0)&1;$=lo(e,S+(w*36|0)|0,ba)|0;if($){ja=$;break g}$=lo(t,S+(w*36|0)+12|0,ba)|0;w=w+1|0;if($){ja=$;break g}if(w>>>0>=y>>>0){ia=t;N=134;break}}}while(0);h:do if((N|0)==134){fo(l);_=b+4|0;t=Eo(l,_,ia)|0;if(!t)ka=lo(ia,l,(Ao(ia,0)|0)!=0&((J&255)>>>7&255)&255)|0;else ka=t;go(l);if(!ka){t=e+24|0;y=no(t,1)|0;if(!y){if(h){w=((c[b+88>>2]|0)+7|0)>>>3;fo(l);fo(m);V=0;i:while(1){Ko(l,w,h,j)|0;while(1){if((zo(l,_)|0)<=-1)break;$=yo(l,1)|0;if($){la=$;break i}}if((V|0)>10){N=144;break}if((Ao(l,1)|0)<1)V=V+1|0;else{N=146;break}}if((N|0)==144){ja=-19712;break}do if((N|0)==146){V=Fo(t,t,l)|0;if(V){la=V;break}V=Gq(t,b)|0;if(V){la=V;break}V=Fo(m,l,l)|0;if(V){la=V;break}V=Gq(m,b)|0;if(V){la=V;break}V=Fo(e,e,m)|0;if(V){la=V;break}V=Gq(e,b)|0;if(V){la=V;break}V=Fo(m,m,l)|0;if(V){la=V;break}V=Gq(m,b)|0;if(V){la=V;break}V=Fo(ia,ia,m)|0;if(V){la=V;break}la=Gq(ia,b)|0}while(0);go(l);go(m);if(la){ja=la;break}}t=Q&255;V=s;while(1){if(!V){ja=0;break h}V=V+-1|0;w=Hq(b,e,e)|0;if(w){ja=w;break h}w=a[o+V>>0]|0;M=(w&255)>>>1&63;if(!A){K=0;do{L=(K|0)==(M|0)&1;$=lo(n,S+(K*36|0)|0,L)|0;if($){ja=$;break h}$=lo(ha,S+(K*36|0)+12|0,L)|0;K=K+1|0;if($){ja=$;break h}}while(K>>>0<t>>>0)}fo(l);K=Eo(l,_,ha)|0;if(!K)ma=lo(ha,l,(Ao(ha,0)|0)!=0&((w&255)>>>7&255)&255)|0;else ma=K;go(l);if(ma){ja=ma;break h}K=Jq(b,e,e,n)|0;if(K){ja=K;break}}}else ja=y}else ja=ka}while(0);go(n);go(ha);go(v);if(!ja){fo(l);v=e+12|0;ha=Eo(l,b+4|0,v)|0;if(!ha)na=lo(v,l,f&(Ao(v,0)|0)!=0&1)|0;else na=ha;go(l);if(!na){T=S;U=Kq(b,e)|0}else{T=S;U=na}}else{T=S;U=ja}}else{T=S;U=Z}}else{T=S;U=da}}else{T=S;U=ca}}if(!(u|(T|0)==0)){u=Q&255;if(z>>>0<8){z=0;Q=0;do{ca=T+(z*36|0)|0;if(ca){go(ca);go(T+(z*36|0)+12|0);go(T+(z*36|0)+24|0)}Q=Q+1<<24>>24;z=Q&255}while(z>>>0<u>>>0)}qy(T)}go(p);go(q);if(U)if(!e)oa=U;else{go(e);go(e+12|0);go(e+24|0);oa=U}else oa=0}else oa=-20352;x=oa;i=k;return x|0}\nfunction WA(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;k=i;i=i+16|0;l=k;m=_D(j,83696)|0;n=_D(j,83840)|0;ud[c[(c[n>>2]|0)+20>>2]&127](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){o=Cd[c[(c[m>>2]|0)+28>>2]&63](m,j)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=o;p=b+1|0}else p=b;o=e;a:do if(((o-p|0)>1?(a[p>>0]|0)==48:0)?(j=p+1|0,q=a[j>>0]|0,q<<24>>24==88|q<<24>>24==120):0){q=Cd[c[(c[m>>2]|0)+28>>2]&63](m,48)|0;r=c[h>>2]|0;c[h>>2]=r+1;a[r>>0]=q;q=p+2|0;r=Cd[c[(c[m>>2]|0)+28>>2]&63](m,a[j>>0]|0)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=r;if(q>>>0<e>>>0){r=q;while(1){j=a[r>>0]|0;if(!(lw(j,pA()|0)|0)){s=q;t=r;break a}j=r+1|0;if(j>>>0<e>>>0)r=j;else{s=q;t=j;break}}}else{s=q;t=q}}else u=4;while(0);b:do if((u|0)==4)if(p>>>0<e>>>0){r=p;while(1){j=a[r>>0]|0;if(!(kw(j,pA()|0)|0)){s=p;t=r;break b}j=r+1|0;if(j>>>0<e>>>0)r=j;else{s=p;t=j;break}}}else{s=p;t=p}while(0);p=a[l>>0]|0;u=l+4|0;if(((p&1)==0?(p&255)>>>1:c[u>>2]|0)|0){if((s|0)!=(t|0)?(p=t+-1|0,s>>>0<p>>>0):0){r=s;q=p;do{p=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=p;r=r+1|0;q=q+-1|0}while(r>>>0<q>>>0)}q=wd[c[(c[n>>2]|0)+16>>2]&127](n)|0;r=l+8|0;p=l+1|0;if(s>>>0<t>>>0){j=0;v=0;w=s;while(1){x=a[((a[l>>0]&1)==0?p:c[r>>2]|0)+v>>0]|0;if(x<<24>>24>0&(j|0)==(x<<24>>24|0)){x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=q;x=a[l>>0]|0;y=0;z=(v>>>0<(((x&1)==0?(x&255)>>>1:c[u>>2]|0)+-1|0)>>>0&1)+v|0}else{y=j;z=v}x=Cd[c[(c[m>>2]|0)+28>>2]&63](m,a[w>>0]|0)|0;A=c[h>>2]|0;c[h>>2]=A+1;a[A>>0]=x;w=w+1|0;if(w>>>0>=t>>>0)break;else{j=y+1|0;v=z}}}z=f+(s-b)|0;v=c[h>>2]|0;if((z|0)!=(v|0)?(y=v+-1|0,z>>>0<y>>>0):0){v=z;z=y;do{y=a[v>>0]|0;a[v>>0]=a[z>>0]|0;a[z>>0]=y;v=v+1|0;z=z+-1|0}while(v>>>0<z>>>0);B=m}else B=m}else{Ad[c[(c[m>>2]|0)+32>>2]&31](m,s,t,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(t-s);B=m}c:do if(t>>>0<e>>>0){s=t;while(1){z=a[s>>0]|0;if(z<<24>>24==46){C=s;break}v=Cd[c[(c[B>>2]|0)+28>>2]&63](m,z)|0;z=c[h>>2]|0;c[h>>2]=z+1;a[z>>0]=v;v=s+1|0;if(v>>>0<e>>>0)s=v;else{D=v;break c}}s=wd[c[(c[n>>2]|0)+12>>2]&127](n)|0;v=c[h>>2]|0;c[h>>2]=v+1;a[v>>0]=s;D=C+1|0}else D=t;while(0);Ad[c[(c[m>>2]|0)+32>>2]&31](m,D,e,c[h>>2]|0)|0;m=(c[h>>2]|0)+(o-D)|0;c[h>>2]=m;c[g>>2]=(d|0)==(e|0)?m:f+(d-b)|0;Hy(l);i=k;return}function XA(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;a=i;i=i+176|0;g=a+76|0;j=a+16|0;k=a+40|0;l=a+8|0;m=a+24|0;n=a;o=a+80|0;p=a+60|0;q=a+110|0;r=a+72|0;s=a+68|0;t=a+56|0;u=a+64|0;v=n;c[v>>2]=37;c[v+4>>2]=0;v=VA(n+1|0,86720,c[d+4>>2]|0)|0;c[p>>2]=o;w=pA()|0;if(v){c[m>>2]=c[d+8>>2];h[m+8>>3]=f;x=fG(o,30,w,n,m)|0}else{h[l>>3]=f;x=fG(o,30,w,n,l)|0}if((x|0)>29){l=pA()|0;if(v){c[k>>2]=c[d+8>>2];h[k+8>>3]=f;y=gG(p,l,n,k)|0}else{h[j>>3]=f;y=gG(p,l,n,j)|0}j=c[p>>2]|0;if(!j)Gx();else{z=j;A=j;B=y}}else{z=c[p>>2]|0;A=0;B=x}x=z+B|0;p=PA(z,x,d)|0;if((z|0)!=(o|0)){y=py(B<<1)|0;if(!y)Gx();else{C=z;D=y;E=y}}else{C=o;D=0;E=q}q=hz(d)|0;c[t>>2]=q;WA(C,p,x,E,r,s,t);xy(q)|0;c[u>>2]=c[b>>2];b=c[r>>2]|0;r=c[s>>2]|0;c[g>>2]=c[u>>2];u=Yg(g,E,b,r,d,e)|0;qy(D);qy(A);i=a;return u|0}function YA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+80|0;h=b;j=b+72|0;k=b+52|0;l=b+12|0;m=b+8|0;n=b+4|0;a[j>>0]=a[86728]|0;a[j+1>>0]=a[86729]|0;a[j+2>>0]=a[86730]|0;a[j+3>>0]=a[86731]|0;a[j+4>>0]=a[86732]|0;a[j+5>>0]=a[86733]|0;o=pA()|0;c[h>>2]=g;g=fG(k,20,o,j,h)|0;j=k+g|0;o=PA(k,j,e)|0;p=hz(e)|0;c[m>>2]=p;q=_D(m,83696)|0;xy(p)|0;Ad[c[(c[q>>2]|0)+32>>2]&31](q,k,j,l)|0;q=l+g|0;c[n>>2]=c[d>>2];c[h>>2]=c[n>>2];n=Yg(h,l,(o|0)==(j|0)?q:l+(o-k)|0,q,e,f)|0;i=b;return n|0}function ZA(a){a=a|0;return}function _A(a){a=a|0;Ow(a);return}function $A(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+32|0;j=h+20|0;k=h+16|0;l=h+12|0;m=h;if(!(c[e+4>>2]&1)){n=c[(c[b>>2]|0)+24>>2]|0;c[k>>2]=c[d>>2];c[j>>2]=c[k>>2];o=Ed[n&31](b,j,e,f,g&1)|0}else{f=hz(e)|0;c[l>>2]=f;e=_D(l,83848)|0;xy(f)|0;f=c[e>>2]|0;if(g)ud[c[f+24>>2]&127](m,e);else ud[c[f+28>>2]&127](m,e);e=a[m>>0]|0;f=(e&1)==0;g=m+4|0;l=m+8|0;j=f?g:m+4|0;b=f?g:c[m+8>>2]|0;g=(e&1)==0;if((b|0)!=((g?j:c[l>>2]|0)+((g?(e&255)>>>1:c[j>>2]|0)<<2)|0)){e=b;do{b=c[e>>2]|0;g=c[d>>2]|0;if(g){f=g+24|0;n=c[f>>2]|0;if((n|0)==(c[g+28>>2]|0))p=Cd[c[(c[g>>2]|0)+52>>2]&63](g,b)|0;else{c[f>>2]=n+4;c[n>>2]=b;p=b}if((p|0)==-1)c[d>>2]=0}e=e+4|0;b=a[m>>0]|0;n=(b&1)==0}while((e|0)!=((n?j:c[l>>2]|0)+((n?(b&255)>>>1:c[j>>2]|0)<<2)|0))}j=c[d>>2]|0;Vy(m);o=j}i=h;return o|0}function aB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+128|0;h=b;j=b+104|0;k=b+112|0;l=b+8|0;m=b+4|0;n=b+96|0;o=b+92|0;p=b+100|0;a[j>>0]=a[86688]|0;a[j+1>>0]=a[86689]|0;a[j+2>>0]=a[86690]|0;a[j+3>>0]=a[86691]|0;a[j+4>>0]=a[86692]|0;a[j+5>>0]=a[86693]|0;OA(j+1|0,86696,1,c[e+4>>2]|0);q=pA()|0;c[h>>2]=g;g=k+(fG(k,12,q,j,h)|0)|0;j=PA(k,g,e)|0;q=hz(e)|0;c[o>>2]=q;bB(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=hG(h,l,d,m,e,f)|0;i=b;return p|0}function bB(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;i=i+16|0;l=k;m=_D(j,83688)|0;n=_D(j,83848)|0;ud[c[(c[n>>2]|0)+20>>2]&127](l,n);j=a[l>>0]|0;o=l+4|0;if(((j&1)==0?(j&255)>>>1:c[o>>2]|0)|0){c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){p=Cd[c[(c[m>>2]|0)+44>>2]&63](m,j)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=p;q=b+1|0}else q=b;if(((e-q|0)>1?(a[q>>0]|0)==48:0)?(p=q+1|0,j=a[p>>0]|0,j<<24>>24==88|j<<24>>24==120):0){j=Cd[c[(c[m>>2]|0)+44>>2]&63](m,48)|0;r=c[h>>2]|0;c[h>>2]=r+4;c[r>>2]=j;j=Cd[c[(c[m>>2]|0)+44>>2]&63](m,a[p>>0]|0)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=j;s=q+2|0}else s=q;if((s|0)!=(e|0)?(q=e+-1|0,s>>>0<q>>>0):0){j=s;p=q;do{q=a[j>>0]|0;a[j>>0]=a[p>>0]|0;a[p>>0]=q;j=j+1|0;p=p+-1|0}while(j>>>0<p>>>0)}p=wd[c[(c[n>>2]|0)+16>>2]&127](n)|0;n=l+8|0;j=l+1|0;if(s>>>0<e>>>0){q=0;r=0;t=s;while(1){u=a[((a[l>>0]&1)==0?j:c[n>>2]|0)+r>>0]|0;if(u<<24>>24!=0&(q|0)==(u<<24>>24|0)){u=c[h>>2]|0;c[h>>2]=u+4;c[u>>2]=p;u=a[l>>0]|0;v=0;w=(r>>>0<(((u&1)==0?(u&255)>>>1:c[o>>2]|0)+-1|0)>>>0&1)+r|0}else{v=q;w=r}u=Cd[c[(c[m>>2]|0)+44>>2]&63](m,a[t>>0]|0)|0;x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=u;t=t+1|0;if(t>>>0>=e>>>0)break;else{q=v+1|0;r=w}}}w=b;r=f+(s-w<<2)|0;s=c[h>>2]|0;if((r|0)!=(s|0)){v=s+-4|0;if(r>>>0<v>>>0){q=r;t=v;do{v=c[q>>2]|0;c[q>>2]=c[t>>2];c[t>>2]=v;q=q+4|0;t=t+-4|0}while(q>>>0<t>>>0);y=w;z=s}else{y=w;z=s}}else{y=w;z=r}}else{Ad[c[(c[m>>2]|0)+48>>2]&31](m,b,e,f)|0;m=b;b=f+(e-m<<2)|0;c[h>>2]=b;y=m;z=b}c[g>>2]=(d|0)==(e|0)?z:f+(d-y<<2)|0;Hy(l);i=k;return}function cB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;i=i+224|0;h=a;j=a+8|0;k=a+196|0;l=a+24|0;m=a+20|0;n=a+16|0;o=a+188|0;p=a+192|0;q=j;c[q>>2]=37;c[q+4>>2]=0;OA(j+1|0,86704,1,c[d+4>>2]|0);q=pA()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=k+(fG(k,22,q,j,h)|0)|0;j=PA(k,g,d)|0;q=hz(d)|0;c[o>>2]=q;bB(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=hG(h,l,b,m,d,e)|0;i=a;return p|0}function dB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+128|0;h=b;j=b+104|0;k=b+112|0;l=b+8|0;m=b+4|0;n=b+96|0;o=b+92|0;p=b+100|0;a[j>>0]=a[86688]|0;a[j+1>>0]=a[86689]|0;a[j+2>>0]=a[86690]|0;a[j+3>>0]=a[86691]|0;a[j+4>>0]=a[86692]|0;a[j+5>>0]=a[86693]|0;OA(j+1|0,86696,0,c[e+4>>2]|0);q=pA()|0;c[h>>2]=g;g=k+(fG(k,12,q,j,h)|0)|0;j=PA(k,g,e)|0;q=hz(e)|0;c[o>>2]=q;bB(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=hG(h,l,d,m,e,f)|0;i=b;return p|0}function eB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;i=i+240|0;h=a;j=a+8|0;k=a+204|0;l=a+24|0;m=a+20|0;n=a+16|0;o=a+196|0;p=a+200|0;q=j;c[q>>2]=37;c[q+4>>2]=0;OA(j+1|0,86704,0,c[d+4>>2]|0);q=pA()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=k+(fG(k,23,q,j,h)|0)|0;j=PA(k,g,d)|0;q=hz(d)|0;c[o>>2]=q;bB(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=hG(h,l,b,m,d,e)|0;i=a;return p|0}function fB(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;a=i;i=i+336|0;g=a+280|0;j=a+16|0;k=a+40|0;l=a;m=a+32|0;n=a+300|0;o=a+296|0;p=a+52|0;q=a+48|0;r=a+288|0;s=a+284|0;t=a+292|0;u=m;c[u>>2]=37;c[u+4>>2]=0;u=VA(m+1|0,86712,c[d+4>>2]|0)|0;c[o>>2]=n;v=pA()|0;if(u){c[l>>2]=c[d+8>>2];h[l+8>>3]=f;w=fG(n,30,v,m,l)|0}else{h[k>>3]=f;w=fG(n,30,v,m,k)|0}if((w|0)>29){k=pA()|0;c[j>>2]=c[d+8>>2];h[j+8>>3]=f;v=gG(o,k,m,j)|0;j=c[o>>2]|0;if(!j)Gx();else{x=j;y=j;z=v}}else{x=c[o>>2]|0;y=0;z=w}w=x+z|0;o=PA(x,w,d)|0;if((x|0)!=(n|0)){v=py(z<<3)|0;if(!v)Gx();else{A=x;B=v;C=v}}else{A=n;B=0;C=p}p=hz(d)|0;c[s>>2]=p;gB(A,o,w,C,q,r,s);xy(p)|0;c[t>>2]=c[b>>2];p=c[q>>2]|0;q=c[r>>2]|0;c[g>>2]=c[t>>2];t=hG(g,C,p,q,d,e)|0;c[b>>2]=t;if(B)qy(B);qy(y);i=a;return t|0}function gB(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;k=i;i=i+16|0;l=k;m=_D(j,83688)|0;n=_D(j,83848)|0;ud[c[(c[n>>2]|0)+20>>2]&127](l,n);c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){o=Cd[c[(c[m>>2]|0)+44>>2]&63](m,j)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=o;p=b+1|0}else p=b;o=e;a:do if(((o-p|0)>1?(a[p>>0]|0)==48:0)?(j=p+1|0,q=a[j>>0]|0,q<<24>>24==88|q<<24>>24==120):0){q=Cd[c[(c[m>>2]|0)+44>>2]&63](m,48)|0;r=c[h>>2]|0;c[h>>2]=r+4;c[r>>2]=q;q=p+2|0;r=Cd[c[(c[m>>2]|0)+44>>2]&63](m,a[j>>0]|0)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=r;if(q>>>0<e>>>0){r=q;while(1){j=a[r>>0]|0;if(!(lw(j,pA()|0)|0)){s=q;t=r;break a}j=r+1|0;if(j>>>0<e>>>0)r=j;else{s=q;t=j;break}}}else{s=q;t=q}}else u=4;while(0);b:do if((u|0)==4)if(p>>>0<e>>>0){r=p;while(1){j=a[r>>0]|0;if(!(kw(j,pA()|0)|0)){s=p;t=r;break b}j=r+1|0;if(j>>>0<e>>>0)r=j;else{s=p;t=j;break}}}else{s=p;t=p}while(0);p=a[l>>0]|0;u=l+4|0;if(((p&1)==0?(p&255)>>>1:c[u>>2]|0)|0){if((s|0)!=(t|0)?(p=t+-1|0,s>>>0<p>>>0):0){r=s;q=p;do{p=a[r>>0]|0;a[r>>0]=a[q>>0]|0;a[q>>0]=p;r=r+1|0;q=q+-1|0}while(r>>>0<q>>>0)}q=wd[c[(c[n>>2]|0)+16>>2]&127](n)|0;r=l+8|0;p=l+1|0;if(s>>>0<t>>>0){j=0;v=0;w=s;while(1){x=a[((a[l>>0]&1)==0?p:c[r>>2]|0)+v>>0]|0;if(x<<24>>24>0&(j|0)==(x<<24>>24|0)){x=c[h>>2]|0;c[h>>2]=x+4;c[x>>2]=q;x=a[l>>0]|0;y=0;z=(v>>>0<(((x&1)==0?(x&255)>>>1:c[u>>2]|0)+-1|0)>>>0&1)+v|0}else{y=j;z=v}x=Cd[c[(c[m>>2]|0)+44>>2]&63](m,a[w>>0]|0)|0;A=c[h>>2]|0;c[h>>2]=A+4;c[A>>2]=x;w=w+1|0;if(w>>>0>=t>>>0)break;else{j=y+1|0;v=z}}}z=f+(s-b<<2)|0;v=c[h>>2]|0;if((z|0)!=(v|0)){y=v+-4|0;if(z>>>0<y>>>0){j=z;w=y;do{y=c[j>>2]|0;c[j>>2]=c[w>>2];c[w>>2]=y;j=j+4|0;w=w+-4|0}while(j>>>0<w>>>0);B=m;C=v}else{B=m;C=v}}else{B=m;C=z}}else{Ad[c[(c[m>>2]|0)+48>>2]&31](m,s,t,c[h>>2]|0)|0;z=(c[h>>2]|0)+(t-s<<2)|0;c[h>>2]=z;B=m;C=z}c:do if(t>>>0<e>>>0){z=t;while(1){s=a[z>>0]|0;if(s<<24>>24==46){D=z;break}v=Cd[c[(c[B>>2]|0)+44>>2]&63](m,s)|0;s=c[h>>2]|0;w=s+4|0;c[h>>2]=w;c[s>>2]=v;v=z+1|0;if(v>>>0<e>>>0)z=v;else{E=w;F=v;break c}}z=wd[c[(c[n>>2]|0)+12>>2]&127](n)|0;v=c[h>>2]|0;w=v+4|0;c[h>>2]=w;c[v>>2]=z;E=w;F=D+1|0}else{E=C;F=t}while(0);Ad[c[(c[m>>2]|0)+48>>2]&31](m,F,e,E)|0;E=(c[h>>2]|0)+(o-F<<2)|0;c[h>>2]=E;c[g>>2]=(d|0)==(e|0)?E:f+(d-b<<2)|0;Hy(l);i=k;return}function hB(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;a=i;i=i+352|0;g=a+304|0;j=a+16|0;k=a+40|0;l=a+8|0;m=a+24|0;n=a;o=a+308|0;p=a+288|0;q=a+60|0;r=a+56|0;s=a+300|0;t=a+296|0;u=a+292|0;v=n;c[v>>2]=37;c[v+4>>2]=0;v=VA(n+1|0,86720,c[d+4>>2]|0)|0;c[p>>2]=o;w=pA()|0;if(v){c[m>>2]=c[d+8>>2];h[m+8>>3]=f;x=fG(o,30,w,n,m)|0}else{h[l>>3]=f;x=fG(o,30,w,n,l)|0}if((x|0)>29){l=pA()|0;if(v){c[k>>2]=c[d+8>>2];h[k+8>>3]=f;y=gG(p,l,n,k)|0}else{h[j>>3]=f;y=gG(p,l,n,j)|0}j=c[p>>2]|0;if(!j)Gx();else{z=j;A=j;B=y}}else{z=c[p>>2]|0;A=0;B=x}x=z+B|0;p=PA(z,x,d)|0;if((z|0)!=(o|0)){y=py(B<<3)|0;if(!y)Gx();else{C=z;D=y;E=y}}else{C=o;D=0;E=q}q=hz(d)|0;c[t>>2]=q;gB(C,p,x,E,r,s,t);xy(q)|0;c[u>>2]=c[b>>2];q=c[r>>2]|0;r=c[s>>2]|0;c[g>>2]=c[u>>2];u=hG(g,E,q,r,d,e)|0;c[b>>2]=u;if(D)qy(D);qy(A);i=a;return u|0}function iB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+192|0;h=b;j=b+180|0;k=b+160|0;l=b+12|0;m=b+8|0;n=b+4|0;a[j>>0]=a[86728]|0;a[j+1>>0]=a[86729]|0;a[j+2>>0]=a[86730]|0;a[j+3>>0]=a[86731]|0;a[j+4>>0]=a[86732]|0;a[j+5>>0]=a[86733]|0;o=pA()|0;c[h>>2]=g;g=fG(k,20,o,j,h)|0;j=k+g|0;o=PA(k,j,e)|0;p=hz(e)|0;c[m>>2]=p;q=_D(m,83688)|0;xy(p)|0;Ad[c[(c[q>>2]|0)+48>>2]&31](q,k,j,l)|0;q=l+(g<<2)|0;c[n>>2]=c[d>>2];c[h>>2]=c[n>>2];n=hG(h,l,(o|0)==(j|0)?q:l+(o-k<<2)|0,q,e,f)|0;i=b;return n|0}function jB(e,f,g,h,j,k,l,m){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;n=i;i=i+32|0;o=n+16|0;p=n+12|0;q=n+8|0;r=n+4|0;s=n;t=hz(h)|0;c[q>>2]=t;u=_D(q,83696)|0;xy(t)|0;c[j>>2]=0;t=u+8|0;q=c[f>>2]|0;a:do if((l|0)!=(m|0)){v=l;w=q;b:while(1){x=w;if(w)if((c[w+12>>2]|0)==(c[w+16>>2]|0)?(wd[c[(c[w>>2]|0)+36>>2]&127](w)|0)==-1:0){c[f>>2]=0;y=0;z=0}else{y=w;z=x}else{y=0;z=x}x=(y|0)==0;A=c[g>>2]|0;B=A;do if(A){if((c[A+12>>2]|0)==(c[A+16>>2]|0)?(wd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1:0){c[g>>2]=0;C=0;D=11;break}if(x){E=A;F=B}else{G=y;D=12;break b}}else{C=B;D=11}while(0);if((D|0)==11){D=0;if(x){G=y;D=12;break}else{E=0;F=C}}c:do if((od[c[(c[u>>2]|0)+36>>2]&127](u,a[v>>0]|0,0)|0)<<24>>24==37){B=v+1|0;if((B|0)==(m|0)){H=y;D=15;break b}A=od[c[(c[u>>2]|0)+36>>2]&127](u,a[B>>0]|0,0)|0;if(A<<24>>24==48|A<<24>>24==69){I=v+2|0;if((I|0)==(m|0)){J=y;D=18;break b}K=B;L=od[c[(c[u>>2]|0)+36>>2]&127](u,a[I>>0]|0,0)|0;M=A}else{K=v;L=A;M=0}A=c[(c[e>>2]|0)+36>>2]|0;c[r>>2]=z;c[s>>2]=F;c[p>>2]=c[r>>2];c[o>>2]=c[s>>2];c[f>>2]=zd[A&31](e,p,o,h,j,k,L,M)|0;N=K+2|0}else{A=a[v>>0]|0;if(A<<24>>24>-1?(I=c[t>>2]|0,(b[I+(A<<24>>24<<1)>>1]&8192)!=0):0){A=v;while(1){B=A+1|0;if((B|0)==(m|0)){O=m;break}P=a[B>>0]|0;if(P<<24>>24<=-1){O=B;break}if(!(b[I+(P<<24>>24<<1)>>1]&8192)){O=B;break}else A=B}A=y;I=E;B=E;while(1){if(A)if((c[A+12>>2]|0)==(c[A+16>>2]|0)?(wd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1:0){c[f>>2]=0;Q=0}else Q=A;else Q=0;P=(Q|0)==0;do if(B){if((c[B+12>>2]|0)!=(c[B+16>>2]|0))if(P){R=I;S=B;break}else{N=O;break c}if((wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)!=-1)if(P^(I|0)==0){R=I;S=I;break}else{N=O;break c}else{c[g>>2]=0;T=0;D=37;break}}else{T=I;D=37}while(0);if((D|0)==37){D=0;if(P){N=O;break c}else{R=T;S=0}}U=Q+12|0;V=c[U>>2]|0;W=Q+16|0;if((V|0)==(c[W>>2]|0))X=wd[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else X=d[V>>0]|0;if((X&255)<<24>>24<=-1){N=O;break c}if(!(b[(c[t>>2]|0)+(X<<24>>24<<1)>>1]&8192)){N=O;break c}V=c[U>>2]|0;if((V|0)==(c[W>>2]|0)){wd[c[(c[Q>>2]|0)+40>>2]&127](Q)|0;A=Q;I=R;B=S;continue}else{c[U>>2]=V+1;A=Q;I=R;B=S;continue}}}B=y+12|0;I=c[B>>2]|0;A=y+16|0;if((I|0)==(c[A>>2]|0))Y=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else Y=d[I>>0]|0;I=Cd[c[(c[u>>2]|0)+12>>2]&63](u,Y&255)|0;if(I<<24>>24!=(Cd[c[(c[u>>2]|0)+12>>2]&63](u,a[v>>0]|0)|0)<<24>>24){D=55;break b}I=c[B>>2]|0;if((I|0)==(c[A>>2]|0))wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;else c[B>>2]=I+1;N=v+1|0}while(0);x=c[f>>2]|0;if((N|0)!=(m|0)&(c[j>>2]|0)==0){v=N;w=x}else{Z=x;break a}}if((D|0)==12){c[j>>2]=4;Z=G;break}else if((D|0)==15){c[j>>2]=4;Z=H;break}else if((D|0)==18){c[j>>2]=4;Z=J;break}else if((D|0)==55){c[j>>2]=4;Z=c[f>>2]|0;break}}else Z=q;while(0);if(Z)if((c[Z+12>>2]|0)==(c[Z+16>>2]|0)?(wd[c[(c[Z>>2]|0)+36>>2]&127](Z)|0)==-1:0){c[f>>2]=0;_=0}else _=Z;else _=0;Z=(_|0)==0;f=c[g>>2]|0;do if(f){if((c[f+12>>2]|0)==(c[f+16>>2]|0)?(wd[c[(c[f>>2]|0)+36>>2]&127](f)|0)==-1:0){c[g>>2]=0;D=65;break}if(!Z)D=66}else D=65;while(0);if((D|0)==65?Z:0)D=66;if((D|0)==66)c[j>>2]=c[j>>2]|2;i=n;return _|0}function kB(a){a=a|0;return}function lB(a){a=a|0;Ow(a);return}function mB(a){a=a|0;return 2}function nB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=jB(a,k,j,e,f,g,86736,86744)|0;i=h;return m|0}function oB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;o=b+8|0;p=wd[c[(c[o>>2]|0)+20>>2]&127](o)|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];e=a[p>>0]|0;d=(e&1)==0;o=d?p+1|0:c[p+8>>2]|0;q=o+(d?(e&255)>>>1:c[p+4>>2]|0)|0;c[l>>2]=c[m>>2];c[k>>2]=c[n>>2];n=jB(b,l,k,f,g,h,o,q)|0;i=j;return n|0}function pB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;m=hz(e)|0;c[k>>2]=m;e=_D(k,83696)|0;xy(m)|0;c[l>>2]=c[d>>2];c[j>>2]=c[l>>2];qB(a,g+24|0,b,j,f,e);i=h;return c[b>>2]|0}function qB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=wd[c[c[l>>2]>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j>>2]=c[k>>2];k=(MF(d,j,a,a+168|0,g,f,0)|0)-a|0;if((k|0)<168)c[b>>2]=((k|0)/12|0|0)%7|0;i=h;return}function rB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;m=hz(e)|0;c[k>>2]=m;e=_D(k,83696)|0;xy(m)|0;c[l>>2]=c[d>>2];c[j>>2]=c[l>>2];sB(a,g+16|0,b,j,f,e);i=h;return c[b>>2]|0}function sB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=wd[c[(c[l>>2]|0)+4>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j>>2]=c[k>>2];k=(MF(d,j,a,a+288|0,g,f,0)|0)-a|0;if((k|0)<288)c[b>>2]=((k|0)/12|0|0)%12|0;i=h;return}function tB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;m=hz(e)|0;c[k>>2]=m;e=_D(k,83696)|0;xy(m)|0;c[l>>2]=c[d>>2];c[j>>2]=c[l>>2];uB(a,g+20|0,b,j,f,e);i=h;return c[b>>2]|0}function uB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,4)|0;if(!(c[f>>2]&4)){if((j|0)<69)k=j+2e3|0;else k=(j+-69|0)>>>0<31?j+1900|0:j;c[b>>2]=k+-1900}i=a;return}function vB(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;k=i;i=i+144|0;l=k+48|0;m=k+76|0;n=k+92|0;o=k+108|0;p=k+124|0;q=k+8|0;r=k+12|0;s=k+80|0;t=k+16|0;u=k+20|0;v=k+24|0;w=k+28|0;x=k+96|0;y=k+104|0;z=k+112|0;A=k+120|0;B=k+128|0;C=k+132|0;D=k+52|0;E=k+56|0;F=k+60|0;G=k+64|0;H=k+68|0;I=k+72|0;J=k+4|0;K=k;L=k+88|0;M=k+84|0;N=k+32|0;O=k+36|0;P=k+100|0;Q=k+40|0;R=k+116|0;S=k+44|0;c[g>>2]=0;T=hz(f)|0;c[n>>2]=T;U=_D(n,83696)|0;xy(T)|0;do switch(j<<24>>24|0){case 83:{c[I>>2]=c[e>>2];c[l>>2]=c[I>>2];EB(b,h,d,l,g,U);V=26;break}case 106:{c[z>>2]=c[e>>2];c[l>>2]=c[z>>2];zB(b,h+28|0,d,l,g,U);V=26;break}case 65:case 97:{c[o>>2]=c[e>>2];c[l>>2]=c[o>>2];qB(b,h+24|0,d,l,g,U);V=26;break}case 73:{c[y>>2]=c[e>>2];c[l>>2]=c[y>>2];yB(b,h+8|0,d,l,g,U);V=26;break}case 99:{T=b+8|0;n=wd[c[(c[T>>2]|0)+12>>2]&127](T)|0;c[q>>2]=c[d>>2];c[r>>2]=c[e>>2];T=a[n>>0]|0;W=(T&1)==0;X=W?n+1|0:c[n+8>>2]|0;Y=X+(W?(T&255)>>>1:c[n+4>>2]|0)|0;c[m>>2]=c[q>>2];c[l>>2]=c[r>>2];c[d>>2]=jB(b,m,l,f,g,h,X,Y)|0;V=26;break}case 68:{c[t>>2]=c[d>>2];c[u>>2]=c[e>>2];c[m>>2]=c[t>>2];c[l>>2]=c[u>>2];c[d>>2]=jB(b,m,l,f,g,h,86744,86752)|0;V=26;break}case 114:{c[E>>2]=c[d>>2];c[F>>2]=c[e>>2];c[m>>2]=c[E>>2];c[l>>2]=c[F>>2];c[d>>2]=jB(b,m,l,f,g,h,86760,86771)|0;V=26;break}case 70:{c[v>>2]=c[d>>2];c[w>>2]=c[e>>2];c[m>>2]=c[v>>2];c[l>>2]=c[w>>2];c[d>>2]=jB(b,m,l,f,g,h,86752,86760)|0;V=26;break}case 88:{Y=b+8|0;X=wd[c[(c[Y>>2]|0)+24>>2]&127](Y)|0;c[O>>2]=c[d>>2];c[P>>2]=c[e>>2];Y=a[X>>0]|0;n=(Y&1)==0;T=n?X+1|0:c[X+8>>2]|0;W=T+(n?(Y&255)>>>1:c[X+4>>2]|0)|0;c[m>>2]=c[O>>2];c[l>>2]=c[P>>2];c[d>>2]=jB(b,m,l,f,g,h,T,W)|0;V=26;break}case 37:{c[S>>2]=c[e>>2];c[l>>2]=c[S>>2];HB(b,d,l,g,U);V=26;break}case 120:{W=c[(c[b>>2]|0)+20>>2]|0;c[M>>2]=c[d>>2];c[N>>2]=c[e>>2];c[m>>2]=c[M>>2];c[l>>2]=c[N>>2];Z=vd[W&63](b,m,l,f,g,h)|0;break}case 89:{c[R>>2]=c[e>>2];c[l>>2]=c[R>>2];GB(b,h+20|0,d,l,g,U);V=26;break}case 121:{c[Q>>2]=c[e>>2];c[l>>2]=c[Q>>2];uB(b,h+20|0,d,l,g,U);V=26;break}case 119:{c[L>>2]=c[e>>2];c[l>>2]=c[L>>2];FB(b,h+24|0,d,l,g,U);V=26;break}case 101:case 100:{c[s>>2]=c[e>>2];c[l>>2]=c[s>>2];wB(b,h+12|0,d,l,g,U);V=26;break}case 84:{c[J>>2]=c[d>>2];c[K>>2]=c[e>>2];c[m>>2]=c[J>>2];c[l>>2]=c[K>>2];c[d>>2]=jB(b,m,l,f,g,h,86784,86792)|0;V=26;break}case 72:{c[x>>2]=c[e>>2];c[l>>2]=c[x>>2];xB(b,h+8|0,d,l,g,U);V=26;break}case 116:case 110:{c[C>>2]=c[e>>2];c[l>>2]=c[C>>2];CB(b,d,l,g,U);V=26;break}case 112:{c[D>>2]=c[e>>2];c[l>>2]=c[D>>2];DB(b,h+8|0,d,l,g,U);V=26;break}case 82:{c[G>>2]=c[d>>2];c[H>>2]=c[e>>2];c[m>>2]=c[G>>2];c[l>>2]=c[H>>2];c[d>>2]=jB(b,m,l,f,g,h,86776,86781)|0;V=26;break}case 104:case 66:case 98:{c[p>>2]=c[e>>2];c[l>>2]=c[p>>2];sB(b,h+16|0,d,l,g,U);V=26;break}case 77:{c[B>>2]=c[e>>2];c[l>>2]=c[B>>2];BB(b,h+4|0,d,l,g,U);V=26;break}case 109:{c[A>>2]=c[e>>2];c[l>>2]=c[A>>2];AB(b,h+16|0,d,l,g,U);V=26;break}default:{c[g>>2]=c[g>>2]|4;V=26}}while(0);if((V|0)==26)Z=c[d>>2]|0;i=k;return Z|0}function wB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j+-1|0)>>>0<31&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function xB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<24&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function yB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j+-1|0)>>>0<12&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function zB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,3)|0;g=c[f>>2]|0;if((j|0)<366&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function AB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<13&(g&4|0)==0)c[b>>2]=j+-1;else c[f>>2]=g|4;i=a;return}function BB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<60&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function CB(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a=h+8|0;a:while(1){h=c[e>>2]|0;do if(h)if((c[h+12>>2]|0)==(c[h+16>>2]|0))if((wd[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1){c[e>>2]=0;i=0;break}else{i=c[e>>2]|0;break}else i=h;else i=0;while(0);h=(i|0)==0;j=c[f>>2]|0;do if(j){if((c[j+12>>2]|0)!=(c[j+16>>2]|0))if(h){k=j;break}else{l=j;break a}if((wd[c[(c[j>>2]|0)+36>>2]&127](j)|0)!=-1)if(h){k=j;break}else{l=j;break a}else{c[f>>2]=0;m=12;break}}else m=12;while(0);if((m|0)==12){m=0;if(h){l=0;break}else k=0}j=c[e>>2]|0;n=c[j+12>>2]|0;if((n|0)==(c[j+16>>2]|0))o=wd[c[(c[j>>2]|0)+36>>2]&127](j)|0;else o=d[n>>0]|0;if((o&255)<<24>>24<=-1){l=k;break}if(!(b[(c[a>>2]|0)+(o<<24>>24<<1)>>1]&8192)){l=k;break}n=c[e>>2]|0;j=n+12|0;p=c[j>>2]|0;if((p|0)==(c[n+16>>2]|0)){wd[c[(c[n>>2]|0)+40>>2]&127](n)|0;continue}else{c[j>>2]=p+1;continue}}k=c[e>>2]|0;do if(k)if((c[k+12>>2]|0)==(c[k+16>>2]|0))if((wd[c[(c[k>>2]|0)+36>>2]&127](k)|0)==-1){c[e>>2]=0;q=0;break}else{q=c[e>>2]|0;break}else q=k;else q=0;while(0);k=(q|0)==0;do if(l){if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(wd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[f>>2]=0;m=32;break}if(!k)m=33}else m=32;while(0);if((m|0)==32?k:0)m=33;if((m|0)==33)c[g>>2]=c[g>>2]|2;return}function DB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+16|0;k=j+4|0;l=j;m=b+8|0;b=wd[c[(c[m>>2]|0)+8>>2]&127](m)|0;m=a[b>>0]|0;if(!(m&1))n=(m&255)>>>1;else n=c[b+4>>2]|0;m=a[b+12>>0]|0;if(!(m&1))o=(m&255)>>>1;else o=c[b+16>>2]|0;do if((n|0)!=(0-o|0)){c[l>>2]=c[f>>2];c[k>>2]=c[l>>2];m=MF(e,k,b,b+24|0,h,g,0)|0;p=c[d>>2]|0;if((m|0)==(b|0)&(p|0)==12){c[d>>2]=0;break}if((p|0)<12&(m-b|0)==12)c[d>>2]=p+12}else c[g>>2]=c[g>>2]|4;while(0);i=j;return}function EB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<61&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function FB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,1)|0;g=c[f>>2]|0;if((j|0)<7&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function GB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=iG(d,h,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=j+-1900;i=a;return}function HB(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;a=c[b>>2]|0;do if(a)if((c[a+12>>2]|0)==(c[a+16>>2]|0))if((wd[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1){c[b>>2]=0;h=0;break}else{h=c[b>>2]|0;break}else h=a;else h=0;while(0);a=(h|0)==0;h=c[e>>2]|0;do if(h){if((c[h+12>>2]|0)==(c[h+16>>2]|0)?(wd[c[(c[h>>2]|0)+36>>2]&127](h)|0)==-1:0){c[e>>2]=0;i=11;break}if(a){j=h;i=13}else i=12}else i=11;while(0);if((i|0)==11)if(a)i=12;else{j=0;i=13}a:do if((i|0)==12)c[f>>2]=c[f>>2]|6;else if((i|0)==13){a=c[b>>2]|0;h=c[a+12>>2]|0;if((h|0)==(c[a+16>>2]|0))k=wd[c[(c[a>>2]|0)+36>>2]&127](a)|0;else k=d[h>>0]|0;if((od[c[(c[g>>2]|0)+36>>2]&127](g,k&255,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;break}h=c[b>>2]|0;a=h+12|0;l=c[a>>2]|0;if((l|0)==(c[h+16>>2]|0)){wd[c[(c[h>>2]|0)+40>>2]&127](h)|0;m=c[b>>2]|0;if(!m)n=0;else{o=m;i=21}}else{c[a>>2]=l+1;o=h;i=21}do if((i|0)==21)if((c[o+12>>2]|0)==(c[o+16>>2]|0))if((wd[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1){c[b>>2]=0;n=0;break}else{n=c[b>>2]|0;break}else n=o;while(0);h=(n|0)==0;do if(j){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(wd[c[(c[j>>2]|0)+36>>2]&127](j)|0)==-1:0){c[e>>2]=0;i=30;break}if(h)break a}else i=30;while(0);if((i|0)==30?!h:0)break;c[f>>2]=c[f>>2]|2}while(0);return}function IB(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;k=i;i=i+32|0;l=k+16|0;m=k+12|0;n=k+8|0;o=k+4|0;p=k;q=hz(e)|0;c[n>>2]=q;r=_D(n,83688)|0;xy(q)|0;c[f>>2]=0;q=c[b>>2]|0;a:do if((h|0)!=(j|0)){n=h;s=q;b:while(1){t=s;if(s){u=c[s+12>>2]|0;if((u|0)==(c[s+16>>2]|0))v=wd[c[(c[s>>2]|0)+36>>2]&127](s)|0;else v=c[u>>2]|0;if((v|0)==-1){c[b>>2]=0;w=0;x=1;y=0}else{w=s;x=0;y=t}}else{w=0;x=1;y=t}t=c[d>>2]|0;u=t;do if(t){z=c[t+12>>2]|0;if((z|0)==(c[t+16>>2]|0))A=wd[c[(c[t>>2]|0)+36>>2]&127](t)|0;else A=c[z>>2]|0;if((A|0)!=-1)if(x){B=t;C=u;break}else{D=w;E=16;break b}else{c[d>>2]=0;F=0;E=14;break}}else{F=u;E=14}while(0);if((E|0)==14){E=0;if(x){D=w;E=16;break}else{B=0;C=F}}c:do if((od[c[(c[r>>2]|0)+52>>2]&127](r,c[n>>2]|0,0)|0)<<24>>24==37){u=n+4|0;if((u|0)==(j|0)){G=w;E=19;break b}t=od[c[(c[r>>2]|0)+52>>2]&127](r,c[u>>2]|0,0)|0;if(t<<24>>24==48|t<<24>>24==69){z=n+8|0;if((z|0)==(j|0)){H=w;E=22;break b}I=u;J=od[c[(c[r>>2]|0)+52>>2]&127](r,c[z>>2]|0,0)|0;K=t}else{I=n;J=t;K=0}t=c[(c[a>>2]|0)+36>>2]|0;c[o>>2]=y;c[p>>2]=C;c[m>>2]=c[o>>2];c[l>>2]=c[p>>2];c[b>>2]=zd[t&31](a,m,l,e,f,g,J,K)|0;L=I+8|0}else{if(od[c[(c[r>>2]|0)+12>>2]&127](r,8192,c[n>>2]|0)|0)M=n;else{t=w+12|0;z=c[t>>2]|0;u=w+16|0;if((z|0)==(c[u>>2]|0))N=wd[c[(c[w>>2]|0)+36>>2]&127](w)|0;else N=c[z>>2]|0;z=Cd[c[(c[r>>2]|0)+28>>2]&63](r,N)|0;if((z|0)!=(Cd[c[(c[r>>2]|0)+28>>2]&63](r,c[n>>2]|0)|0)){E=59;break b}z=c[t>>2]|0;if((z|0)==(c[u>>2]|0))wd[c[(c[w>>2]|0)+40>>2]&127](w)|0;else c[t>>2]=z+4;L=n+4|0;break}while(1){z=M+4|0;if((z|0)==(j|0)){O=j;break}if(od[c[(c[r>>2]|0)+12>>2]&127](r,8192,c[z>>2]|0)|0)M=z;else{O=z;break}}z=w;t=B;u=B;while(1){if(z){P=c[z+12>>2]|0;if((P|0)==(c[z+16>>2]|0))Q=wd[c[(c[z>>2]|0)+36>>2]&127](z)|0;else Q=c[P>>2]|0;if((Q|0)==-1){c[b>>2]=0;R=1;S=0}else{R=0;S=z}}else{R=1;S=0}do if(u){P=c[u+12>>2]|0;if((P|0)==(c[u+16>>2]|0))T=wd[c[(c[u>>2]|0)+36>>2]&127](u)|0;else T=c[P>>2]|0;if((T|0)!=-1)if(R^(t|0)==0){U=t;V=t;break}else{L=O;break c}else{c[d>>2]=0;W=0;E=42;break}}else{W=t;E=42}while(0);if((E|0)==42){E=0;if(R){L=O;break c}else{U=W;V=0}}P=S+12|0;X=c[P>>2]|0;Y=S+16|0;if((X|0)==(c[Y>>2]|0))Z=wd[c[(c[S>>2]|0)+36>>2]&127](S)|0;else Z=c[X>>2]|0;if(!(od[c[(c[r>>2]|0)+12>>2]&127](r,8192,Z)|0)){L=O;break c}X=c[P>>2]|0;if((X|0)==(c[Y>>2]|0)){wd[c[(c[S>>2]|0)+40>>2]&127](S)|0;z=S;t=U;u=V;continue}else{c[P>>2]=X+4;z=S;t=U;u=V;continue}}}while(0);u=c[b>>2]|0;if((L|0)!=(j|0)&(c[f>>2]|0)==0){n=L;s=u}else{_=u;break a}}if((E|0)==16){c[f>>2]=4;_=D;break}else if((E|0)==19){c[f>>2]=4;_=G;break}else if((E|0)==22){c[f>>2]=4;_=H;break}else if((E|0)==59){c[f>>2]=4;_=c[b>>2]|0;break}}else _=q;while(0);if(_){q=c[_+12>>2]|0;if((q|0)==(c[_+16>>2]|0))$=wd[c[(c[_>>2]|0)+36>>2]&127](_)|0;else $=c[q>>2]|0;if(($|0)==-1){c[b>>2]=0;aa=0;ba=1}else{aa=_;ba=0}}else{aa=0;ba=1}_=c[d>>2]|0;do if(_){b=c[_+12>>2]|0;if((b|0)==(c[_+16>>2]|0))ca=wd[c[(c[_>>2]|0)+36>>2]&127](_)|0;else ca=c[b>>2]|0;if((ca|0)!=-1)if(ba)break;else{E=74;break}else{c[d>>2]=0;E=72;break}}else E=72;while(0);if((E|0)==72?ba:0)E=74;if((E|0)==74)c[f>>2]=c[f>>2]|2;i=k;return aa|0}function JB(a){a=a|0;return}function KB(a){a=a|0;Ow(a);return}function LB(a){a=a|0;return 2}function MB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=IB(a,k,j,e,f,g,86792,86824)|0;i=h;return m|0}function NB(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+16|0;k=j+12|0;l=j+8|0;m=j+4|0;n=j;o=b+8|0;p=wd[c[(c[o>>2]|0)+20>>2]&127](o)|0;c[m>>2]=c[d>>2];c[n>>2]=c[e>>2];e=a[p>>0]|0;d=(e&1)==0;o=p+4|0;q=d?o:c[p+8>>2]|0;p=q+((d?(e&255)>>>1:c[o>>2]|0)<<2)|0;c[l>>2]=c[m>>2];c[k>>2]=c[n>>2];n=IB(b,l,k,f,g,h,q,p)|0;i=j;return n|0}function OB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;m=hz(e)|0;c[k>>2]=m;e=_D(k,83688)|0;xy(m)|0;c[l>>2]=c[d>>2];c[j>>2]=c[l>>2];PB(a,g+24|0,b,j,f,e);i=h;return c[b>>2]|0}function PB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=wd[c[c[l>>2]>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j>>2]=c[k>>2];k=(XF(d,j,a,a+168|0,g,f,0)|0)-a|0;if((k|0)<168)c[b>>2]=((k|0)/12|0|0)%7|0;i=h;return}function QB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;m=hz(e)|0;c[k>>2]=m;e=_D(k,83688)|0;xy(m)|0;c[l>>2]=c[d>>2];c[j>>2]=c[l>>2];RB(a,g+16|0,b,j,f,e);i=h;return c[b>>2]|0}function RB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0;h=i;i=i+16|0;j=h+4|0;k=h;l=a+8|0;a=wd[c[(c[l>>2]|0)+4>>2]&127](l)|0;c[k>>2]=c[e>>2];c[j>>2]=c[k>>2];k=(XF(d,j,a,a+288|0,g,f,0)|0)-a|0;if((k|0)<288)c[b>>2]=((k|0)/12|0|0)%12|0;i=h;return}function SB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+8|0;k=h+4|0;l=h;m=hz(e)|0;c[k>>2]=m;e=_D(k,83688)|0;xy(m)|0;c[l>>2]=c[d>>2];c[j>>2]=c[l>>2];TB(a,g+20|0,b,j,f,e);i=h;return c[b>>2]|0}function TB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,4)|0;if(!(c[f>>2]&4)){if((j|0)<69)k=j+2e3|0;else k=(j+-69|0)>>>0<31?j+1900|0:j;c[b>>2]=k+-1900}i=a;return}function UB(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;k=i;i=i+144|0;l=k+64|0;m=k+56|0;n=k+92|0;o=k+108|0;p=k+124|0;q=k+16|0;r=k+20|0;s=k+24|0;t=k+28|0;u=k+32|0;v=k+36|0;w=k+40|0;x=k+96|0;y=k+104|0;z=k+112|0;A=k+120|0;B=k+128|0;C=k+132|0;D=k+68|0;E=k+72|0;F=k+76|0;G=k+80|0;H=k+84|0;I=k+88|0;J=k+12|0;K=k+4|0;L=k;M=k+8|0;N=k+44|0;O=k+48|0;P=k+100|0;Q=k+52|0;R=k+116|0;S=k+60|0;c[g>>2]=0;T=hz(f)|0;c[n>>2]=T;U=_D(n,83688)|0;xy(T)|0;do switch(j<<24>>24|0){case 82:{c[G>>2]=c[d>>2];c[H>>2]=c[e>>2];c[m>>2]=c[G>>2];c[l>>2]=c[H>>2];c[d>>2]=IB(b,m,l,f,g,h,86936,86956)|0;V=26;break}case 84:{c[J>>2]=c[d>>2];c[K>>2]=c[e>>2];c[m>>2]=c[J>>2];c[l>>2]=c[K>>2];c[d>>2]=IB(b,m,l,f,g,h,86960,86992)|0;V=26;break}case 83:{c[I>>2]=c[e>>2];c[l>>2]=c[I>>2];bC(b,h,d,l,g,U);V=26;break}case 119:{c[L>>2]=c[e>>2];c[l>>2]=c[L>>2];cC(b,h+24|0,d,l,g,U);V=26;break}case 65:case 97:{c[o>>2]=c[e>>2];c[l>>2]=c[o>>2];PB(b,h+24|0,d,l,g,U);V=26;break}case 37:{c[S>>2]=c[e>>2];c[l>>2]=c[S>>2];eC(b,d,l,g,U);V=26;break}case 120:{T=c[(c[b>>2]|0)+20>>2]|0;c[M>>2]=c[d>>2];c[N>>2]=c[e>>2];c[m>>2]=c[M>>2];c[l>>2]=c[N>>2];W=vd[T&63](b,m,l,f,g,h)|0;break}case 121:{c[Q>>2]=c[e>>2];c[l>>2]=c[Q>>2];TB(b,h+20|0,d,l,g,U);V=26;break}case 89:{c[R>>2]=c[e>>2];c[l>>2]=c[R>>2];dC(b,h+20|0,d,l,g,U);V=26;break}case 88:{T=b+8|0;n=wd[c[(c[T>>2]|0)+24>>2]&127](T)|0;c[O>>2]=c[d>>2];c[P>>2]=c[e>>2];T=a[n>>0]|0;X=(T&1)==0;Y=n+4|0;Z=X?Y:c[n+8>>2]|0;n=Z+((X?(T&255)>>>1:c[Y>>2]|0)<<2)|0;c[m>>2]=c[O>>2];c[l>>2]=c[P>>2];c[d>>2]=IB(b,m,l,f,g,h,Z,n)|0;V=26;break}case 104:case 66:case 98:{c[p>>2]=c[e>>2];c[l>>2]=c[p>>2];RB(b,h+16|0,d,l,g,U);V=26;break}case 101:case 100:{c[s>>2]=c[e>>2];c[l>>2]=c[s>>2];VB(b,h+12|0,d,l,g,U);V=26;break}case 99:{n=b+8|0;Z=wd[c[(c[n>>2]|0)+12>>2]&127](n)|0;c[q>>2]=c[d>>2];c[r>>2]=c[e>>2];n=a[Z>>0]|0;Y=(n&1)==0;T=Z+4|0;X=Y?T:c[Z+8>>2]|0;Z=X+((Y?(n&255)>>>1:c[T>>2]|0)<<2)|0;c[m>>2]=c[q>>2];c[l>>2]=c[r>>2];c[d>>2]=IB(b,m,l,f,g,h,X,Z)|0;V=26;break}case 70:{c[v>>2]=c[d>>2];c[w>>2]=c[e>>2];c[m>>2]=c[v>>2];c[l>>2]=c[w>>2];c[d>>2]=IB(b,m,l,f,g,h,86856,86888)|0;V=26;break}case 68:{c[t>>2]=c[d>>2];c[u>>2]=c[e>>2];c[m>>2]=c[t>>2];c[l>>2]=c[u>>2];c[d>>2]=IB(b,m,l,f,g,h,86824,86856)|0;V=26;break}case 72:{c[x>>2]=c[e>>2];c[l>>2]=c[x>>2];WB(b,h+8|0,d,l,g,U);V=26;break}case 73:{c[y>>2]=c[e>>2];c[l>>2]=c[y>>2];XB(b,h+8|0,d,l,g,U);V=26;break}case 106:{c[z>>2]=c[e>>2];c[l>>2]=c[z>>2];YB(b,h+28|0,d,l,g,U);V=26;break}case 109:{c[A>>2]=c[e>>2];c[l>>2]=c[A>>2];ZB(b,h+16|0,d,l,g,U);V=26;break}case 77:{c[B>>2]=c[e>>2];c[l>>2]=c[B>>2];_B(b,h+4|0,d,l,g,U);V=26;break}case 116:case 110:{c[C>>2]=c[e>>2];c[l>>2]=c[C>>2];$B(b,d,l,g,U);V=26;break}case 112:{c[D>>2]=c[e>>2];c[l>>2]=c[D>>2];aC(b,h+8|0,d,l,g,U);V=26;break}case 114:{c[E>>2]=c[d>>2];c[F>>2]=c[e>>2];c[m>>2]=c[E>>2];c[l>>2]=c[F>>2];c[d>>2]=IB(b,m,l,f,g,h,86888,86932)|0;V=26;break}default:{c[g>>2]=c[g>>2]|4;V=26}}while(0);if((V|0)==26)W=c[d>>2]|0;i=k;return W|0}function VB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j+-1|0)>>>0<31&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function WB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<24&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function XB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j+-1|0)>>>0<12&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function YB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,3)|0;g=c[f>>2]|0;if((j|0)<366&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function ZB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<13&(g&4|0)==0)c[b>>2]=j+-1;else c[f>>2]=g|4;i=a;return}function _B(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<60&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function $B(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:while(1){a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))h=wd[c[(c[a>>2]|0)+36>>2]&127](a)|0;else h=c[g>>2]|0;if((h|0)==-1){c[b>>2]=0;i=1;break}else{i=(c[b>>2]|0)==0;break}}else i=1;while(0);a=c[d>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))j=wd[c[(c[a>>2]|0)+36>>2]&127](a)|0;else j=c[g>>2]|0;if((j|0)!=-1)if(i){k=a;break}else{l=a;break a}else{c[d>>2]=0;m=15;break}}else m=15;while(0);if((m|0)==15){m=0;if(i){l=0;break}else k=0}a=c[b>>2]|0;g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))n=wd[c[(c[a>>2]|0)+36>>2]&127](a)|0;else n=c[g>>2]|0;if(!(od[c[(c[f>>2]|0)+12>>2]&127](f,8192,n)|0)){l=k;break}g=c[b>>2]|0;a=g+12|0;o=c[a>>2]|0;if((o|0)==(c[g+16>>2]|0)){wd[c[(c[g>>2]|0)+40>>2]&127](g)|0;continue}else{c[a>>2]=o+4;continue}}k=c[b>>2]|0;do if(k){n=c[k+12>>2]|0;if((n|0)==(c[k+16>>2]|0))p=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else p=c[n>>2]|0;if((p|0)==-1){c[b>>2]=0;q=1;break}else{q=(c[b>>2]|0)==0;break}}else q=1;while(0);do if(l){b=c[l+12>>2]|0;if((b|0)==(c[l+16>>2]|0))r=wd[c[(c[l>>2]|0)+36>>2]&127](l)|0;else r=c[b>>2]|0;if((r|0)!=-1)if(q)break;else{m=39;break}else{c[d>>2]=0;m=37;break}}else m=37;while(0);if((m|0)==37?q:0)m=39;if((m|0)==39)c[e>>2]=c[e>>2]|2;return}function aC(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+16|0;k=j+4|0;l=j;m=b+8|0;b=wd[c[(c[m>>2]|0)+8>>2]&127](m)|0;m=a[b>>0]|0;if(!(m&1))n=(m&255)>>>1;else n=c[b+4>>2]|0;m=a[b+12>>0]|0;if(!(m&1))o=(m&255)>>>1;else o=c[b+16>>2]|0;do if((n|0)!=(0-o|0)){c[l>>2]=c[f>>2];c[k>>2]=c[l>>2];m=XF(e,k,b,b+24|0,h,g,0)|0;p=c[d>>2]|0;if((m|0)==(b|0)&(p|0)==12){c[d>>2]=0;break}if((p|0)<12&(m-b|0)==12)c[d>>2]=p+12}else c[g>>2]=c[g>>2]|4;while(0);i=j;return}function bC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,2)|0;g=c[f>>2]|0;if((j|0)<61&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function cC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,1)|0;g=c[f>>2]|0;if((j|0)<7&(g&4|0)==0)c[b>>2]=j;else c[f>>2]=g|4;i=a;return}function dC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0;a=i;i=i+16|0;h=a+4|0;j=a;c[j>>2]=c[e>>2];c[h>>2]=c[j>>2];j=jG(d,h,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=j+-1900;i=a;return}function eC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a=c[b>>2]|0;do if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))h=wd[c[(c[a>>2]|0)+36>>2]&127](a)|0;else h=c[g>>2]|0;if((h|0)==-1){c[b>>2]=0;i=1;break}else{i=(c[b>>2]|0)==0;break}}else i=1;while(0);h=c[d>>2]|0;do if(h){a=c[h+12>>2]|0;if((a|0)==(c[h+16>>2]|0))j=wd[c[(c[h>>2]|0)+36>>2]&127](h)|0;else j=c[a>>2]|0;if((j|0)!=-1)if(i){k=h;l=17;break}else{l=16;break}else{c[d>>2]=0;l=14;break}}else l=14;while(0);if((l|0)==14)if(i)l=16;else{k=0;l=17}a:do if((l|0)==16)c[e>>2]=c[e>>2]|6;else if((l|0)==17){i=c[b>>2]|0;h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))m=wd[c[(c[i>>2]|0)+36>>2]&127](i)|0;else m=c[h>>2]|0;if((od[c[(c[f>>2]|0)+52>>2]&127](f,m,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;break}h=c[b>>2]|0;i=h+12|0;j=c[i>>2]|0;if((j|0)==(c[h+16>>2]|0)){wd[c[(c[h>>2]|0)+40>>2]&127](h)|0;a=c[b>>2]|0;if(!a)n=1;else{o=a;l=25}}else{c[i>>2]=j+4;o=h;l=25}do if((l|0)==25){h=c[o+12>>2]|0;if((h|0)==(c[o+16>>2]|0))p=wd[c[(c[o>>2]|0)+36>>2]&127](o)|0;else p=c[h>>2]|0;if((p|0)==-1){c[b>>2]=0;n=1;break}else{n=(c[b>>2]|0)==0;break}}while(0);do if(k){h=c[k+12>>2]|0;if((h|0)==(c[k+16>>2]|0))q=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else q=c[h>>2]|0;if((q|0)!=-1)if(n)break a;else break;else{c[d>>2]=0;l=37;break}}else l=37;while(0);if((l|0)==37?!n:0)break;c[e>>2]=c[e>>2]|2}while(0);return}function fC(a){a=a|0;gC(a+8|0);return}function gC(a){a=a|0;var b=0;b=c[a>>2]|0;if((b|0)!=(pA()|0))tb(c[a>>2]|0);return}function hC(a){a=a|0;gC(a+8|0);Ow(a);return}function iC(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0;f=i;i=i+112|0;e=f+4|0;k=f;c[k>>2]=e+100;jC(b+8|0,e,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((e|0)==(j|0))l=k;else{d=e;e=k;while(1){k=a[d>>0]|0;do if(e){h=e+24|0;g=c[h>>2]|0;if((g|0)==(c[e+28>>2]|0)){b=(Cd[c[(c[e>>2]|0)+52>>2]&63](e,k&255)|0)==-1;m=b?0:e;break}else{c[h>>2]=g+1;a[g>>0]=k;m=e;break}}else m=0;while(0);d=d+1|0;if((d|0)==(j|0)){l=m;break}else e=m}}i=f;return l|0}function jC(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+16|0;k=j;a[k>>0]=37;l=k+1|0;a[l>>0]=g;m=k+2|0;a[m>>0]=h;a[k+3>>0]=0;if(h<<24>>24){a[l>>0]=h;a[m>>0]=g}c[e>>2]=d+(Ic(d|0,(c[e>>2]|0)-d|0,k|0,f|0,c[b>>2]|0)|0);i=j;return}function kC(a){a=a|0;gC(a+8|0);return}function lC(a){a=a|0;gC(a+8|0);Ow(a);return}function mC(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;e=i;i=i+416|0;d=e+8|0;j=e;c[j>>2]=d+400;nC(a+8|0,d,j,f,g,h);h=c[j>>2]|0;j=c[b>>2]|0;if((d|0)==(h|0))k=j;else{b=d;d=j;while(1){j=c[b>>2]|0;if(!d)l=0;else{g=d+24|0;f=c[g>>2]|0;if((f|0)==(c[d+28>>2]|0))m=Cd[c[(c[d>>2]|0)+52>>2]&63](d,j)|0;else{c[g>>2]=f+4;c[f>>2]=j;m=j}l=(m|0)==-1?0:d}b=b+4|0;if((b|0)==(h|0)){k=l;break}else d=l}}i=e;return k|0}function nC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+128|0;j=h+16|0;k=h+12|0;l=h;m=h+8|0;c[k>>2]=j+100;jC(a,j,k,e,f,g);g=l;c[g>>2]=0;c[g+4>>2]=0;c[m>>2]=j;j=(c[d>>2]|0)-b>>2;g=ac(c[a>>2]|0)|0;a=qw(b,m,j,l)|0;if(g)ac(g|0)|0;c[d>>2]=b+(a<<2);i=h;return}function oC(a){a=a|0;return}function pC(a){a=a|0;Ow(a);return}function qC(a){a=a|0;return 127}function rC(a){a=a|0;return 127}function sC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function tC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function uC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function vC(a,b){a=a|0;b=b|0;Gy(a,1,45);return}function wC(a){a=a|0;return 0}function xC(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function yC(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function zC(a){a=a|0;return}function AC(a){a=a|0;Ow(a);return}function BC(a){a=a|0;return 127}function CC(a){a=a|0;return 127}function DC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function EC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function FC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function GC(a,b){a=a|0;b=b|0;Gy(a,1,45);return}function HC(a){a=a|0;return 0}function IC(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function JC(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function KC(a){a=a|0;return}function LC(a){a=a|0;Ow(a);return}function MC(a){a=a|0;return 2147483647}function NC(a){a=a|0;return 2147483647}function OC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function PC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function QC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function RC(a,b){a=a|0;b=b|0;Uy(a,1,45);return}function SC(a){a=a|0;return 0}function TC(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function UC(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function VC(a){a=a|0;return}function WC(a){a=a|0;Ow(a);return}function XC(a){a=a|0;return 2147483647}function YC(a){a=a|0;return 2147483647}function ZC(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function _C(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function $C(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function aD(a,b){a=a|0;b=b|0;Uy(a,1,45);return}function bD(a){a=a|0;return 0}function cD(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function dD(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return}function eD(a){a=a|0;return}function fD(a){a=a|0;Ow(a);return}function gD(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;b=i;i=i+240|0;k=b+24|0;l=b;m=b+136|0;n=b+8|0;o=b+4|0;p=b+20|0;q=b+236|0;r=b+16|0;s=b+124|0;c[n>>2]=m;t=n+4|0;c[t>>2]=184;c[p>>2]=hz(g)|0;u=_D(p,83696)|0;a[q>>0]=0;c[r>>2]=c[e>>2];v=c[g+4>>2]|0;c[k>>2]=c[r>>2];if(iD(d,k,f,p,v,h,q,u,n,o,m+100|0)|0){Ad[c[(c[u>>2]|0)+32>>2]&31](u,86992,87002,s)|0;u=c[o>>2]|0;m=c[n>>2]|0;v=u-m|0;if((v|0)>98){f=py(v+2|0)|0;if(!f)Gx();else{w=f;x=f}}else{w=0;x=k}if(!(a[q>>0]|0))y=x;else{a[x>>0]=45;y=x+1|0}x=s+10|0;q=s;if(m>>>0<u>>>0){u=s+1|0;f=u+1|0;v=f+1|0;r=v+1|0;g=r+1|0;z=g+1|0;A=z+1|0;B=A+1|0;C=B+1|0;D=y;E=m;while(1){m=a[E>>0]|0;if((a[s>>0]|0)!=m<<24>>24)if((a[u>>0]|0)!=m<<24>>24)if((a[f>>0]|0)!=m<<24>>24)if((a[v>>0]|0)!=m<<24>>24)if((a[r>>0]|0)!=m<<24>>24)if((a[g>>0]|0)!=m<<24>>24)if((a[z>>0]|0)!=m<<24>>24)if((a[A>>0]|0)!=m<<24>>24)if((a[B>>0]|0)==m<<24>>24)F=B;else F=(a[C>>0]|0)==m<<24>>24?C:x;else F=A;else F=z;else F=g;else F=r;else F=v;else F=f;else F=u;else F=s;a[D>>0]=a[86992+(F-q)>>0]|0;E=E+1|0;m=D+1|0;if(E>>>0>=(c[o>>2]|0)>>>0){G=m;break}else D=m}}else G=y;a[G>>0]=0;c[l>>2]=j;vw(k,87008,l)|0;if(w)qy(w)}w=c[d>>2]|0;do if(w)if((c[w+12>>2]|0)==(c[w+16>>2]|0))if((wd[c[(c[w>>2]|0)+36>>2]&127](w)|0)==-1){c[d>>2]=0;H=0;break}else{H=c[d>>2]|0;break}else H=w;else H=0;while(0);w=(H|0)==0;H=c[e>>2]|0;do if(H){if((c[H+12>>2]|0)==(c[H+16>>2]|0)?(wd[c[(c[H>>2]|0)+36>>2]&127](H)|0)==-1:0){c[e>>2]=0;I=25;break}if(!w)I=26}else I=25;while(0);if((I|0)==25?w:0)I=26;if((I|0)==26)c[h>>2]=c[h>>2]|2;h=c[d>>2]|0;xy(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if(p)td[c[t>>2]&255](p);i=b;return h|0}function hD(a){a=a|0;return}function iD(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0;q=i;i=i+512|0;r=q+488|0;s=q+40|0;t=q+16|0;u=q+464|0;v=q+468|0;w=q+492|0;x=q+496|0;y=q+497|0;z=q+440|0;A=q+24|0;B=q+4|0;C=q+472|0;D=q+452|0;E=q;F=q+484|0;c[r>>2]=p;c[t>>2]=s;p=t+4|0;c[p>>2]=184;c[u>>2]=s;c[v>>2]=s+400;c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;c[D>>2]=0;c[D+4>>2]=0;c[D+8>>2]=0;kD(g,h,w,x,y,z,A,B,C,E);c[o>>2]=c[n>>2];h=m+8|0;m=B+4|0;g=C+4|0;G=C+8|0;H=C+1|0;I=B+8|0;J=B+1|0;K=(j&512|0)!=0;j=A+8|0;L=A+1|0;M=A+4|0;N=D+4|0;O=D+8|0;P=D+1|0;Q=w+3|0;R=z+4|0;S=s;s=0;T=0;a:while(1){U=c[e>>2]|0;do if(U)if((c[U+12>>2]|0)==(c[U+16>>2]|0))if((wd[c[(c[U>>2]|0)+36>>2]&127](U)|0)==-1){c[e>>2]=0;V=0;break}else{V=c[e>>2]|0;break}else V=U;else V=0;while(0);U=(V|0)==0;W=c[f>>2]|0;do if(W){if((c[W+12>>2]|0)!=(c[W+16>>2]|0))if(U){X=W;break}else{Y=S;Z=T;_=202;break a}if((wd[c[(c[W>>2]|0)+36>>2]&127](W)|0)!=-1)if(U){X=W;break}else{Y=S;Z=T;_=202;break a}else{c[f>>2]=0;_=12;break}}else _=12;while(0);if((_|0)==12){_=0;if(U){Y=S;Z=T;_=202;break}else X=0}b:do switch(a[w+s>>0]|0){case 1:{if((s|0)==3){$=S;aa=T}else{W=c[e>>2]|0;ba=c[W+12>>2]|0;if((ba|0)==(c[W+16>>2]|0))ca=wd[c[(c[W>>2]|0)+36>>2]&127](W)|0;else ca=d[ba>>0]|0;if((ca&255)<<24>>24<=-1){_=26;break a}if(!(b[(c[h>>2]|0)+(ca<<24>>24<<1)>>1]&8192)){_=26;break a}ba=c[e>>2]|0;W=ba+12|0;da=c[W>>2]|0;if((da|0)==(c[ba+16>>2]|0))ea=wd[c[(c[ba>>2]|0)+40>>2]&127](ba)|0;else{c[W>>2]=da+1;ea=d[da>>0]|0}Oy(D,ea&255);fa=X;ga=X;_=28}break}case 4:{da=a[y>>0]|0;W=X;ba=X;ha=S;ia=0;c:while(1){ja=c[e>>2]|0;do if(ja)if((c[ja+12>>2]|0)==(c[ja+16>>2]|0))if((wd[c[(c[ja>>2]|0)+36>>2]&127](ja)|0)==-1){c[e>>2]=0;ka=0;break}else{ka=c[e>>2]|0;break}else ka=ja;else ka=0;while(0);ja=(ka|0)==0;do if(ba){if((c[ba+12>>2]|0)!=(c[ba+16>>2]|0))if(ja){la=W;ma=ba;break}else{na=ha;oa=W;pa=ia;break c}if((wd[c[(c[ba>>2]|0)+36>>2]&127](ba)|0)!=-1)if(ja^(W|0)==0){la=W;ma=W;break}else{na=ha;oa=W;pa=ia;break c}else{c[f>>2]=0;qa=0;_=130;break}}else{qa=W;_=130}while(0);if((_|0)==130){_=0;if(ja){na=ha;oa=qa;pa=ia;break}else{la=qa;ma=0}}ra=c[e>>2]|0;sa=c[ra+12>>2]|0;if((sa|0)==(c[ra+16>>2]|0))ta=wd[c[(c[ra>>2]|0)+36>>2]&127](ra)|0;else ta=d[sa>>0]|0;sa=ta&255;if(sa<<24>>24>-1?(b[(c[h>>2]|0)+(ta<<24>>24<<1)>>1]&2048)!=0:0){ra=c[o>>2]|0;if((ra|0)==(c[r>>2]|0)){kG(n,o,r);ua=c[o>>2]|0}else ua=ra;c[o>>2]=ua+1;a[ua>>0]=sa;va=ha;wa=ia+1|0}else{ra=a[z>>0]|0;if(!(sa<<24>>24==da<<24>>24&((ia|0)!=0?(((ra&1)==0?(ra&255)>>>1:c[R>>2]|0)|0)!=0:0))){na=ha;oa=la;pa=ia;break}if((ha|0)==(c[v>>2]|0)){lG(t,u,v);xa=c[u>>2]|0}else xa=ha;ra=xa+4|0;c[u>>2]=ra;c[xa>>2]=ia;va=ra;wa=0}ra=c[e>>2]|0;sa=ra+12|0;ya=c[sa>>2]|0;if((ya|0)==(c[ra+16>>2]|0)){wd[c[(c[ra>>2]|0)+40>>2]&127](ra)|0;W=la;ba=ma;ha=va;ia=wa;continue}else{c[sa>>2]=ya+1;W=la;ba=ma;ha=va;ia=wa;continue}}if((pa|0)!=0?(c[t>>2]|0)!=(na|0):0){if((na|0)==(c[v>>2]|0)){lG(t,u,v);za=c[u>>2]|0}else za=na;ia=za+4|0;c[u>>2]=ia;c[za>>2]=pa;Aa=ia}else Aa=na;ia=c[E>>2]|0;if((ia|0)>0){ha=c[e>>2]|0;do if(ha)if((c[ha+12>>2]|0)==(c[ha+16>>2]|0))if((wd[c[(c[ha>>2]|0)+36>>2]&127](ha)|0)==-1){c[e>>2]=0;Ba=0;break}else{Ba=c[e>>2]|0;break}else Ba=ha;else Ba=0;while(0);ha=(Ba|0)==0;do if(oa){if((c[oa+12>>2]|0)==(c[oa+16>>2]|0)?(wd[c[(c[oa>>2]|0)+36>>2]&127](oa)|0)==-1:0){c[f>>2]=0;_=162;break}if(ha)Ca=oa;else{_=167;break a}}else _=162;while(0);if((_|0)==162){_=0;if(ha){_=167;break a}else Ca=0}ba=c[e>>2]|0;W=c[ba+12>>2]|0;if((W|0)==(c[ba+16>>2]|0))Da=wd[c[(c[ba>>2]|0)+36>>2]&127](ba)|0;else Da=d[W>>0]|0;if((Da&255)<<24>>24!=(a[x>>0]|0)){_=167;break a}W=c[e>>2]|0;ba=W+12|0;da=c[ba>>2]|0;if((da|0)==(c[W+16>>2]|0))wd[c[(c[W>>2]|0)+40>>2]&127](W)|0;else c[ba>>2]=da+1;if((ia|0)>0){da=Ca;ba=Ca;W=ia;while(1){ya=c[e>>2]|0;do if(ya)if((c[ya+12>>2]|0)==(c[ya+16>>2]|0))if((wd[c[(c[ya>>2]|0)+36>>2]&127](ya)|0)==-1){c[e>>2]=0;Ea=0;break}else{Ea=c[e>>2]|0;break}else Ea=ya;else Ea=0;while(0);ya=(Ea|0)==0;do if(ba){if((c[ba+12>>2]|0)!=(c[ba+16>>2]|0))if(ya){Fa=da;Ga=ba;break}else{_=189;break a}if((wd[c[(c[ba>>2]|0)+36>>2]&127](ba)|0)!=-1)if(ya^(da|0)==0){Fa=da;Ga=da;break}else{_=189;break a}else{c[f>>2]=0;Ha=0;_=182;break}}else{Ha=da;_=182}while(0);if((_|0)==182){_=0;if(ya){_=189;break a}else{Fa=Ha;Ga=0}}ja=c[e>>2]|0;sa=c[ja+12>>2]|0;if((sa|0)==(c[ja+16>>2]|0))Ia=wd[c[(c[ja>>2]|0)+36>>2]&127](ja)|0;else Ia=d[sa>>0]|0;if((Ia&255)<<24>>24<=-1){_=189;break a}if(!(b[(c[h>>2]|0)+(Ia<<24>>24<<1)>>1]&2048)){_=189;break a}if((c[o>>2]|0)==(c[r>>2]|0))kG(n,o,r);sa=c[e>>2]|0;ja=c[sa+12>>2]|0;if((ja|0)==(c[sa+16>>2]|0))Ja=wd[c[(c[sa>>2]|0)+36>>2]&127](sa)|0;else Ja=d[ja>>0]|0;ja=c[o>>2]|0;c[o>>2]=ja+1;a[ja>>0]=Ja;ja=W;W=W+-1|0;c[E>>2]=W;sa=c[e>>2]|0;ra=sa+12|0;Ka=c[ra>>2]|0;if((Ka|0)==(c[sa+16>>2]|0))wd[c[(c[sa>>2]|0)+40>>2]&127](sa)|0;else c[ra>>2]=Ka+1;if((ja|0)<=1)break;else{da=Fa;ba=Ga}}}}if((c[o>>2]|0)==(c[n>>2]|0)){_=200;break a}else{$=Aa;aa=T}break}case 3:{ba=a[B>>0]|0;da=(ba&1)==0?(ba&255)>>>1:c[m>>2]|0;W=a[C>>0]|0;ia=(W&1)==0?(W&255)>>>1:c[g>>2]|0;if((da|0)==(0-ia|0)){$=S;aa=T}else{W=(da|0)==0;da=c[e>>2]|0;ha=c[da+12>>2]|0;ja=c[da+16>>2]|0;Ka=(ha|0)==(ja|0);if(W|(ia|0)==0){if(Ka)La=wd[c[(c[da>>2]|0)+36>>2]&127](da)|0;else La=d[ha>>0]|0;ia=La&255;if(W){if(ia<<24>>24!=(a[((a[C>>0]&1)==0?H:c[G>>2]|0)>>0]|0)){$=S;aa=T;break b}W=c[e>>2]|0;ra=W+12|0;sa=c[ra>>2]|0;if((sa|0)==(c[W+16>>2]|0))wd[c[(c[W>>2]|0)+40>>2]&127](W)|0;else c[ra>>2]=sa+1;a[l>>0]=1;sa=a[C>>0]|0;$=S;aa=((sa&1)==0?(sa&255)>>>1:c[g>>2]|0)>>>0>1?C:T;break b}if(ia<<24>>24!=(a[((a[B>>0]&1)==0?J:c[I>>2]|0)>>0]|0)){a[l>>0]=1;$=S;aa=T;break b}ia=c[e>>2]|0;sa=ia+12|0;ra=c[sa>>2]|0;if((ra|0)==(c[ia+16>>2]|0))wd[c[(c[ia>>2]|0)+40>>2]&127](ia)|0;else c[sa>>2]=ra+1;ra=a[B>>0]|0;$=S;aa=((ra&1)==0?(ra&255)>>>1:c[m>>2]|0)>>>0>1?B:T;break b}if(Ka){Ka=wd[c[(c[da>>2]|0)+36>>2]&127](da)|0;ra=c[e>>2]|0;Ma=Ka;Na=a[B>>0]|0;Oa=ra;Pa=c[ra+12>>2]|0;Qa=c[ra+16>>2]|0}else{Ma=d[ha>>0]|0;Na=ba;Oa=da;Pa=ha;Qa=ja}ja=Oa+12|0;ha=(Pa|0)==(Qa|0);if((Ma&255)<<24>>24==(a[((Na&1)==0?J:c[I>>2]|0)>>0]|0)){if(ha)wd[c[(c[Oa>>2]|0)+40>>2]&127](Oa)|0;else c[ja>>2]=Pa+1;ja=a[B>>0]|0;$=S;aa=((ja&1)==0?(ja&255)>>>1:c[m>>2]|0)>>>0>1?B:T;break b}if(ha)Ra=wd[c[(c[Oa>>2]|0)+36>>2]&127](Oa)|0;else Ra=d[Pa>>0]|0;if((Ra&255)<<24>>24!=(a[((a[C>>0]&1)==0?H:c[G>>2]|0)>>0]|0)){_=82;break a}ha=c[e>>2]|0;ja=ha+12|0;da=c[ja>>2]|0;if((da|0)==(c[ha+16>>2]|0))wd[c[(c[ha>>2]|0)+40>>2]&127](ha)|0;else c[ja>>2]=da+1;a[l>>0]=1;da=a[C>>0]|0;$=S;aa=((da&1)==0?(da&255)>>>1:c[g>>2]|0)>>>0>1?C:T}break}case 0:{if((s|0)==3){$=S;aa=T}else{fa=X;ga=X;_=28}break}case 2:{if(!(s>>>0<2|(T|0)!=0)?!(K|(s|0)==2&(a[Q>>0]|0)!=0):0){$=S;aa=0;break b}da=a[A>>0]|0;ja=(da&1)==0;ha=c[j>>2]|0;ba=ja?L:ha;ra=ba;d:do if((s|0)!=0?(d[w+(s+-1)>>0]|0)<2:0){Ka=ja?(da&255)>>>1:c[M>>2]|0;sa=ba+Ka|0;ia=c[h>>2]|0;e:do if(!Ka)Sa=ra;else{W=ba;Ta=ra;while(1){Ua=a[W>>0]|0;if(Ua<<24>>24<=-1){Sa=Ta;break e}if(!(b[ia+(Ua<<24>>24<<1)>>1]&8192)){Sa=Ta;break e}W=W+1|0;Ua=W;if((W|0)==(sa|0)){Sa=Ua;break}else Ta=Ua}}while(0);sa=Sa-ra|0;ia=a[D>>0]|0;Ka=(ia&1)==0;ya=Ka?(ia&255)>>>1:c[N>>2]|0;if(ya>>>0>=sa>>>0){ia=Ka?P:c[O>>2]|0;Ka=ia+ya|0;if((Sa|0)==(ra|0))Va=Sa;else{Ta=ba;W=ia+(ya-sa)|0;while(1){if((a[W>>0]|0)!=(a[Ta>>0]|0)){Va=ra;break d}W=W+1|0;if((W|0)==(Ka|0)){Va=Sa;break}else Ta=Ta+1|0}}}else Va=ra}else Va=ra;while(0);ra=(da&1)==0;ba=(ra?L:ha)+(ra?(da&255)>>>1:c[M>>2]|0)|0;ra=Va;f:do if((ra|0)==(ba|0))Wa=ba;else{ja=X;Ta=X;Ka=ra;while(1){W=c[e>>2]|0;do if(W)if((c[W+12>>2]|0)==(c[W+16>>2]|0))if((wd[c[(c[W>>2]|0)+36>>2]&127](W)|0)==-1){c[e>>2]=0;Xa=0;break}else{Xa=c[e>>2]|0;break}else Xa=W;else Xa=0;while(0);W=(Xa|0)==0;do if(Ta){if((c[Ta+12>>2]|0)!=(c[Ta+16>>2]|0))if(W){Ya=ja;Za=Ta;break}else{Wa=Ka;break f}if((wd[c[(c[Ta>>2]|0)+36>>2]&127](Ta)|0)!=-1)if(W^(ja|0)==0){Ya=ja;Za=ja;break}else{Wa=Ka;break f}else{c[f>>2]=0;_a=0;_=107;break}}else{_a=ja;_=107}while(0);if((_|0)==107){_=0;if(W){Wa=Ka;break f}else{Ya=_a;Za=0}}sa=c[e>>2]|0;ya=c[sa+12>>2]|0;if((ya|0)==(c[sa+16>>2]|0))$a=wd[c[(c[sa>>2]|0)+36>>2]&127](sa)|0;else $a=d[ya>>0]|0;if(($a&255)<<24>>24!=(a[Ka>>0]|0)){Wa=Ka;break f}ya=c[e>>2]|0;sa=ya+12|0;ia=c[sa>>2]|0;if((ia|0)==(c[ya+16>>2]|0))wd[c[(c[ya>>2]|0)+40>>2]&127](ya)|0;else c[sa>>2]=ia+1;Ka=Ka+1|0;ia=a[A>>0]|0;sa=(ia&1)==0;ya=(sa?L:c[j>>2]|0)+(sa?(ia&255)>>>1:c[M>>2]|0)|0;if((Ka|0)==(ya|0)){Wa=ya;break}else{ja=Ya;Ta=Za}}}while(0);if(K?(ra=a[A>>0]|0,ba=(ra&1)==0,(Wa|0)!=((ba?L:c[j>>2]|0)+(ba?(ra&255)>>>1:c[M>>2]|0)|0)):0){_=119;break a}else{$=S;aa=T}break}default:{$=S;aa=T}}while(0);g:do if((_|0)==28)while(1){_=0;U=c[e>>2]|0;do if(U)if((c[U+12>>2]|0)==(c[U+16>>2]|0))if((wd[c[(c[U>>2]|0)+36>>2]&127](U)|0)==-1){c[e>>2]=0;ab=0;break}else{ab=c[e>>2]|0;break}else ab=U;else ab=0;while(0);U=(ab|0)==0;do if(ga){if((c[ga+12>>2]|0)!=(c[ga+16>>2]|0))if(U){bb=fa;cb=ga;break}else{$=S;aa=T;break g}if((wd[c[(c[ga>>2]|0)+36>>2]&127](ga)|0)!=-1)if(U^(fa|0)==0){bb=fa;cb=fa;break}else{$=S;aa=T;break g}else{c[f>>2]=0;db=0;_=38;break}}else{db=fa;_=38}while(0);if((_|0)==38){_=0;if(U){$=S;aa=T;break g}else{bb=db;cb=0}}ra=c[e>>2]|0;ba=c[ra+12>>2]|0;if((ba|0)==(c[ra+16>>2]|0))eb=wd[c[(c[ra>>2]|0)+36>>2]&127](ra)|0;else eb=d[ba>>0]|0;if((eb&255)<<24>>24<=-1){$=S;aa=T;break g}if(!(b[(c[h>>2]|0)+(eb<<24>>24<<1)>>1]&8192)){$=S;aa=T;break g}ba=c[e>>2]|0;ra=ba+12|0;da=c[ra>>2]|0;if((da|0)==(c[ba+16>>2]|0))fb=wd[c[(c[ba>>2]|0)+40>>2]&127](ba)|0;else{c[ra>>2]=da+1;fb=d[da>>0]|0}Oy(D,fb&255);fa=bb;ga=cb;_=28}while(0);s=s+1|0;if(s>>>0>=4){Y=$;Z=aa;_=202;break}else{S=$;T=aa}}h:do if((_|0)==26){c[k>>2]=c[k>>2]|4;gb=0}else if((_|0)==82){c[k>>2]=c[k>>2]|4;gb=0}else if((_|0)==119){c[k>>2]=c[k>>2]|4;gb=0}else if((_|0)==167){c[k>>2]=c[k>>2]|4;gb=0}else if((_|0)==189){c[k>>2]=c[k>>2]|4;gb=0}else if((_|0)==200){c[k>>2]=c[k>>2]|4;gb=0}else if((_|0)==202){i:do if(Z){aa=Z+1|0;T=Z+8|0;$=Z+4|0;S=1;j:while(1){s=a[Z>>0]|0;if(!(s&1))hb=(s&255)>>>1;else hb=c[$>>2]|0;if(S>>>0>=hb>>>0)break i;s=c[e>>2]|0;do if(s)if((c[s+12>>2]|0)==(c[s+16>>2]|0))if((wd[c[(c[s>>2]|0)+36>>2]&127](s)|0)==-1){c[e>>2]=0;ib=0;break}else{ib=c[e>>2]|0;break}else ib=s;else ib=0;while(0);s=(ib|0)==0;U=c[f>>2]|0;do if(U){if((c[U+12>>2]|0)==(c[U+16>>2]|0)?(wd[c[(c[U>>2]|0)+36>>2]&127](U)|0)==-1:0){c[f>>2]=0;_=218;break}if(!s)break j}else _=218;while(0);if((_|0)==218?(_=0,s):0)break;U=c[e>>2]|0;cb=c[U+12>>2]|0;if((cb|0)==(c[U+16>>2]|0))jb=wd[c[(c[U>>2]|0)+36>>2]&127](U)|0;else jb=d[cb>>0]|0;if(!(a[Z>>0]&1))kb=aa;else kb=c[T>>2]|0;if((jb&255)<<24>>24!=(a[kb+S>>0]|0))break;cb=S+1|0;U=c[e>>2]|0;ga=U+12|0;bb=c[ga>>2]|0;if((bb|0)==(c[U+16>>2]|0)){wd[c[(c[U>>2]|0)+40>>2]&127](U)|0;S=cb;continue}else{c[ga>>2]=bb+1;S=cb;continue}}c[k>>2]=c[k>>2]|4;gb=0;break h}while(0);S=c[t>>2]|0;if((S|0)!=(Y|0)?(c[F>>2]=0,lD(z,S,Y,F),(c[F>>2]|0)!=0):0){c[k>>2]=c[k>>2]|4;gb=0}else gb=1}while(0);Hy(D);Hy(C);Hy(B);Hy(A);Hy(z);z=c[t>>2]|0;c[t>>2]=0;if(z)td[c[p>>2]&255](z);i=q;return gb|0}function jD(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=i;i=i+144|0;k=b;l=b+28|0;m=b+8|0;n=b+24|0;o=b+20|0;p=b+128|0;q=b+16|0;c[m>>2]=l;r=m+4|0;c[r>>2]=184;s=hz(g)|0;c[o>>2]=s;t=_D(o,83696)|0;a[p>>0]=0;u=c[e>>2]|0;c[q>>2]=u;v=c[g+4>>2]|0;c[k>>2]=c[q>>2];q=u;if(iD(d,k,f,o,v,h,p,t,m,n,l+100|0)|0){if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}if(a[p>>0]|0)Oy(j,Cd[c[(c[t>>2]|0)+28>>2]&63](t,45)|0);p=Cd[c[(c[t>>2]|0)+28>>2]&63](t,48)|0;t=c[m>>2]|0;l=c[n>>2]|0;n=l+-1|0;a:do if(t>>>0<n>>>0){v=t;while(1){if((a[v>>0]|0)!=p<<24>>24){w=v;break a}o=v+1|0;if(o>>>0<n>>>0)v=o;else{w=o;break}}}else w=t;while(0);mG(j,w,l)|0}l=c[d>>2]|0;do if(l)if((c[l+12>>2]|0)==(c[l+16>>2]|0))if((wd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1){c[d>>2]=0;x=0;break}else{x=c[d>>2]|0;break}else x=l;else x=0;while(0);l=(x|0)==0;do if(u){if((c[q+12>>2]|0)==(c[q+16>>2]|0)?(wd[c[(c[u>>2]|0)+36>>2]&127](q)|0)==-1:0){c[e>>2]=0;y=21;break}if(!l)y=22}else y=21;while(0);if((y|0)==21?l:0)y=22;if((y|0)==22)c[h>>2]=c[h>>2]|2;h=c[d>>2]|0;xy(s)|0;s=c[m>>2]|0;c[m>>2]=0;if(s)td[c[r>>2]&255](s);i=b;return h|0}function kD(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;o=n;p=n+40|0;q=n+76|0;r=n+4|0;s=n+88|0;t=n+100|0;u=n+28|0;v=n+64|0;w=n+52|0;x=n+16|0;if(b){b=_D(d,83280)|0;ud[c[(c[b>>2]|0)+44>>2]&127](o,b);y=c[o>>2]|0;a[e>>0]=y;a[e+1>>0]=y>>8;a[e+2>>0]=y>>16;a[e+3>>0]=y>>24;ud[c[(c[b>>2]|0)+32>>2]&127](p,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Ny(l,0);c[l>>2]=c[p>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Hy(p);ud[c[(c[b>>2]|0)+28>>2]&127](q,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Ny(k,0);c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Hy(q);a[f>>0]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[g>>0]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[b>>2]|0)+20>>2]&127](r,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Ny(h,0);c[h>>2]=c[r>>2];c[h+4>>2]=c[r+4>>2];c[h+8>>2]=c[r+8>>2];c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Hy(r);ud[c[(c[b>>2]|0)+24>>2]&127](s,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Ny(j,0);c[j>>2]=c[s>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Hy(s);z=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=_D(d,83216)|0;ud[c[(c[b>>2]|0)+44>>2]&127](t,b);d=c[t>>2]|0;a[e>>0]=d;a[e+1>>0]=d>>8;a[e+2>>0]=d>>16;a[e+3>>0]=d>>24;ud[c[(c[b>>2]|0)+32>>2]&127](u,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Ny(l,0);c[l>>2]=c[u>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Hy(u);ud[c[(c[b>>2]|0)+28>>2]&127](v,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Ny(k,0);c[k>>2]=c[v>>2];c[k+4>>2]=c[v+4>>2];c[k+8>>2]=c[v+8>>2];c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Hy(v);a[f>>0]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[g>>0]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[b>>2]|0)+20>>2]&127](w,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Ny(h,0);c[h>>2]=c[w>>2];c[h+4>>2]=c[w+4>>2];c[h+8>>2]=c[w+8>>2];c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Hy(w);ud[c[(c[b>>2]|0)+24>>2]&127](x,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Ny(j,0);c[j>>2]=c[x>>2];c[j+4>>2]=c[x+4>>2];c[j+8>>2]=c[x+8>>2];c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Hy(x);z=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=z;i=n;return}function lD(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;g=a[b>>0]|0;h=b+4|0;i=c[h>>2]|0;a:do if(((g&1)==0?(g&255)>>>1:i)|0){if((d|0)==(e|0)){j=g;k=i}else{l=e+-4|0;if(l>>>0>d>>>0){m=d;n=l;do{l=c[m>>2]|0;c[m>>2]=c[n>>2];c[n>>2]=l;m=m+4|0;n=n+-4|0}while(m>>>0<n>>>0)}j=a[b>>0]|0;k=c[h>>2]|0}n=(j&1)==0;m=n?b+1|0:c[b+8>>2]|0;l=e+-4|0;o=m+(n?(j&255)>>>1:k)|0;n=a[m>>0]|0;p=n<<24>>24<1|n<<24>>24==127;b:do if(l>>>0>d>>>0){q=n;r=m;s=d;t=p;while(1){if(!t?(q<<24>>24|0)!=(c[s>>2]|0):0)break;r=(o-r|0)>1?r+1|0:r;s=s+4|0;u=a[r>>0]|0;v=u<<24>>24<1|u<<24>>24==127;if(s>>>0>=l>>>0){w=u;x=v;break b}else{q=u;t=v}}c[f>>2]=4;break a}else{w=n;x=p}while(0);if(!x?((c[l>>2]|0)+-1|0)>>>0>=w<<24>>24>>>0:0)c[f>>2]=4}while(0);return}function mD(a){a=a|0;return}function nD(a){a=a|0;Ow(a);return}function oD(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;b=i;i=i+576|0;k=b+432|0;l=b;m=b+24|0;n=b+16|0;o=b+8|0;p=b+4|0;q=b+572|0;r=b+424|0;s=b+472|0;c[n>>2]=m;t=n+4|0;c[t>>2]=184;c[p>>2]=hz(g)|0;u=_D(p,83688)|0;a[q>>0]=0;c[r>>2]=c[e>>2];v=c[g+4>>2]|0;c[k>>2]=c[r>>2];if(pD(d,k,f,p,v,h,q,u,n,o,m+400|0)|0){Ad[c[(c[u>>2]|0)+48>>2]&31](u,87016,87026,k)|0;u=c[o>>2]|0;m=c[n>>2]|0;v=u-m|0;if((v|0)>392){f=py((v>>2)+2|0)|0;if(!f)Gx();else{w=f;x=f}}else{w=0;x=s}if(!(a[q>>0]|0))y=x;else{a[x>>0]=45;y=x+1|0}x=k+40|0;q=k;if(m>>>0<u>>>0){u=k+4|0;f=u+4|0;v=f+4|0;r=v+4|0;g=r+4|0;z=g+4|0;A=z+4|0;B=A+4|0;C=B+4|0;D=y;E=m;while(1){m=c[E>>2]|0;if((c[k>>2]|0)!=(m|0))if((c[u>>2]|0)!=(m|0))if((c[f>>2]|0)!=(m|0))if((c[v>>2]|0)!=(m|0))if((c[r>>2]|0)!=(m|0))if((c[g>>2]|0)!=(m|0))if((c[z>>2]|0)!=(m|0))if((c[A>>2]|0)!=(m|0))if((c[B>>2]|0)==(m|0))F=B;else F=(c[C>>2]|0)==(m|0)?C:x;else F=A;else F=z;else F=g;else F=r;else F=v;else F=f;else F=u;else F=k;a[D>>0]=a[87016+(F-q>>2)>>0]|0;E=E+4|0;m=D+1|0;if(E>>>0>=(c[o>>2]|0)>>>0){G=m;break}else D=m}}else G=y;a[G>>0]=0;c[l>>2]=j;vw(s,87008,l)|0;if(w)qy(w)}w=c[d>>2]|0;do if(w){l=c[w+12>>2]|0;if((l|0)==(c[w+16>>2]|0))H=wd[c[(c[w>>2]|0)+36>>2]&127](w)|0;else H=c[l>>2]|0;if((H|0)==-1){c[d>>2]=0;I=1;break}else{I=(c[d>>2]|0)==0;break}}else I=1;while(0);H=c[e>>2]|0;do if(H){w=c[H+12>>2]|0;if((w|0)==(c[H+16>>2]|0))J=wd[c[(c[H>>2]|0)+36>>2]&127](H)|0;else J=c[w>>2]|0;if((J|0)!=-1)if(I)break;else{K=30;break}else{c[e>>2]=0;K=28;break}}else K=28;while(0);if((K|0)==28?I:0)K=30;if((K|0)==30)c[h>>2]=c[h>>2]|2;h=c[d>>2]|0;xy(c[p>>2]|0)|0;p=c[n>>2]|0;c[n>>2]=0;if(p)td[c[t>>2]&255](p);i=b;return h|0}function pD(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0;p=i;i=i+512|0;q=p+40|0;r=p+88|0;s=p+32|0;t=p+24|0;u=p+80|0;v=p+504|0;w=p+496|0;x=p+500|0;y=p+44|0;z=p;A=p+68|0;B=p+12|0;C=p+56|0;D=p+492|0;E=p+488|0;c[q>>2]=o;c[s>>2]=r;o=s+4|0;c[o>>2]=184;c[t>>2]=r;c[u>>2]=r+400;c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;rD(f,g,v,w,x,y,z,A,B,D);c[n>>2]=c[m>>2];g=A+4|0;f=B+4|0;F=B+8|0;G=A+8|0;H=(h&512|0)!=0;h=z+8|0;I=z+4|0;J=C+4|0;K=C+8|0;L=v+3|0;M=y+4|0;N=r;r=0;O=0;a:while(1){P=c[b>>2]|0;do if(P){Q=c[P+12>>2]|0;if((Q|0)==(c[P+16>>2]|0))R=wd[c[(c[P>>2]|0)+36>>2]&127](P)|0;else R=c[Q>>2]|0;if((R|0)==-1){c[b>>2]=0;S=1;break}else{S=(c[b>>2]|0)==0;break}}else S=1;while(0);P=c[e>>2]|0;do if(P){Q=c[P+12>>2]|0;if((Q|0)==(c[P+16>>2]|0))T=wd[c[(c[P>>2]|0)+36>>2]&127](P)|0;else T=c[Q>>2]|0;if((T|0)!=-1)if(S){U=P;break}else{V=N;W=O;X=217;break a}else{c[e>>2]=0;X=15;break}}else X=15;while(0);if((X|0)==15){X=0;if(S){V=N;W=O;X=217;break}else U=0}b:do switch(a[v+r>>0]|0){case 3:{P=a[A>>0]|0;Q=(P&1)==0?(P&255)>>>1:c[g>>2]|0;Y=a[B>>0]|0;Z=(Y&1)==0?(Y&255)>>>1:c[f>>2]|0;if((Q|0)==(0-Z|0)){_=N;$=O}else{Y=(Q|0)==0;Q=c[b>>2]|0;aa=c[Q+12>>2]|0;ba=c[Q+16>>2]|0;ca=(aa|0)==(ba|0);if(Y|(Z|0)==0){if(ca)da=wd[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else da=c[aa>>2]|0;if(Y){if((da|0)!=(c[((a[B>>0]&1)==0?f:c[F>>2]|0)>>2]|0)){_=N;$=O;break b}Y=c[b>>2]|0;Z=Y+12|0;ea=c[Z>>2]|0;if((ea|0)==(c[Y+16>>2]|0))wd[c[(c[Y>>2]|0)+40>>2]&127](Y)|0;else c[Z>>2]=ea+4;a[k>>0]=1;ea=a[B>>0]|0;_=N;$=((ea&1)==0?(ea&255)>>>1:c[f>>2]|0)>>>0>1?B:O;break b}if((da|0)!=(c[((a[A>>0]&1)==0?g:c[G>>2]|0)>>2]|0)){a[k>>0]=1;_=N;$=O;break b}ea=c[b>>2]|0;Z=ea+12|0;Y=c[Z>>2]|0;if((Y|0)==(c[ea+16>>2]|0))wd[c[(c[ea>>2]|0)+40>>2]&127](ea)|0;else c[Z>>2]=Y+4;Y=a[A>>0]|0;_=N;$=((Y&1)==0?(Y&255)>>>1:c[g>>2]|0)>>>0>1?A:O;break b}if(ca){ca=wd[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;Y=c[b>>2]|0;fa=ca;ga=a[A>>0]|0;ha=Y;ia=c[Y+12>>2]|0;ja=c[Y+16>>2]|0}else{fa=c[aa>>2]|0;ga=P;ha=Q;ia=aa;ja=ba}ba=ha+12|0;aa=(ia|0)==(ja|0);if((fa|0)==(c[((ga&1)==0?g:c[G>>2]|0)>>2]|0)){if(aa)wd[c[(c[ha>>2]|0)+40>>2]&127](ha)|0;else c[ba>>2]=ia+4;ba=a[A>>0]|0;_=N;$=((ba&1)==0?(ba&255)>>>1:c[g>>2]|0)>>>0>1?A:O;break b}if(aa)ka=wd[c[(c[ha>>2]|0)+36>>2]&127](ha)|0;else ka=c[ia>>2]|0;if((ka|0)!=(c[((a[B>>0]&1)==0?f:c[F>>2]|0)>>2]|0)){X=86;break a}aa=c[b>>2]|0;ba=aa+12|0;Q=c[ba>>2]|0;if((Q|0)==(c[aa+16>>2]|0))wd[c[(c[aa>>2]|0)+40>>2]&127](aa)|0;else c[ba>>2]=Q+4;a[k>>0]=1;Q=a[B>>0]|0;_=N;$=((Q&1)==0?(Q&255)>>>1:c[f>>2]|0)>>>0>1?B:O}break}case 4:{Q=c[x>>2]|0;ba=U;aa=U;P=N;Y=0;c:while(1){ca=c[b>>2]|0;do if(ca){Z=c[ca+12>>2]|0;if((Z|0)==(c[ca+16>>2]|0))la=wd[c[(c[ca>>2]|0)+36>>2]&127](ca)|0;else la=c[Z>>2]|0;if((la|0)==-1){c[b>>2]=0;ma=1;break}else{ma=(c[b>>2]|0)==0;break}}else ma=1;while(0);do if(aa){ca=c[aa+12>>2]|0;if((ca|0)==(c[aa+16>>2]|0))na=wd[c[(c[aa>>2]|0)+36>>2]&127](aa)|0;else na=c[ca>>2]|0;if((na|0)!=-1)if(ma^(ba|0)==0){oa=ba;pa=ba;break}else{qa=P;ra=ba;sa=Y;break c}else{c[e>>2]=0;ta=0;X=140;break}}else{ta=ba;X=140}while(0);if((X|0)==140){X=0;if(ma){qa=P;ra=ta;sa=Y;break}else{oa=ta;pa=0}}ca=c[b>>2]|0;Z=c[ca+12>>2]|0;if((Z|0)==(c[ca+16>>2]|0))ua=wd[c[(c[ca>>2]|0)+36>>2]&127](ca)|0;else ua=c[Z>>2]|0;if(od[c[(c[l>>2]|0)+12>>2]&127](l,2048,ua)|0){Z=c[n>>2]|0;if((Z|0)==(c[q>>2]|0)){nG(m,n,q);va=c[n>>2]|0}else va=Z;c[n>>2]=va+4;c[va>>2]=ua;wa=P;xa=Y+1|0}else{Z=a[y>>0]|0;if(!((ua|0)==(Q|0)&((Y|0)!=0?(((Z&1)==0?(Z&255)>>>1:c[M>>2]|0)|0)!=0:0))){qa=P;ra=oa;sa=Y;break}if((P|0)==(c[u>>2]|0)){lG(s,t,u);ya=c[t>>2]|0}else ya=P;Z=ya+4|0;c[t>>2]=Z;c[ya>>2]=Y;wa=Z;xa=0}Z=c[b>>2]|0;ca=Z+12|0;ea=c[ca>>2]|0;if((ea|0)==(c[Z+16>>2]|0)){wd[c[(c[Z>>2]|0)+40>>2]&127](Z)|0;ba=oa;aa=pa;P=wa;Y=xa;continue}else{c[ca>>2]=ea+4;ba=oa;aa=pa;P=wa;Y=xa;continue}}if((sa|0)!=0?(c[s>>2]|0)!=(qa|0):0){if((qa|0)==(c[u>>2]|0)){lG(s,t,u);za=c[t>>2]|0}else za=qa;Y=za+4|0;c[t>>2]=Y;c[za>>2]=sa;Aa=Y}else Aa=qa;Y=c[D>>2]|0;if((Y|0)>0){P=c[b>>2]|0;do if(P){aa=c[P+12>>2]|0;if((aa|0)==(c[P+16>>2]|0))Ba=wd[c[(c[P>>2]|0)+36>>2]&127](P)|0;else Ba=c[aa>>2]|0;if((Ba|0)==-1){c[b>>2]=0;Ca=1;break}else{Ca=(c[b>>2]|0)==0;break}}else Ca=1;while(0);do if(ra){P=c[ra+12>>2]|0;if((P|0)==(c[ra+16>>2]|0))Da=wd[c[(c[ra>>2]|0)+36>>2]&127](ra)|0;else Da=c[P>>2]|0;if((Da|0)!=-1)if(Ca){Ea=ra;break}else{X=180;break a}else{c[e>>2]=0;X=174;break}}else X=174;while(0);if((X|0)==174){X=0;if(Ca){X=180;break a}else Ea=0}P=c[b>>2]|0;aa=c[P+12>>2]|0;if((aa|0)==(c[P+16>>2]|0))Fa=wd[c[(c[P>>2]|0)+36>>2]&127](P)|0;else Fa=c[aa>>2]|0;if((Fa|0)!=(c[w>>2]|0)){X=180;break a}aa=c[b>>2]|0;P=aa+12|0;ba=c[P>>2]|0;if((ba|0)==(c[aa+16>>2]|0))wd[c[(c[aa>>2]|0)+40>>2]&127](aa)|0;else c[P>>2]=ba+4;if((Y|0)>0){ba=Ea;P=Ea;aa=Y;while(1){Q=c[b>>2]|0;do if(Q){ea=c[Q+12>>2]|0;if((ea|0)==(c[Q+16>>2]|0))Ga=wd[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else Ga=c[ea>>2]|0;if((Ga|0)==-1){c[b>>2]=0;Ha=1;break}else{Ha=(c[b>>2]|0)==0;break}}else Ha=1;while(0);do if(P){Q=c[P+12>>2]|0;if((Q|0)==(c[P+16>>2]|0))Ia=wd[c[(c[P>>2]|0)+36>>2]&127](P)|0;else Ia=c[Q>>2]|0;if((Ia|0)!=-1)if(Ha^(ba|0)==0){Ja=ba;Ka=ba;break}else{X=204;break a}else{c[e>>2]=0;La=0;X=198;break}}else{La=ba;X=198}while(0);if((X|0)==198){X=0;if(Ha){X=204;break a}else{Ja=La;Ka=0}}Q=c[b>>2]|0;ea=c[Q+12>>2]|0;if((ea|0)==(c[Q+16>>2]|0))Ma=wd[c[(c[Q>>2]|0)+36>>2]&127](Q)|0;else Ma=c[ea>>2]|0;if(!(od[c[(c[l>>2]|0)+12>>2]&127](l,2048,Ma)|0)){X=204;break a}if((c[n>>2]|0)==(c[q>>2]|0))nG(m,n,q);ea=c[b>>2]|0;Q=c[ea+12>>2]|0;if((Q|0)==(c[ea+16>>2]|0))Na=wd[c[(c[ea>>2]|0)+36>>2]&127](ea)|0;else Na=c[Q>>2]|0;Q=c[n>>2]|0;c[n>>2]=Q+4;c[Q>>2]=Na;Q=aa;aa=aa+-1|0;c[D>>2]=aa;ea=c[b>>2]|0;ca=ea+12|0;Z=c[ca>>2]|0;if((Z|0)==(c[ea+16>>2]|0))wd[c[(c[ea>>2]|0)+40>>2]&127](ea)|0;else c[ca>>2]=Z+4;if((Q|0)<=1)break;else{ba=Ja;P=Ka}}}}if((c[n>>2]|0)==(c[m>>2]|0)){X=215;break a}else{_=Aa;$=O}break}case 1:{if((r|0)==3){_=N;$=O}else{P=c[b>>2]|0;ba=c[P+12>>2]|0;if((ba|0)==(c[P+16>>2]|0))Oa=wd[c[(c[P>>2]|0)+36>>2]&127](P)|0;else Oa=c[ba>>2]|0;if(!(od[c[(c[l>>2]|0)+12>>2]&127](l,8192,Oa)|0)){X=28;break a}ba=c[b>>2]|0;P=ba+12|0;aa=c[P>>2]|0;if((aa|0)==(c[ba+16>>2]|0))Pa=wd[c[(c[ba>>2]|0)+40>>2]&127](ba)|0;else{c[P>>2]=aa+4;Pa=c[aa>>2]|0}Zy(C,Pa);Qa=U;Ra=U;X=30}break}case 0:{if((r|0)==3){_=N;$=O}else{Qa=U;Ra=U;X=30}break}case 2:{if(!(r>>>0<2|(O|0)!=0)?!(H|(r|0)==2&(a[L>>0]|0)!=0):0){_=N;$=0;break b}aa=a[z>>0]|0;P=c[h>>2]|0;ba=(aa&1)==0?I:P;Y=ba;d:do if((r|0)!=0?(d[v+(r+-1)>>0]|0)<2:0){Q=(aa&1)==0;e:do if((ba|0)==((Q?I:P)+((Q?(aa&255)>>>1:c[I>>2]|0)<<2)|0)){Sa=aa;Ta=P;Ua=Y}else{Z=ba;ca=Y;while(1){if(!(od[c[(c[l>>2]|0)+12>>2]&127](l,8192,c[Z>>2]|0)|0)){Va=ca;break}Z=Z+4|0;ea=Z;Wa=a[z>>0]|0;Xa=c[h>>2]|0;Ya=(Wa&1)==0;if((Z|0)==((Ya?I:Xa)+((Ya?(Wa&255)>>>1:c[I>>2]|0)<<2)|0)){Sa=Wa;Ta=Xa;Ua=ea;break e}else ca=ea}Sa=a[z>>0]|0;Ta=c[h>>2]|0;Ua=Va}while(0);Q=(Sa&1)==0?I:Ta;ca=Q;Z=Ua-ca>>2;ea=a[C>>0]|0;Xa=(ea&1)==0;Wa=Xa?(ea&255)>>>1:c[J>>2]|0;if(Wa>>>0>=Z>>>0){ea=Xa?J:c[K>>2]|0;Xa=ea+(Wa<<2)|0;if(!Z){Za=Ta;_a=Sa;$a=Ua}else{Ya=Q;Q=ea+(Wa-Z<<2)|0;while(1){if((c[Q>>2]|0)!=(c[Ya>>2]|0)){Za=Ta;_a=Sa;$a=ca;break d}Q=Q+4|0;if((Q|0)==(Xa|0)){Za=Ta;_a=Sa;$a=Ua;break}else Ya=Ya+4|0}}}else{Za=Ta;_a=Sa;$a=ca}}else{Za=P;_a=aa;$a=Y}while(0);Y=(_a&1)==0;aa=(Y?I:Za)+((Y?(_a&255)>>>1:c[I>>2]|0)<<2)|0;Y=$a;f:do if((Y|0)==(aa|0))ab=aa;else{P=U;ba=U;Ya=Y;while(1){Xa=c[b>>2]|0;do if(Xa){Q=c[Xa+12>>2]|0;if((Q|0)==(c[Xa+16>>2]|0))bb=wd[c[(c[Xa>>2]|0)+36>>2]&127](Xa)|0;else bb=c[Q>>2]|0;if((bb|0)==-1){c[b>>2]=0;cb=1;break}else{cb=(c[b>>2]|0)==0;break}}else cb=1;while(0);do if(ba){Xa=c[ba+12>>2]|0;if((Xa|0)==(c[ba+16>>2]|0))db=wd[c[(c[ba>>2]|0)+36>>2]&127](ba)|0;else db=c[Xa>>2]|0;if((db|0)!=-1)if(cb^(P|0)==0){eb=P;fb=P;break}else{ab=Ya;break f}else{c[e>>2]=0;gb=0;X=114;break}}else{gb=P;X=114}while(0);if((X|0)==114){X=0;if(cb){ab=Ya;break f}else{eb=gb;fb=0}}Xa=c[b>>2]|0;Q=c[Xa+12>>2]|0;if((Q|0)==(c[Xa+16>>2]|0))hb=wd[c[(c[Xa>>2]|0)+36>>2]&127](Xa)|0;else hb=c[Q>>2]|0;if((hb|0)!=(c[Ya>>2]|0)){ab=Ya;break f}Q=c[b>>2]|0;Xa=Q+12|0;Z=c[Xa>>2]|0;if((Z|0)==(c[Q+16>>2]|0))wd[c[(c[Q>>2]|0)+40>>2]&127](Q)|0;else c[Xa>>2]=Z+4;Ya=Ya+4|0;Z=a[z>>0]|0;Xa=(Z&1)==0;Q=(Xa?I:c[h>>2]|0)+((Xa?(Z&255)>>>1:c[I>>2]|0)<<2)|0;if((Ya|0)==(Q|0)){ab=Q;break}else{P=eb;ba=fb}}}while(0);if(H?(Y=a[z>>0]|0,aa=(Y&1)==0,(ab|0)!=((aa?I:c[h>>2]|0)+((aa?(Y&255)>>>1:c[I>>2]|0)<<2)|0)):0){X=126;break a}else{_=N;$=O}break}default:{_=N;$=O}}while(0);g:do if((X|0)==30)while(1){X=0;Y=c[b>>2]|0;do if(Y){aa=c[Y+12>>2]|0;if((aa|0)==(c[Y+16>>2]|0))ib=wd[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else ib=c[aa>>2]|0;if((ib|0)==-1){c[b>>2]=0;jb=1;break}else{jb=(c[b>>2]|0)==0;break}}else jb=1;while(0);do if(Ra){Y=c[Ra+12>>2]|0;if((Y|0)==(c[Ra+16>>2]|0))kb=wd[c[(c[Ra>>2]|0)+36>>2]&127](Ra)|0;else kb=c[Y>>2]|0;if((kb|0)!=-1)if(jb^(Qa|0)==0){lb=Qa;mb=Qa;break}else{_=N;$=O;break g}else{c[e>>2]=0;nb=0;X=43;break}}else{nb=Qa;X=43}while(0);if((X|0)==43){X=0;if(jb){_=N;$=O;break g}else{lb=nb;mb=0}}Y=c[b>>2]|0;aa=c[Y+12>>2]|0;if((aa|0)==(c[Y+16>>2]|0))ob=wd[c[(c[Y>>2]|0)+36>>2]&127](Y)|0;else ob=c[aa>>2]|0;if(!(od[c[(c[l>>2]|0)+12>>2]&127](l,8192,ob)|0)){_=N;$=O;break g}aa=c[b>>2]|0;Y=aa+12|0;ba=c[Y>>2]|0;if((ba|0)==(c[aa+16>>2]|0))pb=wd[c[(c[aa>>2]|0)+40>>2]&127](aa)|0;else{c[Y>>2]=ba+4;pb=c[ba>>2]|0}Zy(C,pb);Qa=lb;Ra=mb;X=30}while(0);r=r+1|0;if(r>>>0>=4){V=_;W=$;X=217;break}else{N=_;O=$}}h:do if((X|0)==28){c[j>>2]=c[j>>2]|4;qb=0}else if((X|0)==86){c[j>>2]=c[j>>2]|4;qb=0}else if((X|0)==126){c[j>>2]=c[j>>2]|4;qb=0}else if((X|0)==180){c[j>>2]=c[j>>2]|4;qb=0}else if((X|0)==204){c[j>>2]=c[j>>2]|4;qb=0}else if((X|0)==215){c[j>>2]=c[j>>2]|4;qb=0}else if((X|0)==217){i:do if(W){$=W+4|0;O=W+8|0;_=1;j:while(1){N=a[W>>0]|0;if(!(N&1))rb=(N&255)>>>1;else rb=c[$>>2]|0;if(_>>>0>=rb>>>0)break i;N=c[b>>2]|0;do if(N){r=c[N+12>>2]|0;if((r|0)==(c[N+16>>2]|0))sb=wd[c[(c[N>>2]|0)+36>>2]&127](N)|0;else sb=c[r>>2]|0;if((sb|0)==-1){c[b>>2]=0;tb=1;break}else{tb=(c[b>>2]|0)==0;break}}else tb=1;while(0);N=c[e>>2]|0;do if(N){r=c[N+12>>2]|0;if((r|0)==(c[N+16>>2]|0))ub=wd[c[(c[N>>2]|0)+36>>2]&127](N)|0;else ub=c[r>>2]|0;if((ub|0)!=-1)if(tb)break;else break j;else{c[e>>2]=0;X=236;break}}else X=236;while(0);if((X|0)==236?(X=0,tb):0)break;N=c[b>>2]|0;r=c[N+12>>2]|0;if((r|0)==(c[N+16>>2]|0))vb=wd[c[(c[N>>2]|0)+36>>2]&127](N)|0;else vb=c[r>>2]|0;if(!(a[W>>0]&1))wb=$;else wb=c[O>>2]|0;if((vb|0)!=(c[wb+(_<<2)>>2]|0))break;r=_+1|0;N=c[b>>2]|0;mb=N+12|0;Ra=c[mb>>2]|0;if((Ra|0)==(c[N+16>>2]|0)){wd[c[(c[N>>2]|0)+40>>2]&127](N)|0;_=r;continue}else{c[mb>>2]=Ra+4;_=r;continue}}c[j>>2]=c[j>>2]|4;qb=0;break h}while(0);_=c[s>>2]|0;if((_|0)!=(V|0)?(c[E>>2]=0,lD(y,_,V,E),(c[E>>2]|0)!=0):0){c[j>>2]=c[j>>2]|4;qb=0}else qb=1}while(0);Vy(C);Vy(B);Vy(A);Vy(z);Hy(y);y=c[s>>2]|0;c[s>>2]=0;if(y)td[c[o>>2]&255](y);i=p;return qb|0}function qD(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;b=i;i=i+432|0;k=b+4|0;l=b+16|0;m=b+8|0;n=b+420|0;o=b;p=b+424|0;q=b+416|0;c[m>>2]=l;r=m+4|0;c[r>>2]=184;s=hz(g)|0;c[o>>2]=s;t=_D(o,83688)|0;a[p>>0]=0;u=c[e>>2]|0;c[q>>2]=u;v=c[g+4>>2]|0;c[k>>2]=c[q>>2];q=u;if(pD(d,k,f,o,v,h,p,t,m,n,l+400|0)|0){if(!(a[j>>0]&1))a[j>>0]=0;else c[c[j+8>>2]>>2]=0;c[j+4>>2]=0;if(a[p>>0]|0)Zy(j,Cd[c[(c[t>>2]|0)+44>>2]&63](t,45)|0);p=Cd[c[(c[t>>2]|0)+44>>2]&63](t,48)|0;t=c[m>>2]|0;l=c[n>>2]|0;n=l+-4|0;a:do if(t>>>0<n>>>0){v=t;while(1){if((c[v>>2]|0)!=(p|0)){w=v;break a}o=v+4|0;if(o>>>0<n>>>0)v=o;else{w=o;break}}}else w=t;while(0);oG(j,w,l)|0}l=c[d>>2]|0;do if(l){w=c[l+12>>2]|0;if((w|0)==(c[l+16>>2]|0))x=wd[c[(c[l>>2]|0)+36>>2]&127](l)|0;else x=c[w>>2]|0;if((x|0)==-1){c[d>>2]=0;y=1;break}else{y=(c[d>>2]|0)==0;break}}else y=1;while(0);do if(u){x=c[q+12>>2]|0;if((x|0)==(c[q+16>>2]|0))z=wd[c[(c[u>>2]|0)+36>>2]&127](q)|0;else z=c[x>>2]|0;if((z|0)!=-1)if(y)break;else{A=26;break}else{c[e>>2]=0;A=24;break}}else A=24;while(0);if((A|0)==24?y:0)A=26;if((A|0)==26)c[h>>2]=c[h>>2]|2;h=c[d>>2]|0;xy(s)|0;s=c[m>>2]|0;c[m>>2]=0;if(s)td[c[r>>2]&255](s);i=b;return h|0}function rD(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;n=i;i=i+112|0;o=n;p=n+40|0;q=n+76|0;r=n+4|0;s=n+88|0;t=n+100|0;u=n+28|0;v=n+64|0;w=n+52|0;x=n+16|0;if(b){b=_D(d,83408)|0;ud[c[(c[b>>2]|0)+44>>2]&127](o,b);y=c[o>>2]|0;a[e>>0]=y;a[e+1>>0]=y>>8;a[e+2>>0]=y>>16;a[e+3>>0]=y>>24;ud[c[(c[b>>2]|0)+32>>2]&127](p,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;Yy(l,0);c[l>>2]=c[p>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Vy(p);ud[c[(c[b>>2]|0)+28>>2]&127](q,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;Yy(k,0);c[k>>2]=c[q>>2];c[k+4>>2]=c[q+4>>2];c[k+8>>2]=c[q+8>>2];c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;Vy(q);c[f>>2]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[g>>2]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[b>>2]|0)+20>>2]&127](r,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Ny(h,0);c[h>>2]=c[r>>2];c[h+4>>2]=c[r+4>>2];c[h+8>>2]=c[r+8>>2];c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Hy(r);ud[c[(c[b>>2]|0)+24>>2]&127](s,b);if(!(a[j>>0]&1))a[j>>0]=0;else c[c[j+8>>2]>>2]=0;c[j+4>>2]=0;Yy(j,0);c[j>>2]=c[s>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Vy(s);z=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=_D(d,83344)|0;ud[c[(c[b>>2]|0)+44>>2]&127](t,b);d=c[t>>2]|0;a[e>>0]=d;a[e+1>>0]=d>>8;a[e+2>>0]=d>>16;a[e+3>>0]=d>>24;ud[c[(c[b>>2]|0)+32>>2]&127](u,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;Yy(l,0);c[l>>2]=c[u>>2];c[l+4>>2]=c[u+4>>2];c[l+8>>2]=c[u+8>>2];c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;Vy(u);ud[c[(c[b>>2]|0)+28>>2]&127](v,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;Yy(k,0);c[k>>2]=c[v>>2];c[k+4>>2]=c[v+4>>2];c[k+8>>2]=c[v+8>>2];c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Vy(v);c[f>>2]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[g>>2]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[b>>2]|0)+20>>2]&127](w,b);if(!(a[h>>0]&1)){a[h+1>>0]=0;a[h>>0]=0}else{a[c[h+8>>2]>>0]=0;c[h+4>>2]=0}Ny(h,0);c[h>>2]=c[w>>2];c[h+4>>2]=c[w+4>>2];c[h+8>>2]=c[w+8>>2];c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;Hy(w);ud[c[(c[b>>2]|0)+24>>2]&127](x,b);if(!(a[j>>0]&1))a[j>>0]=0;else c[c[j+8>>2]>>2]=0;c[j+4>>2]=0;Yy(j,0);c[j>>2]=c[x>>2];c[j+4>>2]=c[x+4>>2];c[j+8>>2]=c[x+8>>2];c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Vy(x);z=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=z;i=n;return}function sD(a){a=a|0;return}function tD(a){a=a|0;Ow(a);return}function uD(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=i;i=i+384|0;k=b;l=b+8|0;m=b+76|0;n=b+36|0;o=b+176|0;p=b+68|0;q=b+276|0;r=b+380|0;s=b+381|0;t=b+40|0;u=b+16|0;v=b+56|0;w=b+52|0;x=b+280|0;y=b+32|0;z=b+28|0;A=b+72|0;c[n>>2]=m;h[k>>3]=j;B=dy(m,100,87032,k)|0;if(B>>>0>99){m=pA()|0;h[l>>3]=j;C=gG(n,m,87032,l)|0;l=c[n>>2]|0;if(!l)Gx();m=py(C)|0;if(!m)Gx();else{D=m;E=l;F=m;G=C}}else{D=0;E=0;F=o;G=B}B=hz(f)|0;c[p>>2]=B;o=_D(p,83696)|0;C=c[n>>2]|0;Ad[c[(c[o>>2]|0)+32>>2]&31](o,C,C+G|0,F)|0;if(!G)H=0;else H=(a[c[n>>2]>>0]|0)==45;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;vD(e,H,p,q,r,s,t,u,v,w);e=c[w>>2]|0;if((G|0)>(e|0)){w=a[v>>0]|0;n=a[u>>0]|0;I=(G-e<<1|1)+e+((w&1)==0?(w&255)>>>1:c[v+4>>2]|0)+((n&1)==0?(n&255)>>>1:c[u+4>>2]|0)|0}else{n=a[v>>0]|0;w=a[u>>0]|0;I=e+2+((n&1)==0?(n&255)>>>1:c[v+4>>2]|0)+((w&1)==0?(w&255)>>>1:c[u+4>>2]|0)|0}if(I>>>0>100){w=py(I)|0;if(!w)Gx();else{J=w;K=w}}else{J=0;K=x}wD(K,y,z,c[f+4>>2]|0,F,F+G|0,o,H,q,a[r>>0]|0,a[s>>0]|0,t,u,v,e);c[A>>2]=c[d>>2];d=c[y>>2]|0;y=c[z>>2]|0;c[k>>2]=c[A>>2];A=Yg(k,K,d,y,f,g)|0;if(!J)L=B;else{qy(J);L=c[p>>2]|0}Hy(v);Hy(u);Hy(t);xy(L)|0;if(D)qy(D);if(E)qy(E);i=b;return A|0}function vD(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;n=i;i=i+112|0;o=n;p=n+16|0;q=n+92|0;r=n+40|0;s=n+80|0;t=n+96|0;u=n+108|0;v=n+56|0;w=n+52|0;x=n+28|0;y=n+4|0;z=n+68|0;if(b){b=_D(e,83280)|0;A=c[b>>2]|0;if(d){ud[c[A+44>>2]&127](o,b);B=c[o>>2]|0;a[f>>0]=B;a[f+1>>0]=B>>8;a[f+2>>0]=B>>16;a[f+3>>0]=B>>24;ud[c[(c[b>>2]|0)+32>>2]&127](p,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Ny(l,0);c[l>>2]=c[p>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Hy(p);C=b}else{ud[c[A+40>>2]&127](q,b);A=c[q>>2]|0;a[f>>0]=A;a[f+1>>0]=A>>8;a[f+2>>0]=A>>16;a[f+3>>0]=A>>24;ud[c[(c[b>>2]|0)+28>>2]&127](r,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Ny(l,0);c[l>>2]=c[r>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Hy(r);C=b}a[g>>0]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[h>>0]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[C>>2]|0)+20>>2]&127](s,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Ny(j,0);c[j>>2]=c[s>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Hy(s);ud[c[(c[C>>2]|0)+24>>2]&127](t,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Ny(k,0);c[k>>2]=c[t>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Hy(t);D=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=_D(e,83216)|0;e=c[b>>2]|0;if(d){ud[c[e+44>>2]&127](u,b);d=c[u>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;ud[c[(c[b>>2]|0)+32>>2]&127](v,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Ny(l,0);c[l>>2]=c[v>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Hy(v);E=b}else{ud[c[e+40>>2]&127](w,b);e=c[w>>2]|0;a[f>>0]=e;a[f+1>>0]=e>>8;a[f+2>>0]=e>>16;a[f+3>>0]=e>>24;ud[c[(c[b>>2]|0)+28>>2]&127](x,b);if(!(a[l>>0]&1)){a[l+1>>0]=0;a[l>>0]=0}else{a[c[l+8>>2]>>0]=0;c[l+4>>2]=0}Ny(l,0);c[l>>2]=c[x>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Hy(x);E=b}a[g>>0]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;a[h>>0]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[E>>2]|0)+20>>2]&127](y,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Ny(j,0);c[j>>2]=c[y>>2];c[j+4>>2]=c[y+4>>2];c[j+8>>2]=c[y+8>>2];c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;Hy(y);ud[c[(c[E>>2]|0)+24>>2]&127](z,b);if(!(a[k>>0]&1)){a[k+1>>0]=0;a[k>>0]=0}else{a[c[k+8>>2]>>0]=0;c[k+4>>2]=0}Ny(k,0);c[k>>2]=c[z>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Hy(z);D=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=D;i=n;return}function wD(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0;c[f>>2]=d;s=q+4|0;t=q+8|0;u=q+1|0;v=p+4|0;w=(g&512|0)==0;x=p+8|0;y=p+1|0;z=j+8|0;A=(r|0)>0;B=o+4|0;C=o+8|0;D=o+1|0;E=r+1|0;F=-2-r-((r|0)<0?~r:-1)|0;G=(r|0)>0;H=h;h=0;while(1){switch(a[l+h>>0]|0){case 2:{I=a[p>>0]|0;J=(I&1)==0;K=J?(I&255)>>>1:c[v>>2]|0;if(w|(K|0)==0)L=H;else{I=J?y:c[x>>2]|0;J=I+K|0;M=c[f>>2]|0;if(!K)N=M;else{K=M;M=I;while(1){a[K>>0]=a[M>>0]|0;M=M+1|0;I=K+1|0;if((M|0)==(J|0)){N=I;break}else K=I}}c[f>>2]=N;L=H}break}case 4:{K=c[f>>2]|0;J=k?H+1|0:H;M=J;I=c[z>>2]|0;a:do if(J>>>0<i>>>0){O=J;while(1){P=a[O>>0]|0;if(P<<24>>24<=-1){Q=O;break a}if(!(b[I+(P<<24>>24<<1)>>1]&2048)){Q=O;break a}P=O+1|0;if(P>>>0<i>>>0)O=P;else{Q=P;break}}}else Q=J;while(0);I=Q;if(A){O=-2-I-~(I>>>0>M>>>0?M:I)|0;I=F>>>0>O>>>0?F:O;if(Q>>>0>J>>>0&G){O=Q;P=r;while(1){O=O+-1|0;R=a[O>>0]|0;S=c[f>>2]|0;c[f>>2]=S+1;a[S>>0]=R;R=(P|0)>1;if(!(O>>>0>J>>>0&R)){T=R;break}else P=P+-1|0}}else T=G;P=E+I|0;O=Q+(I+1)|0;if(T)U=Cd[c[(c[j>>2]|0)+28>>2]&63](j,48)|0;else U=0;M=c[f>>2]|0;c[f>>2]=M+1;if((P|0)>0){R=M;S=P;while(1){a[R>>0]=U;P=c[f>>2]|0;c[f>>2]=P+1;if((S|0)>1){R=P;S=S+-1|0}else{V=P;break}}}else V=M;a[V>>0]=m;W=O}else W=Q;if((W|0)!=(J|0)){S=a[o>>0]|0;R=(S&1)==0;if(!((R?(S&255)>>>1:c[B>>2]|0)|0))X=-1;else X=a[(R?D:c[C>>2]|0)>>0]|0;if((W|0)!=(J|0)){R=W;S=X;I=0;P=0;while(1){if((P|0)==(S|0)){Y=c[f>>2]|0;c[f>>2]=Y+1;a[Y>>0]=n;Y=I+1|0;Z=a[o>>0]|0;_=(Z&1)==0;if(Y>>>0<(_?(Z&255)>>>1:c[B>>2]|0)>>>0){Z=a[(_?D:c[C>>2]|0)+Y>>0]|0;$=Z<<24>>24==127?-1:Z<<24>>24;aa=Y;ba=0}else{$=P;aa=Y;ba=0}}else{$=S;aa=I;ba=P}R=R+-1|0;Y=a[R>>0]|0;Z=c[f>>2]|0;c[f>>2]=Z+1;a[Z>>0]=Y;if((R|0)==(J|0))break;else{S=$;I=aa;P=ba+1|0}}}}else{P=Cd[c[(c[j>>2]|0)+28>>2]&63](j,48)|0;I=c[f>>2]|0;c[f>>2]=I+1;a[I>>0]=P}P=c[f>>2]|0;if((K|0)!=(P|0)?(I=P+-1|0,K>>>0<I>>>0):0){P=K;S=I;do{I=a[P>>0]|0;a[P>>0]=a[S>>0]|0;a[S>>0]=I;P=P+1|0;S=S+-1|0}while(P>>>0<S>>>0);L=J}else L=J;break}case 3:{S=a[q>>0]|0;P=(S&1)==0;if(!((P?(S&255)>>>1:c[s>>2]|0)|0))L=H;else{S=a[(P?u:c[t>>2]|0)>>0]|0;P=c[f>>2]|0;c[f>>2]=P+1;a[P>>0]=S;L=H}break}case 0:{c[e>>2]=c[f>>2];L=H;break}case 1:{c[e>>2]=c[f>>2];S=Cd[c[(c[j>>2]|0)+28>>2]&63](j,32)|0;P=c[f>>2]|0;c[f>>2]=P+1;a[P>>0]=S;L=H;break}default:L=H}h=h+1|0;if((h|0)==4)break;else H=L}L=a[q>>0]|0;q=(L&1)==0;H=q?(L&255)>>>1:c[s>>2]|0;if(H>>>0>1){s=q?u:c[t>>2]|0;t=s+H|0;u=c[f>>2]|0;if((H|0)==1)ca=u;else{H=u;u=s+1|0;while(1){a[H>>0]=a[u>>0]|0;s=H+1|0;u=u+1|0;if((u|0)==(t|0)){ca=s;break}else H=s}}c[f>>2]=ca}ca=g&176;if((ca|0)==32)c[e>>2]=c[f>>2];else if((ca|0)!=16)c[e>>2]=d;return}function xD(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;b=i;i=i+176|0;j=b+20|0;k=b+24|0;l=b+60|0;m=b+64|0;n=b+65|0;o=b;p=b+48|0;q=b+32|0;r=b+12|0;s=b+68|0;t=b+44|0;u=b+28|0;v=b+16|0;w=hz(f)|0;c[k>>2]=w;x=_D(k,83696)|0;y=a[h>>0]|0;z=(y&1)==0;A=h+4|0;if(!((z?(y&255)>>>1:c[A>>2]|0)|0))B=0;else{y=a[(z?h+1|0:c[h+8>>2]|0)>>0]|0;B=y<<24>>24==(Cd[c[(c[x>>2]|0)+28>>2]&63](x,45)|0)<<24>>24}c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;vD(e,B,k,l,m,n,o,p,q,r);e=a[h>>0]|0;y=c[A>>2]|0;A=(e&1)==0?(e&255)>>>1:y;z=c[r>>2]|0;if((A|0)>(z|0)){r=a[q>>0]|0;C=a[p>>0]|0;D=(A-z<<1|1)+z+((r&1)==0?(r&255)>>>1:c[q+4>>2]|0)+((C&1)==0?(C&255)>>>1:c[p+4>>2]|0)|0}else{C=a[q>>0]|0;r=a[p>>0]|0;D=z+2+((C&1)==0?(C&255)>>>1:c[q+4>>2]|0)+((r&1)==0?(r&255)>>>1:c[p+4>>2]|0)|0}if(D>>>0>100){r=py(D)|0;if(!r)Gx();else{E=r;F=r}}else{E=0;F=s}s=(e&1)==0;r=s?h+1|0:c[h+8>>2]|0;wD(F,t,u,c[f+4>>2]|0,r,r+(s?(e&255)>>>1:y)|0,x,B,l,a[m>>0]|0,a[n>>0]|0,o,p,q,z);c[v>>2]=c[d>>2];d=c[t>>2]|0;t=c[u>>2]|0;c[j>>2]=c[v>>2];v=Yg(j,F,d,t,f,g)|0;if(!E)G=w;else{qy(E);G=c[k>>2]|0}Hy(q);Hy(p);Hy(o);xy(G)|0;i=b;return v|0}function yD(a){a=a|0;return}function zD(a){a=a|0;Ow(a);return}function AD(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=i;i=i+992|0;k=b;l=b+8|0;m=b+888|0;n=b+428|0;o=b+432|0;p=b+16|0;q=b+988|0;r=b+880|0;s=b+836|0;t=b+840|0;u=b+852|0;v=b+864|0;w=b+876|0;x=b+24|0;y=b+832|0;z=b+424|0;A=b+884|0;c[n>>2]=m;h[k>>3]=j;B=dy(m,100,87032,k)|0;if(B>>>0>99){m=pA()|0;h[l>>3]=j;C=gG(n,m,87032,l)|0;l=c[n>>2]|0;if(!l)Gx();m=py(C<<2)|0;if(!m)Gx();else{D=m;E=l;F=m;G=C}}else{D=0;E=0;F=o;G=B}B=hz(f)|0;c[p>>2]=B;o=_D(p,83688)|0;C=c[n>>2]|0;Ad[c[(c[o>>2]|0)+48>>2]&31](o,C,C+G|0,F)|0;if(!G)H=0;else H=(a[c[n>>2]>>0]|0)==45;c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;c[u>>2]=0;c[u+4>>2]=0;c[u+8>>2]=0;c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;BD(e,H,p,q,r,s,t,u,v,w);e=c[w>>2]|0;if((G|0)>(e|0)){w=a[v>>0]|0;n=a[u>>0]|0;I=(G-e<<1|1)+e+((w&1)==0?(w&255)>>>1:c[v+4>>2]|0)+((n&1)==0?(n&255)>>>1:c[u+4>>2]|0)|0}else{n=a[v>>0]|0;w=a[u>>0]|0;I=e+2+((n&1)==0?(n&255)>>>1:c[v+4>>2]|0)+((w&1)==0?(w&255)>>>1:c[u+4>>2]|0)|0}if(I>>>0>100){w=py(I<<2)|0;if(!w)Gx();else{J=w;K=w}}else{J=0;K=x}CD(K,y,z,c[f+4>>2]|0,F,F+(G<<2)|0,o,H,q,c[r>>2]|0,c[s>>2]|0,t,u,v,e);c[A>>2]=c[d>>2];d=c[y>>2]|0;y=c[z>>2]|0;c[k>>2]=c[A>>2];A=hG(k,K,d,y,f,g)|0;if(!J)L=B;else{qy(J);L=c[p>>2]|0}Vy(v);Vy(u);Hy(t);xy(L)|0;if(D)qy(D);if(E)qy(E);i=b;return A|0}function BD(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;n=i;i=i+112|0;o=n+12|0;p=n+40|0;q=n+92|0;r=n;s=n+80|0;t=n+96|0;u=n+108|0;v=n+56|0;w=n+52|0;x=n+16|0;y=n+28|0;z=n+68|0;if(b){b=_D(e,83408)|0;A=c[b>>2]|0;if(d){ud[c[A+44>>2]&127](o,b);B=c[o>>2]|0;a[f>>0]=B;a[f+1>>0]=B>>8;a[f+2>>0]=B>>16;a[f+3>>0]=B>>24;ud[c[(c[b>>2]|0)+32>>2]&127](p,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;Yy(l,0);c[l>>2]=c[p>>2];c[l+4>>2]=c[p+4>>2];c[l+8>>2]=c[p+8>>2];c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;Vy(p)}else{ud[c[A+40>>2]&127](q,b);A=c[q>>2]|0;a[f>>0]=A;a[f+1>>0]=A>>8;a[f+2>>0]=A>>16;a[f+3>>0]=A>>24;ud[c[(c[b>>2]|0)+28>>2]&127](r,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;Yy(l,0);c[l>>2]=c[r>>2];c[l+4>>2]=c[r+4>>2];c[l+8>>2]=c[r+8>>2];c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;Vy(r)}c[g>>2]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[h>>2]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[b>>2]|0)+20>>2]&127](s,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Ny(j,0);c[j>>2]=c[s>>2];c[j+4>>2]=c[s+4>>2];c[j+8>>2]=c[s+8>>2];c[s>>2]=0;c[s+4>>2]=0;c[s+8>>2]=0;Hy(s);ud[c[(c[b>>2]|0)+24>>2]&127](t,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;Yy(k,0);c[k>>2]=c[t>>2];c[k+4>>2]=c[t+4>>2];c[k+8>>2]=c[t+8>>2];c[t>>2]=0;c[t+4>>2]=0;c[t+8>>2]=0;Vy(t);C=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}else{b=_D(e,83344)|0;e=c[b>>2]|0;if(d){ud[c[e+44>>2]&127](u,b);d=c[u>>2]|0;a[f>>0]=d;a[f+1>>0]=d>>8;a[f+2>>0]=d>>16;a[f+3>>0]=d>>24;ud[c[(c[b>>2]|0)+32>>2]&127](v,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;Yy(l,0);c[l>>2]=c[v>>2];c[l+4>>2]=c[v+4>>2];c[l+8>>2]=c[v+8>>2];c[v>>2]=0;c[v+4>>2]=0;c[v+8>>2]=0;Vy(v)}else{ud[c[e+40>>2]&127](w,b);e=c[w>>2]|0;a[f>>0]=e;a[f+1>>0]=e>>8;a[f+2>>0]=e>>16;a[f+3>>0]=e>>24;ud[c[(c[b>>2]|0)+28>>2]&127](x,b);if(!(a[l>>0]&1))a[l>>0]=0;else c[c[l+8>>2]>>2]=0;c[l+4>>2]=0;Yy(l,0);c[l>>2]=c[x>>2];c[l+4>>2]=c[x+4>>2];c[l+8>>2]=c[x+8>>2];c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;Vy(x)}c[g>>2]=wd[c[(c[b>>2]|0)+12>>2]&127](b)|0;c[h>>2]=wd[c[(c[b>>2]|0)+16>>2]&127](b)|0;ud[c[(c[b>>2]|0)+20>>2]&127](y,b);if(!(a[j>>0]&1)){a[j+1>>0]=0;a[j>>0]=0}else{a[c[j+8>>2]>>0]=0;c[j+4>>2]=0}Ny(j,0);c[j>>2]=c[y>>2];c[j+4>>2]=c[y+4>>2];c[j+8>>2]=c[y+8>>2];c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;Hy(y);ud[c[(c[b>>2]|0)+24>>2]&127](z,b);if(!(a[k>>0]&1))a[k>>0]=0;else c[c[k+8>>2]>>2]=0;c[k+4>>2]=0;Yy(k,0);c[k>>2]=c[z>>2];c[k+4>>2]=c[z+4>>2];c[k+8>>2]=c[z+8>>2];c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;Vy(z);C=wd[c[(c[b>>2]|0)+36>>2]&127](b)|0}c[m>>2]=C;i=n;return}function CD(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;c[e>>2]=b;r=p+4|0;s=p+8|0;t=o+4|0;u=(f&512|0)==0;v=o+8|0;w=(q|0)>0;x=n+4|0;y=n+8|0;z=n+1|0;A=(q|0)>0;B=g;g=0;while(1){switch(a[k+g>>0]|0){case 2:{C=a[o>>0]|0;D=(C&1)==0;E=D?(C&255)>>>1:c[t>>2]|0;if(u|(E|0)==0)F=B;else{C=D?t:c[v>>2]|0;D=C+(E<<2)|0;G=c[e>>2]|0;if(E){H=G;I=C;while(1){c[H>>2]=c[I>>2];I=I+4|0;if((I|0)==(D|0))break;else H=H+4|0}}c[e>>2]=G+(E<<2);F=B}break}case 0:{c[d>>2]=c[e>>2];F=B;break}case 3:{H=a[p>>0]|0;D=(H&1)==0;if(!((D?(H&255)>>>1:c[r>>2]|0)|0))F=B;else{H=c[(D?r:c[s>>2]|0)>>2]|0;D=c[e>>2]|0;c[e>>2]=D+4;c[D>>2]=H;F=B}break}case 1:{c[d>>2]=c[e>>2];H=Cd[c[(c[i>>2]|0)+44>>2]&63](i,32)|0;D=c[e>>2]|0;c[e>>2]=D+4;c[D>>2]=H;F=B;break}case 4:{H=c[e>>2]|0;D=j?B+4|0:B;a:do if(D>>>0<h>>>0){I=D;while(1){if(!(od[c[(c[i>>2]|0)+12>>2]&127](i,2048,c[I>>2]|0)|0)){J=I;break a}C=I+4|0;if(C>>>0<h>>>0)I=C;else{J=C;break}}}else J=D;while(0);if(w){if(J>>>0>D>>>0&A){E=c[e>>2]|0;G=J;I=q;while(1){C=G+-4|0;K=E+4|0;c[E>>2]=c[C>>2];L=I+-1|0;M=(I|0)>1;if(C>>>0>D>>>0&M){E=K;G=C;I=L}else{N=C;O=L;P=M;Q=K;break}}c[e>>2]=Q;R=P;S=N;T=O}else{R=A;S=J;T=q}if(R)U=Cd[c[(c[i>>2]|0)+44>>2]&63](i,48)|0;else U=0;I=c[e>>2]|0;G=T+((T|0)<0?~T:-1)|0;if((T|0)>0){E=I;K=T;while(1){c[E>>2]=U;if((K|0)>1){E=E+4|0;K=K+-1|0}else break}}c[e>>2]=I+(G+2<<2);c[I+(G+1<<2)>>2]=l;V=S}else V=J;if((V|0)==(D|0)){K=Cd[c[(c[i>>2]|0)+44>>2]&63](i,48)|0;E=c[e>>2]|0;M=E+4|0;c[e>>2]=M;c[E>>2]=K;W=M}else{M=a[n>>0]|0;K=(M&1)==0;E=c[x>>2]|0;if(!((K?(M&255)>>>1:E)|0))X=-1;else X=a[(K?z:c[y>>2]|0)>>0]|0;if((V|0)!=(D|0)){K=V;M=X;L=0;C=0;while(1){Y=c[e>>2]|0;if((C|0)==(M|0)){Z=Y+4|0;c[e>>2]=Z;c[Y>>2]=m;_=L+1|0;$=a[n>>0]|0;aa=($&1)==0;if(_>>>0<(aa?($&255)>>>1:E)>>>0){$=a[(aa?z:c[y>>2]|0)+_>>0]|0;ba=Z;ca=$<<24>>24==127?-1:$<<24>>24;da=_;ea=0}else{ba=Z;ca=C;da=_;ea=0}}else{ba=Y;ca=M;da=L;ea=C}K=K+-4|0;Y=c[K>>2]|0;c[e>>2]=ba+4;c[ba>>2]=Y;if((K|0)==(D|0))break;else{M=ca;L=da;C=ea+1|0}}}W=c[e>>2]|0}if((H|0)!=(W|0)?(C=W+-4|0,H>>>0<C>>>0):0){L=H;M=C;do{C=c[L>>2]|0;c[L>>2]=c[M>>2];c[M>>2]=C;L=L+4|0;M=M+-4|0}while(L>>>0<M>>>0);F=D}else F=D;break}default:F=B}g=g+1|0;if((g|0)==4)break;else B=F}F=a[p>>0]|0;p=(F&1)==0;B=p?(F&255)>>>1:c[r>>2]|0;if(B>>>0>1){F=p?r:c[s>>2]|0;s=F+4|0;r=F+(B<<2)|0;F=c[e>>2]|0;p=r-s|0;if((B|0)!=1){B=F;g=s;while(1){c[B>>2]=c[g>>2];g=g+4|0;if((g|0)==(r|0))break;else B=B+4|0}}c[e>>2]=F+(p>>>2<<2)}p=f&176;if((p|0)==32)c[d>>2]=c[e>>2];else if((p|0)!=16)c[d>>2]=b;return}function DD(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;b=i;i=i+480|0;j=b+4|0;k=b;l=b+468|0;m=b+432|0;n=b+436|0;o=b+444|0;p=b+456|0;q=b+420|0;r=b+416|0;s=b+8|0;t=b+408|0;u=b+440|0;v=b+412|0;w=hz(f)|0;c[k>>2]=w;x=_D(k,83688)|0;y=a[h>>0]|0;z=(y&1)==0;A=h+4|0;if(!((z?(y&255)>>>1:c[A>>2]|0)|0))B=0;else{y=c[(z?A:c[h+8>>2]|0)>>2]|0;B=(y|0)==(Cd[c[(c[x>>2]|0)+44>>2]&63](x,45)|0)}c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;c[q>>2]=0;c[q+4>>2]=0;c[q+8>>2]=0;BD(e,B,k,l,m,n,o,p,q,r);e=a[h>>0]|0;y=c[A>>2]|0;z=(e&1)==0?(e&255)>>>1:y;C=c[r>>2]|0;if((z|0)>(C|0)){r=a[q>>0]|0;D=a[p>>0]|0;E=(z-C<<1|1)+C+((r&1)==0?(r&255)>>>1:c[q+4>>2]|0)+((D&1)==0?(D&255)>>>1:c[p+4>>2]|0)|0}else{D=a[q>>0]|0;r=a[p>>0]|0;E=C+2+((D&1)==0?(D&255)>>>1:c[q+4>>2]|0)+((r&1)==0?(r&255)>>>1:c[p+4>>2]|0)|0}if(E>>>0>100){r=py(E<<2)|0;if(!r)Gx();else{F=r;G=r}}else{F=0;G=s}s=(e&1)==0;r=s?A:c[h+8>>2]|0;CD(G,t,u,c[f+4>>2]|0,r,r+((s?(e&255)>>>1:y)<<2)|0,x,B,l,c[m>>2]|0,c[n>>2]|0,o,p,q,C);c[v>>2]=c[d>>2];d=c[t>>2]|0;t=c[u>>2]|0;c[j>>2]=c[v>>2];v=hG(j,G,d,t,f,g)|0;if(!F)H=w;else{qy(F);H=c[k>>2]|0}Vy(q);Vy(p);Hy(o);xy(H)|0;i=b;return v|0}function ED(a){a=a|0;return}function FD(a){a=a|0;Ow(a);return}function GD(b,d,e){b=b|0;d=d|0;e=e|0;e=Ob(((a[d>>0]&1)==0?d+1|0:c[d+8>>2]|0)|0,1)|0;return e>>>((e|0)!=(-1|0)&1)|0}function HD(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;d=i;i=i+16|0;j=d;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;k=a[h>>0]|0;l=(k&1)==0;m=l?h+1|0:c[h+8>>2]|0;n=l?(k&255)>>>1:c[h+4>>2]|0;h=m+n|0;if((n|0)>0){n=m;do{Oy(j,a[n>>0]|0);n=n+1|0}while(n>>>0<h>>>0)}h=Mc(((e|0)==-1?-1:e<<1)|0,f|0,g|0,((a[j>>0]&1)==0?j+1|0:c[j+8>>2]|0)|0)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;g=yH(h|0)|0;f=h+g|0;if((g|0)>0){g=h;do{Oy(b,a[g>>0]|0);g=g+1|0}while(g>>>0<f>>>0)}Hy(j);i=d;return}function ID(a,b){a=a|0;b=b|0;db(((b|0)==-1?-1:b<<1)|0)|0;return}function JD(a){a=a|0;return}function KD(a){a=a|0;Ow(a);return}function LD(b,d,e){b=b|0;d=d|0;e=e|0;e=Ob(((a[d>>0]&1)==0?d+1|0:c[d+8>>2]|0)|0,1)|0;return e>>>((e|0)!=(-1|0)&1)|0}function MD(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+176|0;j=d+24|0;k=d+40|0;l=d+168|0;m=d+172|0;n=d+8|0;o=d;p=d+32|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;c[o+4>>2]=0;c[o>>2]=84496;q=a[h>>0]|0;r=(q&1)==0;s=h+4|0;t=r?s:c[h+8>>2]|0;h=r?(q&255)>>>1:c[s>>2]|0;s=t+(h<<2)|0;q=k+32|0;if((h|0)>0){h=t;do{c[m>>2]=h;t=zd[c[(c[o>>2]|0)+12>>2]&31](o,j,h,s,m,k,q,l)|0;if(k>>>0<(c[l>>2]|0)>>>0){r=k;do{Oy(n,a[r>>0]|0);r=r+1|0}while(r>>>0<(c[l>>2]|0)>>>0)}h=c[m>>2]|0}while((t|0)!=2&h>>>0<s>>>0)}s=Mc(((e|0)==-1?-1:e<<1)|0,f|0,g|0,((a[n>>0]&1)==0?n+1|0:c[n+8>>2]|0)|0)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[p+4>>2]=0;c[p>>2]=84600;g=yH(s|0)|0;f=s+g|0;e=f;h=k+128|0;if((g|0)>0){g=s;do{c[m>>2]=g;s=zd[c[(c[p>>2]|0)+16>>2]&31](p,j,g,(e-g|0)>32?g+32|0:f,m,k,h,l)|0;if(k>>>0<(c[l>>2]|0)>>>0){q=k;do{Zy(b,c[q>>2]|0);q=q+4|0}while(q>>>0<(c[l>>2]|0)>>>0)}g=c[m>>2]|0}while((s|0)!=2&g>>>0<f>>>0)}Hy(n);i=d;return}function ND(a,b){a=a|0;b=b|0;db(((b|0)==-1?-1:b<<1)|0)|0;return}function OD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;c[a+4>>2]=b+-1;c[a>>2]=83664;b=a+8|0;pG(b,28);Fy(a+144|0,86672,1);d=c[b>>2]|0;b=a+12|0;e=c[b>>2]|0;if((e|0)!=(d|0)){f=e;while(1){e=f+-4|0;if((e|0)==(d|0)){g=e;break}else f=e}c[b>>2]=g}c[21761]=0;c[21760]=82520;qG(a,87040);c[21763]=0;c[21762]=82560;rG(a,87048);pE(87056,0,0,1);sG(a,87056);c[21769]=0;c[21768]=84008;tG(a,87072);c[21771]=0;c[21770]=84136;uG(a,87080);c[21773]=0;c[21772]=83784;c[21774]=pA()|0;vG(a,87088);c[21777]=0;c[21776]=84256;wG(a,87104);c[21779]=0;c[21778]=84376;xG(a,87112);gF(87120,1);yG(a,87120);hF(87144,1);zG(a,87144);c[21795]=0;c[21794]=82600;AG(a,87176);c[21797]=0;c[21796]=82712;BG(a,87184);c[21799]=0;c[21798]=82784;CG(a,87192);c[21801]=0;c[21800]=82848;DG(a,87200);c[21803]=0;c[21802]=83168;EG(a,87208);c[21805]=0;c[21804]=83232;FG(a,87216);c[21807]=0;c[21806]=83296;GG(a,87224);c[21809]=0;c[21808]=83360;HG(a,87232);c[21811]=0;c[21810]=83424;IG(a,87240);c[21813]=0;c[21812]=83464;JG(a,87248);c[21815]=0;c[21814]=83504;KG(a,87256);c[21817]=0;c[21816]=83544;LG(a,87264);c[21819]=0;c[21818]=82912;c[21820]=82960;MG(a,87272);c[21823]=0;c[21822]=83008;c[21824]=83056;NG(a,87288);c[21827]=0;c[21826]=83944;c[21828]=pA()|0;c[21826]=83104;OG(a,87304);c[21831]=0;c[21830]=83944;c[21832]=pA()|0;c[21830]=83136;PG(a,87320);c[21835]=0;c[21834]=83584;QG(a,87336);c[21837]=0;c[21836]=83624;RG(a,87344);return}function PD(){if((a[87352]|0)==0?(Da(87352)|0)!=0:0){TD()|0;c[21842]=87360;$c(87352)}return c[21842]|0}function QD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;wy(b);e=a+8|0;f=c[e>>2]|0;if((c[a+12>>2]|0)-f>>2>>>0>d>>>0)g=f;else{SG(e,d+1|0);g=c[e>>2]|0}f=c[g+(d<<2)>>2]|0;if(!f)h=g;else{xy(f)|0;h=c[e>>2]|0}c[h+(d<<2)>>2]=b;return}function RD(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=83664;b=a+8|0;d=a+12|0;e=c[b>>2]|0;if((c[d>>2]|0)!=(e|0)){f=e;e=0;do{g=c[f+(e<<2)>>2]|0;if(g)xy(g)|0;e=e+1|0;f=c[b>>2]|0}while(e>>>0<(c[d>>2]|0)-f>>2>>>0)}Hy(a+144|0);TG(b);return}function SD(a){a=a|0;RD(a);Ow(a);return}function TD(){OD(87376,1);c[21840]=87376;return 87360}function UD(){var a=0;a=c[(PD()|0)>>2]|0;c[21884]=a;wy(a);return 87536}function VD(){if((a[87544]|0)==0?(Da(87544)|0)!=0:0){UD()|0;c[21888]=87536;$c(87544)}return c[21888]|0}function WD(a){a=a|0;var b=0;b=c[(VD()|0)>>2]|0;c[a>>2]=b;wy(b);return}function XD(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;wy(d);return}function YD(a){a=a|0;xy(c[a>>2]|0)|0;return}function ZD(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;if((c[a>>2]|0)!=-1){c[d>>2]=a;c[d+4>>2]=185;c[d+8>>2]=0;Dy(a,d,186)}i=b;return (c[a+4>>2]|0)+-1|0}function _D(a,b){a=a|0;b=b|0;var d=0;d=c[a>>2]|0;a=ZD(b)|0;return c[(c[d+8>>2]|0)+(a<<2)>>2]|0}function $D(a){a=a|0;Ow(a);return}function aE(a){a=a|0;if(a)td[c[(c[a>>2]|0)+4>>2]&255](a);return}function bE(a){a=a|0;var b=0;b=c[20920]|0;c[20920]=b+1;c[a+4>>2]=b+1;return}function cE(a){a=a|0;Ow(a);return}function dE(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(e>>>0<128)f=(b[(c[(Tb()|0)>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;else f=0;return f|0}function eE(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;var h=0,i=0,j=0;a=(f-d|0)>>>2;if((d|0)!=(f|0)){h=d;i=g;while(1){g=c[h>>2]|0;if(g>>>0<128)j=e[(c[(Tb()|0)>>2]|0)+(g<<1)>>1]|0;else j=0;b[i>>1]=j;h=h+4|0;if((h|0)==(f|0))break;else i=i+2|0}}return d+(a<<2)|0}function fE(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do if((e|0)==(f|0))g=f;else{a=e;while(1){h=c[a>>2]|0;if(h>>>0<128?(b[(c[(Tb()|0)>>2]|0)+(h<<1)>>1]&d)<<16>>16!=0:0){g=a;break a}a=a+4|0;if((a|0)==(f|0)){g=f;break}}}while(0);return g|0}function gE(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do if((e|0)==(f|0))g=f;else{a=e;while(1){h=c[a>>2]|0;if(h>>>0>=128){g=a;break a}if(!((b[(c[(Tb()|0)>>2]|0)+(h<<1)>>1]&d)<<16>>16)){g=a;break a}a=a+4|0;if((a|0)==(f|0)){g=f;break}}}while(0);return g|0}function hE(a,b){a=a|0;b=b|0;var d=0;if(b>>>0<128)d=c[(c[(zb()|0)>>2]|0)+(b<<2)>>2]|0;else d=b;return d|0}function iE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=(d-b|0)>>>2;if((b|0)!=(d|0)){e=b;do{f=c[e>>2]|0;if(f>>>0<128)g=c[(c[(zb()|0)>>2]|0)+(f<<2)>>2]|0;else g=f;c[e>>2]=g;e=e+4|0}while((e|0)!=(d|0))}return b+(a<<2)|0}function jE(a,b){a=a|0;b=b|0;var d=0;if(b>>>0<128)d=c[(c[(fb()|0)>>2]|0)+(b<<2)>>2]|0;else d=b;return d|0}function kE(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;a=(d-b|0)>>>2;if((b|0)!=(d|0)){e=b;do{f=c[e>>2]|0;if(f>>>0<128)g=c[(c[(fb()|0)>>2]|0)+(f<<2)>>2]|0;else g=f;c[e>>2]=g;e=e+4|0}while((e|0)!=(d|0))}return b+(a<<2)|0}function lE(a,b){a=a|0;b=b|0;return b<<24>>24|0}function mE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;if((d|0)!=(e|0)){b=d;d=f;while(1){c[d>>2]=a[b>>0];b=b+1|0;if((b|0)==(e|0))break;else d=d+4|0}}return e|0}function nE(a,b,c){a=a|0;b=b|0;c=c|0;return (b>>>0<128?b&255:c)|0}function oE(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;b=(e-d|0)>>>2;if((d|0)!=(e|0)){h=d;i=g;while(1){g=c[h>>2]|0;a[i>>0]=g>>>0<128?g&255:f;h=h+4|0;if((h|0)==(e|0))break;else i=i+1|0}}return d+(b<<2)|0}function pE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b+4>>2]=f+-1;c[b>>2]=83712;f=b+8|0;c[f>>2]=d;a[b+12>>0]=e&1;if(!d)c[f>>2]=c[(Tb()|0)>>2];return}function qE(b){b=b|0;var d=0;c[b>>2]=83712;d=c[b+8>>2]|0;if((d|0)!=0?(a[b+12>>0]|0)!=0:0)Pw(d);return}function rE(a){a=a|0;qE(a);Ow(a);return}function sE(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24>-1)d=c[(c[(zb()|0)>>2]|0)+((b&255)<<2)>>2]&255;else d=b;return d|0}function tE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((d|0)!=(e|0)){b=d;do{d=a[b>>0]|0;if(d<<24>>24>-1)f=c[(c[(zb()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255;else f=d;a[b>>0]=f;b=b+1|0}while((b|0)!=(e|0))}return e|0}function uE(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24>-1)d=c[(c[(fb()|0)>>2]|0)+(b<<24>>24<<2)>>2]&255;else d=b;return d|0}function vE(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((d|0)!=(e|0)){b=d;do{d=a[b>>0]|0;if(d<<24>>24>-1)f=c[(c[(fb()|0)>>2]|0)+(d<<24>>24<<2)>>2]&255;else f=d;a[b>>0]=f;b=b+1|0}while((b|0)!=(e|0))}return e|0}function wE(a,b){a=a|0;b=b|0;return b|0}function xE(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;if((c|0)!=(d|0)){b=c;c=e;while(1){a[c>>0]=a[b>>0]|0;b=b+1|0;if((b|0)==(d|0))break;else c=c+1|0}}return d|0}function yE(a,b,c){a=a|0;b=b|0;c=c|0;return (b<<24>>24>-1?b:c)|0}function zE(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if((c|0)!=(d|0)){b=c;c=f;while(1){f=a[b>>0]|0;a[c>>0]=f<<24>>24>-1?f:e;b=b+1|0;if((b|0)==(d|0))break;else c=c+1|0}}return d|0}function AE(a){a=a|0;Ow(a);return}function BE(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function CE(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function DE(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function EE(a){a=a|0;return 1}function FE(a){a=a|0;return 1}function GE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return (b>>>0<e>>>0?b:e)|0}function HE(a){a=a|0;return 1}function IE(a){a=a|0;LF(a);Ow(a);return}function JE(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;l=i;i=i+16|0;m=l;n=l+8|0;a:do if((e|0)==(f|0))o=f;else{p=e;while(1){if(!(c[p>>2]|0)){o=p;break a}p=p+4|0;if((p|0)==(f|0)){o=f;break}}}while(0);c[k>>2]=h;c[g>>2]=e;p=j;q=b+8|0;b:do if((h|0)==(j|0)|(e|0)==(f|0)){r=e;s=29}else{b=e;t=h;u=o;while(1){v=d;w=c[v+4>>2]|0;x=m;c[x>>2]=c[v>>2];c[x+4>>2]=w;w=ac(c[q>>2]|0)|0;x=sw(t,g,u-b>>2,p-t|0,d)|0;if(w)ac(w|0)|0;if((x|0)==-1){y=b;z=t;break}else if(!x){A=1;break b}w=(c[k>>2]|0)+x|0;c[k>>2]=w;if((w|0)==(j|0)){s=15;break}if((u|0)==(f|0)){B=c[g>>2]|0;C=w;D=f}else{w=ac(c[q>>2]|0)|0;x=_x(n,0,d)|0;if(w)ac(w|0)|0;if((x|0)==-1){A=2;break b}if(x>>>0>(p-(c[k>>2]|0)|0)>>>0){A=1;break b}if(x){w=x;x=n;while(1){v=a[x>>0]|0;E=c[k>>2]|0;c[k>>2]=E+1;a[E>>0]=v;w=w+-1|0;if(!w)break;else x=x+1|0}}x=(c[g>>2]|0)+4|0;c[g>>2]=x;c:do if((x|0)==(f|0))F=f;else{w=x;while(1){if(!(c[w>>2]|0)){F=w;break c}w=w+4|0;if((w|0)==(f|0)){F=f;break}}}while(0);B=x;C=c[k>>2]|0;D=F}if((C|0)==(j|0)|(B|0)==(f|0)){r=B;s=29;break b}else{b=B;t=C;u=D}}if((s|0)==15){r=c[g>>2]|0;s=29;break}c[k>>2]=z;d:do if((y|0)==(c[g>>2]|0))G=y;else{u=y;t=z;while(1){b=c[u>>2]|0;w=ac(c[q>>2]|0)|0;v=_x(t,b,m)|0;if(w)ac(w|0)|0;if((v|0)==-1){G=u;break d}t=(c[k>>2]|0)+v|0;c[k>>2]=t;v=u+4|0;if((v|0)==(c[g>>2]|0)){G=v;break}else u=v}}while(0);c[g>>2]=G;A=2}while(0);if((s|0)==29)A=(r|0)!=(f|0)&1;i=l;return A|0}function KE(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;l=i;i=i+16|0;m=l;a:do if((e|0)==(f|0))n=f;else{o=e;while(1){if(!(a[o>>0]|0)){n=o;break a}o=o+1|0;if((o|0)==(f|0)){n=f;break}}}while(0);c[k>>2]=h;c[g>>2]=e;o=j;p=b+8|0;b:do if((h|0)==(j|0)|(e|0)==(f|0)){q=e;r=29}else{b=e;s=h;t=n;while(1){u=d;v=c[u+4>>2]|0;w=m;c[w>>2]=c[u>>2];c[w+4>>2]=v;v=t;w=ac(c[p>>2]|0)|0;u=pw(s,g,v-b|0,o-s>>2,d)|0;if(w)ac(w|0)|0;if((u|0)==-1){x=b;y=s;z=v;break}else if(!u){A=2;break b}v=(c[k>>2]|0)+(u<<2)|0;c[k>>2]=v;if((v|0)==(j|0)){r=19;break}u=c[g>>2]|0;if((t|0)==(f|0)){B=u;C=v;D=f}else{w=ac(c[p>>2]|0)|0;E=nw(v,u,1,d)|0;if(w)ac(w|0)|0;if(E){A=2;break b}c[k>>2]=(c[k>>2]|0)+4;E=(c[g>>2]|0)+1|0;c[g>>2]=E;c:do if((E|0)==(f|0))F=f;else{w=E;while(1){if(!(a[w>>0]|0)){F=w;break c}w=w+1|0;if((w|0)==(f|0)){F=f;break}}}while(0);B=E;C=c[k>>2]|0;D=F}if((C|0)==(j|0)|(B|0)==(f|0)){q=B;r=29;break b}else{b=B;s=C;t=D}}if((r|0)==19){q=c[g>>2]|0;r=29;break}c[k>>2]=y;d:do if((x|0)!=(c[g>>2]|0)){t=x;s=y;while(1){b=ac(c[p>>2]|0)|0;w=nw(s,t,z-t|0,m)|0;if(b)ac(b|0)|0;if(!w)G=t+1|0;else if((w|0)==-1){H=t;r=13;break}else if((w|0)==-2){I=t;r=14;break}else G=t+w|0;s=(c[k>>2]|0)+4|0;c[k>>2]=s;if((G|0)==(c[g>>2]|0)){J=G;break d}else t=G}if((r|0)==13){c[g>>2]=H;A=2;break b}else if((r|0)==14){c[g>>2]=I;A=1;break b}}else J=x;while(0);c[g>>2]=J;A=(J|0)!=(f|0)&1}while(0);if((r|0)==29)A=(q|0)!=(f|0)&1;i=l;return A|0}function LE(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h;c[g>>2]=e;e=ac(c[b+8>>2]|0)|0;b=_x(j,0,d)|0;if(e)ac(e|0)|0;if(!((b|0)==0|(b|0)==-1)){e=b+-1|0;if(e>>>0<=(f-(c[g>>2]|0)|0)>>>0)if(!e)k=0;else{f=e;e=j;while(1){j=a[e>>0]|0;b=c[g>>2]|0;c[g>>2]=b+1;a[b>>0]=j;f=f+-1|0;if(!f){k=0;break}else e=e+1|0}}else k=1}else k=2;i=h;return k|0}function ME(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;a=ac(c[b>>2]|0)|0;d=rw(0,0,4)|0;if(a)ac(a|0)|0;if(!d){d=c[b>>2]|0;if(d){b=ac(d|0)|0;if(!b)e=0;else{ac(b|0)|0;e=0}}else e=1}else e=-1;return e|0}function NE(a){a=a|0;return 0}function OE(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;g=e;h=a+8|0;a:do if((d|0)==(e|0)|(f|0)==0)i=0;else{a=d;j=0;k=0;while(1){l=ac(c[h>>2]|0)|0;m=mw(a,g-a|0,b)|0;if(l)ac(l|0)|0;if((m|0)==-2|(m|0)==-1){i=j;break a}else if(!m){n=a+1|0;o=1}else{n=a+m|0;o=m}m=o+j|0;k=k+1|0;if((n|0)==(e|0)|k>>>0>=f>>>0){i=m;break}else{a=n;j=m}}}while(0);return i|0}function PE(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;if(b){a=ac(b|0)|0;if(!a)d=4;else{ac(a|0)|0;d=4}}else d=1;return d|0}function QE(a){a=a|0;Ow(a);return}function RE(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=VG(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=c[a>>2];c[j>>2]=c[k>>2];i=b;return l|0}function SE(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=WG(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=c[a>>2];c[j>>2]=c[k>>2];i=b;return l|0}function TE(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function UE(a){a=a|0;return 0}function VE(a){a=a|0;return 0}function WE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return XG(c,d,e,1114111,0)|0}function XE(a){a=a|0;return 4}function YE(a){a=a|0;Ow(a);return}function ZE(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=YG(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=c[a>>2];c[j>>2]=c[k>>2];i=b;return l|0}function _E(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b+4|0;k=b;c[a>>2]=d;c[k>>2]=g;l=ZG(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=c[a>>2];c[j>>2]=c[k>>2];i=b;return l|0}function $E(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function aF(a){a=a|0;return 0}function bF(a){a=a|0;return 0}function cF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return _G(c,d,e,1114111,0)|0}function dF(a){a=a|0;return 4}function eF(a){a=a|0;Ow(a);return}function fF(a){a=a|0;Ow(a);return}function gF(b,d){b=b|0;d=d|0;c[b+4>>2]=d+-1;c[b>>2]=83864;a[b+8>>0]=46;a[b+9>>0]=44;d=b+12|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;return}function hF(a,b){a=a|0;b=b|0;c[a+4>>2]=b+-1;c[a>>2]=83904;c[a+8>>2]=46;c[a+12>>2]=44;b=a+16|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;return}function iF(a){a=a|0;c[a>>2]=83864;Hy(a+12|0);return}function jF(a){a=a|0;iF(a);Ow(a);return}function kF(a){a=a|0;c[a>>2]=83904;Hy(a+16|0);return}function lF(a){a=a|0;kF(a);Ow(a);return}function mF(b){b=b|0;return a[b+8>>0]|0}function nF(a){a=a|0;return c[a+8>>2]|0}function oF(b){b=b|0;return a[b+9>>0]|0}function pF(a){a=a|0;return c[a+12>>2]|0}function qF(a,b){a=a|0;b=b|0;Ey(a,b+12|0);return}function rF(a,b){a=a|0;b=b|0;Ey(a,b+16|0);return}function sF(a,b){a=a|0;b=b|0;Fy(a,87560,4);return}function tF(a,b){a=a|0;b=b|0;Ty(a,87568,Dw(87568)|0);return}function uF(a,b){a=a|0;b=b|0;Fy(a,87592,5);return}function vF(a,b){a=a|0;b=b|0;Ty(a,87600,Dw(87600)|0);return}function wF(a){a=a|0;var b=0,d=0;b=c[a+4>>2]&74;if(!b)d=0;else if((b|0)==8)d=16;else if((b|0)==64)d=8;else d=10;return d|0}function xF(b){b=b|0;if((a[87624]|0)==0?(Da(87624)|0)!=0:0){if((a[87632]|0)==0?(Da(87632)|0)!=0:0){b=87640;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=b+12|0}while((b|0)!=87808);bb(187,0,n|0)|0;$c(87632)}Jy(87640,87808)|0;Jy(87652,87816)|0;Jy(87664,87824)|0;Jy(87676,87832)|0;Jy(87688,87848)|0;Jy(87700,87864)|0;Jy(87712,87872)|0;Jy(87724,87888)|0;Jy(87736,87896)|0;Jy(87748,87904)|0;Jy(87760,87912)|0;Jy(87772,87920)|0;Jy(87784,87928)|0;Jy(87796,87936)|0;c[21986]=87640;$c(87624)}return c[21986]|0}function yF(b){b=b|0;if((a[87952]|0)==0?(Da(87952)|0)!=0:0){if((a[87960]|0)==0?(Da(87960)|0)!=0:0){b=87968;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=b+12|0}while((b|0)!=88136);bb(188,0,n|0)|0;$c(87960)}Wy(87968,88136)|0;Wy(87980,88168)|0;Wy(87992,88200)|0;Wy(88004,88232)|0;Wy(88016,88272)|0;Wy(88028,88312)|0;Wy(88040,88344)|0;Wy(88052,88384)|0;Wy(88064,88400)|0;Wy(88076,88416)|0;Wy(88088,88432)|0;Wy(88100,88448)|0;Wy(88112,88464)|0;Wy(88124,88480)|0;c[22124]=87968;$c(87952)}return c[22124]|0}function zF(b){b=b|0;if((a[88504]|0)==0?(Da(88504)|0)!=0:0){if((a[88512]|0)==0?(Da(88512)|0)!=0:0){b=88520;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=b+12|0}while((b|0)!=88808);bb(189,0,n|0)|0;$c(88512)}Jy(88520,88808)|0;Jy(88532,88816)|0;Jy(88544,88832)|0;Jy(88556,88840)|0;Jy(88568,88848)|0;Jy(88580,88856)|0;Jy(88592,88864)|0;Jy(88604,88872)|0;Jy(88616,88880)|0;Jy(88628,88896)|0;Jy(88640,88904)|0;Jy(88652,88920)|0;Jy(88664,88936)|0;Jy(88676,88944)|0;Jy(88688,88952)|0;Jy(88700,88960)|0;Jy(88712,88848)|0;Jy(88724,88968)|0;Jy(88736,88976)|0;Jy(88748,88984)|0;Jy(88760,88992)|0;Jy(88772,89e3)|0;Jy(88784,89008)|0;Jy(88796,89016)|0;c[22256]=88520;$c(88504)}return c[22256]|0}function AF(b){b=b|0;if((a[89032]|0)==0?(Da(89032)|0)!=0:0){if((a[89040]|0)==0?(Da(89040)|0)!=0:0){b=89048;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=b+12|0}while((b|0)!=89336);bb(190,0,n|0)|0;$c(89040)}Wy(89048,89336)|0;Wy(89060,89368)|0;Wy(89072,89408)|0;Wy(89084,89432)|0;Wy(89096,89456)|0;Wy(89108,89472)|0;Wy(89120,89496)|0;Wy(89132,89520)|0;Wy(89144,89552)|0;Wy(89156,89592)|0;Wy(89168,89624)|0;Wy(89180,89664)|0;Wy(89192,89704)|0;Wy(89204,89720)|0;Wy(89216,89736)|0;Wy(89228,89752)|0;Wy(89240,89456)|0;Wy(89252,89768)|0;Wy(89264,89784)|0;Wy(89276,89800)|0;Wy(89288,89816)|0;Wy(89300,89832)|0;Wy(89312,89848)|0;Wy(89324,89864)|0;c[22470]=89048;$c(89032)}return c[22470]|0}function BF(b){b=b|0;if((a[89888]|0)==0?(Da(89888)|0)!=0:0){if((a[89896]|0)==0?(Da(89896)|0)!=0:0){b=89904;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=b+12|0}while((b|0)!=90192);bb(191,0,n|0)|0;$c(89896)}Jy(89904,90192)|0;Jy(89916,90200)|0;c[22552]=89904;$c(89888)}return c[22552]|0}function CF(b){b=b|0;if((a[90216]|0)==0?(Da(90216)|0)!=0:0){if((a[90224]|0)==0?(Da(90224)|0)!=0:0){b=90232;do{c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;b=b+12|0}while((b|0)!=90520);bb(192,0,n|0)|0;$c(90224)}Wy(90232,90520)|0;Wy(90244,90536)|0;c[22638]=90232;$c(90216)}return c[22638]|0}function DF(b){b=b|0;if((a[90560]|0)==0?(Da(90560)|0)!=0:0){Fy(90568,90584,8);bb(193,90568,n|0)|0;$c(90560)}return 90568}function EF(b){b=b|0;if((a[90600]|0)==0?(Da(90600)|0)!=0:0){Ty(90648,90608,Dw(90608)|0);bb(194,90648,n|0)|0;$c(90600)}return 90648}function FF(b){b=b|0;if((a[90664]|0)==0?(Da(90664)|0)!=0:0){Fy(90672,90688,8);bb(193,90672,n|0)|0;$c(90664)}return 90672}function GF(b){b=b|0;if((a[90704]|0)==0?(Da(90704)|0)!=0:0){Ty(90752,90712,Dw(90712)|0);bb(194,90752,n|0)|0;$c(90704)}return 90752}function HF(b){b=b|0;if((a[90768]|0)==0?(Da(90768)|0)!=0:0){Fy(90776,90792,20);bb(193,90776,n|0)|0;$c(90768)}return 90776}function IF(b){b=b|0;if((a[90816]|0)==0?(Da(90816)|0)!=0:0){Ty(90912,90824,Dw(90824)|0);bb(194,90912,n|0)|0;$c(90816)}return 90912}function JF(b){b=b|0;if((a[90928]|0)==0?(Da(90928)|0)!=0:0){Fy(90936,90952,11);bb(193,90936,n|0)|0;$c(90928)}return 90936}function KF(b){b=b|0;if((a[90968]|0)==0?(Da(90968)|0)!=0:0){Ty(91024,90976,Dw(90976)|0);bb(194,91024,n|0)|0;$c(90968)}return 91024}function LF(a){a=a|0;var b=0;c[a>>2]=83784;b=a+8|0;a=c[b>>2]|0;if((a|0)!=(pA()|0))tb(c[b>>2]|0);return}function MF(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;l=i;i=i+112|0;m=l;n=(g-f|0)/12|0;if(n>>>0>100){o=py(n)|0;if(!o)Gx();else{p=o;q=o}}else{p=0;q=m}if((f|0)==(g|0)){r=0;s=n}else{m=f;o=0;t=n;n=q;while(1){u=a[m>>0]|0;if(!(u&1))v=(u&255)>>>1;else v=c[m+4>>2]|0;if(!v){a[n>>0]=2;w=o+1|0;x=t+-1|0}else{a[n>>0]=1;w=o;x=t}m=m+12|0;if((m|0)==(g|0)){r=w;s=x;break}else{o=w;t=x;n=n+1|0}}}n=(f|0)==(g|0);x=(f|0)==(g|0);t=0;w=r;r=s;a:while(1){s=c[b>>2]|0;do if(s)if((c[s+12>>2]|0)==(c[s+16>>2]|0))if((wd[c[(c[s>>2]|0)+36>>2]&127](s)|0)==-1){c[b>>2]=0;y=0;break}else{y=c[b>>2]|0;break}else y=s;else y=0;while(0);s=(y|0)==0;o=c[e>>2]|0;if(o)if((c[o+12>>2]|0)==(c[o+16>>2]|0)?(wd[c[(c[o>>2]|0)+36>>2]&127](o)|0)==-1:0){c[e>>2]=0;z=0}else z=o;else z=0;o=(z|0)==0;m=c[b>>2]|0;if(!((r|0)!=0&(s^o))){A=o;B=m;C=z;break}o=c[m+12>>2]|0;if((o|0)==(c[m+16>>2]|0))D=wd[c[(c[m>>2]|0)+36>>2]&127](m)|0;else D=d[o>>0]|0;o=D&255;if(k)E=o;else E=Cd[c[(c[h>>2]|0)+12>>2]&63](h,o)|0;o=t+1|0;if(n){F=0;G=w;H=r}else{m=0;s=f;v=w;u=r;I=q;while(1){do if((a[I>>0]|0)==1){if(!(a[s>>0]&1))J=s+1|0;else J=c[s+8>>2]|0;K=a[J+t>>0]|0;if(k)L=K;else L=Cd[c[(c[h>>2]|0)+12>>2]&63](h,K)|0;if(E<<24>>24!=L<<24>>24){a[I>>0]=0;M=m;N=v;O=u+-1|0;break}K=a[s>>0]|0;if(!(K&1))P=(K&255)>>>1;else P=c[s+4>>2]|0;if((P|0)==(o|0)){a[I>>0]=2;M=1;N=v+1|0;O=u+-1|0}else{M=1;N=v;O=u}}else{M=m;N=v;O=u}while(0);s=s+12|0;if((s|0)==(g|0)){F=M;G=N;H=O;break}else{m=M;v=N;u=O;I=I+1|0}}}if(!F){t=o;w=G;r=H;continue}I=c[b>>2]|0;u=I+12|0;v=c[u>>2]|0;if((v|0)==(c[I+16>>2]|0))wd[c[(c[I>>2]|0)+40>>2]&127](I)|0;else c[u>>2]=v+1;if((G+H|0)>>>0<2|x){t=o;w=G;r=H;continue}else{Q=f;R=G;S=q}while(1){if((a[S>>0]|0)==2){v=a[Q>>0]|0;if(!(v&1))T=(v&255)>>>1;else T=c[Q+4>>2]|0;if((T|0)!=(o|0)){a[S>>0]=0;U=R+-1|0}else U=R}else U=R;v=Q+12|0;if((v|0)==(g|0)){t=o;w=U;r=H;continue a}else{Q=v;R=U;S=S+1|0}}}do if(B)if((c[B+12>>2]|0)==(c[B+16>>2]|0))if((wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1){c[b>>2]=0;V=0;break}else{V=c[b>>2]|0;break}else V=B;else V=0;while(0);B=(V|0)==0;do if(!A){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[e>>2]=0;W=65;break}if(!B)W=66}else W=65;while(0);if((W|0)==65?B:0)W=66;if((W|0)==66)c[j>>2]=c[j>>2]|2;b:do if((f|0)==(g|0))W=70;else{B=f;e=q;while(1){if((a[e>>0]|0)==2){X=B;break b}B=B+12|0;if((B|0)==(g|0)){W=70;break}else e=e+1|0}}while(0);if((W|0)==70){c[j>>2]=c[j>>2]|4;X=g}qy(p);i=l;return X|0}function NF(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=i;i=i+224|0;k=b+198|0;l=b+196|0;m=b+16|0;n=b+4|0;o=b+192|0;p=b+32|0;q=b;r=b+28|0;s=wF(g)|0;EA(m,g,k,l);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;if(!(a[n>>0]&1))t=10;else t=(c[n>>2]&-2)+-1|0;Ly(n,t,0);t=n+8|0;g=n+1|0;u=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=u;c[q>>2]=p;c[r>>2]=0;v=n+4|0;w=a[l>>0]|0;l=c[e>>2]|0;x=u;a:while(1){if(l)if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(wd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[e>>2]=0;y=0}else y=l;else y=0;u=(y|0)==0;z=c[f>>2]|0;do if(z){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(u){A=z;break}else{B=y;C=z;D=x;break a}if((wd[c[(c[z>>2]|0)+36>>2]&127](z)|0)!=-1)if(u){A=z;break}else{B=y;C=z;D=x;break a}else{c[f>>2]=0;E=13;break}}else E=13;while(0);if((E|0)==13){E=0;if(u){B=y;C=0;D=x;break}else A=0}z=a[n>>0]|0;F=(z&1)==0?(z&255)>>>1:c[v>>2]|0;if((c[o>>2]|0)==(x+F|0)){Ly(n,F<<1,0);if(!(a[n>>0]&1))G=10;else G=(c[n>>2]&-2)+-1|0;Ly(n,G,0);z=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=z+F;H=z}else H=x;z=y+12|0;F=c[z>>2]|0;I=y+16|0;if((F|0)==(c[I>>2]|0))J=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else J=d[F>>0]|0;if(oA(J&255,s,H,o,r,w,m,p,q,k)|0){B=y;C=A;D=H;break}F=c[z>>2]|0;if((F|0)==(c[I>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;l=y;x=H;continue}else{c[z>>2]=F+1;l=y;x=H;continue}}H=a[m>>0]|0;x=c[q>>2]|0;if((((H&1)==0?(H&255)>>>1:c[m+4>>2]|0)|0)!=0?(x-p|0)<160:0){H=c[r>>2]|0;r=x+4|0;c[q>>2]=r;c[x>>2]=H;K=r}else K=x;c[j>>2]=tH(D,c[o>>2]|0,h,s)|0;lD(m,p,K,h);if(B)if((c[B+12>>2]|0)==(c[B+16>>2]|0)?(wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1:0){c[e>>2]=0;L=0}else L=B;else L=0;B=(L|0)==0;do if(C){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;E=38;break}if(!B)E=39}else E=38;while(0);if((E|0)==38?B:0)E=39;if((E|0)==39)c[h>>2]=c[h>>2]|2;h=c[e>>2]|0;Hy(n);Hy(m);i=b;return h|0}\nfunction Ri(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e;g=b+4|0;h=c[b>>2]|0;j=(((c[g>>2]|0)-h|0)/12|0)+1|0;if(j>>>0>357913941)Kw(b);k=h;h=((c[b+8>>2]|0)-k|0)/12|0;if(h>>>0<178956970){l=h<<1;m=l>>>0<j>>>0?j:l}else m=357913941;l=((c[g>>2]|0)-k|0)/12|0;c[f+12>>2]=0;c[f+16>>2]=b+8;if(!m)n=0;else n=Mw(m*12|0)|0;c[f>>2]=n;k=n+(l*12|0)|0;g=f+8|0;c[g>>2]=k;j=f+4|0;c[j>>2]=k;c[f+12>>2]=n+(m*12|0);c[k>>2]=0;m=n+(l*12|0)+4|0;c[m>>2]=0;c[n+(l*12|0)+8>>2]=0;h=d+4|0;o=c[h>>2]|0;p=c[d>>2]|0;q=o-p|0;if((o|0)!=(p|0)){if((q|0)<0)Kw(k);p=Mw(q)|0;c[m>>2]=p;c[k>>2]=p;c[n+(l*12|0)+8>>2]=p+q;q=c[d>>2]|0;d=c[h>>2]|0;if((q|0)!=(d|0)){h=q;q=p;do{a[q>>0]=a[h>>0]|0;q=(c[m>>2]|0)+1|0;c[m>>2]=q;h=h+1|0}while((h|0)!=(d|0))}}c[g>>2]=n+((l+1|0)*12|0);Si(b,f);b=c[j>>2]|0;j=c[g>>2]|0;if((j|0)!=(b|0)){l=~(((j+-12-b|0)>>>0)/12|0);n=j;do{d=n;n=n+-12|0;h=c[n>>2]|0;if(h){q=d+-8|0;if((c[q>>2]|0)!=(h|0))c[q>>2]=h;Ow(h)}}while((n|0)!=(b|0));c[g>>2]=j+(l*12|0)}l=c[f>>2]|0;if(!l){i=e;return}Ow(l);i=e;return}function Si(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=c[b>>2]|0;f=b+4|0;g=c[f>>2]|0;h=d+4|0;do if((g|0)!=(e|0)){i=g;j=c[h>>2]|0;while(1){k=j+-12|0;c[k>>2]=0;l=j+-8|0;c[l>>2]=0;c[j+-4>>2]=0;m=i+-8|0;i=i+-12|0;n=c[m>>2]|0;o=c[i>>2]|0;p=n-o|0;if((n|0)!=(o|0)){if((p|0)<0){q=6;break}o=Mw(p)|0;c[l>>2]=o;c[k>>2]=o;c[j+-4>>2]=o+p;p=c[i>>2]|0;n=c[m>>2]|0;if((p|0)!=(n|0)){m=p;p=o;do{a[p>>0]=a[m>>0]|0;p=(c[l>>2]|0)+1|0;c[l>>2]=p;m=m+1|0}while((m|0)!=(n|0))}}n=(c[h>>2]|0)+-12|0;c[h>>2]=n;if((i|0)==(e|0)){r=n;q=10;break}else j=n}if((q|0)==6)Kw(k);else if((q|0)==10){s=h;t=b;u=r;v=c[b>>2]|0;break}}else{s=h;t=b;u=c[h>>2]|0;v=e}while(0);c[t>>2]=u;c[s>>2]=v;v=d+8|0;u=c[f>>2]|0;c[f>>2]=c[v>>2];c[v>>2]=u;u=b+8|0;b=d+12|0;v=c[u>>2]|0;c[u>>2]=c[b>>2];c[b>>2]=v;c[d>>2]=c[s>>2];return}function Ti(a){a=a|0;var b=0,d=0;c[a>>2]=11920;b=c[a+28>>2]|0;if(b){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+16>>2]|0;if(b){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+4>>2]|0;if(!b)return;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);return}function Ui(a){a=a|0;var b=0,d=0;c[a>>2]=11920;b=c[a+28>>2]|0;if(b){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+16>>2]|0;if(b){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+4>>2]|0;if(!b){Ow(a);return}d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);Ow(a);return}function Vi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+28|0;xd[c[(c[a>>2]|0)+16>>2]&63](a,e,12024);f=Gm(b,e)|0;e=a+16|0;xd[c[(c[a>>2]|0)+16>>2]&63](a,e,12040);g=(Jm(b,e)|0)+f|0;f=a+4|0;xd[c[(c[a>>2]|0)+16>>2]&63](a,f,12064);a=Gm(b,f)|0;f=g+a+(Im(b,0,a)|0)|0;a=f+(Cm(b,2)|0)|0;return (Lm(b,a)|0)+d+a|0}function Wi(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+96|0;f=e+24|0;g=e+48|0;h=e+60|0;j=e+72|0;k=e+12|0;l=e;m=e+36|0;vm(d)|0;if((nm(d)|0)!=2){n=Yb(8)|0;Fy(g,12088,28);c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;o=a[g>>0]|0;p=(o&1)==0;q=p?(o&255)>>>1:c[g+4>>2]|0;Sy(f,p?g+1|0:c[g+8>>2]|0,q,q+75|0);Py(f,12120,75)|0;$i(n,f);dd(n|0,296,39)}if(!(qm(d,0)|0)){n=Yb(8)|0;Fy(k,12088,28);c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;f=a[k>>0]|0;q=(f&1)==0;g=q?(f&255)>>>1:c[k+4>>2]|0;Sy(j,q?k+1|0:c[k+8>>2]|0,g,g+77|0);Py(j,12200,77)|0;$i(n,j);dd(n|0,296,39)}n=b+4|0;rm(h,d);if((n|0)!=(h|0))ki(n,c[h>>2]|0,c[h+4>>2]|0);n=c[h>>2]|0;if(n){j=h+4|0;if((c[j>>2]|0)!=(n|0))c[j>>2]=n;Ow(n)}n=b+16|0;tm(l,d);if((n|0)!=(l|0))ki(n,c[l>>2]|0,c[l+4>>2]|0);n=c[l>>2]|0;if(n){j=l+4|0;if((c[j>>2]|0)!=(n|0))c[j>>2]=n;Ow(n)}n=b+28|0;rm(m,d);if((n|0)!=(m|0))ki(n,c[m>>2]|0,c[m+4>>2]|0);n=c[m>>2]|0;if(!n){i=e;return}d=m+4|0;if((c[d>>2]|0)!=(n|0))c[d>>2]=n;Ow(n);i=e;return}function Xi(a){a=a|0;var b=0,d=0;c[a>>2]=12288;b=c[a+28>>2]|0;if(b){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+16>>2]|0;if(b){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+4>>2]|0;if(!b)return;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);return}function Yi(a){a=a|0;var b=0,d=0;c[a>>2]=12288;b=c[a+28>>2]|0;if(b){d=a+32|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+16>>2]|0;if(b){d=a+20|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+4>>2]|0;if(!b){Ow(a);return}d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);Ow(a);return}function Zi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+28|0;xd[c[(c[a>>2]|0)+16>>2]&63](a,e,0);f=Gm(b,e)|0;e=a+16|0;xd[c[(c[a>>2]|0)+16>>2]&63](a,e,0);g=(Jm(b,e)|0)+f|0;f=a+4|0;if((c[f>>2]|0)==(c[a+8>>2]|0))h=g;else{a=Gm(b,f)|0;h=a+g+(Im(b,0,a)|0)|0}a=(Cm(b,0)|0)+h|0;return (Lm(b,a)|0)+d+a|0}function _i(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+64|0;f=e+48|0;g=e+36|0;h=e+24|0;j=e+12|0;k=e;vm(d)|0;if(nm(d)|0){l=Yb(8)|0;Fy(g,12392,28);c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;m=a[g>>0]|0;n=(m&1)==0;o=n?(m&255)>>>1:c[g+4>>2]|0;Sy(f,n?g+1|0:c[g+8>>2]|0,o,o+81|0);Py(f,12424,81)|0;$i(l,f);dd(l|0,296,39)}if(qm(d,0)|0){l=b+4|0;tm(h,d);if((l|0)!=(h|0))ki(l,c[h>>2]|0,c[h+4>>2]|0);l=c[h>>2]|0;if(l){f=h+4|0;if((c[f>>2]|0)!=(l|0))c[f>>2]=l;Ow(l)}}l=b+16|0;tm(j,d);if((l|0)!=(j|0))ki(l,c[j>>2]|0,c[j+4>>2]|0);l=c[j>>2]|0;if(l){f=j+4|0;if((c[f>>2]|0)!=(l|0))c[f>>2]=l;Ow(l)}l=b+28|0;rm(k,d);if((l|0)!=(k|0))ki(l,c[k>>2]|0,c[k+4>>2]|0);l=c[k>>2]|0;if(!l){i=e;return}d=k+4|0;if((c[d>>2]|0)!=(l|0))c[d>>2]=l;Ow(l);i=e;return}function $i(a,b){a=a|0;b=b|0;Ay(a,b);c[a>>2]=12520;return}function aj(a){a=a|0;Yw(a);Ow(a);return}function bj(a){a=a|0;c[a>>2]=12544;ii(a+28|0,c[a+32>>2]|0);ii(a+16|0,c[a+20>>2]|0);qj(a+4|0,c[a+8>>2]|0);return}function cj(a){a=a|0;c[a>>2]=12544;ii(a+28|0,c[a+32>>2]|0);ii(a+16|0,c[a+20>>2]|0);qj(a+4|0,c[a+8>>2]|0);Ow(a);return}function dj(a){a=a|0;var b=0;if(c[a+12>>2]|0){b=0;return b|0}if(c[a+24>>2]|0){b=0;return b|0}b=(c[a+36>>2]|0)==0;return b|0}function ej(a,b,d){a=a|0;b=b|0;d=d|0;c[(rj(a+4|0,b)|0)>>2]=d;return}function fj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=i;i=i+64|0;f=e+48|0;g=e+36|0;h=e+24|0;j=e+12|0;k=e;l=b+8|0;b=c[l>>2]|0;a:do if(b){m=c[d>>2]|0;n=c[d+4>>2]|0;b:do if((m|0)==(n|0)){o=b;while(1){p=c[o>>2]|0;if(!p){q=o;break}else o=p}}else{o=l;p=b;while(1){r=p;c:while(1){s=c[r+20>>2]|0;t=c[r+16>>2]|0;u=m;while(1){if((t|0)==(s|0))break;v=a[t>>0]|0;w=a[u>>0]|0;if((v&255)<(w&255))break;if((w&255)<(v&255)){x=r;break c}u=u+1|0;if((u|0)==(n|0)){x=r;break c}else t=t+1|0}r=c[r+4>>2]|0;if(!r){q=o;break b}}p=c[x>>2]|0;if(!p){q=x;break}else o=x}}while(0);if((q|0)!=(l|0)){o=c[q+16>>2]|0;p=c[q+20>>2]|0;if((o|0)==(p|0)){y=q+28|0;z=c[y>>2]|0;i=e;return z|0}else{A=m;B=o}while(1){if((A|0)==(n|0))break a;o=a[A>>0]|0;r=a[B>>0]|0;if((o&255)<(r&255))break a;if((r&255)<(o&255)){C=18;break}B=B+1|0;if((B|0)==(p|0)){C=18;break}else A=A+1|0}if((C|0)==18){y=q+28|0;z=c[y>>2]|0;i=e;return z|0}}}while(0);z=Yb(8)|0;Fy(j,12624,18);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;e=a[j>>0]|0;y=(e&1)==0;q=y?(e&255)>>>1:c[j+4>>2]|0;Sy(h,y?j+1|0:c[j+8>>2]|0,q,q+5|0);Py(h,12648,5)|0;q=c[d>>2]|0;Fy(k,q,(c[d+4>>2]|0)-q|0);oi(g,h,k);c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;k=a[g>>0]|0;h=(k&1)==0;q=h?(k&255)>>>1:c[g+4>>2]|0;Sy(f,h?g+1|0:c[g+8>>2]|0,q,q+15|0);Py(f,12656,15)|0;$i(z,f);dd(z|0,296,39);return 0}function gj(a,b){a=a|0;b=b|0;sj(a+4|0,b)|0;return}function hj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=ji(a+16|0,b)|0;if((e|0)==(d|0))return;ki(e,c[d>>2]|0,c[d+4>>2]|0);return}function ij(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+64|0;g=f+48|0;h=f+36|0;j=f+24|0;k=f+12|0;l=f;m=d+20|0;d=c[m>>2]|0;a:do if(d){n=c[e>>2]|0;o=c[e+4>>2]|0;p=(n|0)==(o|0);q=m;r=d;b:while(1){s=r;c:while(1){if(p){t=s;break}u=c[s+20>>2]|0;v=c[s+16>>2]|0;w=n;while(1){if((v|0)==(u|0))break;x=a[v>>0]|0;y=a[w>>0]|0;if((x&255)<(y&255))break;if((y&255)<(x&255)){t=s;break c}w=w+1|0;if((w|0)==(o|0)){t=s;break c}else v=v+1|0}s=c[s+4>>2]|0;if(!s){z=q;break b}}r=c[t>>2]|0;if(!r){z=t;break}else q=t}if((z|0)!=(m|0)){q=c[z+16>>2]|0;r=c[z+20>>2]|0;d:do if((q|0)!=(r|0)){p=n;s=q;while(1){if((p|0)==(o|0))break a;v=a[p>>0]|0;w=a[s>>0]|0;if((v&255)<(w&255))break a;if((w&255)<(v&255))break d;s=s+1|0;if((s|0)==(r|0))break;else p=p+1|0}}while(0);c[b>>2]=0;r=b+4|0;c[r>>2]=0;c[b+8>>2]=0;o=z+32|0;q=c[o>>2]|0;n=z+28|0;p=c[n>>2]|0;s=q-p|0;if((q|0)==(p|0)){i=f;return}if((s|0)<0)Kw(b);p=Mw(s)|0;c[r>>2]=p;c[b>>2]=p;c[b+8>>2]=p+s;s=c[n>>2]|0;n=c[o>>2]|0;if((s|0)==(n|0)){i=f;return}else{A=s;B=p}do{a[B>>0]=a[A>>0]|0;B=(c[r>>2]|0)+1|0;c[r>>2]=B;A=A+1|0}while((A|0)!=(n|0));i=f;return}}while(0);f=Yb(8)|0;Fy(k,12624,18);c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;A=a[k>>0]|0;B=(A&1)==0;b=B?(A&255)>>>1:c[k+4>>2]|0;Sy(j,B?k+1|0:c[k+8>>2]|0,b,b+5|0);Py(j,12648,5)|0;b=c[e>>2]|0;Fy(l,b,(c[e+4>>2]|0)-b|0);oi(h,j,l);c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;l=a[h>>0]|0;j=(l&1)==0;b=j?(l&255)>>>1:c[h+4>>2]|0;Sy(g,j?h+1|0:c[h+8>>2]|0,b,b+15|0);Py(g,12656,15)|0;$i(f,g);dd(f|0,296,39)}function jj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+16|0;f=e+4|0;g=e;h=b+16|0;j=b+20|0;b=c[j>>2]|0;if(!b){i=e;return}k=c[d>>2]|0;l=c[d+4>>2]|0;d=(k|0)==(l|0);m=j;n=b;a:while(1){b=n;b:while(1){if(d){o=b;break}p=c[b+20>>2]|0;q=c[b+16>>2]|0;r=k;while(1){if((q|0)==(p|0))break;s=a[q>>0]|0;t=a[r>>0]|0;if((s&255)<(t&255))break;if((t&255)<(s&255)){o=b;break b}r=r+1|0;if((r|0)==(l|0)){o=b;break b}else q=q+1|0}b=c[b+4>>2]|0;if(!b){u=m;break a}}n=c[o>>2]|0;if(!n){u=o;break}else m=o}if((u|0)==(j|0)){i=e;return}j=c[u+16>>2]|0;o=c[u+20>>2]|0;c:do if((j|0)!=(o|0)){m=k;n=j;while(1){if((m|0)==(l|0)){v=19;break}d=a[m>>0]|0;b=a[n>>0]|0;if((d&255)<(b&255)){v=19;break}if((b&255)<(d&255))break c;n=n+1|0;if((n|0)==(o|0))break c;else m=m+1|0}if((v|0)==19){i=e;return}}while(0);c[g>>2]=u;c[f>>2]=c[g>>2];li(h,f)|0;i=e;return}function kj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=ji(a+28|0,b)|0;if((e|0)==(d|0))return;ki(e,c[d>>2]|0,c[d+4>>2]|0);return}function lj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+64|0;g=f+48|0;h=f+36|0;j=f+24|0;k=f+12|0;l=f;m=d+32|0;d=c[m>>2]|0;a:do if(d){n=c[e>>2]|0;o=c[e+4>>2]|0;p=(n|0)==(o|0);q=m;r=d;b:while(1){s=r;c:while(1){if(p){t=s;break}u=c[s+20>>2]|0;v=c[s+16>>2]|0;w=n;while(1){if((v|0)==(u|0))break;x=a[v>>0]|0;y=a[w>>0]|0;if((x&255)<(y&255))break;if((y&255)<(x&255)){t=s;break c}w=w+1|0;if((w|0)==(o|0)){t=s;break c}else v=v+1|0}s=c[s+4>>2]|0;if(!s){z=q;break b}}r=c[t>>2]|0;if(!r){z=t;break}else q=t}if((z|0)!=(m|0)){q=c[z+16>>2]|0;r=c[z+20>>2]|0;d:do if((q|0)!=(r|0)){p=n;s=q;while(1){if((p|0)==(o|0))break a;v=a[p>>0]|0;w=a[s>>0]|0;if((v&255)<(w&255))break a;if((w&255)<(v&255))break d;s=s+1|0;if((s|0)==(r|0))break;else p=p+1|0}}while(0);c[b>>2]=0;r=b+4|0;c[r>>2]=0;c[b+8>>2]=0;o=z+32|0;q=c[o>>2]|0;n=z+28|0;p=c[n>>2]|0;s=q-p|0;if((q|0)==(p|0)){i=f;return}if((s|0)<0)Kw(b);p=Mw(s)|0;c[r>>2]=p;c[b>>2]=p;c[b+8>>2]=p+s;s=c[n>>2]|0;n=c[o>>2]|0;if((s|0)==(n|0)){i=f;return}else{A=s;B=p}do{a[B>>0]=a[A>>0]|0;B=(c[r>>2]|0)+1|0;c[r>>2]=B;A=A+1|0}while((A|0)!=(n|0));i=f;return}}while(0);f=Yb(8)|0;Fy(k,12624,18);c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;A=a[k>>0]|0;B=(A&1)==0;b=B?(A&255)>>>1:c[k+4>>2]|0;Sy(j,B?k+1|0:c[k+8>>2]|0,b,b+5|0);Py(j,12648,5)|0;b=c[e>>2]|0;Fy(l,b,(c[e+4>>2]|0)-b|0);oi(h,j,l);c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;l=a[h>>0]|0;j=(l&1)==0;b=j?(l&255)>>>1:c[h+4>>2]|0;Sy(g,j?h+1|0:c[h+8>>2]|0,b,b+15|0);Py(g,12656,15)|0;$i(f,g);dd(f|0,296,39)}function mj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+16|0;f=e+4|0;g=e;h=b+28|0;j=b+32|0;b=c[j>>2]|0;if(!b){i=e;return}k=c[d>>2]|0;l=c[d+4>>2]|0;d=(k|0)==(l|0);m=j;n=b;a:while(1){b=n;b:while(1){if(d){o=b;break}p=c[b+20>>2]|0;q=c[b+16>>2]|0;r=k;while(1){if((q|0)==(p|0))break;s=a[q>>0]|0;t=a[r>>0]|0;if((s&255)<(t&255))break;if((t&255)<(s&255)){o=b;break b}r=r+1|0;if((r|0)==(l|0)){o=b;break b}else q=q+1|0}b=c[b+4>>2]|0;if(!b){u=m;break a}}n=c[o>>2]|0;if(!n){u=o;break}else m=o}if((u|0)==(j|0)){i=e;return}j=c[u+16>>2]|0;o=c[u+20>>2]|0;c:do if((j|0)!=(o|0)){m=k;n=j;while(1){if((m|0)==(l|0)){v=19;break}d=a[m>>0]|0;b=a[n>>0]|0;if((d&255)<(b&255)){v=19;break}if((b&255)<(d&255))break c;n=n+1|0;if((n|0)==(o|0))break c;else m=m+1|0}if((v|0)==19){i=e;return}}while(0);c[g>>2]=u;c[f>>2]=c[g>>2];li(h,f)|0;i=e;return}function nj(a){a=a|0;var b=0,d=0;b=a+4|0;d=a+8|0;qj(b,c[d>>2]|0);c[a+12>>2]=0;c[b>>2]=d;c[d>>2]=0;d=a+16|0;b=a+20|0;ii(d,c[b>>2]|0);c[a+24>>2]=0;c[d>>2]=b;c[b>>2]=0;b=a+28|0;d=a+32|0;ii(b,c[d>>2]|0);c[a+36>>2]=0;c[b>>2]=d;c[d>>2]=0;return}function oj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=i;i=i+112|0;g=f+28|0;h=f+56|0;j=f+72|0;k=f+88|0;l=f+16|0;m=f;n=f+40|0;c[g>>2]=0;o=g+4|0;c[o>>2]=0;c[g+8>>2]=0;p=c[b+4>>2]|0;q=b+8|0;a:do if((p|0)!=(q|0)){r=g+8|0;s=j+4|0;t=p;while(1){xm(h);u=Cm(h,c[t+28>>2]|0)|0;v=Im(h,0,u)|0;Lm(h,v+u+(Hm(h,t+16|0)|0)|0)|0;Am(j,h);w=c[o>>2]|0;if((w|0)==(c[r>>2]|0))Ri(g,j);else{c[w>>2]=0;u=w+4|0;c[u>>2]=0;c[w+8>>2]=0;v=c[s>>2]|0;x=c[j>>2]|0;y=v-x|0;if((v|0)!=(x|0)){if((y|0)<0)break;x=Mw(y)|0;c[u>>2]=x;c[w>>2]=x;c[w+8>>2]=x+y;y=c[j>>2]|0;v=c[s>>2]|0;if((y|0)!=(v|0)){z=y;y=x;do{a[y>>0]=a[z>>0]|0;y=(c[u>>2]|0)+1|0;c[u>>2]=y;z=z+1|0}while((z|0)!=(v|0))}}c[o>>2]=(c[o>>2]|0)+12}v=c[j>>2]|0;if(v){if((c[s>>2]|0)!=(v|0))c[s>>2]=v;Ow(v)}ym(h);v=c[t+4>>2]|0;if(!v){z=t;while(1){y=c[z+8>>2]|0;if((c[y>>2]|0)==(z|0)){A=y;break}else z=y}}else{z=v;while(1){y=c[z>>2]|0;if(!y){A=z;break}else z=y}}if((A|0)==(q|0))break a;else t=A}Kw(w)}while(0);w=c[b+16>>2]|0;A=b+20|0;b:do if((w|0)!=(A|0)){q=g+8|0;h=l+4|0;j=w;while(1){xm(k);p=Hm(k,j+28|0)|0;t=Im(k,1,p)|0;Lm(k,t+p+(Hm(k,j+16|0)|0)|0)|0;Am(l,k);B=c[o>>2]|0;if((B|0)==(c[q>>2]|0))Ri(g,l);else{c[B>>2]=0;p=B+4|0;c[p>>2]=0;c[B+8>>2]=0;t=c[h>>2]|0;s=c[l>>2]|0;r=t-s|0;if((t|0)!=(s|0)){if((r|0)<0)break;s=Mw(r)|0;c[p>>2]=s;c[B>>2]=s;c[B+8>>2]=s+r;r=c[l>>2]|0;t=c[h>>2]|0;if((r|0)!=(t|0)){z=r;r=s;do{a[r>>0]=a[z>>0]|0;r=(c[p>>2]|0)+1|0;c[p>>2]=r;z=z+1|0}while((z|0)!=(t|0))}}c[o>>2]=(c[o>>2]|0)+12}t=c[l>>2]|0;if(t){if((c[h>>2]|0)!=(t|0))c[h>>2]=t;Ow(t)}ym(k);t=c[j+4>>2]|0;if(!t){z=j;while(1){r=c[z+8>>2]|0;if((c[r>>2]|0)==(z|0)){C=r;break}else z=r}}else{z=t;while(1){r=c[z>>2]|0;if(!r){C=z;break}else z=r}}if((C|0)==(A|0))break b;else j=C}Kw(B)}while(0);B=c[b+28>>2]|0;C=b+32|0;c:do if((B|0)!=(C|0)){b=g+8|0;A=n+4|0;k=B;while(1){xm(m);l=Gm(m,k+28|0)|0;w=Im(m,2,l)|0;Lm(m,w+l+(Hm(m,k+16|0)|0)|0)|0;Am(n,m);D=c[o>>2]|0;if((D|0)==(c[b>>2]|0))Ri(g,n);else{c[D>>2]=0;l=D+4|0;c[l>>2]=0;c[D+8>>2]=0;w=c[A>>2]|0;j=c[n>>2]|0;h=w-j|0;if((w|0)!=(j|0)){if((h|0)<0)break;j=Mw(h)|0;c[l>>2]=j;c[D>>2]=j;c[D+8>>2]=j+h;h=c[n>>2]|0;w=c[A>>2]|0;if((h|0)!=(w|0)){q=h;h=j;do{a[h>>0]=a[q>>0]|0;h=(c[l>>2]|0)+1|0;c[l>>2]=h;q=q+1|0}while((q|0)!=(w|0))}}c[o>>2]=(c[o>>2]|0)+12}w=c[n>>2]|0;if(w){if((c[A>>2]|0)!=(w|0))c[A>>2]=w;Ow(w)}ym(m);w=c[k+4>>2]|0;if(!w){q=k;while(1){h=c[q+8>>2]|0;if((c[h>>2]|0)==(q|0)){E=h;break}else q=h}}else{q=w;while(1){h=c[q>>2]|0;if(!h){E=q;break}else q=h}}if((E|0)==(C|0))break c;else k=E}Kw(D)}while(0);D=(Mm(d,g)|0)+e|0;e=c[g>>2]|0;if(!e){i=f;return D|0}d=c[o>>2]|0;if((d|0)==(e|0))F=e;else{E=d;while(1){d=E+-12|0;c[o>>2]=d;C=c[d>>2]|0;if(!C)G=d;else{d=E+-8|0;if((c[d>>2]|0)!=(C|0))c[d>>2]=C;Ow(C);G=c[o>>2]|0}if((G|0)==(e|0))break;else E=G}F=c[g>>2]|0}Ow(F);i=f;return D|0}function pj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+96|0;f=e+24|0;g=e+48|0;h=e+68|0;j=e+80|0;k=e+12|0;l=e;m=e+36|0;n=b+4|0;o=b+8|0;qj(n,c[o>>2]|0);c[b+12>>2]=0;c[n>>2]=o;c[o>>2]=0;o=b+16|0;p=b+20|0;ii(o,c[p>>2]|0);c[b+24>>2]=0;c[o>>2]=p;c[p>>2]=0;p=b+28|0;q=b+32|0;ii(p,c[q>>2]|0);c[b+36>>2]=0;c[p>>2]=q;c[q>>2]=0;q=wm(d)|0;if(!q){i=e;return}b=k+4|0;r=j+4|0;s=f+4|0;t=h+4|0;u=q;a:while(1){tm(f,d);lm(g,f);vm(g)|0;sm(h,g);do if(!(qm(g,0)|0)){if(qm(g,1)|0){q=ji(o,h)|0;sm(j,g);if((q|0)!=(j|0))ki(q,c[j>>2]|0,c[r>>2]|0);q=c[j>>2]|0;if(!q)break;if((c[r>>2]|0)!=(q|0))c[r>>2]=q;Ow(q);break}if(!(qm(g,2)|0)){v=19;break a}q=ji(p,h)|0;rm(k,g);if((q|0)!=(k|0))ki(q,c[k>>2]|0,c[b>>2]|0);q=c[k>>2]|0;if(q){if((c[b>>2]|0)!=(q|0))c[b>>2]=q;Ow(q)}}else{q=nm(g)|0;c[(rj(n,h)|0)>>2]=q}while(0);q=(c[s>>2]|0)-(c[f>>2]|0)|0;w=u;u=u-q|0;x=c[h>>2]|0;if(x){if((c[t>>2]|0)!=(x|0))c[t>>2]=x;Ow(x)}mm(g);x=c[f>>2]|0;if(x){if((c[s>>2]|0)!=(x|0))c[s>>2]=x;Ow(x)}if(w>>>0<=q>>>0){v=29;break}}if((v|0)==19){s=Yb(8)|0;Fy(m,12672,20);c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;f=a[m>>0]|0;g=(f&1)==0;t=g?(f&255)>>>1:c[m+4>>2]|0;Sy(l,g?m+1|0:c[m+8>>2]|0,t,t+63|0);Py(l,12696,63)|0;$i(s,l);dd(s|0,296,39)}else if((v|0)==29){i=e;return}}function qj(a,b){a=a|0;b=b|0;var d=0;if(!b)return;qj(a,c[b>>2]|0);qj(a,c[b+4>>2]|0);a=c[b+16>>2]|0;if(a){d=b+20|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}Ow(b);return}function rj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;e=i;i=i+16|0;f=e+12|0;g=e;h=b+4|0;j=c[h>>2]|0;a:do if(j){k=c[d>>2]|0;l=c[d+4>>2]|0;b:do if((k|0)==(l|0)){m=c[j+16>>2]|0;n=c[j+20>>2]|0;if((m|0)==(n|0)){o=j;p=25}else{q=n;n=m;m=j;while(1){r=k;s=n;while(1){if((r|0)==(k|0))break;t=a[r>>0]|0;u=a[s>>0]|0;if((t&255)<(u&255))break;if((u&255)<(t&255)){o=m;p=25;break b}s=s+1|0;if((s|0)==(q|0)){o=m;p=25;break b}else r=r+1|0}r=c[m>>2]|0;if(!r){v=m;w=m;p=17;break b}n=c[r+16>>2]|0;q=c[r+20>>2]|0;if((n|0)==(q|0)){o=r;p=25;break}else m=r}}}else{m=j;while(1){q=c[m+16>>2]|0;n=c[m+20>>2]|0;c:do if((q|0)!=(n|0)){r=k;s=q;while(1){if((r|0)==(l|0))break;t=a[r>>0]|0;u=a[s>>0]|0;if((t&255)<(u&255))break;if((u&255)<(t&255)){x=q;y=k;p=18;break c}s=s+1|0;if((s|0)==(n|0)){x=q;y=k;p=18;break c}else r=r+1|0}r=c[m>>2]|0;if(!r){v=m;w=m;p=17;break b}else z=r}else{x=q;y=k;p=18}while(0);if((p|0)==18){while(1){p=0;if((x|0)==(n|0))break;q=a[x>>0]|0;r=a[y>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255)){o=m;p=25;break b}y=y+1|0;if((y|0)==(l|0)){o=m;p=25;break b}else{x=x+1|0;p=18}}n=m+4|0;q=c[n>>2]|0;if(!q){A=n;B=m;break}else z=q}m=z}c[f>>2]=B;C=A;D=B;break a}while(0);if((p|0)==17){c[f>>2]=w;C=v;D=w;break}else if((p|0)==25){c[f>>2]=o;E=f;F=o;G=o;p=27;break}}else{c[f>>2]=h;E=h;F=j;G=h;p=27}while(0);if((p|0)==27)if(!F){C=E;D=G}else{H=F;I=H+28|0;i=e;return I|0}tj(g,b,d);d=c[g>>2]|0;c[g>>2]=0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=D;c[C>>2]=d;D=c[c[b>>2]>>2]|0;if(!D)J=d;else{c[b>>2]=D;J=c[C>>2]|0}vi(c[b+4>>2]|0,J);J=b+8|0;c[J>>2]=(c[J>>2]|0)+1;H=d;I=H+28|0;i=e;return I|0}function sj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=b+4|0;f=c[e>>2]|0;if(!f){g=0;return g|0}h=c[d>>2]|0;i=c[d+4>>2]|0;d=(h|0)==(i|0);j=e;k=f;a:while(1){b:do if(d)l=k;else{m=k;while(1){n=c[m+20>>2]|0;o=c[m+16>>2]|0;p=h;while(1){if((o|0)==(n|0))break;q=a[o>>0]|0;r=a[p>>0]|0;if((q&255)<(r&255))break;if((r&255)<(q&255)){l=m;break b}p=p+1|0;if((p|0)==(i|0)){l=m;break b}else o=o+1|0}m=c[m+4>>2]|0;if(!m){s=j;break a}}}while(0);k=c[l>>2]|0;if(!k){s=l;break}else j=l}if((s|0)==(e|0)){g=0;return g|0}l=c[s+16>>2]|0;j=c[s+20>>2]|0;c:do if((l|0)!=(j|0)){k=h;d=l;while(1){if((k|0)==(i|0)){g=0;t=29;break}m=a[k>>0]|0;o=a[d>>0]|0;if((m&255)<(o&255)){g=0;t=29;break}if((o&255)<(m&255))break c;d=d+1|0;if((d|0)==(j|0))break c;else k=k+1|0}if((t|0)==29)return g|0}while(0);if((s|0)==(e|0)){g=0;return g|0}e=c[s+4>>2]|0;if(!e){t=s;while(1){j=c[t+8>>2]|0;if((c[j>>2]|0)==(t|0)){u=j;break}else t=j}}else{t=e;while(1){e=c[t>>2]|0;if(!e){u=t;break}else t=e}}if((c[b>>2]|0)==(s|0))c[b>>2]=u;u=b+8|0;c[u>>2]=(c[u>>2]|0)+-1;ti(f,s);f=c[s+16>>2]|0;if(f){u=s+20|0;if((c[u>>2]|0)!=(f|0))c[u>>2]=f;Ow(f)}Ow(s);g=1;return g|0}function tj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=Mw(32)|0;g=d+4|0;d=f+16|0;c[d>>2]=0;h=f+20|0;c[h>>2]=0;i=f+24|0;c[i>>2]=0;j=e+4|0;k=c[j>>2]|0;l=c[e>>2]|0;m=k-l|0;if((k|0)!=(l|0)){if((m|0)<0)Kw(d);l=Mw(m)|0;c[h>>2]=l;c[d>>2]=l;c[i>>2]=l+m;m=c[e>>2]|0;e=c[j>>2]|0;if((m|0)!=(e|0)){j=m;m=l;do{a[m>>0]=a[j>>0]|0;m=(c[h>>2]|0)+1|0;c[h>>2]=m;j=j+1|0}while((j|0)!=(e|0))}}c[f+28>>2]=0;c[b>>2]=f;f=b+4|0;c[f>>2]=g;c[f+4>>2]=257;return}function uj(a){a=a|0;var b=0;c[a>>2]=12768;b=Mw(24)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;Qj(b,3);c[a+4>>2]=b;return}function vj(a){a=a|0;var b=0;c[a>>2]=12768;b=Mw(24)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;Qj(b,6);c[a+4>>2]=b;return}function wj(a){a=a|0;var b=0;c[a>>2]=12768;b=Mw(24)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;Qj(b,7);c[a+4>>2]=b;return}function xj(a){a=a|0;var b=0;c[a>>2]=12768;b=Mw(24)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;Qj(b,8);c[a+4>>2]=b;return}function yj(a){a=a|0;var b=0;c[a>>2]=12768;b=Mw(24)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[a+4>>2]=b;return}function zj(a){a=a|0;var b=0;c[a>>2]=12768;b=a+4|0;a=c[b>>2]|0;if(!a)return;Rj(a);Ow(a);c[b>>2]=0;return}function Aj(a){a=a|0;var b=0;c[a>>2]=12768;b=c[a+4>>2]|0;if(!b){Ow(a);return}Rj(b);Ow(b);Ow(a);return}function Bj(a,b){a=a|0;b=b|0;var d=0,e=0;c[a>>2]=12768;d=Mw(24)|0;e=c[c[b+4>>2]>>2]|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;Qj(d,e);c[a+4>>2]=d;return}function Cj(a,b){a=a|0;b=b|0;var d=0;Dj(b);d=Dr(c[(c[b+4>>2]|0)+4>>2]|0)|0;Fy(a,d,yH(d|0)|0);return}function Dj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+48|0;d=b+24|0;e=b+12|0;f=b;g=c[a+4>>2]|0;if(((c[g>>2]|0)!=0?(c[g+4>>2]|0)!=0:0)?(c[g+16>>2]|0)!=0:0){i=b;return}b=Yb(8)|0;Fy(e,12856,43);Fy(f,13088,78);oi(d,e,f);$i(b,d);dd(b|0,296,39)}function Ej(a){a=a|0;return c[c[a+4>>2]>>2]|0}function Fj(a){a=a|0;var b=0;Dj(a);b=sr(c[(c[a+4>>2]|0)+16>>2]|0)|0;if((b|0)<0){a=Yb(12)|0;dm(a,b);dd(a|0,15208,55)}else return}function Gj(a,b){a=a|0;b=b|0;var d=0,e=0;Dj(a);d=c[b>>2]|0;e=tr(c[(c[a+4>>2]|0)+16>>2]|0,d,(c[b+4>>2]|0)-d|0)|0;if((e|0)<0){d=Yb(12)|0;dm(d,e);dd(d|0,15208,55)}else return}function Hj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;Dj(d);e=d+4|0;d=c[e>>2]|0;f=ur(c[d+16>>2]|0,c[d+8>>2]|0)|0;if((f|0)<0){d=Yb(12)|0;dm(d,f);dd(d|0,15208,55)}d=c[e>>2]|0;e=c[d+8>>2]|0;f=c[d+12>>2]|0;d=e+f|0;c[b>>2]=0;g=b+4|0;c[g>>2]=0;c[b+8>>2]=0;if(!f)return;if((f|0)<0)Kw(b);h=Mw(f)|0;c[g>>2]=h;c[b>>2]=h;c[b+8>>2]=h+f;f=e;e=h;do{a[e>>0]=a[f>>0]|0;e=(c[g>>2]|0)+1|0;c[g>>2]=e;f=f+1|0}while((f|0)!=(d|0));return}function Ij(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;Dj(d);f=d+4|0;d=c[f>>2]|0;g=c[e>>2]|0;h=vr(c[d+4>>2]|0,g,(c[e+4>>2]|0)-g|0,c[d+8>>2]|0)|0;if((h|0)<0){d=Yb(12)|0;dm(d,h);dd(d|0,15208,55)}d=c[f>>2]|0;f=c[d+8>>2]|0;h=c[d+12>>2]|0;d=f+h|0;c[b>>2]=0;g=b+4|0;c[g>>2]=0;c[b+8>>2]=0;if(!h)return;if((h|0)<0)Kw(b);e=Mw(h)|0;c[g>>2]=e;c[b>>2]=e;c[b+8>>2]=e+h;h=f;f=e;do{a[f>>0]=a[h>>0]|0;f=(c[g>>2]|0)+1|0;c[g>>2]=f;h=h+1|0}while((h|0)!=(d|0));return}function Jj(a,b){a=a|0;b=b|0;var d=0,e=0;Dj(a);d=c[b>>2]|0;e=wr(c[(c[a+4>>2]|0)+20>>2]|0,d,(c[b+4>>2]|0)-d|0)|0;if((e|0)<0){d=Yb(12)|0;dm(d,e);dd(d|0,15208,55)}else return}function Kj(a){a=a|0;var b=0;Dj(a);b=zr(c[(c[a+4>>2]|0)+20>>2]|0)|0;if((b|0)<0){a=Yb(12)|0;dm(a,b);dd(a|0,15208,55)}else return}function Lj(a,b){a=a|0;b=b|0;var d=0,e=0;Dj(a);d=c[b>>2]|0;e=xr(c[(c[a+4>>2]|0)+20>>2]|0,d,(c[b+4>>2]|0)-d|0)|0;if((e|0)<0){d=Yb(12)|0;dm(d,e);dd(d|0,15208,55)}else return}function Mj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;Dj(d);e=d+4|0;d=c[e>>2]|0;f=yr(c[d+20>>2]|0,c[d+8>>2]|0)|0;if((f|0)<0){d=Yb(12)|0;dm(d,f);dd(d|0,15208,55)}d=c[e>>2]|0;e=c[d+8>>2]|0;f=c[d+12>>2]|0;d=e+f|0;c[b>>2]=0;g=b+4|0;c[g>>2]=0;c[b+8>>2]=0;if(!f)return;if((f|0)<0)Kw(b);h=Mw(f)|0;c[g>>2]=h;c[b>>2]=h;c[b+8>>2]=h+f;f=e;e=h;do{a[e>>0]=a[f>>0]|0;e=(c[g>>2]|0)+1|0;c[g>>2]=e;f=f+1|0}while((f|0)!=(d|0));return}function Nj(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;Dj(d);g=d+4|0;d=c[g>>2]|0;h=c[e>>2]|0;i=c[f>>2]|0;j=Ar(c[d+4>>2]|0,h,(c[e+4>>2]|0)-h|0,i,(c[f+4>>2]|0)-i|0,c[d+8>>2]|0)|0;if((j|0)<0){d=Yb(12)|0;dm(d,j);dd(d|0,15208,55)}d=c[g>>2]|0;g=c[d+8>>2]|0;j=c[d+12>>2]|0;d=g+j|0;c[b>>2]=0;i=b+4|0;c[i>>2]=0;c[b+8>>2]=0;if(!j)return;if((j|0)<0)Kw(b);f=Mw(j)|0;c[i>>2]=f;c[b>>2]=f;c[b+8>>2]=f+j;j=g;g=f;do{a[g>>0]=a[j>>0]|0;g=(c[i>>2]|0)+1|0;c[i>>2]=g;j=j+1|0}while((j|0)!=(d|0));return}function Oj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;f=e+16|0;g=e+12|0;h=e;Dj(a);c[f>>2]=0;j=rs(c[c[a+4>>2]>>2]|0,f,g)|0;if((j|0)<0){a=Yb(12)|0;dm(a,j);dd(a|0,15208,55)}else{a=Fm(b)|0;Fy(h,c[f>>2]|0,c[g>>2]|0);g=(Km(b,h)|0)+a|0;Hy(h);h=g+d+(Lm(b,g)|0)|0;i=e;return h|0}return 0}function Pj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+48|0;f=e+24|0;g=e+12|0;h=e+8|0;j=e;vm(d)|0;um(f,d);k=a[f>>0]|0;l=(k&1)==0;c[g+4>>2]=l?(k&255)>>>1:c[f+4>>2]|0;c[g+8>>2]=l?f+1|0:c[f+8>>2]|0;c[h>>2]=0;l=qs(g,h)|0;if((l|0)<0){g=Yb(12)|0;dm(g,l);dd(g|0,15208,55)}pm(d);d=c[h>>2]|0;c[j>>2]=12768;h=j+4|0;g=Mw(24)|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[g+16>>2]=0;c[g+20>>2]=0;Qj(g,d);c[h>>2]=g;if((j|0)==(b|0))m=g;else{d=Mw(24)|0;l=c[g>>2]|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[d+16>>2]=0;c[d+20>>2]=0;Qj(d,l);l=b+4|0;b=c[l>>2]|0;if(b){Rj(b);Ow(b)}c[l>>2]=d;m=c[h>>2]|0}c[j>>2]=12768;if(!m){Hy(f);i=e;return}Rj(m);Ow(m);c[h>>2]=0;Hy(f);i=e;return}function Qj(a,b){a=a|0;b=b|0;var d=0,e=0;c[a>>2]=b;if(!b)return;d=or(b)|0;b=a+4|0;c[b>>2]=d;e=(Br(d)|0)&255;c[a+12>>2]=e;c[a+8>>2]=Nw(e)|0;e=Mw(12)|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[a+16>>2]=e;d=rr(e,c[b>>2]|0,0)|0;if((d|0)<0){Rj(a);e=Yb(12)|0;dm(e,d);dd(e|0,15208,55)}e=Mw(12)|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[a+20>>2]=e;d=rr(e,c[b>>2]|0,1)|0;if((d|0)<0){Rj(a);a=Yb(12)|0;dm(a,d);dd(a|0,15208,55)}else return}function Rj(a){a=a|0;var b=0,d=0,e=0;b=a+8|0;d=c[b>>2]|0;if(d){Pw(d);c[b>>2]=0;c[a+12>>2]=0}b=a+16|0;d=c[b>>2]|0;if(d){qr(d);d=c[b>>2]|0;if(d)Ow(d);c[b>>2]=0}b=a+20|0;d=c[b>>2]|0;if(!d){c[a>>2]=0;e=a+4|0;c[e>>2]=0;return}qr(d);d=c[b>>2]|0;if(d)Ow(d);c[b>>2]=0;c[a>>2]=0;e=a+4|0;c[e>>2]=0;return}function Sj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+32|0;f=e+24|0;g=e+12|0;h=e;Xm(f);fn(f,b);mn(g,f);ln(h,f,d);qk(a,g,h);a=c[h>>2]|0;if(a){d=h+4|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}a=c[g>>2]|0;if(!a){Zm(f);i=e;return}d=g+4|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a);Zm(f);i=e;return}function Tj(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+48|0;g=f+32|0;h=f+24|0;j=f+12|0;k=f;Xm(g);if((c[b>>2]|0)==(c[b+4>>2]|0)){l=b+12|0;if((c[l>>2]|0)!=(c[b+16>>2]|0))dn(g,l,d)}else en(g,b);Xm(h);gn(h,g);mn(j,h);ln(k,h,e);qk(a,j,k);a=c[k>>2]|0;if(a){e=k+4|0;if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a)}a=c[j>>2]|0;if(!a){Zm(h);Zm(g);i=f;return}e=j+4|0;if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);Zm(h);Zm(g);i=f;return}function Uj(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,8,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function Vj(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,9,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function Wj(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,10,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function Xj(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,11,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function Yj(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,12,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function Zj(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,13,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function _j(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,14,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function $j(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,15,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function ak(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,20,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function bk(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,21,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function ck(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,22,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function dk(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,1,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function ek(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,2,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function fk(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,3,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function gk(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,4,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function hk(a,b){a=a|0;b=b|0;var d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;e=d+4|0;c[e>>2]=0;c[d+8>>2]=0;Sj(a,6,d);a=c[d>>2]|0;if(!a){i=b;return}if((c[e>>2]|0)!=(a|0))c[e>>2]=a;Ow(a);i=b;return}function ik(a,b,c){a=a|0;b=b|0;c=c|0;return an(a,b,c)|0}function jk(a,b){a=a|0;b=b|0;return bn(a,b)|0}function kk(a){a=a|0;return cn(a)|0}function lk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;Xm(h);dn(h,d,e);if((a[c[d>>2]>>0]|0)==45){ln(b,h,f);Zm(h);i=g;return}else{jn(b,h,f);Zm(h);i=g;return}}function mk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;Xm(g);dn(g,d,e);if((a[c[d>>2]>>0]|0)==45){mn(b,g);Zm(g);i=f;return}else{kn(b,g);Zm(g);i=f;return}}function nk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+48|0;f=e+24|0;g=e+12|0;h=e;j=b+12|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;Sj(f,0,d);c[g>>2]=0;d=g+4|0;c[d>>2]=0;c[g+8>>2]=0;k=f+4|0;l=c[k>>2]|0;m=c[f>>2]|0;n=l-m|0;if((l|0)!=(m|0)){if((n|0)<0)Kw(g);m=Mw(n)|0;c[d>>2]=m;c[g>>2]=m;c[g+8>>2]=m+n;n=c[f>>2]|0;l=c[k>>2]|0;if((n|0)==(l|0))o=m;else{p=n;n=m;while(1){a[n>>0]=a[p>>0]|0;m=(c[d>>2]|0)+1|0;c[d>>2]=m;p=p+1|0;if((p|0)==(l|0)){o=m;break}else n=m}}}else o=0;if((b|0)!=(g|0))ki(b,c[g>>2]|0,o);o=c[g>>2]|0;if(o){if((c[d>>2]|0)!=(o|0))c[d>>2]=o;Ow(o)}c[h>>2]=0;o=h+4|0;c[o>>2]=0;c[h+8>>2]=0;d=f+16|0;g=c[d>>2]|0;b=f+12|0;n=c[b>>2]|0;l=g-n|0;if((g|0)!=(n|0)){if((l|0)<0)Kw(h);n=Mw(l)|0;c[o>>2]=n;c[h>>2]=n;c[h+8>>2]=n+l;l=c[b>>2]|0;g=c[d>>2]|0;if((l|0)==(g|0))q=n;else{p=l;l=n;while(1){a[l>>0]=a[p>>0]|0;n=(c[o>>2]|0)+1|0;c[o>>2]=n;p=p+1|0;if((p|0)==(g|0)){q=n;break}else l=n}}}else q=0;if((j|0)!=(h|0))ki(j,c[h>>2]|0,q);q=c[h>>2]|0;if(q){if((c[o>>2]|0)!=(q|0))c[o>>2]=q;Ow(q)}q=c[b>>2]|0;if(q){if((c[d>>2]|0)!=(q|0))c[d>>2]=q;Ow(q)}q=c[f>>2]|0;if(!q){i=e;return}if((c[k>>2]|0)!=(q|0))c[k>>2]=q;Ow(q);i=e;return}function ok(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;f=d+4|0;g=c[f>>2]|0;h=c[d>>2]|0;i=g-h|0;if((g|0)==(h|0))return;if((i|0)<0)Kw(b);h=Mw(i)|0;c[e>>2]=h;c[b>>2]=h;c[b+8>>2]=h+i;i=c[d>>2]|0;d=c[f>>2]|0;if((i|0)==(d|0))return;else{j=i;k=h}do{a[k>>0]=a[j>>0]|0;k=(c[e>>2]|0)+1|0;c[e>>2]=k;j=j+1|0}while((j|0)!=(d|0));return}function pk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;f=d+16|0;g=c[f>>2]|0;h=d+12|0;d=c[h>>2]|0;i=g-d|0;if((g|0)==(d|0))return;if((i|0)<0)Kw(b);d=Mw(i)|0;c[e>>2]=d;c[b>>2]=d;c[b+8>>2]=d+i;i=c[h>>2]|0;h=c[f>>2]|0;if((i|0)==(h|0))return;else{j=i;k=d}do{a[k>>0]=a[j>>0]|0;k=(c[e>>2]|0)+1|0;c[e>>2]=k;j=j+1|0}while((j|0)!=(h|0));return}function qk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;c[b>>2]=0;f=b+4|0;c[f>>2]=0;c[b+8>>2]=0;g=d+4|0;h=c[g>>2]|0;i=c[d>>2]|0;j=h-i|0;if((h|0)!=(i|0)){if((j|0)<0)Kw(b);i=Mw(j)|0;c[f>>2]=i;c[b>>2]=i;c[b+8>>2]=i+j;j=c[d>>2]|0;d=c[g>>2]|0;if((j|0)!=(d|0)){g=j;j=i;do{a[j>>0]=a[g>>0]|0;j=(c[f>>2]|0)+1|0;c[f>>2]=j;g=g+1|0}while((g|0)!=(d|0))}}d=b+12|0;c[d>>2]=0;g=b+16|0;c[g>>2]=0;c[b+20>>2]=0;j=e+4|0;f=c[j>>2]|0;i=c[e>>2]|0;h=f-i|0;if((f|0)==(i|0))return;if((h|0)<0)Kw(d);i=Mw(h)|0;c[g>>2]=i;c[d>>2]=i;c[b+20>>2]=i+h;h=c[e>>2]|0;e=c[j>>2]|0;if((h|0)==(e|0))return;else{k=h;l=i}do{a[l>>0]=a[k>>0]|0;l=(c[g>>2]|0)+1|0;c[g>>2]=l;k=k+1|0}while((k|0)!=(e|0));return}function rk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;c[a>>2]=12912;e=Mw(48)|0;Bk(e,1,b,d);c[a+4>>2]=e;return}function sk(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=12912;b=Mw(48)|0;d=a+4|0;a=b;e=a+48|0;do{c[a>>2]=0;a=a+4|0}while((a|0)<(e|0));c[d>>2]=b;return}function tk(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=12912;b=a+4|0;a=c[b>>2]|0;if(!a)return;d=c[a+4>>2]|0;if(d){e=a+8|0;if((c[e>>2]|0)!=(d|0))c[e>>2]=d;Ow(d)}Ow(a);c[b>>2]=0;return}function uk(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=12912;b=c[a+4>>2]|0;if(!b){Ow(a);return}d=c[b+4>>2]|0;if(d){e=b+8|0;if((c[e>>2]|0)!=(d|0))c[e>>2]=d;Ow(d)}Ow(b);Ow(a);return}function vk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;wk(a,b,c,d,1);return}function wk(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+32|0;j=h+16|0;k=h+12|0;l=h;yk(d);m=e+4|0;n=c[m>>2]|0;o=c[e>>2]|0;p=n-o+16|0;c[b>>2]=0;q=b+4|0;c[q>>2]=0;c[b+8>>2]=0;if(!p){r=n;s=o}else{if((p|0)<0)Kw(b);o=Mw(p)|0;c[q>>2]=o;c[b>>2]=o;c[b+8>>2]=o+p;n=p;p=o;do{a[p>>0]=0;p=(c[q>>2]|0)+1|0;c[q>>2]=p;n=n+-1|0}while((n|0)!=0);r=c[m>>2]|0;s=c[e>>2]|0}n=d+4|0;d=c[n>>2]|0;p=d+28|0;c[j>>2]=c[p>>2];c[j+4>>2]=c[p+4>>2];c[j+8>>2]=c[p+8>>2];p=r-s|0;c[k>>2]=p;r=c[d>>2]|0;if((r|0)==3){d=f+4|0;Dk((c[d>>2]|0)-(c[f>>2]|0)|0);o=c[f>>2]|0;t=c[e>>2]|0;u=ft(j,g,o,(c[d>>2]|0)-o|0,t,(c[m>>2]|0)-t|0,c[b>>2]|0)|0;if((u|0)<0){t=Yb(12)|0;dm(t,u);dd(t|0,15208,55)}}else if((r|0)==1){t=c[f>>2]|0;u=kt(j,g,t,(c[f+4>>2]|0)-t|0,s,p,c[b>>2]|0,k)|0;if((u|0)<0){p=Yb(12)|0;dm(p,u);dd(p|0,15208,55)}}else if((r|0)==2){r=f+4|0;Dk((c[r>>2]|0)-(c[f>>2]|0)|0);p=c[n>>2]|0;n=c[f>>2]|0;f=c[e>>2]|0;e=ht(j,g,c[p+44>>2]|0,c[p+40>>2]|0,n,(c[r>>2]|0)-n|0,f,(c[m>>2]|0)-f|0,c[b>>2]|0,k)|0;if((e|0)<0){f=Yb(12)|0;dm(f,e);dd(f|0,15208,55)}}else{f=Yb(8)|0;Fy(l,12992,44);$i(f,l);dd(f|0,296,39)}f=c[k>>2]|0;k=c[q>>2]|0;l=c[b>>2]|0;e=k-l|0;if(f>>>0>e>>>0){Ek(b,f-e|0);i=h;return}if(f>>>0>=e>>>0){i=h;return}e=l+f|0;if((k|0)==(e|0)){i=h;return}c[q>>2]=e;i=h;return}function xk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;wk(a,b,c,d,0);return}function yk(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+48|0;d=b+24|0;e=b+12|0;f=b;if(!(c[c[a+4>>2]>>2]|0)){a=Yb(8)|0;Fy(e,13040,42);Fy(f,13088,78);oi(d,e,f);$i(a,d);dd(a|0,296,39)}else{i=b;return}}function zk(a,b,d){a=a|0;b=b|0;d=d|0;yk(a);return (Jm(b,(c[a+4>>2]|0)+4|0)|0)+d|0}function Ak(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d;f=a+4|0;a=c[f>>2]|0;if(a){g=c[a+4>>2]|0;if(g){h=a+8|0;if((c[h>>2]|0)!=(g|0))c[h>>2]=g;Ow(g)}Ow(a)}a=Mw(48)|0;tm(e,b);c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;Ck(a,e);c[f>>2]=a;a=c[e>>2]|0;if(!a){i=d;return}f=e+4|0;if((c[f>>2]|0)!=(a|0))c[f>>2]=a;Ow(a);i=d;return}function Bk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+48|0;g=f+24|0;h=f+12|0;j=f;c[a>>2]=b;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;k=e>>>0<1024?1024:e;if((b|0)==1){gm(g,d,k);Ck(a,g);e=c[g>>2]|0;if(!e){i=f;return}l=g+4|0;if((c[l>>2]|0)!=(e|0))c[l>>2]=e;Ow(e);i=f;return}else if((b|0)==2){hm(h,d,k);Ck(a,h);a=c[h>>2]|0;if(!a){i=f;return}k=h+4|0;if((c[k>>2]|0)!=(a|0))c[k>>2]=a;Ow(a);i=f;return}else{f=Yb(8)|0;Fy(j,12992,44);$i(f,j);dd(f|0,296,39)}}function Ck(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d+12|0;f=d;c[a>>2]=0;g=a+4|0;if((g|0)!=(b|0))ki(g,c[b>>2]|0,c[b+4>>2]|0);b=a+16|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;c[b+24>>2]=0;c[b+28>>2]=0;c[e>>2]=c[g>>2];g=Sn(e,c[a+8>>2]|0,b,a+28|0)|0;if((g|0)<0){e=Yb(12)|0;dm(e,g);dd(e|0,15208,55)}if(!(ss(b,a+40|0,a+44|0)|0)){c[a>>2]=2;i=d;return}b=c[a+20>>2]|0;if((b|0)==9){if(!(ky(34456,c[a+24>>2]|0,9)|0)){c[a>>2]=1;i=d;return}}else if((b|0)==10?(ky(34440,c[a+24>>2]|0,10)|0)==0:0){c[a>>2]=3;i=d;return}d=Yb(8)|0;Fy(f,12992,44);$i(d,f);dd(d|0,296,39)}function Dk(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+176|0;d=b+152|0;e=b+16|0;f=b;if(a>>>0>31){a=e+4|0;c[e>>2]=7292;c[e+56>>2]=7312;iz(e+56|0,a);c[e+128>>2]=0;c[e+132>>2]=-1;c[e>>2]=7332;c[e+56>>2]=7352;lz(a);c[a>>2]=7208;g=e+36|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[e+52>>2]=16;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;Tg(a,d);Hy(d);Vg(Pz(Vg(e,13168,36)|0,31)|0,13208,7)|0;e=Yb(8)|0;Xg(f,a);$i(e,f);dd(e|0,296,39)}else{i=b;return}}function Ek(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=c[e>>2]|0;g=b+4|0;h=c[g>>2]|0;i=h;if((f-i|0)>>>0>=d>>>0){j=d;k=h;do{a[k>>0]=0;k=(c[g>>2]|0)+1|0;c[g>>2]=k;j=j+-1|0}while((j|0)!=0);return}j=c[b>>2]|0;k=i-j+d|0;if((k|0)<0)Kw(b);i=j;j=f-i|0;if(j>>>0<1073741823){f=j<<1;j=f>>>0<k>>>0?k:f;f=(c[g>>2]|0)-i|0;if(!j){l=0;m=0;n=f}else{o=j;p=f;q=8}}else{o=2147483647;p=(c[g>>2]|0)-i|0;q=8}if((q|0)==8){l=o;m=Mw(o)|0;n=p}p=m+n|0;o=m+l|0;l=d;d=p;q=p;while(1){a[d>>0]=0;d=q+1|0;p=d;l=l+-1|0;if(!l){r=p;break}else q=p}q=c[b>>2]|0;l=(c[g>>2]|0)-q|0;d=m+(n-l)|0;zH(d|0,q|0,l|0)|0;c[b>>2]=d;c[g>>2]=r;c[e>>2]=o;if(!q)return;Ow(q);return}function Fk(b){b=b|0;var d=0;c[b>>2]=13224;c[b+4>>2]=0;c[b+8>>2]=4;d=b+12|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;c[b+28>>2]=2048;a[b+32>>0]=1;return}function Gk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=13224;c[b+4>>2]=1;c[b+8>>2]=4;f=b+12|0;c[f>>2]=0;g=b+16|0;c[g>>2]=0;c[b+20>>2]=0;h=d+4|0;i=c[h>>2]|0;j=c[d>>2]|0;k=i-j|0;if((i|0)!=(j|0)){if((k|0)<0)Kw(f);j=Mw(k)|0;c[g>>2]=j;c[f>>2]=j;c[b+20>>2]=j+k;k=c[d>>2]|0;d=c[h>>2]|0;if((k|0)!=(d|0)){h=k;k=j;do{a[k>>0]=a[h>>0]|0;k=(c[g>>2]|0)+1|0;c[g>>2]=k;h=h+1|0}while((h|0)!=(d|0))}}c[b+24>>2]=e;c[b+28>>2]=2048;a[b+32>>0]=1;return}function Hk(a){a=a|0;var b=0,d=0;c[a>>2]=13224;b=c[a+12>>2]|0;if(!b)return;d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);return}function Ik(a){a=a|0;var b=0,d=0;c[a>>2]=13224;b=c[a+12>>2]|0;if(!b){Ow(a);return}d=a+16|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);Ow(a);return}function Jk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;f=d+16|0;g=c[f>>2]|0;h=d+12|0;d=c[h>>2]|0;i=g-d|0;if((g|0)==(d|0))return;if((i|0)<0)Kw(b);d=Mw(i)|0;c[e>>2]=d;c[b>>2]=d;c[b+8>>2]=d+i;i=c[h>>2]|0;h=c[f>>2]|0;if((i|0)==(h|0))return;else{j=i;k=d}do{a[k>>0]=a[j>>0]|0;k=(c[e>>2]|0)+1|0;c[e>>2]=k;j=j+1|0}while((j|0)!=(h|0));return}function Kk(a){a=a|0;return c[a+24>>2]|0}function Lk(a,b){a=a|0;b=b|0;c[a+4>>2]=b;return}function Mk(a){a=a|0;return c[a+4>>2]|0}function Nk(a,b){a=a|0;b=b|0;c[a+8>>2]=b;return}function Ok(a){a=a|0;return c[a+8>>2]|0}function Pk(b){b=b|0;a[b+32>>0]=1;return}function Qk(b){b=b|0;a[b+32>>0]=0;return}function Rk(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+16|0;h=g;Sk(d);Tk(d,e);switch(c[d+8>>2]|0){case 2:{j=5;break}case 3:{j=6;break}case 5:{j=8;break}case 4:{j=7;break}case 1:{j=4;break}default:j=0}k=or(j)|0;pr(h);j=rr(h,k,1)|0;if((j|0)<0){qr(h);l=Yb(12)|0;dm(l,j);dd(l|0,15208,55)}if(!f)m=(Br(k)|0)&255;else m=f;c[b>>2]=0;f=b+4|0;c[f>>2]=0;c[b+8>>2]=0;if(m){if((m|0)<0)Kw(b);k=Mw(m)|0;c[f>>2]=k;c[b>>2]=k;c[b+8>>2]=k+m;l=m;j=k;do{a[j>>0]=0;j=(c[f>>2]|0)+1|0;c[f>>2]=j;l=l+-1|0}while((l|0)!=0)}if((c[d+4>>2]|0)!=1){qr(h);l=Yb(8)|0;By(l,13312);dd(l|0,78680,39)}l=c[e>>2]|0;j=c[d+12>>2]|0;f=lt(h,l,(c[e+4>>2]|0)-l|0,j,(c[d+16>>2]|0)-j|0,c[d+24>>2]|0,m,c[b>>2]|0)|0;qr(h);if((f|0)<0){h=Yb(12)|0;dm(h,f);dd(h|0,15208,55)}else{i=g;return}}function Sk(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+12|0;f=d;if(!(c[b+4>>2]|0)){b=Yb(8)|0;Fy(f,13344,45);c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;g=a[f>>0]|0;h=(g&1)==0;j=h?(g&255)>>>1:c[f+4>>2]|0;Sy(e,h?f+1|0:c[f+8>>2]|0,j,j+99|0);Py(e,13392,99)|0;$i(b,e);dd(b|0,296,39)}else{i=d;return}}function Tk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+192|0;f=e+176|0;g=e+164|0;h=e+152|0;j=e+16|0;k=e;if(!(a[b+32>>0]|0)){i=e;return}if((c[d>>2]|0)==(c[d+4>>2]|0)){d=Yb(8)|0;Fy(g,13496,41);$i(d,g);dd(d|0,296,39)}if((c[b+12>>2]|0)==(c[b+16>>2]|0)){d=Yb(8)|0;Fy(h,13544,37);$i(d,h);dd(d|0,296,39)}d=b+24|0;h=b+28|0;if((c[d>>2]|0)>>>0<(c[h>>2]|0)>>>0){b=j+4|0;c[j>>2]=7292;c[j+56>>2]=7312;iz(j+56|0,b);c[j+128>>2]=0;c[j+132>>2]=-1;c[j>>2]=7332;c[j+56>>2]=7352;lz(b);c[b>>2]=7208;g=j+36|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;c[g+12>>2]=0;c[j+52>>2]=16;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;Tg(b,f);Hy(f);f=Vg(j,13584,30)|0;Vg(Pz(f,c[d>>2]|0)|0,13616,17)|0;d=Vg(j,13640,29)|0;Pz(d,c[h>>2]|0)|0;h=Yb(8)|0;Xg(k,b);$i(h,k);dd(h|0,296,39)}else{i=e;return}}function Uk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+28|0;g=e+24|0;h=e+12|0;j=e;Sk(a);if((c[a+4>>2]|0)!=1){k=Yb(8)|0;By(k,13672);dd(k|0,78680,39)}c[f>>2]=0;switch(c[a+8>>2]|0){case 1:{l=4;break}case 5:{l=8;break}case 2:{l=5;break}case 3:{l=6;break}case 4:{l=7;break}default:l=0}k=rs(l,f,g)|0;if((k|0)<0){l=Yb(12)|0;dm(l,k);dd(l|0,15208,55)}else{Fy(h,c[f>>2]|0,c[g>>2]|0);g=Km(b,h)|0;Hy(h);h=(Lm(b,g)|0)+g|0;g=h+(Cm(b,c[a+24>>2]|0)|0)|0;h=g+(Gm(b,a+12|0)|0)|0;a=Lm(b,h)|0;Fy(j,34008,9);g=h+a+(Km(b,j)|0)|0;Hy(j);j=g+d+(Lm(b,g)|0)|0;i=e;return j|0}return 0}function Vk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+80|0;f=e+24|0;g=e+40|0;h=e+52|0;j=e+64|0;k=e+12|0;l=e;m=e+36|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;vm(d)|0;um(h,d);Iy(g,h)|0;Hy(h);Fy(j,34008,9);h=a[g>>0]|0;n=(h&1)==0;o=g+4|0;p=n?(h&255)>>>1:c[o>>2]|0;h=a[j>>0]|0;q=(h&1)==0;if((p|0)!=((q?(h&255)>>>1:c[j+4>>2]|0)|0)){Hy(j);r=Yb(8)|0;By(r,13728);dd(r|0,78680,39)}h=n?g+1|0:c[g+8>>2]|0;s=q?j+1|0:c[j+8>>2]|0;do if(!n){q=(ky(h,s,p)|0)!=0;Hy(j);if(q){r=Yb(8)|0;By(r,13728);dd(r|0,78680,39)}}else{if(!p){Hy(j);break}else{t=p;u=h;v=s}while(1){if((a[u>>0]|0)!=(a[v>>0]|0))break;t=t+-1|0;if(!t){w=11;break}else{u=u+1|0;v=v+1|0}}if((w|0)==11){Hy(j);break}Hy(j);r=Yb(8)|0;By(r,13728);dd(r|0,78680,39)}while(0);vm(d)|0;rm(k,d);r=b+12|0;if((r|0)!=(k|0))ki(r,c[k>>2]|0,c[k+4>>2]|0);r=c[k>>2]|0;if(r){j=k+4|0;if((c[j>>2]|0)!=(r|0))c[j>>2]=r;Ow(r)}c[b+24>>2]=nm(d)|0;vm(d)|0;um(l,d);Iy(g,l)|0;Hy(l);l=a[g>>0]|0;d=(l&1)==0;c[f+4>>2]=d?(l&255)>>>1:c[o>>2]|0;c[f+8>>2]=d?g+1|0:c[g+8>>2]|0;c[m>>2]=0;d=qs(f,m)|0;if((d|0)<0){f=Yb(12)|0;dm(f,d);dd(f|0,15208,55)}c[b+4>>2]=1;switch(c[m>>2]|0){case 6:{x=3;y=b+8|0;c[y>>2]=x;Hy(g);i=e;return}case 7:{x=4;y=b+8|0;c[y>>2]=x;Hy(g);i=e;return}case 8:{x=5;y=b+8|0;c[y>>2]=x;Hy(g);i=e;return}case 5:{x=2;y=b+8|0;c[y>>2]=x;Hy(g);i=e;return}case 4:{x=1;y=b+8|0;c[y>>2]=x;Hy(g);i=e;return}default:{e=Yb(8)|0;By(e,13784);dd(e|0,78680,39)}}}function Wk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=13840;d=a+4|0;a=Mw(37824)|0;BH(a|0,0,37824)|0;c[d>>2]=a;Xq(a+320|0);Np(c[d>>2]|0);a=c[d>>2]|0;e=c[b>>2]|0;f=Pp(a,59,a+320|0,e,(c[b+4>>2]|0)-e|0)|0;if((f|0)>=0)return;Yq((c[d>>2]|0)+320|0);e=c[d>>2]|0;if(e)Ow(e);e=Yb(12)|0;dm(e,f);dd(e|0,15208,55)}function Xk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+1040|0;f=e+4|0;g=e+8|0;h=e;BH(g|0,0,1024)|0;c[a>>2]=0;j=a+4|0;c[j>>2]=0;c[a+8>>2]=0;if(d){k=Mw(d)|0;l=k;c[a>>2]=l;c[j>>2]=l;c[a+8>>2]=k+d}k=d>>>0>1024?1024:d;l=b+4|0;b=g+k|0;if(!d){i=e;return}while(1){m=Sp(c[l>>2]|0,g,k)|0;if((m|0)<0){n=m;o=5;break}c[h>>2]=c[j>>2];c[f>>2]=c[h>>2];al(a,f,g,b)|0;if(((c[j>>2]|0)-(c[a>>2]|0)|0)>>>0>=d>>>0){o=7;break}}if((o|0)==5){d=Yb(12)|0;dm(d,n);dd(d|0,15208,55)}else if((o|0)==7){i=e;return}}function Yk(a){a=a|0;var b=0,d=0,e=0,f=0;b=i;i=i+16|0;d=b;Xk(d,a,4);a=c[d>>2]|0;e=c[a>>2]|0;if(!a){i=b;return e|0}f=d+4|0;if((c[f>>2]|0)!=(a|0))c[f>>2]=a;Ow(a);i=b;return e|0}function Zk(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+16|0;f=e;if(d>>>0<b>>>0){g=Yb(8)|0;By(g,13904);dd(g|0,78680,39)}Xk(f,a,4);a=c[f>>2]|0;g=c[a>>2]|0;if(a){h=f+4|0;if((c[h>>2]|0)!=(a|0))c[h>>2]=a;Ow(a)}i=e;return ((g>>>0)%((d-b|0)>>>0)|0)+b|0}function _k(a){a=a|0;var b=0;c[a>>2]=13840;b=a+4|0;Qp(c[b>>2]|0);Yq((c[b>>2]|0)+320|0);a=c[b>>2]|0;if(!a)return;Ow(a);return}function $k(a){a=a|0;var b=0,d=0;c[a>>2]=13840;b=a+4|0;Qp(c[b>>2]|0);Yq((c[b>>2]|0)+320|0);d=c[b>>2]|0;if(!d){Ow(a);return}Ow(d);Ow(a);return}function al(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=c[b>>2]|0;h=c[d>>2]|0;d=h;i=g;j=e;k=f-j|0;if((k|0)<=0){l=h;return l|0}m=b+8|0;n=c[m>>2]|0;o=b+4|0;p=c[o>>2]|0;q=p;if((k|0)<=(n-q|0)){r=q-d|0;if((k|0)>(r|0)){s=e+r|0;if((s|0)==(f|0))t=p;else{u=s;v=p;while(1){a[v>>0]=a[u>>0]|0;w=(c[o>>2]|0)+1|0;c[o>>2]=w;u=u+1|0;if((u|0)==(f|0)){t=w;break}else v=w}}if((r|0)>0){x=t;y=s}else{l=h;return l|0}}else{x=p;y=f}s=x-(g+(k-i+d))|0;t=h+s|0;if(t>>>0<p>>>0){r=x;v=t;do{a[r>>0]=a[v>>0]|0;v=v+1|0;r=(c[o>>2]|0)+1|0;c[o>>2]=r}while((v|0)!=(p|0))}AH(x+(0-s)|0,h|0,s|0)|0;AH(h|0,e|0,y-j|0)|0;l=h;return l|0}j=q-i+k|0;if((j|0)<0)Kw(b);k=g;i=n-k|0;if(i>>>0<1073741823){n=i<<1;i=n>>>0<j>>>0?j:n;n=d-k|0;if(!i){z=0;A=0;B=n}else{C=i;D=n;E=15}}else{C=2147483647;D=d-k|0;E=15}if((E|0)==15){z=C;A=Mw(C)|0;B=D}D=A+B|0;C=D;E=A+z|0;if((e|0)==(f|0)){F=g;G=C}else{g=e;e=D;z=C;while(1){a[e>>0]=a[g>>0]|0;e=z+1|0;C=e;g=g+1|0;if((g|0)==(f|0)){H=C;break}else z=C}F=c[b>>2]|0;G=H}H=d-F|0;z=A+(B-H)|0;zH(z|0,F|0,H|0)|0;H=(c[o>>2]|0)-d|0;d=G;zH(d|0,h|0,H|0)|0;h=c[b>>2]|0;c[b>>2]=z;c[o>>2]=d+H;c[m>>2]=E;if(!h){l=D;return l|0}Ow(h);l=D;return l|0}function bl(a,b){a=a|0;b=b|0;Bj(a,b);return}function cl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+64|0;h=g+40|0;j=g+32|0;k=g+16|0;l=g;Ij(h,b,d);Xm(j);dn(j,e,f);pn(k,j,h,Ej(b)|0);xm(l);f=Gm(l,k)|0;Lm(l,(Oj(b,l,0)|0)+f|0)|0;Am(a,l);ym(l);l=c[k>>2]|0;if(l){a=k+4|0;if((c[a>>2]|0)!=(l|0))c[a>>2]=l;Ow(l)}Zm(j);j=c[h>>2]|0;if(!j){i=g;return}l=h+4|0;if((c[l>>2]|0)!=(j|0))c[l>>2]=j;Ow(j);i=g;return}function dl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+64|0;g=f+40|0;h=f+32|0;j=f+20|0;k=f+8|0;l=f;lm(g,d);vm(g)|0;yj(h);Pj(h,g);rm(j,g);Ij(k,h,b);Xm(l);en(l,e);e=qn(l,k,j,Ej(a)|0)|0;Zm(l);l=c[k>>2]|0;if(l){a=k+4|0;if((c[a>>2]|0)!=(l|0))c[a>>2]=l;Ow(l)}l=c[j>>2]|0;if(!l){zj(h);mm(g);i=f;return e|0}a=j+4|0;if((c[a>>2]|0)!=(l|0))c[a>>2]=l;Ow(l);zj(h);mm(g);i=f;return e|0}function el(a){a=a|0;var b=0;c[a>>2]=13968;b=Mw(60)|0;Al(b,0);c[a+4>>2]=b;return}function fl(a,b){a=a|0;b=b|0;var d=0,e=0;if((a|0)==(b|0))return a|0;d=Mw(60)|0;Al(d,c[c[b+4>>2]>>2]|0);b=a+4|0;e=c[b>>2]|0;if(e){Bl(e);Ow(e)}c[b>>2]=d;return a|0}function gl(a){a=a|0;var b=0;c[a>>2]=13968;b=a+4|0;a=c[b>>2]|0;if(!a)return;Bl(a);Ow(a);c[b>>2]=0;return}function hl(a){a=a|0;var b=0;c[a>>2]=13968;b=c[a+4>>2]|0;if(!b){Ow(a);return}Bl(b);Ow(b);Ow(a);return}function il(a){a=a|0;var b=0;c[a>>2]=13968;b=Mw(60)|0;Al(b,16);c[a+4>>2]=b;return}function jl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+48|0;d=b+24|0;e=b+12|0;f=b;g=c[a+4>>2]|0;if(((c[g>>2]|0)!=0?(a=c[g+4>>2]|0,(a|0)!=0):0)?(c[a>>2]|0)!=0:0){i=b;return}b=Yb(8)|0;Fy(e,14064,54);Fy(f,14120,80);oi(d,e,f);$i(b,d);dd(b|0,296,39)}function kl(a){a=a|0;var b=0,d=0,e=0;jl(a);b=c[(c[a+4>>2]|0)+4>>2]|0;if(!b){d=0;return d|0}a=c[b>>2]|0;if(!a){d=0;return d|0}e=c[b+56>>2]|0;if(e){d=e;return d|0}d=c[a+16>>2]|0;return d|0}function ll(a){a=a|0;var b=0,d=0;jl(a);b=c[(c[a+4>>2]|0)+4>>2]|0;if(!b){d=0;return d|0}a=c[b>>2]|0;if(!a){d=0;return d|0}d=((c[a+8>>2]|0)+7|0)>>>3;return d|0}function ml(a){a=a|0;var b=0,d=0;jl(a);b=c[(c[a+4>>2]|0)+4>>2]|0;if(!b){d=0;return d|0}a=c[b>>2]|0;if(!a){d=0;return d|0}d=(c[a+4>>2]|0)==6?16:0;return d|0}function nl(a){a=a|0;var b=0,d=0;jl(a);b=c[(c[a+4>>2]|0)+4>>2]|0;if(!b){d=0;return d|0}a=c[b>>2]|0;if(!a){d=0;return d|0}d=(c[a+4>>2]|0)==2;return d|0}function ol(a,b){a=a|0;b=b|0;var d=0,e=0;jl(a);d=c[b>>2]|0;e=Xo(c[(c[a+4>>2]|0)+4>>2]|0,d,(c[b+4>>2]|0)-d<<3,1)|0;if((e|0)<0){d=Yb(12)|0;dm(d,e);dd(d|0,15208,55)}else return}function pl(a,b){a=a|0;b=b|0;var d=0,e=0;jl(a);d=c[b>>2]|0;e=Xo(c[(c[a+4>>2]|0)+4>>2]|0,d,(c[b+4>>2]|0)-d<<3,0)|0;if((e|0)<0){d=Yb(12)|0;dm(d,e);dd(d|0,15208,55)}else return}function ql(a,b){a=a|0;b=b|0;var d=0;jl(a);if((b|0)==3)d=b;else if((b|0)==2)d=b;else if(!b)d=b;else if((b|0)==1)d=b;else d=4;b=Wo(c[(c[a+4>>2]|0)+4>>2]|0,d)|0;if((b|0)<0){d=Yb(12)|0;dm(d,b);dd(d|0,15208,55)}else return}function rl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;jl(a);d=a+4|0;a=c[b>>2]|0;e=b+4|0;f=Yo(c[(c[d>>2]|0)+4>>2]|0,a,(c[e>>2]|0)-a|0)|0;if((f|0)<0){a=Yb(12)|0;dm(a,f);dd(a|0,15208,55)}a=(c[d>>2]|0)+8|0;if((a|0)==(b|0))return;ki(a,c[b>>2]|0,c[e>>2]|0);return}function sl(a,b){a=a|0;b=b|0;var d=0;jl(a);d=(c[a+4>>2]|0)+20|0;if((d|0)==(b|0))return;ki(d,c[b>>2]|0,c[b+4>>2]|0);return}function tl(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;jl(a);b=a+4|0;d=Zo(c[(c[b>>2]|0)+4>>2]|0)|0;if((d|0)<0){e=Yb(12)|0;dm(e,d);dd(e|0,15208,55)}e=c[b>>2]|0;d=c[e+4>>2]|0;if((((d|0)!=0?(f=c[d>>2]|0,(f|0)!=0):0)?(c[f+4>>2]|0)==6:0)?(f=c[e+20>>2]|0,g=_o(d,f,(c[e+24>>2]|0)-f|0)|0,(g|0)<0):0){f=Yb(12)|0;dm(f,g);dd(f|0,15208,55)}jl(a);f=c[b>>2]|0;g=c[f+4>>2]|0;if(!g)return;if(!(c[g>>2]|0))return;if(c[g+8>>2]|0)return;g=f+32|0;jl(a);a=c[(c[b>>2]|0)+4>>2]|0;if((a|0)!=0?(b=c[a>>2]|0,(b|0)!=0):0)h=c[b+24>>2]|0;else h=0;El(g,h);return}function ul(a){a=a|0;var b=0,d=0;b=a+4|0;a=c[b>>2]|0;if(!a)return;d=Mw(60)|0;Al(d,c[a>>2]|0);a=c[b>>2]|0;if(a){Bl(a);Ow(a)}c[b>>2]=d;return}function vl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+64|0;g=f+52|0;h=f+16|0;j=f;k=f+28|0;l=f+40|0;m=f+56|0;n=f+12|0;o=f+24|0;p=f+20|0;q=f+8|0;r=f+4|0;jl(b);rl(b,e);tl(b);wl(k,b,d);xl(l,b);c[a>>2]=0;b=a+4|0;c[b>>2]=0;c[a+8>>2]=0;c[m>>2]=0;c[n>>2]=c[k>>2];d=k+4|0;c[o>>2]=c[d>>2];c[j>>2]=c[m>>2];c[h>>2]=c[n>>2];c[g>>2]=c[o>>2];Nh(a,j,h,g)|0;c[p>>2]=c[b>>2];c[q>>2]=c[l>>2];b=l+4|0;c[r>>2]=c[b>>2];c[j>>2]=c[p>>2];c[h>>2]=c[q>>2];c[g>>2]=c[r>>2];Nh(a,j,h,g)|0;g=c[l>>2]|0;if(g){if((c[b>>2]|0)!=(g|0))c[b>>2]=g;Ow(g)}g=c[k>>2]|0;if(!g){i=f;return}if((c[d>>2]|0)!=(g|0))c[d>>2]=g;Ow(g);i=f;return}function wl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+16|0;g=f+12|0;h=f;jl(d);c[g>>2]=0;j=e+4|0;k=(c[j>>2]|0)-(c[e>>2]|0)|0;jl(d);l=d+4|0;m=c[(c[l>>2]|0)+4>>2]|0;if((m|0)!=0?(n=c[m>>2]|0,(n|0)!=0):0)o=c[n+24>>2]|0;else o=0;n=o+k|0;c[b>>2]=0;k=b+4|0;c[k>>2]=0;c[b+8>>2]=0;if(n){if((n|0)<0)Kw(b);o=Mw(n)|0;c[k>>2]=o;c[b>>2]=o;c[b+8>>2]=o+n;m=n;n=o;do{a[n>>0]=0;n=(c[k>>2]|0)+1|0;c[k>>2]=n;m=m+-1|0}while((m|0)!=0)}jl(d);m=c[(c[l>>2]|0)+4>>2]|0;if(m)if((c[m>>2]|0)!=0?(c[m+8>>2]|0)==0:0){jl(d);d=c[l>>2]|0;n=c[d+4>>2]|0;if(n){o=c[n>>2]|0;if((o|0)!=0?(c[o+4>>2]|0)==6:0){Fl(d+32|0,e);if(Gl((c[l>>2]|0)+32|0)|0){Hl(h,(c[l>>2]|0)+32|0);d=c[h>>2]|0;o=h+4|0;p=$o(c[(c[l>>2]|0)+4>>2]|0,d,(c[o>>2]|0)-d|0,c[b>>2]|0,g)|0;if((p|0)<0){d=Yb(12)|0;dm(d,p);dd(d|0,15208,55)}d=c[h>>2]|0;if(d){if((c[o>>2]|0)!=(d|0))c[o>>2]=d;Ow(d)}}}else{q=n;r=22}}else{q=0;r=22}}else{q=m;r=22}else{q=0;r=22}if((r|0)==22?(r=c[e>>2]|0,e=$o(q,r,(c[j>>2]|0)-r|0,c[b>>2]|0,g)|0,(e|0)<0):0){r=Yb(12)|0;dm(r,e);dd(r|0,15208,55)}r=c[g>>2]|0;g=c[k>>2]|0;e=c[b>>2]|0;j=g-e|0;if(r>>>0>j>>>0){Ek(b,r-j|0);i=f;return}if(r>>>0>=j>>>0){i=f;return}j=e+r|0;if((g|0)==(j|0)){i=f;return}c[k>>2]=j;i=f;return}function xl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=i;i=i+48|0;f=e+4|0;g=e+16|0;h=e+8|0;j=e+20|0;k=e+36|0;l=e;m=e+12|0;n=e+24|0;jl(d);c[j>>2]=0;jl(d);o=d+4|0;p=c[(c[o>>2]|0)+4>>2]|0;if((p|0)!=0?(q=c[p>>2]|0,(q|0)!=0):0)r=c[q+24>>2]|0;else r=0;c[b>>2]=0;q=b+4|0;c[q>>2]=0;c[b+8>>2]=0;if(!r){s=p;t=0}else{if((r|0)<0)Kw(b);p=Mw(r)|0;c[q>>2]=p;c[b>>2]=p;c[b+8>>2]=p+r;u=r;r=p;do{a[r>>0]=0;r=(c[q>>2]|0)+1|0;c[q>>2]=r;u=u+-1|0}while((u|0)!=0);s=c[(c[o>>2]|0)+4>>2]|0;t=c[b>>2]|0}u=ap(s,t,j)|0;if((u|0)<0){t=Yb(12)|0;dm(t,u);dd(t|0,15208,55)}t=c[j>>2]|0;j=c[q>>2]|0;u=c[b>>2]|0;s=j-u|0;if(t>>>0<=s>>>0){if(t>>>0<s>>>0?(r=u+t|0,(j|0)!=(r|0)):0)c[q>>2]=r}else Ek(b,t-s|0);jl(d);s=c[(c[o>>2]|0)+4>>2]|0;if(!s){i=e;return}t=c[s>>2]|0;if(!t){i=e;return}if((c[t+4>>2]|0)!=6){i=e;return}jl(d);t=c[(c[o>>2]|0)+4>>2]|0;if(((t|0)!=0?(c[t>>2]|0)!=0:0)?(c[t+8>>2]|0)==1:0){jl(d);t=(c[o>>2]|0)+4|0;s=c[t>>2]|0;if(s){r=c[s>>2]|0;if((r|0)!=0?(c[r+4>>2]|0)==6:0){r=Mw(16)|0;j=r;u=j+16|0;do{a[j>>0]=0;j=j+1|0}while((j|0)<(u|0));v=r+16|0;w=r;x=c[t>>2]|0}else{v=0;w=0;x=s}}else{v=0;w=0;x=0}s=bp(x,w,v-w|0)|0;if((s|0)<0){x=Yb(12)|0;dm(x,s);dd(x|0,15208,55)}c[k>>2]=c[q>>2];c[l>>2]=w;c[m>>2]=v;c[h>>2]=c[k>>2];c[g>>2]=c[l>>2];c[f>>2]=c[m>>2];Nh(b,h,g,f)|0;if(!w){i=e;return}Ow(w);i=e;return}jl(d);d=c[o>>2]|0;w=c[d+4>>2]|0;if(!w){i=e;return}if(!(c[w>>2]|0)){i=e;return}if(c[w+8>>2]|0){i=e;return}Il(n,d+32|0);d=c[n>>2]|0;w=n+4|0;f=cp(c[(c[o>>2]|0)+4>>2]|0,d,(c[w>>2]|0)-d|0)|0;if((f|0)<0){d=Yb(12)|0;dm(d,f);dd(d|0,15208,55)}d=c[n>>2]|0;if(!d){i=e;return}if((c[w>>2]|0)!=(d|0))c[w>>2]=d;Ow(d);i=e;return}function yl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+32|0;f=e+16|0;g=e+12|0;h=e;jl(a);c[f>>2]=0;j=a+4|0;a=ps(c[c[j>>2]>>2]|0,f,g)|0;if((a|0)<0){k=Yb(12)|0;dm(k,a);dd(k|0,15208,55)}else{k=Gm(b,(c[j>>2]|0)+8|0)|0;Fy(h,c[f>>2]|0,c[g>>2]|0);g=(Km(b,h)|0)+k|0;Hy(h);h=g+d+(Lm(b,g)|0)|0;i=e;return h|0}return 0}function zl(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+64|0;f=e+40|0;g=e+28|0;h=e+24|0;j=e+16|0;k=e;vm(d)|0;um(f,d);l=a[f>>0]|0;m=(l&1)==0;c[g+4>>2]=m?(l&255)>>>1:c[f+4>>2]|0;c[g+8>>2]=m?f+1|0:c[f+8>>2]|0;c[h>>2]=0;m=os(g,h)|0;if((m|0)<0){g=Yb(12)|0;dm(g,m);dd(g|0,15208,55)}g=c[h>>2]|0;c[j>>2]=13968;h=j+4|0;m=Mw(60)|0;Al(m,g);c[h>>2]=m;fl(b,j)|0;c[j>>2]=13968;j=c[h>>2]|0;if(j){Bl(j);Ow(j);c[h>>2]=0}rm(k,d);rl(b,k);b=c[k>>2]|0;if(!b){Hy(f);i=e;return}d=k+4|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);Hy(f);i=e;return}function Al(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=0;c[a+28>>2]=0;Dl(a+32|0);Cl(a,b);return}function Bl(a){a=a|0;var b=0,d=0;c[a>>2]=0;b=a+4|0;d=c[b>>2]|0;if(d){Uo(d);d=c[b>>2]|0;if(d)Ow(d);c[b>>2]=0}b=c[a+48>>2]|0;if(b){d=a+52|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+36>>2]|0;if(b){d=a+40|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+20>>2]|0;if(b){d=a+24|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b)}b=c[a+8>>2]|0;if(!b)return;d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);return}function Cl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=Mw(64)|0;e=d;f=e+64|0;do{c[e>>2]=0;e=e+4|0}while((e|0)<(f|0));e=a+4|0;c[e>>2]=d;To(d);c[a>>2]=b;if(!b)return;d=Ro(b)|0;b=Vo(c[e>>2]|0,d)|0;if((b|0)>=0)return;c[a>>2]=0;a=c[e>>2]|0;if(a){Uo(a);a=c[e>>2]|0;if(a)Ow(a);c[e>>2]=0}e=Yb(12)|0;dm(e,b);dd(e|0,15208,55)}function Dl(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;c[a+24>>2]=0;return}function El(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=b;b=c[a+4>>2]|0;d=a+8|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;b=c[a+16>>2]|0;d=a+20|0;if((c[d>>2]|0)==(b|0))return;c[d>>2]=b;return}function Fl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+48|0;e=d+28|0;f=d+16|0;g=d+4|0;h=d+8|0;j=d+32|0;k=d;l=d+12|0;m=d+24|0;n=d+20|0;o=a+16|0;p=a+20|0;c[h>>2]=c[p>>2];c[j>>2]=c[b>>2];c[k>>2]=c[b+4>>2];c[g>>2]=c[h>>2];c[f>>2]=c[j>>2];c[e>>2]=c[k>>2];Jl(o,g,f,e)|0;k=c[o>>2]|0;o=k;j=(c[p>>2]|0)-o|0;h=c[a>>2]|0;b=j-h|0;if((b|0)<=0){i=d;return}q=k+b|0;b=q;c[l>>2]=c[a+8>>2];c[m>>2]=o;c[n>>2]=b;c[g>>2]=c[l>>2];c[f>>2]=c[m>>2];c[e>>2]=c[n>>2];Nh(a+4|0,g,f,e)|0;if((j|0)==(h|0)){i=d;return}h=(c[p>>2]|0)-b|0;AH(k|0,q|0,h|0)|0;q=k+h|0;if((c[p>>2]|0)==(q|0)){i=d;return}c[p>>2]=q;i=d;return}function Gl(a){a=a|0;return (c[a+4>>2]|0)!=(c[a+8>>2]|0)|0}function Hl(a,b){a=a|0;b=b|0;var d=0;d=b+4|0;c[a>>2]=c[d>>2];c[d>>2]=0;d=b+8|0;c[a+4>>2]=c[d>>2];c[d>>2]=0;d=b+12|0;c[a+8>>2]=c[d>>2];c[d>>2]=0;return}function Il(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;f=d+20|0;g=c[f>>2]|0;h=d+16|0;d=c[h>>2]|0;i=g-d|0;if((g|0)==(d|0))return;if((i|0)<0)Kw(b);d=Mw(i)|0;c[e>>2]=d;c[b>>2]=d;c[b+8>>2]=d+i;i=c[h>>2]|0;h=c[f>>2]|0;if((i|0)==(h|0))return;else{j=i;k=d}do{a[k>>0]=a[j>>0]|0;k=(c[e>>2]|0)+1|0;c[e>>2]=k;j=j+1|0}while((j|0)!=(h|0));return}function Jl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;g=c[b>>2]|0;h=c[d>>2]|0;d=h;i=g;j=d-i|0;k=c[e>>2]|0;l=c[f>>2]|0;f=l-k|0;if((f|0)<=0){m=h;return m|0}n=b+8|0;o=c[n>>2]|0;p=b+4|0;q=c[p>>2]|0;r=q;if((f|0)<=(o-r|0)){s=r-d|0;if((f|0)>(s|0)){t=k+s|0;u=t;v=l;if((t|0)==(v|0))w=q;else{x=t;t=q;while(1){a[t>>0]=a[x>>0]|0;y=(c[p>>2]|0)+1|0;c[p>>2]=y;x=x+1|0;if((x|0)==(v|0)){w=y;break}else t=y}}if((s|0)>0){z=w;A=u}else{m=h;return m|0}}else{z=q;A=l}u=z-(g+(j+f))|0;j=h+u|0;if(j>>>0<q>>>0){w=z;s=j;do{a[w>>0]=a[s>>0]|0;s=s+1|0;w=(c[p>>2]|0)+1|0;c[p>>2]=w}while((s|0)!=(q|0))}AH(z+(0-u)|0,h|0,u|0)|0;u=c[e>>2]|0;e=A;if((u|0)==(e|0)){m=h;return m|0}else{B=h;C=u}while(1){a[B>>0]=a[C>>0]|0;C=C+1|0;if((C|0)==(e|0)){m=h;break}else B=B+1|0}return m|0}B=r-i+f|0;if((B|0)<0)Kw(b);f=g;i=o-f|0;if(i>>>0<1073741823){o=i<<1;i=o>>>0<B>>>0?B:o;o=d-f|0;if(!i){D=0;E=0;F=o}else{G=i;H=o;I=16}}else{G=2147483647;H=d-f|0;I=16}if((I|0)==16){D=G;E=Mw(G)|0;F=H}H=E+F|0;G=H;I=E+D|0;D=k;k=l;if((D|0)==(k|0)){J=g;K=G}else{g=D;D=H;l=G;while(1){a[D>>0]=a[g>>0]|0;D=l+1|0;G=D;g=g+1|0;if((g|0)==(k|0)){L=G;break}else l=G}J=c[b>>2]|0;K=L}L=d-J|0;l=E+(F-L)|0;zH(l|0,J|0,L|0)|0;L=(c[p>>2]|0)-d|0;d=K;zH(d|0,h|0,L|0)|0;h=c[b>>2]|0;c[b>>2]=l;c[p>>2]=d+L;c[n>>2]=I;if(!h){m=H;return m|0}Ow(h);m=H;return m|0}function Kl(a,b){a=a|0;b=b|0;var d=0,e=0;c[a>>2]=14216;d=Mw(44)|0;c[d>>2]=0;c[d+4>>2]=0;e=d+12|0;c[e>>2]=0;c[d+16>>2]=0;c[d+8>>2]=e;e=d+20|0;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[a+4>>2]=d;if(b>>>0<113){a=Yb(8)|0;By(a,14272);dd(a|0,78680,39)}else{c[d>>2]=b;return}}function Ll(a){a=a|0;var b=0,d=0;c[a>>2]=14216;b=c[a+4>>2]|0;if(!b)return;a=c[b+32>>2]|0;if(a){d=b+36|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}a=c[b+20>>2]|0;if(a){d=b+24|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}Wl(b+8|0,c[b+12>>2]|0);Ow(b);return}function Ml(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=14216;b=c[a+4>>2]|0;if(!b){Ow(a);return}d=c[b+32>>2]|0;if(d){e=b+36|0;if((c[e>>2]|0)!=(d|0))c[e>>2]=d;Ow(d)}d=c[b+20>>2]|0;if(d){e=b+24|0;if((c[e>>2]|0)!=(d|0))c[e>>2]=d;Ow(d)}Wl(b+8|0,c[b+12>>2]|0);Ow(b);Ow(a);return}function Nl(a){a=a|0;var b=0,d=0;b=c[a+4>>2]|0;a=b+8|0;d=b+12|0;Wl(a,c[d>>2]|0);c[b+16>>2]=0;c[a>>2]=d;c[d>>2]=0;return}function Ol(a){a=a|0;return c[(c[a+4>>2]|0)+16>>2]|0}function Pl(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=(c[d+4>>2]|0)+12|0;d=c[f>>2]|0;if(d){g=f;h=d;a:while(1){d=h;while(1){if((c[d+16>>2]|0)>>>0>=e>>>0){i=d;break}d=c[d+4>>2]|0;if(!d){j=g;break a}}h=c[i>>2]|0;if(!h){j=i;break}else g=i}if((j|0)!=(f|0)?!((j|0)==(f|0)?1:(c[j+16>>2]|0)>>>0>e>>>0):0){c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;f=j+24|0;i=c[f>>2]|0;g=j+20|0;j=c[g>>2]|0;h=i-j|0;if((i|0)==(j|0))return;if((h|0)<0)Kw(b);j=Mw(h)|0;c[e>>2]=j;c[b>>2]=j;c[b+8>>2]=j+h;h=c[g>>2]|0;g=c[f>>2]|0;if((h|0)==(g|0))return;else{k=h;l=j}do{a[l>>0]=a[k>>0]|0;l=(c[e>>2]|0)+1|0;c[e>>2]=l;k=k+1|0}while((k|0)!=(g|0));return}}g=Yb(8)|0;By(g,14344);c[g>>2]=78768;dd(g|0,78808,39)}function Ql(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0;e=i;i=i+80|0;f=e+60|0;g=e+48|0;h=e+36|0;j=e+24|0;k=e+12|0;l=e;m=c[d>>2]|0;n=d+4|0;d=c[n>>2]|0;if((m|0)==(d|0)){o=Yb(8)|0;Fy(f,14392,54);$i(o,f);dd(o|0,296,39)}o=m+1|0;p=o;q=a[m>>0]|0;m=q&255;r=m&64;s=m>>>4&3;t=m&15;m=b+4|0;if(q<<24>>24<=-1){q=c[m>>2]|0;c[q+4>>2]=t;b=q+32|0;Xm(f);Xl(s);sn(f,17);c[g>>2]=0;q=g+4|0;c[q>>2]=0;c[g+8>>2]=0;do if((o|0)!=(d|0)){u=g+8|0;v=0;w=0;x=p;while(1){Xl(s);if((v-w|0)>>>0>=32){y=x;z=19;break}A=x;B=A+1|0;C=B;D=c[q>>2]|0;if((D|0)==(c[u>>2]|0)){E=c[g>>2]|0;F=E;G=D-F+1|0;if((G|0)<0){z=12;break}H=E;I=D-H|0;if(I>>>0<1073741823){J=I<<1;I=J>>>0<G>>>0?G:J;J=c[q>>2]|0;G=J-H|0;if(!I){K=0;L=0;M=G;N=J}else{O=I;P=J;Q=G;z=16}}else{G=c[q>>2]|0;O=2147483647;P=G;Q=G-H|0;z=16}if((z|0)==16){z=0;K=O;L=Mw(O)|0;M=Q;N=P}a[L+M>>0]=a[A>>0]|0;G=N-H|0;H=L+(M-G)|0;zH(H|0,E|0,G|0)|0;c[g>>2]=H;c[q>>2]=L+(M+1);c[u>>2]=L+K;if(F)Ow(F)}else{a[D>>0]=a[A>>0]|0;c[q>>2]=(c[q>>2]|0)+1}if((B|0)==(d|0)){y=C;z=19;break}v=c[q>>2]|0;w=c[g>>2]|0;x=C}if((z|0)==12)Kw(g);else if((z|0)==19){R=y;S=c[q>>2]|0;T=c[g>>2]|0;break}}else{R=p;S=0;T=0}while(0);Xl(s);if((S-T|0)!=32){T=Yb(8)|0;Fy(h,14448,74);$i(T,h);dd(T|0,296,39)}un(f,g);kn(j,f);T=c[g>>2]|0;if(T){if((c[q>>2]|0)!=(T|0))c[q>>2]=T;Ow(T)}Zm(f);if((b|0)!=(j|0))ki(b,c[j>>2]|0,c[j+4>>2]|0);b=c[j>>2]|0;if(b){T=j+4|0;if((c[T>>2]|0)!=(b|0))c[T>>2]=b;Ow(b)}if(r){r=(c[m>>2]|0)+20|0;b=c[n>>2]|0;Xl(s);c[k>>2]=0;s=k+4|0;c[s>>2]=0;c[k+8>>2]=0;T=R;a:do if((T|0)==(b|0)){U=0;V=0;W=R}else{j=k+8|0;q=0;g=0;h=T;S=R;while(1){y=g;d=q-y|0;if(d>>>0>=64){U=q;V=g;W=S;break a}K=h;h=h+1|0;L=h;if((q|0)==(c[j>>2]|0)){M=d+1|0;if((M|0)<0)break;d=g;N=q-d|0;if(N>>>0<1073741823){P=N<<1;N=P>>>0<M>>>0?M:P;P=c[s>>2]|0;M=P-d|0;if(!N){X=0;Y=0;Z=M;_=P}else{$=N;aa=P;ba=M;z=44}}else{M=c[s>>2]|0;$=2147483647;aa=M;ba=M-d|0;z=44}if((z|0)==44){z=0;X=$;Y=Mw($)|0;Z=ba;_=aa}a[Y+Z>>0]=a[K>>0]|0;M=Y+(Z+1)|0;P=_-d|0;d=Y+(Z-P)|0;zH(d|0,g|0,P|0)|0;c[k>>2]=d;c[s>>2]=M;c[j>>2]=Y+X;if(!y)ca=M;else{Ow(y);ca=c[s>>2]|0}}else{a[q>>0]=a[K>>0]|0;K=(c[s>>2]|0)+1|0;c[s>>2]=K;ca=K}K=c[k>>2]|0;if((h|0)==(b|0)){U=ca;V=K;W=L;break a}else{q=ca;g=K;S=L}}Kw(k)}while(0);if((U-V|0)!=64){ca=Yb(8)|0;Fy(f,14528,58);$i(ca,f);dd(ca|0,296,39)}if((r|0)==(k|0))da=V;else{ki(r,V,U);da=c[k>>2]|0}if(!da){ea=0;fa=W}else{if((c[s>>2]|0)!=(da|0))c[s>>2]=da;Ow(da);ea=0;fa=W}}else{ea=0;fa=R}}else{ea=t;fa=p}p=c[m>>2]|0;m=p+8|0;t=p+12|0;R=c[t>>2]|0;do if(R){W=R;while(1){da=c[W+16>>2]|0;if(ea>>>0<da>>>0){s=c[W>>2]|0;if(!s){ga=W;ha=W;z=58;break}else ia=s}else{if(da>>>0>=ea>>>0){ja=W;z=64;break}da=W+4|0;s=c[da>>2]|0;if(!s){ka=da;la=W;z=62;break}else ia=s}W=ia}if((z|0)==58){c[f>>2]=ha;ma=ga;na=ha;z=65;break}else if((z|0)==62){c[f>>2]=la;ma=ka;na=la;z=65;break}else if((z|0)==64){c[f>>2]=ja;if(!ja){ma=f;na=ja;z=65;break}else{oa=ja;break}}}else{c[f>>2]=t;ma=t;na=t;z=65}while(0);if((z|0)==65){z=Mw(32)|0;c[z+16>>2]=ea;c[z+20>>2]=0;c[z+24>>2]=0;c[z+28>>2]=0;c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=na;c[ma>>2]=z;na=c[c[m>>2]>>2]|0;if(!na)pa=z;else{c[m>>2]=na;pa=c[ma>>2]|0}vi(c[p+12>>2]|0,pa);pa=p+16|0;c[pa>>2]=(c[pa>>2]|0)+1;oa=z}z=oa+20|0;oa=c[n>>2]|0;n=oa;c[l>>2]=0;pa=l+4|0;c[pa>>2]=0;c[l+8>>2]=0;p=n-fa|0;if((n|0)!=(fa|0)){if((p|0)<0)Kw(l);n=Mw(p)|0;c[pa>>2]=n;c[l>>2]=n;c[l+8>>2]=n+p;p=fa;if((p|0)==(oa|0))qa=n;else{fa=p;p=n;while(1){a[p>>0]=a[fa>>0]|0;n=(c[pa>>2]|0)+1|0;c[pa>>2]=n;fa=fa+1|0;if((fa|0)==(oa|0)){qa=n;break}else p=n}}}else qa=0;if((z|0)!=(l|0))ki(z,c[l>>2]|0,qa);qa=c[l>>2]|0;if(!qa){i=e;return}if((c[pa>>2]|0)!=(qa|0))c[pa>>2]=qa;Ow(qa);i=e;return}function Rl(a){a=a|0;var b=0,d=0;b=c[a+4>>2]|0;a=c[b+4>>2]|0;if(!a){d=0;return d|0}d=(a|0)==(c[b+16>>2]|0);return d|0}function Sl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+32|0;f=e+12|0;g=e;c[f>>2]=0;h=f+4|0;c[h>>2]=0;c[f+8>>2]=0;c[g>>2]=0;j=g+4|0;c[j>>2]=0;c[g+8>>2]=0;Tl(a,b,d,f,g);d=c[g>>2]|0;if(d){if((c[j>>2]|0)!=(d|0))c[j>>2]=d;Ow(d)}d=c[f>>2]|0;if(!d){i=e;return}if((c[h>>2]|0)!=(d|0))c[h>>2]=d;Ow(d);i=e;return}function Tl(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0;h=i;i=i+240|0;j=h+72|0;k=h+68|0;l=h+64|0;m=h+200|0;n=h+184|0;o=h+8|0;p=h+24|0;q=h+132|0;r=h+32|0;s=h+44|0;t=h+156|0;u=h+172|0;v=h+192|0;w=h+208|0;x=h+216|0;y=h+120|0;z=h+80|0;A=h+92|0;B=h+104|0;C=h+116|0;D=h+4|0;E=h+144|0;F=h+152|0;G=h+56|0;H=h+148|0;I=h;J=h+60|0;K=h+168|0;Xm(m);en(m,e);Xm(n);gn(n,m);hn(o,m,n);il(p);e=(c[f>>2]|0)==(c[f+4>>2]|0);L=e^1;if(e)M=0;else{N=(rn(n)|0)==17;M=N?64:0}N=(c[d+4>>2]|0)-(c[d>>2]|0)|0;O=ml(p)|0;P=b+4|0;b=c[c[P>>2]>>2]|0;Q=N+O|0;O=(rn(m)|0)==17;N=b+-1|0;b=N-(O?32:0)-M|0;if(Q>>>0>=b>>>0){M=(~~+$(+(+((Q-b|0)>>>0)/+(N>>>0)))>>>0)+1|0;if(M>>>0>15){N=Yb(8)|0;Fy(q,14592,55);$i(N,q);dd(N|0,296,39)}else R=M}else R=1;Yl(r,R,n,L);ol(p,o);sl(p,r);L=kl(p)|0;Gn(j);Kn(t,j,r,L);Hn(j);vl(s,p,d,t);d=c[t>>2]|0;if(d){L=t+4|0;if((c[L>>2]|0)!=(d|0))c[L>>2]=d;Ow(d)}c[u>>2]=0;d=u+4|0;c[d>>2]=0;c[u+8>>2]=0;if(!e){Xm(v);dn(v,f,g);wj(w);Ij(x,w,s);pn(y,v,x,Ej(w)|0);vn(z,v,y);g=z+4|0;ki(u,c[z>>2]|0,c[g>>2]|0);f=c[z>>2]|0;if(f){if((c[g>>2]|0)!=(f|0))c[g>>2]=f;Ow(f)}f=c[y>>2]|0;if(f){g=y+4|0;if((c[g>>2]|0)!=(f|0))c[g>>2]=f;Ow(f)}f=c[x>>2]|0;if(f){g=x+4|0;if((c[g>>2]|0)!=(f|0))c[g>>2]=f;Ow(f)}zj(w);Zm(v)}Zl(rn(n)|0);tn(A,n);v=c[P>>2]|0;w=v+8|0;f=v+12|0;Wl(w,c[f>>2]|0);c[v+16>>2]=0;c[w>>2]=f;c[f>>2]=0;a:do if(R){f=B+4|0;w=B+8|0;v=B+8|0;g=(R&15|(e?128:192))&255;x=A+4|0;y=s+4|0;z=c[s>>2]|0;L=0;b:while(1){t=z;c[B>>2]=0;c[f>>2]=0;c[w>>2]=0;M=c[c[P>>2]>>2]|0;if(!M){S=0;T=0}else{N=Mw(M)|0;q=N;b=N+M|0;c[B>>2]=q;c[f>>2]=q;c[v>>2]=b;S=N;T=b}do if(L){if(L>>>0>15){U=41;break b}b=L&15;if((S|0)!=(T|0)){a[S>>0]=b;c[f>>2]=(c[f>>2]|0)+1;break}N=S;q=T-N+1|0;if((q|0)<0){U=45;break b}M=S;Q=T-M|0;if(Q>>>0<1073741823){O=Q<<1;Q=O>>>0<q>>>0?q:O;O=c[f>>2]|0;q=O-M|0;if(!Q){V=0;W=0;X=q;Y=O}else{Z=Q;_=O;aa=q;U=49}}else{q=c[f>>2]|0;Z=2147483647;_=q;aa=q-M|0;U=49}if((U|0)==49){U=0;V=Z;W=Mw(Z)|0;X=aa;Y=_}a[W+X>>0]=b;b=Y-M|0;M=W+(X-b)|0;zH(M|0,S|0,b|0)|0;c[B>>2]=M;c[f>>2]=W+(X+1);c[v>>2]=W+V;if(N)Ow(N)}else{if((S|0)==(T|0)){N=S;M=T-N+1|0;if((M|0)<0){U=32;break b}b=S;q=T-b|0;if(q>>>0<1073741823){O=q<<1;q=O>>>0<M>>>0?M:O;O=c[f>>2]|0;M=O-b|0;if(!q){ba=0;ca=0;da=M;ea=O}else{fa=q;ga=O;ha=M;U=36}}else{M=c[f>>2]|0;fa=2147483647;ga=M;ha=M-b|0;U=36}if((U|0)==36){U=0;ba=fa;ca=Mw(fa)|0;da=ha;ea=ga}a[ca+da>>0]=g;M=ca+(da+1)|0;O=ea-b|0;b=ca+(da-O)|0;zH(b|0,S|0,O|0)|0;c[B>>2]=b;c[f>>2]=M;c[v>>2]=ca+ba;if(!N)ia=M;else{Ow(N);ia=c[f>>2]|0}}else{a[S>>0]=g;N=(c[f>>2]|0)+1|0;c[f>>2]=N;ia=N}c[C>>2]=ia;c[D>>2]=c[A>>2];c[E>>2]=c[x>>2];c[l>>2]=c[C>>2];c[k>>2]=c[D>>2];c[j>>2]=c[E>>2];Jl(B,l,k,j)|0;c[F>>2]=c[f>>2];c[G>>2]=c[u>>2];c[H>>2]=c[d>>2];c[l>>2]=c[F>>2];c[k>>2]=c[G>>2];c[j>>2]=c[H>>2];Nh(B,l,k,j)|0}while(0);N=c[f>>2]|0;M=N-(c[B>>2]|0)|0;b=c[c[P>>2]>>2]|0;if(b>>>0<M>>>0){U=53;break}O=b-M|0;M=(c[y>>2]|0)-z|0;c[I>>2]=N;c[J>>2]=t;z=z+(O>>>0>M>>>0?M:O)|0;c[K>>2]=z;c[l>>2]=c[I>>2];c[k>>2]=c[J>>2];c[j>>2]=c[K>>2];Jl(B,l,k,j)|0;O=c[P>>2]|0;if(((c[f>>2]|0)-(c[B>>2]|0)|0)>>>0>(c[O>>2]|0)>>>0){U=55;break}M=O+8|0;N=O+12|0;b=c[N>>2]|0;do if(b){q=b;while(1){Q=c[q+16>>2]|0;if(L>>>0<Q>>>0){ja=c[q>>2]|0;if(!ja){ka=q;la=q;U=59;break}else ma=ja}else{if(Q>>>0>=L>>>0){na=q;U=65;break}Q=q+4|0;ja=c[Q>>2]|0;if(!ja){oa=Q;pa=q;U=63;break}else ma=ja}q=ma}if((U|0)==59){U=0;c[j>>2]=la;qa=ka;ra=la;U=66;break}else if((U|0)==63){U=0;c[j>>2]=pa;qa=oa;ra=pa;U=66;break}else if((U|0)==65){U=0;c[j>>2]=na;if(!na){qa=j;ra=na;U=66;break}else{sa=na;break}}}else{c[j>>2]=N;qa=N;ra=N;U=66}while(0);if((U|0)==66){U=0;N=Mw(32)|0;c[N+16>>2]=L;c[N+20>>2]=0;c[N+24>>2]=0;c[N+28>>2]=0;c[N>>2]=0;c[N+4>>2]=0;c[N+8>>2]=ra;c[qa>>2]=N;b=c[c[M>>2]>>2]|0;if(!b)ta=N;else{c[M>>2]=b;ta=c[qa>>2]|0}vi(c[O+12>>2]|0,ta);b=O+16|0;c[b>>2]=(c[b>>2]|0)+1;sa=N}N=sa+20|0;if((N|0)!=(B|0))ki(N,c[B>>2]|0,c[f>>2]|0);N=c[B>>2]|0;if(N){if((c[f>>2]|0)!=(N|0))c[f>>2]=N;Ow(N)}L=L+1|0;if(L>>>0>=R>>>0)break a}if((U|0)==32)Kw(B);else if((U|0)==41){L=Yb(8)|0;By(L,14648);dd(L|0,78680,39)}else if((U|0)==45)Kw(B);else if((U|0)==53){L=Yb(8)|0;By(L,14736);dd(L|0,78680,39)}else if((U|0)==55){L=Yb(8)|0;By(L,14776);dd(L|0,78680,39)}}while(0);Pg(o);Pg(r);U=c[A>>2]|0;if(U){B=A+4|0;if((c[B>>2]|0)!=(U|0))c[B>>2]=U;Ow(U)}U=c[u>>2]|0;if(U){if((c[d>>2]|0)!=(U|0))c[d>>2]=U;Ow(U)}U=c[s>>2]|0;if(U){d=s+4|0;if((c[d>>2]|0)!=(U|0))c[d>>2]=U;Ow(U)}U=c[r>>2]|0;if(U){d=r+4|0;if((c[d>>2]|0)!=(U|0))c[d>>2]=U;Ow(U)}gl(p);p=c[o>>2]|0;if(!p){Zm(n);Zm(m);i=h;return}U=o+4|0;if((c[U>>2]|0)!=(p|0))c[U>>2]=p;Ow(p);Zm(n);Zm(m);i=h;return}function Ul(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;c[g>>2]=0;h=g+4|0;c[h>>2]=0;c[g+8>>2]=0;Vl(a,b,g,d,e);e=c[g>>2]|0;if(!e){i=f;return}if((c[h>>2]|0)!=(e|0))c[h>>2]=e;Ow(e);i=f;return}function Vl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+208|0;h=g+176|0;j=g+116|0;k=g;l=g+48|0;m=g+152|0;n=g+16|0;o=g+24|0;p=g+96|0;q=g+128|0;r=g+144|0;s=g+160|0;t=g+184|0;u=g+60|0;v=g+72|0;w=g+80|0;x=g+104|0;y=g+120|0;z=g+36|0;A=g+124|0;B=g+4|0;C=g+40|0;D=g+140|0;E=g+44|0;F=b+4|0;b=c[F>>2]|0;G=c[b+4>>2]|0;if(!G){H=Yb(8)|0;Fy(l,14840,47);$i(H,l);dd(H|0,296,39)}if((G|0)!=(c[b+16>>2]|0)){H=Yb(8)|0;Fy(l,14840,47);$i(H,l);dd(H|0,296,39)}Xm(m);dn(m,e,f);Xm(n);en(n,(c[F>>2]|0)+32|0);f=(c[d>>2]|0)==(c[d+4>>2]|0);Yl(o,c[(c[F>>2]|0)+4>>2]|0,n,f^1);if(!f){wj(p);Fj(p);f=c[F>>2]|0;e=c[f+8>>2]|0;if((e|0)!=(f+12|0)){f=e;H=e;while(1){Gj(p,f+20|0);e=H;l=c[e+4>>2]|0;if(!l){b=e;while(1){e=c[b+8>>2]|0;if((c[e>>2]|0)==(b|0)){I=e;break}else b=e}}else{b=l;while(1){e=c[b>>2]|0;if(!e){I=b;break}else b=e}}if((I|0)==((c[F>>2]|0)+12|0))break;else{f=I;H=I}}}Hj(q,p);Xm(r);en(r,d);wn(s,r,(c[F>>2]|0)+20|0);if(!(qn(r,q,s,Ej(p)|0)|0)){d=Yb(8)|0;Fy(t,14888,60);$i(d,t);dd(d|0,296,39)}d=c[s>>2]|0;if(d){t=s+4|0;if((c[t>>2]|0)!=(d|0))c[t>>2]=d;Ow(d)}Zm(r);r=c[q>>2]|0;if(r){d=q+4|0;if((c[d>>2]|0)!=(r|0))c[d>>2]=r;Ow(r)}zj(p)}hn(u,n,m);il(v);pl(v,u);sl(v,o);p=kl(v)|0;Gn(h);Kn(w,h,o,p);Hn(h);rl(v,w);p=c[w>>2]|0;if(p){r=w+4|0;if((c[r>>2]|0)!=(p|0))c[r>>2]=p;Ow(p)}tl(v);c[a>>2]=0;p=a+4|0;c[p>>2]=0;c[a+8>>2]=0;r=c[F>>2]|0;w=c[r+8>>2]|0;if((w|0)!=(r+12|0)){r=x+4|0;d=w;q=w;while(1){wl(x,v,d+20|0);c[y>>2]=c[p>>2];c[z>>2]=c[x>>2];c[A>>2]=c[r>>2];c[k>>2]=c[y>>2];c[j>>2]=c[z>>2];c[h>>2]=c[A>>2];Nh(a,k,j,h)|0;w=c[x>>2]|0;if(w){if((c[r>>2]|0)!=(w|0))c[r>>2]=w;Ow(w)}w=q;t=c[w+4>>2]|0;if(!t){s=w;while(1){w=c[s+8>>2]|0;if((c[w>>2]|0)==(s|0)){J=w;break}else s=w}}else{s=t;while(1){w=c[s>>2]|0;if(!w){J=s;break}else s=w}}if((J|0)==((c[F>>2]|0)+12|0))break;else{d=J;q=J}}}xl(B,v);c[C>>2]=c[p>>2];c[D>>2]=c[B>>2];p=B+4|0;c[E>>2]=c[p>>2];c[k>>2]=c[C>>2];c[j>>2]=c[D>>2];c[h>>2]=c[E>>2];Nh(a,k,j,h)|0;Pg(u);Pg(o);h=c[B>>2]|0;if(h){if((c[p>>2]|0)!=(h|0))c[p>>2]=h;Ow(h)}gl(v);v=c[u>>2]|0;if(v){h=u+4|0;if((c[h>>2]|0)!=(v|0))c[h>>2]=v;Ow(v)}v=c[o>>2]|0;if(!v){Zm(n);Zm(m);i=g;return}h=o+4|0;if((c[h>>2]|0)!=(v|0))c[h>>2]=v;Ow(v);Zm(n);Zm(m);i=g;return}function Wl(a,b){a=a|0;b=b|0;var d=0;if(!b)return;Wl(a,c[b>>2]|0);Wl(a,c[b+4>>2]|0);a=c[b+20>>2]|0;if(a){d=b+24|0;if((c[d>>2]|0)!=(a|0))c[d>>2]=a;Ow(a)}Ow(b);return}function Xl(a){a=a|0;var b=0,c=0;b=i;i=i+16|0;c=b;if(!(a<<24>>24)){i=b;return}else{b=Yb(8)|0;Fy(c,15072,48);$i(b,c);dd(b|0,296,39)}}function Yl(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+48|0;h=g+8|0;j=g+16|0;k=g+20|0;l=g+24|0;m=g+4|0;n=g;o=g+12|0;if(d>>>0>15){p=Yb(8)|0;By(p,15e3);dd(p|0,78680,39)}c[b>>2]=0;p=b+4|0;c[p>>2]=0;c[b+8>>2]=0;tn(l,e);Zl(rn(e)|0);e=Mw(1)|0;q=e+1|0;r=q;a[e>>0]=(f?192:128)|d&15;c[b>>2]=e;c[p>>2]=r;c[b+8>>2]=r;c[m>>2]=q;c[n>>2]=c[l>>2];q=l+4|0;c[o>>2]=c[q>>2];c[k>>2]=c[m>>2];c[j>>2]=c[n>>2];c[h>>2]=c[o>>2];Jl(b,k,j,h)|0;h=c[l>>2]|0;if(!h){i=g;return}if((c[q>>2]|0)!=(h|0))c[q>>2]=h;Ow(h);i=g;return}function Zl(a){a=a|0;var b=0,c=0;b=i;i=i+16|0;c=b;if((a|0)==17){i=b;return}else{b=Yb(8)|0;Fy(c,14952,43);$i(b,c);dd(b|0,296,39)}}function _l(){return 67585}function $l(){return 1}function am(){return 8}function bm(){return 1}function cm(a){a=a|0;Fy(a,15128,5);return}function dm(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;cr(b,15224,1024);Fy(e,15224,yH(15224)|0);$i(a,e);Hy(e);c[a>>2]=15144;c[a+8>>2]=b;i=d;return}function em(a){a=a|0;Yw(a);return}function fm(a){a=a|0;Yw(a);Ow(a);return}function gm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+144|0;f=e;g=e+20|0;h=e+104|0;j=e+48|0;k=e+100|0;l=e+116|0;m=e+120|0;n=e+76|0;o=e+64|0;p=e+32|0;q=e+8|0;r=e+88|0;Fy(h,16256,10);Lg(g,h);Wk(f,g);s=c[g>>2]|0;if(s){t=g+4|0;if((c[t>>2]|0)!=(s|0))c[t>>2]=s;Ow(s)}Hy(h);xm(j);c[k>>2]=0;h=ps(7,k,l)|0;if((h|0)<0){s=Yb(12)|0;dm(s,h);dd(s|0,15208,55)}s=Ro(7)|0;if(!s){h=Yb(8)|0;Fy(m,16272,41);$i(h,m);dd(h|0,296,39)}Xk(n,f,c[s+16>>2]|0);s=Gm(j,n)|0;h=c[n>>2]|0;if(h){m=n+4|0;if((c[m>>2]|0)!=(h|0))c[m>>2]=h;Ow(h)}Fy(o,c[k>>2]|0,c[l>>2]|0);l=(Km(j,o)|0)+s|0;Hy(o);o=Lm(j,l)|0;Fy(p,34072,8);s=Km(j,p)|0;Hy(p);p=Lm(j,s)|0;k=Cm(j,d)|0;d=p+s+k+(Gm(j,b)|0)|0;b=(Lm(j,d)|0)+d|0;Fy(q,34008,9);d=b+(Km(j,q)|0)|0;Hy(q);q=o+l+d+(Lm(j,d)|0)|0;d=(Lm(j,q)|0)+q|0;Fy(r,34456,9);q=Km(j,r)|0;Hy(r);Lm(j,d+q|0)|0;Am(a,j);ym(j);_k(f);i=e;return}function hm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=i;i=i+32|0;e=d+16|0;f=d;xm(e);g=Cm(e,c)|0;c=(Gm(e,b)|0)+g|0;g=(Lm(e,c)|0)+c|0;Fy(f,32704,10);c=Km(e,f)|0;Hy(f);Lm(e,g+c|0)|0;Am(a,e);ym(e);i=d;return}function im(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+16|0;e=d;xm(e);od[c[(c[b>>2]|0)+8>>2]&127](b,e,0)|0;Am(a,e);ym(e);i=d;return}function jm(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+32|0;e=d;lm(e,b);ud[c[(c[a>>2]|0)+12>>2]&127](a,e);mm(e);i=d;return}function km(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;a=i;i=i+176|0;e=a+152|0;f=a+16|0;g=a;if((c[b>>2]|0)!=(c[b+4>>2]|0)){i=a;return}a=f+4|0;c[f>>2]=7292;c[f+56>>2]=7312;iz(f+56|0,a);c[f+128>>2]=0;c[f+132>>2]=-1;c[f>>2]=7332;c[f+56>>2]=7352;lz(a);c[a>>2]=7208;b=f+36|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[f+52>>2]=16;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Tg(a,e);Hy(e);Vg(f,16384,22)|0;Vg(f,16408,42)|0;if(!d){h=Yb(8)|0;Xg(g,a);$i(h,g);dd(h|0,296,39)}e=Vg(f,16456,17)|0;Vg(Vg(e,d,yH(d|0)|0)|0,81448,1)|0;h=Yb(8)|0;Xg(g,a);$i(h,g);dd(h|0,296,39)}function lm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a+4|0;e=a+8|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;if((e|0)==(b|0)){f=0;g=0;c[a>>2]=f;c[d>>2]=g;return}ki(e,c[b>>2]|0,c[b+4>>2]|0);f=c[e>>2]|0;g=c[a+12>>2]|0;c[a>>2]=f;c[d>>2]=g;return}function mm(a){a=a|0;var b=0,d=0;c[a>>2]=0;c[a+4>>2]=0;b=c[a+8>>2]|0;if(!b)return;d=a+12|0;if((c[d>>2]|0)!=(b|0))c[d>>2]=b;Ow(b);return}function nm(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;om(a);e=Pn(a,c[a+4>>2]|0,d)|0;if((e|0)<0){a=Yb(12)|0;dm(a,e);dd(a|0,15208,55)}else{i=b;return c[d>>2]|0}return 0}function om(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0;d=i;i=i+48|0;e=d+36|0;f=d+24|0;g=d+12|0;h=d;j=c[b>>2]|0;if((j|0)!=0?(k=c[b+4>>2]|0,(k|0)!=0):0)if(j>>>0<k>>>0){i=d;return}else{d=Yb(8)|0;Fy(h,16480,18);c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;k=a[h>>0]|0;j=(k&1)==0;b=j?(k&255)>>>1:c[h+4>>2]|0;Sy(g,j?h+1|0:c[h+8>>2]|0,b,b+66|0);Py(g,16568,66)|0;$i(d,g);dd(d|0,296,39)}d=Yb(8)|0;Fy(f,16480,18);c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;g=a[f>>0]|0;b=(g&1)==0;h=b?(g&255)>>>1:c[f+4>>2]|0;Sy(e,b?f+1|0:c[f+8>>2]|0,h,h+59|0);Py(e,16504,59)|0;$i(d,e);dd(d|0,296,39)}function pm(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;om(a);d=On(a,c[a+4>>2]|0,b,5)|0;if((d|0)<0){a=Yb(12)|0;dm(a,d);dd(a|0,15208,55)}else{i=b;return}}function qm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+16|0;e=d+4|0;f=d;g=b&255;if((b&255)>31){b=Yb(8)|0;Fy(e,16640,38);$i(b,e);dd(b|0,296,39)}b=c[a>>2]|0;e=a+4|0;if((b|0)!=0?(h=c[e>>2]|0,!((h|0)==0|b>>>0<h>>>0)):0){j=0;i=d;return j|0}om(a);h=On(a,c[e>>2]|0,f,g|160)|0;if((h|0)==-98){j=0;i=d;return j|0}else if(!h){j=c[f>>2]|0;i=d;return j|0}else{j=Yb(12)|0;dm(j,h);dd(j|0,15208,55)}return 0}function rm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;om(d);g=On(d,c[d+4>>2]|0,f,4)|0;if((g|0)<0){h=Yb(12)|0;dm(h,g);dd(h|0,15208,55)}h=c[f>>2]|0;f=c[d>>2]|0;g=f+h|0;c[d>>2]=g;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;if(!h){i=e;return}if((h|0)<0)Kw(b);j=Mw(h)|0;c[d>>2]=j;c[b>>2]=j;c[b+8>>2]=j+h;h=f;f=j;do{a[f>>0]=a[h>>0]|0;f=(c[d>>2]|0)+1|0;c[d>>2]=f;h=h+1|0}while((h|0)!=(g|0));i=e;return}function sm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;om(d);g=On(d,c[d+4>>2]|0,f,12)|0;if((g|0)<0){h=Yb(12)|0;dm(h,g);dd(h|0,15208,55)}h=c[f>>2]|0;f=c[d>>2]|0;g=f+h|0;c[d>>2]=g;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;if(!h){i=e;return}if((h|0)<0)Kw(b);j=Mw(h)|0;c[d>>2]=j;c[b>>2]=j;c[b+8>>2]=j+h;h=f;f=j;do{a[f>>0]=a[h>>0]|0;f=(c[d>>2]|0)+1|0;c[d>>2]=f;h=h+1|0}while((h|0)!=(g|0));i=e;return}function tm(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;om(d);g=c[d>>2]|0;c[d>>2]=g+1;h=Nn(d,c[d+4>>2]|0,f)|0;if((h|0)<0){j=Yb(12)|0;dm(j,h);dd(j|0,15208,55)}j=(c[d>>2]|0)+(c[f>>2]|0)|0;c[d>>2]=j;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;f=j-g|0;if((j|0)==(g|0)){i=e;return}if((f|0)<0)Kw(b);h=Mw(f)|0;c[d>>2]=h;c[b>>2]=h;c[b+8>>2]=h+f;f=g;g=h;do{a[g>>0]=a[f>>0]|0;g=(c[d>>2]|0)+1|0;c[d>>2]=g;f=f+1|0}while((f|0)!=(j|0));i=e;return}function um(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;om(b);f=On(b,c[b+4>>2]|0,e,6)|0;if((f|0)<0){g=Yb(12)|0;dm(g,f);dd(g|0,15208,55)}else{g=c[e>>2]|0;e=c[b>>2]|0;c[b>>2]=e+g;Fy(a,e,g);i=d;return}}function vm(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;om(a);e=On(a,c[a+4>>2]|0,d,48)|0;if((e|0)<0){a=Yb(12)|0;dm(a,e);dd(a|0,15208,55)}else{i=b;return c[d>>2]|0}return 0}function wm(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;om(a);e=On(a,c[a+4>>2]|0,d,49)|0;if((e|0)<0){a=Yb(12)|0;dm(a,e);dd(a|0,15208,55)}else{i=b;return c[d>>2]|0}return 0}function xm(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;zm(a,128);return}function ym(a){a=a|0;var b=0;c[a>>2]=0;c[a+4>>2]=0;c[a+12>>2]=0;b=a+8|0;a=c[b>>2]|0;if(!a)return;Pw(a);c[b>>2]=0;return}function zm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=a+12|0;e=c[d>>2]|0;if(e>>>0>b>>>0){f=Yb(8)|0;By(f,16680);c[f>>2]=78704;dd(f|0,78744,39)}f=Nw(b)|0;g=a+8|0;h=c[g>>2]|0;if(((h|0)!=0?(i=c[a>>2]|0,(i|0)!=0):0)?(j=c[a+4>>2]|0,(j|0)!=0):0){k=e+(j-i)|0;zH(f+(b-k)|0,i|0,k|0)|0;Pw(h);l=k}else l=0;c[g>>2]=f;c[d>>2]=b;c[a>>2]=f+(b-l);c[a+4>>2]=f;return}function Am(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;Bm(d);e=c[d>>2]|0;f=d+12|0;g=d+4|0;h=(c[g>>2]|0)-e+(c[f>>2]|0)|0;i=e+h|0;c[b>>2]=0;j=b+4|0;c[j>>2]=0;c[b+8>>2]=0;if(h){if((h|0)<0)Kw(b);k=Mw(h)|0;c[j>>2]=k;c[b>>2]=k;c[b+8>>2]=k+h;h=e;e=k;do{a[e>>0]=a[h>>0]|0;e=(c[j>>2]|0)+1|0;c[j>>2]=e;h=h+1|0}while((h|0)!=(i|0))}c[d>>2]=0;c[g>>2]=0;c[f>>2]=0;f=d+8|0;d=c[f>>2]|0;if(!d)return;Pw(d);c[f>>2]=0;return}function Bm(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;if((c[a>>2]|0)!=0?(c[a+4>>2]|0)!=0:0){i=b;return}b=Yb(8)|0;Fy(d,16744,75);$i(b,d);dd(b|0,296,39)}function Cm(a,b){a=a|0;b=b|0;var d=0,e=0;Bm(a);Dm(a,12);d=c[a>>2]|0;e=ao(a,c[a+4>>2]|0,b)|0;if((e|0)<0){b=Yb(12)|0;dm(b,e);dd(b|0,15208,55)}else return d-(c[a>>2]|0)|0;return 0}function Dm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+176|0;e=d+152|0;f=d+16|0;g=d;Bm(a);h=(c[a>>2]|0)-(c[a+4>>2]|0)|0;if(h>>>0>=b>>>0){i=d;return}j=(c[a+12>>2]|0)-h+b|0;if(j>>>0>65539){b=f+4|0;c[f>>2]=7292;c[f+56>>2]=7312;iz(f+56|0,b);c[f+128>>2]=0;c[f+132>>2]=-1;c[f>>2]=7332;c[f+56>>2]=7352;lz(b);c[b>>2]=7208;h=f+36|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[f+52>>2]=16;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;Tg(b,e);Hy(e);Vg(Pz(Vg(f,16824,49)|0,65539)|0,16880,6)|0;f=Yb(8)|0;Xg(g,b);Ay(f,g);c[f>>2]=78704;dd(f|0,78744,39)}f=1<<(~~+$(+(+_(+(+(j>>>0)))/.6931471805599453))>>>0);zm(a,f>>>0>65539?65539:f);i=d;return}function Em(a,b){a=a|0;b=b|0;var d=0,e=0;Bm(a);Dm(a,3);d=c[a>>2]|0;e=$n(a,c[a+4>>2]|0,b&1)|0;if((e|0)<0){b=Yb(12)|0;dm(b,e);dd(b|0,15208,55)}else return d-(c[a>>2]|0)|0;return 0}function Fm(a){a=a|0;var b=0,d=0,e=0;Bm(a);Dm(a,2);b=c[a>>2]|0;d=Yn(a,c[a+4>>2]|0)|0;if((d|0)<0){e=Yb(12)|0;dm(e,d);dd(e|0,15208,55)}else return b-(c[a>>2]|0)|0;return 0}function Gm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;Bm(a);d=b+4|0;Dm(a,(c[d>>2]|0)+4-(c[b>>2]|0)|0);e=c[a>>2]|0;f=c[b>>2]|0;b=bo(a,c[a+4>>2]|0,f,(c[d>>2]|0)-f|0)|0;if((b|0)<0){f=Yb(12)|0;dm(f,b);dd(f|0,15208,55)}else return e-(c[a>>2]|0)|0;return 0}function Hm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;Bm(a);d=b+4|0;Dm(a,(c[d>>2]|0)+4-(c[b>>2]|0)|0);e=c[a>>2]|0;f=a+4|0;g=c[b>>2]|0;h=Wn(a,c[f>>2]|0,g,(c[d>>2]|0)-g|0)|0;if((h|0)<0){g=Yb(12)|0;dm(g,h);dd(g|0,15208,55)}g=Un(a,c[f>>2]|0,(c[d>>2]|0)-(c[b>>2]|0)|0)|0;if((g|0)<0){b=Yb(12)|0;dm(b,g);dd(b|0,15208,55)}b=Vn(a,c[f>>2]|0,12)|0;if((b|0)<0){f=Yb(12)|0;dm(f,b);dd(f|0,15208,55)}else return e-(c[a>>2]|0)|0;return 0}function Im(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+176|0;f=e+152|0;g=e+16|0;h=e;Bm(a);if((b&255)>30){j=g+4|0;c[g>>2]=7292;c[g+56>>2]=7312;iz(g+56|0,j);c[g+128>>2]=0;c[g+132>>2]=-1;c[g>>2]=7332;c[g+56>>2]=7352;lz(j);c[j>>2]=7208;k=g+36|0;c[k>>2]=0;c[k+4>>2]=0;c[k+8>>2]=0;c[k+12>>2]=0;c[g+52>>2]=16;c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;Tg(j,f);Hy(f);Pz(Vg(g,16888,59)|0,30)|0;g=Yb(8)|0;Xg(h,j);Ay(g,h);c[g>>2]=78704;dd(g|0,78744,39)}Dm(a,4);g=c[a>>2]|0;h=a+4|0;j=Un(a,c[h>>2]|0,d)|0;if((j|0)<0){d=Yb(12)|0;dm(d,j);dd(d|0,15208,55)}d=Vn(a,c[h>>2]|0,(b&255|160)&255)|0;if((d|0)<0){b=Yb(12)|0;dm(b,d);dd(b|0,15208,55)}else{i=e;return g-(c[a>>2]|0)|0}return 0}function Jm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;Bm(a);d=b+4|0;Dm(a,(c[d>>2]|0)-(c[b>>2]|0)|0);e=c[a>>2]|0;f=c[b>>2]|0;b=Wn(a,c[a+4>>2]|0,f,(c[d>>2]|0)-f|0)|0;if((b|0)<0){f=Yb(12)|0;dm(f,b);dd(f|0,15208,55)}else return e-(c[a>>2]|0)|0;return 0}function Km(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;Bm(b);e=a[d>>0]|0;f=d+4|0;Dm(b,((e&1)==0?(e&255)>>>1:c[f>>2]|0)+4|0);e=c[b>>2]|0;g=a[d>>0]|0;h=(g&1)==0;i=Zn(b,c[b+4>>2]|0,h?d+1|0:c[d+8>>2]|0,h?(g&255)>>>1:c[f>>2]|0)|0;if((i|0)<0){f=Yb(12)|0;dm(f,i);dd(f|0,15208,55)}else return e-(c[b>>2]|0)|0;return 0}function Lm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;Bm(a);Dm(a,4);d=c[a>>2]|0;e=a+4|0;f=Un(a,c[e>>2]|0,b)|0;if((f|0)<0){b=Yb(12)|0;dm(b,f);dd(b|0,15208,55)}b=Vn(a,c[e>>2]|0,48)|0;if((b|0)<0){e=Yb(12)|0;dm(e,b);dd(e|0,15208,55)}else return d-(c[a>>2]|0)|0;return 0}function Mm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+16|0;e=d+12|0;f=d;Bm(a);g=c[b>>2]|0;h=c[b+4>>2]|0;if((g|0)==(h|0))j=0;else{k=g;g=0;while(1){l=(c[k+4>>2]|0)+g-(c[k>>2]|0)|0;k=k+12|0;if((k|0)==(h|0)){j=l;break}else g=l}}Dm(a,j+4|0);Pm(f,b);b=c[f>>2]|0;g=f+4|0;h=c[g>>2]|0;c[e>>2]=48;Qm(b,h,e);e=c[a>>2]|0;h=a+4|0;b=c[g>>2]|0;while(1){k=c[h>>2]|0;if((b|0)==(c[f>>2]|0)){m=k;break}l=b;b=b+-12|0;n=c[b>>2]|0;o=Wn(a,k,n,(c[l+-8>>2]|0)-n|0)|0;if((o|0)<0){p=o;q=6;break}}if((q|0)==6){q=Yb(12)|0;dm(q,p);dd(q|0,15208,55)}q=Un(a,m,j)|0;if((q|0)<0){j=Yb(12)|0;dm(j,q);dd(j|0,15208,55)}j=Vn(a,c[h>>2]|0,49)|0;if((j|0)<0){h=Yb(12)|0;dm(h,j);dd(h|0,15208,55)}h=e-(c[a>>2]|0)|0;a=c[f>>2]|0;if(!a){i=d;return h|0}e=c[g>>2]|0;if((e|0)==(a|0))r=a;else{j=e;while(1){e=j+-12|0;c[g>>2]=e;q=c[e>>2]|0;if(!q)s=e;else{e=j+-8|0;if((c[e>>2]|0)!=(q|0))c[e>>2]=q;Ow(q);s=c[g>>2]|0}if((s|0)==(a|0))break;else j=s}r=c[f>>2]|0}Ow(r);i=d;return h|0}function Nm(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+16|0;h=g;c[b>>2]=0;j=b+4|0;c[j>>2]=0;c[b+8>>2]=0;k=e+4|0;l=c[k>>2]|0;m=c[e>>2]|0;n=l-m|0;if((l|0)!=(m|0)){if((n|0)<0)Kw(b);m=Mw(n)|0;c[j>>2]=m;c[b>>2]=m;c[b+8>>2]=m+n;n=c[e>>2]|0;e=c[k>>2]|0;if((n|0)==(e|0)){o=m;p=m}else{k=n;n=m;while(1){a[n>>0]=a[k>>0]|0;m=(c[j>>2]|0)+1|0;c[j>>2]=m;k=k+1|0;if((k|0)==(e|0)){q=m;break}else n=m}o=q;p=c[b>>2]|0}}else{o=0;p=0}q=o-p|0;if(q>>>0>=f>>>0){i=g;return}a[h>>0]=0;if((o|0)!=(p|0)){n=p+1|0;if((n|0)==(o|0))r=p;else{e=n;n=p;k=p;while(1){p=(d[e>>0]|0)<(d[n>>0]|0);j=p?e:k;n=p?e:n;e=e+1|0;if((e|0)==(o|0)){r=j;break}else k=j}}k=a[r>>0]|0;a[h>>0]=k;if(k<<24>>24)a[h>>0]=k+-1<<24>>24}Hg(b,f-q|0,h);i=g;return}function Om(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;e=i;i=i+32|0;f=e+12|0;g=e;h=b+4|0;j=c[h>>2]|0;k=c[b>>2]|0;l=j-k|0;m=d+4|0;n=c[m>>2]|0;o=c[d>>2]|0;p=n-o|0;if(l>>>0>p>>>0){Nm(f,d,l);q=c[f>>2]|0;r=f+4|0;f=c[r>>2]|0;s=(q|0)==(f|0);a:do if(s)t=0;else{u=c[h>>2]|0;v=c[b>>2]|0;w=q;while(1){if((v|0)==(u|0)){t=1;break a}x=a[v>>0]|0;y=a[w>>0]|0;if((x&255)<(y&255)){t=1;break a}if((y&255)<(x&255)){t=0;break a}w=w+1|0;if((w|0)==(f|0)){t=0;break}else v=v+1|0}}while(0);if(!q){z=t;i=e;return z|0}if(!s)c[r>>2]=q;Ow(q);z=t;i=e;return z|0}if(p>>>0<=l>>>0){if((o|0)==(n|0)){z=0;i=e;return z|0}else{A=k;B=o}while(1){if((A|0)==(j|0)){z=1;C=29;break}o=a[A>>0]|0;k=a[B>>0]|0;if((o&255)<(k&255)){z=1;C=29;break}if((k&255)<(o&255)){z=0;C=29;break}B=B+1|0;if((B|0)==(n|0)){z=0;C=29;break}else A=A+1|0}if((C|0)==29){i=e;return z|0}}Nm(g,b,p);p=c[d>>2]|0;d=c[m>>2]|0;b:do if((p|0)==(d|0)){D=0;E=c[g>>2]|0}else{m=c[g+4>>2]|0;b=c[g>>2]|0;C=b;A=p;while(1){if((C|0)==(m|0)){D=1;E=b;break b}n=a[C>>0]|0;B=a[A>>0]|0;if((n&255)<(B&255)){D=1;E=b;break b}if((B&255)<(n&255)){D=0;E=b;break b}A=A+1|0;if((A|0)==(d|0)){D=0;E=b;break}else C=C+1|0}}while(0);if(!E){z=D;i=e;return z|0}d=g+4|0;if((c[d>>2]|0)!=(E|0))c[d>>2]=E;Ow(E);z=D;i=e;return z|0}function Pm(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;c[a>>2]=0;d=a+4|0;c[d>>2]=0;c[a+8>>2]=0;e=b+4|0;f=c[e>>2]|0;g=c[b>>2]|0;h=f-g|0;i=(h|0)/12|0;if((f|0)==(g|0))return;if(i>>>0>357913941)Kw(a);g=Mw(h)|0;c[d>>2]=g;c[a>>2]=g;c[a+8>>2]=g+(i*12|0);Wm(a,c[b>>2]|0,c[e>>2]|0);return}function Qm(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;e=a;a=b;a:while(1){b=a;f=a+-12|0;g=a+-8|0;h=a+-4|0;i=e;b:while(1){j=i;k=b-j|0;switch((k|0)/12|0|0){case 4:{l=i;m=f;n=7;break a;break}case 2:{o=i;p=f;q=f;r=g;s=h;n=4;break a;break}case 3:{t=i;u=f;n=6;break a;break}case 5:{v=i;w=f;n=8;break a;break}case 1:case 0:{n=47;break a;break}default:{}}if((k|0)<84){x=i;y=a;n=10;break a}z=(k|0)/24|0;A=i+(z*12|0)|0;if((k|0)>11988){B=(k|0)/48|0;C=Tm(i,i+(B*12|0)|0,A,i+((B+z|0)*12|0)|0,f,d)|0}else C=Rm(i,A,f,d)|0;do if(Cd[c[d>>2]&63](i,A)|0){D=f;E=C}else{z=a;B=f;while(1){k=B+-12|0;if((i|0)==(k|0))break;if(Cd[c[d>>2]&63](k,A)|0){F=z;G=k;n=29;break}else{H=B;B=k;z=H}}if((n|0)==29){n=0;z=c[i>>2]|0;c[i>>2]=c[G>>2];c[G>>2]=z;z=i+4|0;B=F+-20|0;H=c[z>>2]|0;c[z>>2]=c[B>>2];c[B>>2]=H;H=i+8|0;B=F+-16|0;z=c[H>>2]|0;c[H>>2]=c[B>>2];c[B>>2]=z;D=G;E=C+1|0;break}z=i+12|0;if(Cd[c[d>>2]&63](i,f)|0)I=z;else{if((z|0)==(f|0)){n=47;break a}else{J=i;K=z}while(1){if(Cd[c[d>>2]&63](i,K)|0){L=J;M=K;break}z=K+12|0;if((z|0)==(f|0)){n=47;break a}else{B=K;K=z;J=B}}B=c[M>>2]|0;c[M>>2]=c[f>>2];c[f>>2]=B;B=L+16|0;z=c[B>>2]|0;c[B>>2]=c[g>>2];c[g>>2]=z;z=L+20|0;B=c[z>>2]|0;c[z>>2]=c[h>>2];c[h>>2]=B;I=L+24|0}if((I|0)==(f|0)){n=47;break a}else{N=I;O=f}while(1){B=N;while(1){z=B+12|0;if(Cd[c[d>>2]&63](i,B)|0){P=z;Q=B;break}else B=z}B=O;while(1){z=B+-12|0;if(Cd[c[d>>2]&63](i,z)|0)B=z;else{R=z;S=B;break}}if(Q>>>0>=R>>>0){i=Q;continue b}B=c[Q>>2]|0;c[Q>>2]=c[R>>2];c[R>>2]=B;B=Q+4|0;z=S+-8|0;H=c[B>>2]|0;c[B>>2]=c[z>>2];c[z>>2]=H;H=Q+8|0;z=S+-4|0;B=c[H>>2]|0;c[H>>2]=c[z>>2];c[z>>2]=B;N=P;O=R}}while(0);B=i+12|0;c:do if(B>>>0<D>>>0){z=B;H=D;k=A;T=E;while(1){U=z;while(1){V=U+12|0;if(Cd[c[d>>2]&63](U,k)|0)U=V;else{W=V;X=U;break}}U=H;while(1){V=U+-12|0;if(Cd[c[d>>2]&63](V,k)|0){Y=V;Z=U;break}else U=V}if(X>>>0>Y>>>0){_=X;$=k;aa=T;break c}U=c[X>>2]|0;c[X>>2]=c[Y>>2];c[Y>>2]=U;U=X+4|0;V=Z+-8|0;ba=c[U>>2]|0;c[U>>2]=c[V>>2];c[V>>2]=ba;ba=X+8|0;V=Z+-4|0;U=c[ba>>2]|0;c[ba>>2]=c[V>>2];c[V>>2]=U;z=W;H=Y;k=(k|0)==(X|0)?Y:k;T=T+1|0}}else{_=B;$=A;aa=E}while(0);if((_|0)!=($|0)?Cd[c[d>>2]&63]($,_)|0:0){A=c[_>>2]|0;c[_>>2]=c[$>>2];c[$>>2]=A;A=_+4|0;B=$+4|0;T=c[A>>2]|0;c[A>>2]=c[B>>2];c[B>>2]=T;T=_+8|0;B=$+8|0;A=c[T>>2]|0;c[T>>2]=c[B>>2];c[B>>2]=A;ca=aa+1|0}else ca=aa;if(!ca){da=Vm(i,_,d)|0;A=_+12|0;if(Vm(A,a,d)|0){n=42;break}if(da){i=A;continue}}A=_;if((A-j|0)>=(b-A|0)){ea=i;fa=_;n=46;break}Qm(i,_,d);i=_+12|0}if((n|0)==42){n=0;if(da){n=47;break}else{e=i;a=_;continue}}else if((n|0)==46){n=0;Qm(fa+12|0,a,d);e=ea;a=fa;continue}}if((n|0)==4){if(!(Cd[c[d>>2]&63](p,o)|0))return;p=c[o>>2]|0;c[o>>2]=c[q>>2];c[q>>2]=p;p=o+4|0;q=c[p>>2]|0;c[p>>2]=c[r>>2];c[r>>2]=q;q=o+8|0;o=c[q>>2]|0;c[q>>2]=c[s>>2];c[s>>2]=o;return}else if((n|0)==6){Rm(t,t+12|0,u,d)|0;return}else if((n|0)==7){Sm(l,l+12|0,l+24|0,m,d)|0;return}else if((n|0)==8){Tm(v,v+12|0,v+24|0,v+36|0,w,d)|0;return}else if((n|0)==10){Um(x,y,d);return}else if((n|0)==47)return}function Rm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=Cd[c[e>>2]&63](b,a)|0;g=Cd[c[e>>2]&63](d,b)|0;if(!f){if(!g){h=0;return h|0}f=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=f;f=b+4|0;i=d+4|0;j=c[f>>2]|0;c[f>>2]=c[i>>2];c[i>>2]=j;j=b+8|0;i=d+8|0;k=c[j>>2]|0;c[j>>2]=c[i>>2];c[i>>2]=k;if(!(Cd[c[e>>2]&63](b,a)|0)){h=1;return h|0}k=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=k;k=a+4|0;i=c[k>>2]|0;c[k>>2]=c[f>>2];c[f>>2]=i;i=a+8|0;f=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=f;h=2;return h|0}f=c[a>>2]|0;if(g){c[a>>2]=c[d>>2];c[d>>2]=f;g=a+4|0;j=d+4|0;i=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=i;i=a+8|0;j=d+8|0;g=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=g;h=1;return h|0}c[a>>2]=c[b>>2];c[b>>2]=f;f=a+4|0;g=b+4|0;j=c[f>>2]|0;c[f>>2]=c[g>>2];c[g>>2]=j;j=a+8|0;a=b+8|0;f=c[j>>2]|0;c[j>>2]=c[a>>2];c[a>>2]=f;if(!(Cd[c[e>>2]&63](d,b)|0)){h=1;return h|0}e=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=e;e=d+4|0;b=c[g>>2]|0;c[g>>2]=c[e>>2];c[e>>2]=b;b=d+8|0;d=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=d;h=2;return h|0}function Sm(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=Rm(a,b,d,f)|0;if(!(Cd[c[f>>2]&63](e,d)|0)){h=g;return h|0}i=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=i;i=d+4|0;j=e+4|0;k=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=k;k=d+8|0;j=e+8|0;e=c[k>>2]|0;c[k>>2]=c[j>>2];c[j>>2]=e;if(!(Cd[c[f>>2]&63](d,b)|0)){h=g+1|0;return h|0}e=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=e;e=b+4|0;d=c[e>>2]|0;c[e>>2]=c[i>>2];c[i>>2]=d;d=b+8|0;i=c[d>>2]|0;c[d>>2]=c[k>>2];c[k>>2]=i;if(!(Cd[c[f>>2]&63](b,a)|0)){h=g+2|0;return h|0}f=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=f;f=a+4|0;b=c[f>>2]|0;c[f>>2]=c[e>>2];c[e>>2]=b;b=a+8|0;a=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=a;h=g+3|0;return h|0}function Tm(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Sm(a,b,d,e,g)|0;if(!(Cd[c[g>>2]&63](f,e)|0)){i=h;return i|0}j=c[e>>2]|0;c[e>>2]=c[f>>2];c[f>>2]=j;j=e+4|0;k=f+4|0;l=c[j>>2]|0;c[j>>2]=c[k>>2];c[k>>2]=l;l=e+8|0;k=f+8|0;f=c[l>>2]|0;c[l>>2]=c[k>>2];c[k>>2]=f;if(!(Cd[c[g>>2]&63](e,d)|0)){i=h+1|0;return i|0}f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;f=d+4|0;e=c[f>>2]|0;c[f>>2]=c[j>>2];c[j>>2]=e;e=d+8|0;j=c[e>>2]|0;c[e>>2]=c[l>>2];c[l>>2]=j;if(!(Cd[c[g>>2]&63](d,b)|0)){i=h+2|0;return i|0}j=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=j;j=b+4|0;d=c[j>>2]|0;c[j>>2]=c[f>>2];c[f>>2]=d;d=b+8|0;f=c[d>>2]|0;c[d>>2]=c[e>>2];c[e>>2]=f;if(!(Cd[c[g>>2]&63](b,a)|0)){i=h+3|0;return i|0}g=c[a>>2]|0;c[a>>2]=c[b>>2];c[b>>2]=g;g=a+4|0;b=c[g>>2]|0;c[g>>2]=c[j>>2];c[j>>2]=b;b=a+8|0;a=c[b>>2]|0;c[b>>2]=c[d>>2];c[d>>2]=a;i=h+4|0;return i|0}function Um(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;f=i;i=i+16|0;g=f;h=b+24|0;Rm(b,b+12|0,h,e)|0;j=b+36|0;if((j|0)==(d|0)){i=f;return}k=g+4|0;l=g+8|0;m=g+8|0;n=j;j=h;while(1){if(Cd[c[e>>2]&63](n,j)|0){c[g>>2]=0;c[k>>2]=0;c[l>>2]=0;h=n+4|0;o=c[h>>2]|0;p=c[n>>2]|0;q=o-p|0;if((o|0)!=(p|0)){if((q|0)<0){r=6;break}p=Mw(q)|0;c[k>>2]=p;c[g>>2]=p;c[m>>2]=p+q;q=c[n>>2]|0;o=c[h>>2]|0;if((q|0)!=(o|0)){h=q;q=p;do{a[q>>0]=a[h>>0]|0;q=(c[k>>2]|0)+1|0;c[k>>2]=q;h=h+1|0}while((h|0)!=(o|0));s=n;t=j}else{s=n;t=j}}else{s=n;t=j}while(1){ki(s,c[t>>2]|0,c[t+4>>2]|0);if((t|0)==(b|0)){u=b;break}o=t+-12|0;if(Cd[c[e>>2]&63](g,o)|0){h=t;t=o;s=h}else{u=t;break}}if((u|0)!=(g|0))ki(u,c[g>>2]|0,c[k>>2]|0);h=c[g>>2]|0;if(h){if((c[k>>2]|0)!=(h|0))c[k>>2]=h;Ow(h)}}h=n+12|0;if((h|0)==(d|0)){r=18;break}else{o=n;n=h;j=o}}if((r|0)==6)Kw(g);else if((r|0)==18){i=f;return}}function Vm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+16|0;g=f;switch((d-b|0)/12|0|0){case 4:{Sm(b,b+12|0,b+24|0,d+-12|0,e)|0;h=1;i=f;return h|0}case 5:{Tm(b,b+12|0,b+24|0,b+36|0,d+-12|0,e)|0;h=1;i=f;return h|0}case 1:case 0:{h=1;i=f;return h|0}case 2:{j=d+-12|0;if(!(Cd[c[e>>2]&63](j,b)|0)){h=1;i=f;return h|0}k=c[b>>2]|0;c[b>>2]=c[j>>2];c[j>>2]=k;k=b+4|0;j=d+-8|0;l=c[k>>2]|0;c[k>>2]=c[j>>2];c[j>>2]=l;l=b+8|0;j=d+-4|0;k=c[l>>2]|0;c[l>>2]=c[j>>2];c[j>>2]=k;h=1;i=f;return h|0}case 3:{Rm(b,b+12|0,d+-12|0,e)|0;h=1;i=f;return h|0}default:{k=b+24|0;Rm(b,b+12|0,k,e)|0;j=b+36|0;if((j|0)==(d|0)){h=1;i=f;return h|0}l=g+4|0;m=g+8|0;n=g+8|0;o=0;p=0;q=j;j=k;while(1){if(Cd[c[e>>2]&63](q,j)|0){c[g>>2]=0;c[l>>2]=0;c[m>>2]=0;k=q+4|0;r=c[k>>2]|0;s=c[q>>2]|0;t=r-s|0;if((r|0)!=(s|0)){if((t|0)<0){u=12;break}s=Mw(t)|0;c[l>>2]=s;c[g>>2]=s;c[n>>2]=s+t;t=c[q>>2]|0;r=c[k>>2]|0;if((t|0)!=(r|0)){k=t;t=s;do{a[t>>0]=a[k>>0]|0;t=(c[l>>2]|0)+1|0;c[l>>2]=t;k=k+1|0}while((k|0)!=(r|0));v=q;w=j}else{v=q;w=j}}else{v=q;w=j}while(1){if((v|0)!=(w|0))ki(v,c[w>>2]|0,c[w+4>>2]|0);if((w|0)==(b|0)){x=b;break}r=w+-12|0;if(Cd[c[e>>2]&63](g,r)|0){k=w;w=r;v=k}else{x=w;break}}if((x|0)!=(g|0))ki(x,c[g>>2]|0,c[l>>2]|0);k=p+1|0;r=(k|0)==8;t=q+12|0;s=r?t:q;y=r?(t|0)==(d|0):o;t=c[g>>2]|0;if(t){if((c[l>>2]|0)!=(t|0))c[l>>2]=t;Ow(t)}if(r){h=y;u=27;break}else{z=y;A=k;B=s}}else{z=o;A=p;B=q}q=B+12|0;if((q|0)==(d|0)){h=1;u=27;break}else{o=z;p=A;j=B}}if((u|0)==12)Kw(g);else if((u|0)==27){i=f;return h|0}}}return 0}function Wm(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==(e|0))return;f=b+4|0;b=d;d=c[f>>2]|0;while(1){c[d>>2]=0;g=d+4|0;c[g>>2]=0;c[d+8>>2]=0;h=b+4|0;i=c[h>>2]|0;j=c[b>>2]|0;k=i-j|0;if((i|0)!=(j|0)){if((k|0)<0){l=5;break}j=Mw(k)|0;c[g>>2]=j;c[d>>2]=j;c[d+8>>2]=j+k;k=c[b>>2]|0;i=c[h>>2]|0;if((k|0)!=(i|0)){h=k;k=j;do{a[k>>0]=a[h>>0]|0;k=(c[g>>2]|0)+1|0;c[g>>2]=k;h=h+1|0}while((h|0)!=(i|0))}}i=(c[f>>2]|0)+12|0;c[f>>2]=i;b=b+12|0;if((b|0)==(e|0)){l=9;break}else d=i}if((l|0)==5)Kw(d);else if((l|0)==9)return}function Xm(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=16960;b=Mw(4)|0;c[b>>2]=0;d=Mw(8)|0;e=d;c[e>>2]=0;c[e+4>>2]=0;c[b>>2]=d;vs(d);c[a+4>>2]=b;return}function Ym(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if((a|0)==(b|0))return a|0;d=Mw(4)|0;e=c[c[b+4>>2]>>2]|0;if(!e)f=0;else f=Gs(e)|0;c[d>>2]=0;zn(d,f);f=a+4|0;e=c[f>>2]|0;if(e){b=c[e>>2]|0;if((b|0)!=0?(ws(b),b=c[e>>2]|0,(b|0)!=0):0)Ow(b);Ow(e)}c[f>>2]=d;return a|0}function Zm(a){a=a|0;var b=0,d=0;c[a>>2]=16960;b=a+4|0;a=c[b>>2]|0;if(!a)return;d=c[a>>2]|0;if((d|0)!=0?(ws(d),d=c[a>>2]|0,(d|0)!=0):0)Ow(d);Ow(a);c[b>>2]=0;return}function _m(a){a=a|0;var b=0,d=0;c[a>>2]=16960;b=c[a+4>>2]|0;if(!b){Ow(a);return}d=c[b>>2]|0;if((d|0)!=0?(ws(d),d=c[b>>2]|0,(d|0)!=0):0)Ow(d);Ow(b);Ow(a);return}function $m(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+32|0;e=d+12|0;f=d;g=c[c[b+4>>2]>>2]|0;if((g|0)!=0?(Gs(g)|0)!=0:0){i=d;return}d=Yb(8)|0;Fy(f,17056,55);c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;g=a[f>>0]|0;b=(g&1)==0;h=b?(g&255)>>>1:c[f+4>>2]|0;Sy(e,b?f+1|0:c[f+8>>2]|0,h,h+76|0);Py(e,17112,76)|0;$i(d,e);dd(d|0,296,39)}function an(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+48|0;f=e+40|0;g=e+24|0;h=e+16|0;j=e;vs(f);An(g,a);a=c[g>>2]|0;k=g+4|0;l=ot(f,a,(c[k>>2]|0)-a|0)|0;if((l|0)<0){a=Yb(12)|0;dm(a,l);dd(a|0,15208,55)}vs(h);An(j,b);b=c[j>>2]|0;a=j+4|0;l=c[d>>2]|0;m=nt(h,b,(c[a>>2]|0)-b|0,l,(c[d+4>>2]|0)-l|0)|0;if((m|0)<0){ws(f);l=Yb(12)|0;dm(l,m);dd(l|0,15208,55)}l=Es(f,h)|0;ws(f);ws(h);h=c[j>>2]|0;if(h){if((c[a>>2]|0)!=(h|0))c[a>>2]=h;Ow(h)}h=(l|0)==0;l=c[g>>2]|0;if(!l){i=e;return h|0}if((c[k>>2]|0)!=(l|0))c[k>>2]=l;Ow(l);i=e;return h|0}function bn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+32|0;e=d+16|0;f=d;vs(e);An(f,a);a=c[f>>2]|0;g=f+4|0;h=c[b>>2]|0;j=nt(e,a,(c[g>>2]|0)-a|0,h,(c[b+4>>2]|0)-h|0)|0;ws(e);e=(j|0)==0;j=c[f>>2]|0;if(!j){i=d;return e|0}if((c[g>>2]|0)!=(j|0))c[g>>2]=j;Ow(j);i=d;return e|0}function cn(a){a=a|0;var b=0,d=0,e=0;b=i;i=i+16|0;d=b;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;e=(bn(a,d)|0)^1;i=b;return e|0}function dn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+16|0;f=e;An(f,b);b=c[f>>2]|0;g=f+4|0;h=c[d>>2]|0;j=nt(c[c[a+4>>2]>>2]|0,b,(c[g>>2]|0)-b|0,h,(c[d+4>>2]|0)-h|0)|0;if((j|0)<0){h=Yb(12)|0;dm(h,j);dd(h|0,15208,55)}h=c[f>>2]|0;if(!h){i=e;return}if((c[g>>2]|0)!=(h|0))c[g>>2]=h;Ow(h);i=e;return}function en(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d;An(e,b);b=c[e>>2]|0;f=e+4|0;g=ot(c[c[a+4>>2]>>2]|0,b,(c[f>>2]|0)-b|0)|0;if((g|0)<0){b=Yb(12)|0;dm(b,g);dd(b|0,15208,55)}b=c[e>>2]|0;if(!b){i=d;return}if((c[f>>2]|0)!=(b|0))c[f>>2]=b;Ow(b);i=d;return}function fn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+37872|0;e=d+37520|0;f=d+37536|0;g=d;h=d+37544|0;j=d+37512|0;k=d+37504|0;l=d+37524|0;c[e>>2]=0;c[f>>2]=0;Bn(b,e,f);Xq(g);Np(h);b=Pp(h,59,g,17192,18)|0;do if((b|0)>=0){m=c[e>>2]|0;if((m|0)>0){c[j>>2]=16960;n=j+4|0;o=Mw(4)|0;c[o>>2]=0;zn(o,1);c[n>>2]=o;Ym(a,j)|0;c[j>>2]=16960;o=c[n>>2]|0;if(o){p=c[o>>2]|0;if((p|0)!=0?(ws(p),p=c[o>>2]|0,(p|0)!=0):0)Ow(p);Ow(o);c[n>>2]=0}q=0;r=Bt(c[(c[c[a+4>>2]>>2]|0)+4>>2]|0,60,h,m,65537)|0;break}m=c[f>>2]|0;if(!m){q=17216;r=b}else{c[k>>2]=16960;n=k+4|0;o=Mw(4)|0;c[o>>2]=0;zn(o,2);c[n>>2]=o;Ym(a,k)|0;c[k>>2]=16960;o=c[n>>2]|0;if(o){p=c[o>>2]|0;if((p|0)!=0?(ws(p),p=c[o>>2]|0,(p|0)!=0):0)Ow(p);Ow(o);c[n>>2]=0}q=0;r=Eq(m,c[(c[c[a+4>>2]>>2]|0)+4>>2]|0,60,h)|0}}else{q=0;r=b}while(0);Qp(h);Yq(g);if((r|0)<0){g=Yb(12)|0;dm(g,r);dd(g|0,15208,55)}if(!q){i=d;return}else{d=Yb(8)|0;Fy(l,q,yH(q|0)|0);$i(d,l);dd(d|0,296,39)}}function gn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;d=i;i=i+37856|0;e=d;f=d+37528|0;g=d+37520|0;h=d+37504|0;$m(b);Xq(e);Np(f);j=Pp(f,59,e,17192,18)|0;do if((j|0)>=0){k=b+4|0;l=c[c[k>>2]>>2]|0;if(!l)m=0;else m=Gs(l)|0;c[g>>2]=16960;l=g+4|0;n=Mw(4)|0;c[n>>2]=0;zn(n,m);c[l>>2]=n;Ym(a,g)|0;c[g>>2]=16960;n=c[l>>2]|0;if(n){o=c[n>>2]|0;if((o|0)!=0?(ws(o),o=c[n>>2]|0,(o|0)!=0):0)Ow(o);Ow(n);c[l>>2]=0}l=a+4|0;n=(zs(c[c[l>>2]>>2]|0,1)|0)==0;o=c[c[l>>2]>>2]|0;if(!n){n=c[o+4>>2]|0;p=0;q=Bt(n,60,f,Fs(c[c[k>>2]>>2]|0)|0,65537)|0;break}if(!(zs(o,2)|0)){p=17216;q=j}else{p=0;q=Eq(c[c[(c[c[k>>2]>>2]|0)+4>>2]>>2]|0,c[(c[c[l>>2]>>2]|0)+4>>2]|0,60,f)|0}}else{p=0;q=j}while(0);Qp(f);Yq(e);if((q|0)<0){e=Yb(12)|0;dm(e,q);dd(e|0,15208,55)}if(!p){i=d;return}else{d=Yb(8)|0;Fy(h,p,yH(p|0)|0);$i(d,h);dd(d|0,296,39)}}function hn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f=i;i=i+38160|0;g=f+37840|0;h=f;j=f+37520|0;k=f+37516|0;l=f+37504|0;lq(g);Xq(h);Np(j);c[b>>2]=0;m=b+4|0;c[m>>2]=0;c[b+8>>2]=0;n=Mw(512)|0;c[m>>2]=n;c[b>>2]=n;c[b+8>>2]=n+512;o=512;p=n;do{a[p>>0]=0;p=(c[m>>2]|0)+1|0;c[m>>2]=p;o=o+-1|0}while((o|0)!=0);c[k>>2]=0;o=Pp(j,59,h,17192,18)|0;if((o|0)>=0){p=d+4|0;if((zs(c[c[p>>2]>>2]|0,3)|0)!=0?(d=e+4|0,(zs(c[c[d>>2]>>2]|0,3)|0)!=0):0){e=c[(c[c[p>>2]>>2]|0)+4>>2]|0;p=c[(c[c[d>>2]>>2]|0)+4>>2]|0;if((c[e>>2]|0)==(c[p>>2]|0)){d=uq(g,e)|0;if((d|0)>=0){n=tq(g+172|0,e+136|0)|0;if((n|0)>=0){e=tq(g+136|0,p+136|0)|0;if((e|0)>=0){q=jo(g+124|0,p+124|0)|0;if((q|0)<0){r=0;s=q}else{q=c[b>>2]|0;r=0;s=nq(g,k,q,(c[m>>2]|0)-q|0,60,j)|0}}else{r=0;s=e}}else{r=0;s=n}}else{r=0;s=d}}else{r=17272;s=o}}else{r=17336;s=o}}else{r=0;s=o}Qp(j);Yq(h);mq(g);if((s|0)<0){g=Yb(12)|0;dm(g,s);dd(g|0,15208,55)}if(r){g=Yb(8)|0;Fy(l,r,yH(r|0)|0);$i(g,l);dd(g|0,296,39)}g=c[k>>2]|0;k=c[m>>2]|0;l=c[b>>2]|0;r=k-l|0;if(g>>>0>r>>>0){Ek(b,g-r|0);i=f;return}if(g>>>0>=r>>>0){i=f;return}r=l+g|0;if((k|0)==(r|0)){i=f;return}c[m>>2]=r;i=f;return}function jn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f;$m(d);c[g>>2]=c[c[d+4>>2]>>2];c[g+4>>2]=0;c[g+8>>2]=1;d=g+12|0;c[d>>2]=0;h=g+16|0;c[h>>2]=0;c[g+20>>2]=0;j=e+4|0;k=c[j>>2]|0;l=c[e>>2]|0;m=k-l|0;if((k|0)!=(l|0)){if((m|0)<0)Kw(d);l=Mw(m)|0;c[h>>2]=l;c[d>>2]=l;c[g+20>>2]=l+m;m=c[e>>2]|0;e=c[j>>2]|0;if((m|0)!=(e|0)){j=m;m=l;do{a[m>>0]=a[j>>0]|0;m=(c[h>>2]|0)+1|0;c[h>>2]=m;j=j+1|0}while((j|0)!=(e|0))}}Cn(b,g);b=c[g+12>>2]|0;if(!b){i=f;return}if((c[h>>2]|0)!=(b|0))c[h>>2]=b;Ow(b);i=f;return}function kn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+32|0;e=d;$m(b);c[e>>2]=c[c[b+4>>2]>>2];b=e+4|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;Cn(a,e);i=d;return}function ln(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+32|0;g=f;$m(d);c[g>>2]=c[c[d+4>>2]>>2];c[g+4>>2]=1;c[g+8>>2]=1;d=g+12|0;c[d>>2]=0;h=g+16|0;c[h>>2]=0;c[g+20>>2]=0;j=e+4|0;k=c[j>>2]|0;l=c[e>>2]|0;m=k-l|0;if((k|0)!=(l|0)){if((m|0)<0)Kw(d);l=Mw(m)|0;c[h>>2]=l;c[d>>2]=l;c[g+20>>2]=l+m;m=c[e>>2]|0;e=c[j>>2]|0;if((m|0)!=(e|0)){j=m;m=l;do{a[m>>0]=a[j>>0]|0;m=(c[h>>2]|0)+1|0;c[h>>2]=m;j=j+1|0}while((j|0)!=(e|0))}}Cn(b,g);b=c[g+12>>2]|0;if(!b){i=f;return}if((c[h>>2]|0)!=(b|0))c[h>>2]=b;Ow(b);i=f;return}function mn(a,b){a=a|0;b=b|0;var d=0,e=0;d=i;i=i+32|0;e=d;$m(b);c[e>>2]=c[c[b+4>>2]>>2];c[e+4>>2]=1;b=e+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;Cn(a,e);i=d;return}function nn(a,b,d){a=a|0;b=b|0;d=d|0;$m(b);Dn(a,18,c[c[b+4>>2]>>2]|0,d);return}function on(a,b,d){a=a|0;b=b|0;d=d|0;$m(b);Dn(a,19,c[c[b+4>>2]>>2]|0,d);return}function pn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+1040|0;h=g+8|0;j=g;$m(d);c[j>>2]=0;k=d+4|0;if(((Gs(c[c[k>>2]>>2]|0)|0)!=1?(Gs(c[c[k>>2]>>2]|0)|0)!=5:0)?(Gs(c[c[k>>2]>>2]|0)|0)!=6:0){l=0;m=0;n=0}else{d=Mw(37504)|0;BH(d|0,0,37504)|0;Xq(d);o=Mw(320)|0;BH(o|0,0,320)|0;Np(o);p=Pp(o,59,d,17432,4)|0;if((p|0)<0){Qp(o);Ow(o);Yq(d);Ow(d);q=Yb(12)|0;dm(q,p);dd(q|0,15208,55)}else{l=d;m=60;n=o}}o=c[e>>2]|0;d=Bs(c[c[k>>2]>>2]|0,f,o,(c[e+4>>2]|0)-o|0,h,j,m,n)|0;m=(n|0)!=0;if((d|0)<0){if(m)Qp(n);if(!l){r=Yb(12)|0;dm(r,d);dd(r|0,15208,55)}Yq(l);r=Yb(12)|0;dm(r,d);dd(r|0,15208,55)}if(m){Qp(n);Ow(n)}if(l){Yq(l);Ow(l)}l=c[j>>2]|0;j=h+l|0;c[b>>2]=0;n=b+4|0;c[n>>2]=0;c[b+8>>2]=0;if(!l){i=g;return}if((l|0)<0)Kw(b);m=Mw(l)|0;c[n>>2]=m;c[b>>2]=m;c[b+8>>2]=m+l;l=h;h=m;do{a[h>>0]=a[l>>0]|0;h=(c[n>>2]|0)+1|0;c[n>>2]=h;l=l+1|0}while((l|0)!=(j|0));i=g;return}function qn(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;$m(a);f=c[b>>2]|0;g=c[d>>2]|0;return (As(c[c[a+4>>2]>>2]|0,e,f,(c[b+4>>2]|0)-f|0,g,(c[d+4>>2]|0)-g|0)|0)==0|0}function rn(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+16|0;d=b;$m(a);e=a+4|0;a=(zs(c[c[e>>2]>>2]|0,1)|0)==0;f=c[c[e>>2]>>2]|0;if(!a){g=En(Fs(f)|0,0)|0;i=b;return g|0}if(!(zs(f,2)|0)){f=Yb(8)|0;Fy(d,17440,42);$i(f,d);dd(f|0,296,39)}g=En(0,c[c[(c[c[e>>2]>>2]|0)+4>>2]>>2]|0)|0;i=b;return g|0}function sn(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+32|0;e=d+20|0;f=d+16|0;g=d+8|0;h=d;c[e>>2]=0;c[f>>2]=0;Bn(b,e,f);if((c[e>>2]|0)>0){c[g>>2]=16960;e=g+4|0;b=Mw(4)|0;c[b>>2]=0;zn(b,1);c[e>>2]=b;Ym(a,g)|0;c[g>>2]=16960;g=c[e>>2]|0;if(!g){i=d;return}b=c[g>>2]|0;if((b|0)!=0?(ws(b),b=c[g>>2]|0,(b|0)!=0):0)Ow(b);Ow(g);c[e>>2]=0;i=d;return}c[h>>2]=16960;e=h+4|0;g=Mw(4)|0;c[g>>2]=0;zn(g,2);c[e>>2]=g;Ym(a,h)|0;c[h>>2]=16960;h=c[e>>2]|0;if(h){g=c[h>>2]|0;if((g|0)!=0?(ws(g),g=c[h>>2]|0,(g|0)!=0):0)Ow(g);Ow(h);c[e>>2]=0}e=Mq(c[(c[c[a+4>>2]>>2]|0)+4>>2]|0,c[f>>2]|0)|0;if((e|0)<0){f=Yb(12)|0;dm(f,e);dd(f|0,15208,55)}else{i=d;return}}function tn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+80|0;f=e+24|0;g=e+40|0;h=e+12|0;j=e;k=d+4|0;if(zs(c[c[k>>2]>>2]|0,1)|0){d=Yb(8)|0;Fy(f,17488,63);$i(d,f);dd(d|0,296,39)}if(!(zs(c[c[k>>2]>>2]|0,2)|0)){d=Yb(8)|0;Fy(j,17440,42);$i(d,j);dd(d|0,296,39)}d=c[(c[c[k>>2]>>2]|0)+4>>2]|0;if((c[d>>2]|0)!=9){k=Yb(8)|0;Fy(h,17552,89);$i(k,h);dd(k|0,296,39)}k=wo(d+136|0,g,32)|0;if((k|0)<0){d=Yb(12)|0;dm(d,k);dd(d|0,15208,55)}else{c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b+8>>2]=0;k=Mw(32)|0;c[b>>2]=k;c[b+8>>2]=k+32;a[k>>0]=a[g>>0]|0;a[k+1>>0]=a[g+1>>0]|0;a[k+2>>0]=a[g+2>>0]|0;a[k+3>>0]=a[g+3>>0]|0;a[k+4>>0]=a[g+4>>0]|0;a[k+5>>0]=a[g+5>>0]|0;a[k+6>>0]=a[g+6>>0]|0;a[k+7>>0]=a[g+7>>0]|0;a[k+8>>0]=a[g+8>>0]|0;a[k+9>>0]=a[g+9>>0]|0;a[k+10>>0]=a[g+10>>0]|0;a[k+11>>0]=a[g+11>>0]|0;a[k+12>>0]=a[g+12>>0]|0;b=k+13|0;c[d>>2]=b;a[b>>0]=a[g+13>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+14>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+15>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+16>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+17>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+18>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+19>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+20>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+21>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+22>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+23>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+24>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+25>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+26>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+27>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+28>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+29>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+30>>0]|0;b=(c[d>>2]|0)+1|0;c[d>>2]=b;a[b>>0]=a[g+31>>0]|0;c[d>>2]=(c[d>>2]|0)+1;i=e;return}}function un(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+48|0;e=d+36|0;f=d+24|0;g=d+12|0;h=d;$m(a);j=a+4|0;if(zs(c[c[j>>2]>>2]|0,1)|0){a=Yb(8)|0;Fy(e,17488,63);$i(a,e);dd(a|0,296,39)}if(!(zs(c[c[j>>2]>>2]|0,2)|0)){a=Yb(8)|0;Fy(h,17440,42);$i(a,h);dd(a|0,296,39)}a=c[(c[c[j>>2]>>2]|0)+4>>2]|0;if((c[a>>2]|0)!=9){j=Yb(8)|0;Fy(g,17552,89);$i(j,g);dd(j|0,296,39)}j=c[b>>2]|0;if(((c[b+4>>2]|0)-j|0)!=32){b=Yb(8)|0;Fy(f,17648,61);$i(b,f);dd(b|0,296,39)}b=vo(a+136|0,j,32)|0;if((b|0)<0){j=Yb(12)|0;dm(j,b);dd(j|0,15208,55)}j=no(a+148|0,0)|0;if((j|0)<0){b=Yb(12)|0;dm(b,j);dd(b|0,15208,55)}b=no(a+160|0,1)|0;if((b|0)<0){a=Yb(12)|0;dm(a,b);dd(a|0,15208,55)}else{i=d;return}}function vn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+144|0;g=f+4|0;h=f+40|0;j=f+80|0;k=f+56|0;l=f+68|0;m=f;n=f+28|0;o=f+16|0;p=f+44|0;$m(d);q=d+4|0;if(zs(c[c[q>>2]>>2]|0,1)|0){d=Yb(8)|0;Fy(g,17488,63);$i(d,g);dd(d|0,296,39)}if(!(zs(c[c[q>>2]>>2]|0,2)|0)){d=Yb(8)|0;Fy(p,17440,42);$i(d,p);dd(d|0,296,39)}d=e+4|0;if((c[e>>2]|0)==(c[d>>2]|0)){c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;i=f;return}if((c[c[(c[c[q>>2]>>2]|0)+4>>2]>>2]|0)!=9){q=Yb(8)|0;Fy(o,17552,89);$i(q,o);dd(q|0,296,39)}c[h>>2]=0;fo(k);fo(l);c[m>>2]=c[e>>2];e=c[d>>2]|0;d=On(m,e,h,48)|0;if((d|0)>=0){h=Qn(m,e,k)|0;if((h|0)>=0){q=Qn(m,e,l)|0;if((q|0)>=0){e=wo(k,j,32)|0;if((e|0)<0)r=e;else r=wo(l,j+32|0,32)|0}else r=q}else r=h}else r=d;go(k);go(l);if((r|0)<0){r=Yb(8)|0;Fy(n,17712,46);$i(r,n);dd(r|0,296,39)}r=j+64|0;c[b>>2]=0;n=b+4|0;c[n>>2]=0;c[b+8>>2]=0;l=Mw(64)|0;c[n>>2]=l;c[b>>2]=l;c[b+8>>2]=l+64;b=j;j=l;do{a[j>>0]=a[b>>0]|0;j=j+1|0;c[n>>2]=j;b=b+1|0}while((b|0)!=(r|0));i=f;return}function wn(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+160|0;g=f+12|0;h=f+48|0;j=f+88|0;k=f+72|0;l=f+76|0;m=f;n=f+36|0;o=f+24|0;p=f+60|0;$m(d);q=d+4|0;if(zs(c[c[q>>2]>>2]|0,1)|0){d=Yb(8)|0;Fy(g,17488,63);$i(d,g);dd(d|0,296,39)}if(!(zs(c[c[q>>2]>>2]|0,2)|0)){d=Yb(8)|0;Fy(p,17440,42);$i(d,p);dd(d|0,296,39)}if((c[c[(c[c[q>>2]>>2]|0)+4>>2]>>2]|0)!=9){q=Yb(8)|0;Fy(o,17552,89);$i(q,o);dd(q|0,296,39)}q=c[e>>2]|0;if(((c[e+4>>2]|0)-q|0)!=64){e=Yb(8)|0;Fy(h,17760,55);$i(e,h);dd(e|0,296,39)}e=j+72|0;c[k>>2]=e;fo(l);fo(m);h=vo(l,q,32)|0;if((h|0)>=0){o=vo(m,q+32|0,32)|0;if((o|0)>=0){q=Xn(k,j,m)|0;if((q|0)>=0){d=Xn(k,j,l)|0;if((d|0)>=0){p=Un(k,j,d+q|0)|0;if((p|0)<0)r=p;else r=Vn(k,j,48)|0}else r=d}else r=q}else r=o}else r=h;go(l);go(m);if((r|0)<0){r=Yb(8)|0;Fy(n,17816,51);$i(r,n);dd(r|0,296,39)}r=c[k>>2]|0;c[b>>2]=0;k=b+4|0;c[k>>2]=0;c[b+8>>2]=0;n=e-r|0;if((e|0)==(r|0)){i=f;return}if((n|0)<0)Kw(b);m=Mw(n)|0;c[k>>2]=m;c[b>>2]=m;c[b+8>>2]=m+n;n=r;r=m;do{a[r>>0]=a[n>>0]|0;r=(c[k>>2]|0)+1|0;c[k>>2]=r;n=n+1|0}while((n|0)!=(e|0));i=f;return}function xn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+32|0;f=e+28|0;g=e+24|0;h=e+12|0;j=e;$m(a);c[f>>2]=0;k=a+4|0;a=c[c[k>>2]>>2]|0;do if(((a|0)!=0?(Gs(a)|0)==2:0)?(l=c[c[(c[c[k>>2]>>2]|0)+4>>2]>>2]|0,(l|0)!=0):0){m=ns(l,f,g)|0;if((m|0)<0){l=Yb(12)|0;dm(l,m);dd(l|0,15208,55)}else{Fy(h,c[f>>2]|0,c[g>>2]|0);l=Km(b,h)|0;Hy(h);n=l;break}}else o=7;while(0);if((o|0)==7)n=Fm(b)|0;o=c[c[k>>2]>>2]|0;if(!o)p=0;else p=Gs(o)|0;o=ls(p,f,g)|0;if((o|0)<0){p=Yb(12)|0;dm(p,o);dd(p|0,15208,55)}else{Fy(j,c[f>>2]|0,c[g>>2]|0);g=(Km(b,j)|0)+n|0;Hy(j);j=g+d+(Lm(b,g)|0)|0;i=e;return j|0}return 0}function yn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+48|0;f=e+36|0;g=e+24|0;h=e+12|0;j=e+8|0;k=e;vm(d)|0;um(f,d);tm(g,d);d=c[g>>2]|0;if(d){l=g+4|0;if((c[l>>2]|0)!=(d|0))c[l>>2]=d;Ow(d)}d=a[f>>0]|0;l=(d&1)==0;c[h+4>>2]=l?(d&255)>>>1:c[f+4>>2]|0;c[h+8>>2]=l?f+1|0:c[f+8>>2]|0;c[j>>2]=0;l=ks(h,j)|0;if((l|0)<0){h=Yb(12)|0;dm(h,l);dd(h|0,15208,55)}h=c[j>>2]|0;c[k>>2]=16960;j=k+4|0;l=Mw(4)|0;c[l>>2]=0;zn(l,h);c[j>>2]=l;Ym(b,k)|0;c[k>>2]=16960;k=c[j>>2]|0;if(!k){Hy(f);i=e;return}b=c[k>>2]|0;if((b|0)!=0?(ws(b),b=c[k>>2]|0,(b|0)!=0):0)Ow(b);Ow(k);c[j>>2]=0;Hy(f);i=e;return}function zn(a,b){a=a|0;b=b|0;var d=0,e=0;d=Mw(8)|0;e=d;c[e>>2]=0;c[e+4>>2]=0;c[a>>2]=d;vs(d);if(!b)return;d=xs(b)|0;b=ys(c[a>>2]|0,d)|0;if((b|0)>=0)return;d=c[a>>2]|0;if(d){ws(d);d=c[a>>2]|0;if(d)Ow(d);c[a>>2]=0}a=Yb(12)|0;dm(a,b);dd(a|0,15208,55)}function An(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;e=i;i=i+32|0;f=e+12|0;g=e;Fy(g,18264,11);Lg(f,g);Hy(g);g=c[d>>2]|0;h=g;j=d+4|0;k=c[j>>2]|0;l=c[f>>2]|0;m=l;n=f+4|0;o=c[n>>2]|0;p=o-m|0;a:do if((o|0)!=(l|0))if((k-h|0)>=(p|0)?(q=k+(1-p)|0,(g|0)!=(q|0)):0){r=a[l>>0]|0;s=h;t=g;b:while(1){if((a[t>>0]|0)==r<<24>>24){u=m;v=s;do{u=u+1|0;if((u|0)==(o|0)){w=s;break b}v=v+1|0}while((a[v>>0]|0)==(a[u>>0]|0))}u=t+1|0;if((u|0)==(q|0)){x=27;break a}else{s=u;t=u}}y=w;x=10}else x=27;else{y=g;x=10}while(0);do if((x|0)==10)if((y|0)!=(k|0)){c[b>>2]=0;w=b+4|0;c[w>>2]=0;c[b+8>>2]=0;o=k-h|0;if((k|0)!=(g|0)){if((o|0)<0)Kw(b);m=Mw(o)|0;c[w>>2]=m;c[b>>2]=m;l=b+8|0;c[l>>2]=m+o;o=g;p=m;while(1){a[p>>0]=a[o>>0]|0;m=(c[w>>2]|0)+1|0;c[w>>2]=m;o=o+1|0;if((o|0)==(k|0)){z=m;break}else p=m}p=c[l>>2]|0;if((z|0)==(p|0)){A=l;B=p}else{a[z>>0]=0;c[w>>2]=(c[w>>2]|0)+1;break}}else{A=b+8|0;B=0}p=c[b>>2]|0;o=p;m=B-o+1|0;if((m|0)<0)Kw(b);t=p;s=B-t|0;if(s>>>0<1073741823){q=s<<1;s=q>>>0<m>>>0?m:q;q=c[w>>2]|0;m=q-t|0;if(!s){C=0;D=0;E=m;F=q}else{G=s;H=q;I=m;x=24}}else{m=c[w>>2]|0;G=2147483647;H=m;I=m-t|0;x=24}if((x|0)==24){C=G;D=Mw(G)|0;E=I;F=H}a[D+E>>0]=0;m=F-t|0;t=D+(E-m)|0;zH(t|0,p|0,m|0)|0;c[b>>2]=t;c[w>>2]=D+(E+1);c[A>>2]=D+C;if(o)Ow(o)}else x=27;while(0);if((x|0)==27?(c[b>>2]=0,x=b+4|0,c[x>>2]=0,c[b+8>>2]=0,C=k-h|0,(k|0)!=(g|0)):0){if((C|0)<0)Kw(b);g=Mw(C)|0;c[x>>2]=g;c[b>>2]=g;c[b+8>>2]=g+C;C=c[d>>2]|0;d=c[j>>2]|0;if((C|0)!=(d|0)){j=C;C=g;do{a[C>>0]=a[j>>0]|0;C=(c[x>>2]|0)+1|0;c[x>>2]=C;j=j+1|0}while((j|0)!=(d|0))}}d=c[f>>2]|0;if(!d){i=e;return}if((c[n>>2]|0)!=(d|0))c[n>>2]=d;Ow(d);i=e;return}function Bn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+48|0;f=e+36|0;g=e+24|0;h=e+12|0;j=e;c[b>>2]=0;c[d>>2]=0;do switch(a|0){case 3:{c[b>>2]=1024;break}case 5:{c[b>>2]=3072;break}case 7:{c[b>>2]=8192;break}case 12:{c[d>>2]=5;break}case 13:{c[d>>2]=6;break}case 1:{c[b>>2]=256;break}case 2:{c[b>>2]=512;break}case 4:{c[b>>2]=2048;break}case 8:{c[d>>2]=1;break}case 6:{c[b>>2]=4096;break}case 11:{c[d>>2]=4;break}case 22:{c[d>>2]=12;break}case 14:{c[d>>2]=7;break}case 15:{c[d>>2]=8;break}case 19:{k=Yb(8)|0;Fy(h,18208,49);$i(k,h);dd(k|0,296,39);break}case 20:{c[d>>2]=10;break}case 21:{c[d>>2]=11;break}case 0:case 17:{c[d>>2]=9;break}case 10:{c[d>>2]=3;break}case 9:{c[d>>2]=2;break}case 16:{k=Yb(8)|0;Fy(f,18096,49);$i(k,f);dd(k|0,296,39);break}case 18:{k=Yb(8)|0;Fy(g,18152,49);$i(k,g);dd(k|0,296,39);break}default:{k=Yb(8)|0;Fy(j,17440,42);$i(k,j);dd(k|0,296,39)}}while(0);i=e;return}function Cn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[b>>2]=0;e=b+4|0;c[e>>2]=0;c[b+8>>2]=0;f=Mw(2048)|0;c[e>>2]=f;c[b>>2]=f;c[b+8>>2]=f+2048;g=2048;h=f;while(1){a[h>>0]=0;f=(c[e>>2]|0)+1|0;c[e>>2]=f;g=g+-1|0;if(!g){i=f;break}else h=f}while(1){h=c[b>>2]|0;g=Fn(d,h,i-h|0)|0;if(!((g|0)==-108|(g|0)==-42)){j=g;break}h=c[e>>2]|0;f=c[b>>2]|0;k=h-f|0;l=k<<1;if(l>>>0<=k>>>0){if(l>>>0<k>>>0?(m=f+l|0,(h|0)!=(m|0)):0)c[e>>2]=m}else Ek(b,k);if(!((g|0)==-108|(g|0)==-42)){n=g;o=12;break}i=c[e>>2]|0}if((o|0)==12){p=Yb(12)|0;dm(p,n);dd(p|0,15208,55)}if((j|0)<0){n=j;p=Yb(12)|0;dm(p,n);dd(p|0,15208,55)}p=c[d+4>>2]|0;do if(!((j|0)>0&(p|0)==0))if((j|0)==0&(p|0)==1){q=yH(c[b>>2]|0)|0;o=18;break}else{d=c[e>>2]|0;n=c[b>>2]|0;r=d-n|0;s=n;t=d;u=0;break}else{d=c[b>>2]|0;AH(d|0,d+((c[e>>2]|0)-(d+j))|0,j|0)|0;q=j;o=18}while(0);if((o|0)==18){o=c[e>>2]|0;j=c[b>>2]|0;p=o-j|0;if(q>>>0>p>>>0){Ek(b,q-p|0);return}else{r=p;s=j;t=o;u=q}}if(u>>>0>=r>>>0)return;r=s+u|0;if((t|0)==(r|0))return;c[e>>2]=r;return}function Dn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+37840|0;h=g+37824|0;j=g;k=g+37504|0;c[b>>2]=0;l=b+4|0;c[l>>2]=0;c[b+8>>2]=0;m=Mw(1024)|0;c[l>>2]=m;c[b>>2]=m;c[b+8>>2]=m+1024;n=1024;o=m;while(1){a[o>>0]=0;m=(c[l>>2]|0)+1|0;c[l>>2]=m;n=n+-1|0;if(!n){p=m;break}else o=m}c[h>>2]=0;Xq(j);Np(k);o=Pp(k,59,j,17976,15)|0;if((o|0)<0){Yq(j);n=Yb(12)|0;dm(n,o);dd(n|0,15208,55)}n=c[f>>2]|0;o=c[b>>2]|0;m=p-o|0;q=zd[d&31](e,n,(c[f+4>>2]|0)-n|0,o,h,m,60,k)|0;Qp(k);Yq(j);if((q|0)<0){j=Yb(12)|0;dm(j,q);dd(j|0,15208,55)}j=c[h>>2]|0;if(j>>>0>m>>>0){Ek(b,j-m|0);i=g;return}if(j>>>0>=m>>>0){i=g;return}m=o+j|0;if((p|0)==(m|0)){i=g;return}c[l>>2]=m;i=g;return}function En(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=i;i=i+48|0;d=c+24|0;e=c+12|0;f=c;a:do switch(a|0){case 2048:{g=4;break}case 0:{do switch(b|0){case 7:{g=14;break a;break}case 8:{g=15;break a;break}case 3:{g=10;break a;break}case 6:{g=13;break a;break}case 5:{g=12;break a;break}case 9:{g=17;break a;break}case 10:{g=20;break a;break}case 0:{h=Yb(8)|0;Fy(f,17440,42);$i(h,f);dd(h|0,296,39);break}case 4:{g=11;break a;break}case 2:{g=9;break a;break}case 11:{g=21;break a;break}case 12:{g=22;break a;break}case 1:{g=8;break a;break}default:{h=Yb(8)|0;Fy(e,17928,42);$i(h,e);dd(h|0,296,39)}}while(0);break}case 4096:{g=6;break}case 1024:{g=3;break}case 512:{g=2;break}case 3072:{g=5;break}case 8192:{g=7;break}case 256:{g=1;break}default:{h=Yb(8)|0;Fy(d,17872,48);$i(h,d);dd(h|0,296,39)}}while(0);i=c;return g|0}function Fn(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;e=i;i=i+64|0;f=e+48|0;g=e+36|0;h=e+24|0;j=e+12|0;k=e;Fy(h,17992,10);Lg(g,h);Wk(f,g);l=c[g>>2]|0;if(l){m=g+4|0;if((c[m>>2]|0)!=(l|0))c[m>>2]=l;Ow(l)}Hy(h);Xk(k,f,16);gm(j,k,Zk(f,3072,8192)|0);h=c[k>>2]|0;if(h){l=k+4|0;if((c[l>>2]|0)!=(h|0))c[l>>2]=h;Ow(h)}h=c[a+8>>2]|0;do if((h|0)==1){if((c[a+4>>2]|0)==1){l=c[a+12>>2]|0;k=c[a+16>>2]|0;m=c[a>>2]|0;if((l|0)==(k|0)){n=yt(m,b,d)|0;break}else{g=c[j>>2]|0;n=zt(m,b,d,l,k-l|0,g,(c[j+4>>2]|0)-g|0)|0;break}}if(c[a+4>>2]|0){o=Yb(8)|0;By(o,18008);dd(o|0,78680,39)}g=c[a+12>>2]|0;l=c[a+16>>2]|0;k=c[a>>2]|0;if((g|0)==(l|0)){n=vt(k,b,d)|0;break}else{m=c[j>>2]|0;n=wt(k,b,d,g,l-g|0,m,(c[j+4>>2]|0)-m|0)|0;break}}else if(!h){m=c[a+4>>2]|0;if((m|0)==1){n=xt(c[a>>2]|0,b,d)|0;break}else if(!m){n=ut(c[a>>2]|0,b,d)|0;break}else{o=Yb(8)|0;By(o,18008);dd(o|0,78680,39)}}else{o=Yb(8)|0;By(o,18008);dd(o|0,78680,39)}while(0);o=c[j>>2]|0;if(!o){_k(f);i=e;return n|0}d=j+4|0;if((c[d>>2]|0)!=(o|0))c[d>>2]=o;Ow(o);_k(f);i=e;return n|0}function Gn(a){a=a|0;var b=0,d=0;c[a>>2]=18288;b=Mw(8)|0;c[b>>2]=0;d=b+4|0;c[d>>2]=0;c[b>>2]=nu(2)|0;c[d>>2]=or(6)|0;c[a+4>>2]=b;return}function Hn(a){a=a|0;var b=0;c[a>>2]=18288;b=a+4|0;a=c[b>>2]|0;if(!a)return;Ow(a);c[b>>2]=0;return}function In(a){a=a|0;var b=0;c[a>>2]=18288;b=c[a+4>>2]|0;if(!b){Ow(a);return}Ow(b);Ow(a);return}function Jn(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+32|0;e=d+12|0;f=d;g=c[b+4>>2]|0;if((c[g>>2]|0)!=0?(c[g+4>>2]|0)!=0:0){i=d;return}d=Yb(8)|0;Fy(f,18368,42);c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;g=a[f>>0]|0;b=(g&1)==0;h=b?(g&255)>>>1:c[f+4>>2]|0;Sy(e,b?f+1|0:c[f+8>>2]|0,h,h+97|0);Py(e,18416,97)|0;$i(d,e);dd(d|0,296,39)}function Kn(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;Jn(d);c[b>>2]=0;g=b+4|0;c[g>>2]=0;c[b+8>>2]=0;if(!f){h=0;i=0}else{if((f|0)<0)Kw(b);j=Mw(f)|0;c[g>>2]=j;c[b>>2]=j;c[b+8>>2]=j+f;k=f;f=j;while(1){a[f>>0]=0;j=(c[g>>2]|0)+1|0;c[g>>2]=j;k=k+-1|0;if(!k){l=j;break}else f=j}h=c[b>>2]|0;i=l}l=c[d+4>>2]|0;d=c[e>>2]|0;b=pu(c[l>>2]|0,c[l+4>>2]|0,d,(c[e+4>>2]|0)-d|0,h,i-h|0)|0;if((b|0)<0){h=Yb(12)|0;dm(h,b);dd(h|0,15208,55)}else return}function Ln(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+32|0;f=e+28|0;g=e+24|0;h=e+12|0;j=e;Jn(a);c[f>>2]=0;k=a+4|0;a=rs(Cr(c[(c[k>>2]|0)+4>>2]|0)|0,f,g)|0;if((a|0)<0){l=Yb(12)|0;dm(l,a);dd(l|0,15208,55)}l=Fm(b)|0;Fy(h,c[f>>2]|0,c[g>>2]|0);a=(Km(b,h)|0)+l|0;Hy(h);h=(Lm(b,a)|0)+a|0;a=us(ou(c[c[k>>2]>>2]|0)|0,f,g)|0;if((a|0)<0){k=Yb(12)|0;dm(k,a);dd(k|0,15208,55)}else{Fy(j,c[f>>2]|0,c[g>>2]|0);g=h+(Km(b,j)|0)|0;Hy(j);j=g+d+(Lm(b,g)|0)|0;i=e;return j|0}return 0}function Mn(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;e=i;i=i+80|0;f=e+16|0;g=e+40|0;h=e+52|0;j=e+64|0;k=e+4|0;l=e;m=e+32|0;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;vm(d)|0;um(h,d);Iy(g,h)|0;Hy(h);h=a[g>>0]|0;n=(h&1)==0;o=g+4|0;p=f+4|0;c[p>>2]=n?(h&255)>>>1:c[o>>2]|0;h=g+8|0;q=g+1|0;r=f+8|0;c[r>>2]=n?q:c[h>>2]|0;c[j>>2]=0;n=ts(f,j)|0;if((n|0)<0){s=Yb(12)|0;dm(s,n);dd(s|0,15208,55)}vm(d)|0;um(k,d);Iy(g,k)|0;Hy(k);k=a[g>>0]|0;s=(k&1)==0;c[p>>2]=s?(k&255)>>>1:c[o>>2]|0;c[r>>2]=s?q:c[h>>2]|0;c[l>>2]=0;h=qs(f,l)|0;if((h|0)<0){f=Yb(12)|0;dm(f,h);dd(f|0,15208,55)}pm(d);d=c[j>>2]|0;j=c[l>>2]|0;c[m>>2]=18288;l=m+4|0;f=Mw(8)|0;c[f>>2]=0;h=f+4|0;c[h>>2]=0;c[f>>2]=nu(d)|0;c[h>>2]=or(j)|0;c[l>>2]=f;if((m|0)==(b|0))t=f;else{j=Mw(8)|0;h=f;d=c[h+4>>2]|0;q=j;c[q>>2]=c[h>>2];c[q+4>>2]=d;d=b+4|0;b=c[d>>2]|0;if(!b)u=f;else{Ow(b);u=c[l>>2]|0}c[d>>2]=j;t=u}c[m>>2]=18288;if(!t){Hy(g);i=e;return}Ow(t);c[l>>2]=0;Hy(g);i=e;return}\nfunction zq(a,b){a=a|0;b=b|0;var d=0,e=0;if(!(c[a+48>>2]|0)){d=-20352;return d|0}if(c[a+60>>2]|0){if((Ao(b,1)|0)<0){d=-19584;return d|0}d=((zo(b,a+76|0)|0)>>31&19584)+-19584|0;return d|0}if(oo(b,0)|0){d=-19584;return d|0}if(oo(b,1)|0){d=-19584;return d|0}if(!(oo(b,2)|0)){e=(qo(b)|0)+-1|0;return ((e|0)==(c[a+92>>2]|0)?0:-19584)|0}else{d=-19584;return d|0}return 0}function Aq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=i;i=i+32|0;e=d+12|0;f=d;if(Ao(b+24|0,1)|0){g=-19584;i=d;return g|0}if(!(c[a+48>>2]|0)){g=-20352;i=d;return g|0}if(!(c[a+60>>2]|0)){h=ro(b)|0;g=h>>>0>((c[a+92>>2]|0)+7|0)>>>3>>>0?-19584:0;i=d;return g|0}if((((Ao(b,0)|0)>=0?(h=b+12|0,(Ao(h,0)|0)>=0):0)?(j=a+4|0,(zo(b,j)|0)<=-1):0)?(zo(h,j)|0)<=-1:0){fo(e);fo(f);k=Fo(e,h,h)|0;a:do if(!k){h=Gq(e,a)|0;if(!h){l=Fo(f,b,b)|0;if(!l){m=Gq(f,a)|0;if(!m){b:do if(!(c[a+24>>2]|0)){n=uo(f,f,3)|0;if(n){o=n;break a}while(1){if((c[f>>2]|0)>=0)break b;if(!(Ao(f,0)|0))break b;n=Do(f,f,j)|0;if(n){o=n;break a}}}else{n=Do(f,f,a+16|0)|0;if(n){o=n;break a}while(1){if((zo(f,j)|0)<=-1)break b;n=Co(f,f,j)|0;if(n){o=n;break a}}}while(0);n=Fo(f,f,b)|0;if(!n){p=Gq(f,a)|0;if(!p){q=Do(f,f,a+28|0)|0;if(!q){while(1){if((zo(f,j)|0)<=-1)break;r=Co(f,f,j)|0;if(r){o=r;break a}}r=(zo(e,f)|0)==0;o=r?0:-19584}else o=q}else o=p}else o=n}else o=m}else o=l}else o=h}else o=k;while(0);go(e);go(f);s=o}else s=-19584;g=s;i=d;return g|0}function Bq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+48|0;j=h;if(!(c[a+48>>2]|0)){k=-20096;i=h;return k|0}if(!(c[a+60>>2]|0)){k=-20096;i=h;return k|0}fo(j);l=j+12|0;fo(l);m=j+24|0;fo(m);n=Lq(a,j,d,e)|0;if(!n){e=Lq(a,b,f,g)|0;if(!e){g=Jq(a,b,j,b)|0;if(!g)o=Kq(a,b)|0;else o=g}else o=e}else o=n;go(j);go(l);go(m);k=o;i=h;return k|0}function Cq(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0;j=i;i=i+112|0;k=j+32|0;l=j;m=b+92|0;n=((c[m>>2]|0)+7|0)>>>3;if(!(c[b+48>>2]|0)){o=-20352;i=j;return o|0}do if(!(c[b+60>>2]|0)){p=Ko(e,n,g,h)|0;if(p){o=p;i=j;return o|0}p=(qo(e)|0)+-1|0;q=c[m>>2]|0;if(p>>>0>q>>>0){r=yo(e,p-q|0)|0;if(r){o=r;i=j;return o|0}}else{r=po(e,q,1)|0;if(r){o=r;i=j;return o|0}}r=po(e,0,0)|0;if(r){o=r;i=j;return o|0}r=po(e,1,0)|0;if(!r){s=po(e,2,0)|0;break}else{o=r;i=j;return o|0}}else{r=od[g&127](h,k,n)|0;a:do if(!r){q=n<<3;p=b+76|0;t=0;while(1){u=vo(e,k,n)|0;if(u){v=u;break a}u=yo(e,q-(c[m>>2]|0)|0)|0;if(u){v=u;break a}if((t|0)>29)break;t=t+1|0;if((Ao(e,1)|0)>=0?(zo(e,p)|0)<=-1:0){v=0;break a}u=od[g&127](h,k,n)|0;if(u){v=u;break a}}o=-19712;i=j;return o|0}else v=r;while(0);s=v}while(0);if(s){o=s;i=j;return o|0}if((c[b>>2]|0)!=9){o=yq(b,f,e,d,g,h)|0;i=j;return o|0}h=wo(e,l,32)|0;if(!h){e=l+31|0;g=a[l>>0]|0;a[l>>0]=a[e>>0]|0;a[e>>0]=g;g=l+1|0;d=l+30|0;b=a[g>>0]|0;a[g>>0]=a[d>>0]|0;a[d>>0]=b;b=l+2|0;s=l+29|0;v=a[b>>0]|0;a[b>>0]=a[s>>0]|0;a[s>>0]=v;v=l+3|0;n=l+28|0;m=a[v>>0]|0;a[v>>0]=a[n>>0]|0;a[n>>0]=m;m=l+4|0;r=l+27|0;p=a[m>>0]|0;a[m>>0]=a[r>>0]|0;a[r>>0]=p;p=l+5|0;t=l+26|0;q=a[p>>0]|0;a[p>>0]=a[t>>0]|0;a[t>>0]=q;q=l+6|0;u=l+25|0;w=a[q>>0]|0;a[q>>0]=a[u>>0]|0;a[u>>0]=w;w=l+7|0;x=l+24|0;y=a[w>>0]|0;a[w>>0]=a[x>>0]|0;a[x>>0]=y;y=l+8|0;z=l+23|0;A=a[y>>0]|0;a[y>>0]=a[z>>0]|0;a[z>>0]=A;A=l+9|0;B=l+22|0;C=a[A>>0]|0;a[A>>0]=a[B>>0]|0;a[B>>0]=C;C=l+10|0;D=l+21|0;E=a[C>>0]|0;a[C>>0]=a[D>>0]|0;a[D>>0]=E;E=l+11|0;F=l+20|0;G=a[E>>0]|0;a[E>>0]=a[F>>0]|0;a[F>>0]=G;G=l+12|0;H=l+19|0;I=a[G>>0]|0;a[G>>0]=a[H>>0]|0;a[H>>0]=I;I=l+13|0;J=l+18|0;K=a[I>>0]|0;a[I>>0]=a[J>>0]|0;a[J>>0]=K;K=l+14|0;L=l+17|0;M=a[K>>0]|0;a[K>>0]=a[L>>0]|0;a[L>>0]=M;M=l+15|0;N=l+16|0;O=a[M>>0]|0;a[M>>0]=a[N>>0]|0;a[N>>0]=O;if(!(qv(k,l)|0)){O=k+31|0;P=a[k>>0]|0;a[k>>0]=a[O>>0]|0;a[O>>0]=P;P=k+1|0;O=k+30|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=k+2|0;O=k+29|0;P=a[Q>>0]|0;a[Q>>0]=a[O>>0]|0;a[O>>0]=P;P=k+3|0;O=k+28|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=k+4|0;O=k+27|0;P=a[Q>>0]|0;a[Q>>0]=a[O>>0]|0;a[O>>0]=P;P=k+5|0;O=k+26|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=k+6|0;O=k+25|0;P=a[Q>>0]|0;a[Q>>0]=a[O>>0]|0;a[O>>0]=P;P=k+7|0;O=k+24|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=k+8|0;O=k+23|0;P=a[Q>>0]|0;a[Q>>0]=a[O>>0]|0;a[O>>0]=P;P=k+9|0;O=k+22|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=k+10|0;O=k+21|0;P=a[Q>>0]|0;a[Q>>0]=a[O>>0]|0;a[O>>0]=P;P=k+11|0;O=k+20|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=k+12|0;O=k+19|0;P=a[Q>>0]|0;a[Q>>0]=a[O>>0]|0;a[O>>0]=P;P=k+13|0;O=k+18|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=k+14|0;O=k+17|0;P=a[Q>>0]|0;a[Q>>0]=a[O>>0]|0;a[O>>0]=P;P=k+15|0;O=k+16|0;Q=a[P>>0]|0;a[P>>0]=a[O>>0]|0;a[O>>0]=Q;Q=vo(f,k,32)|0;if(!Q){k=no(f+24|0,1)|0;if(!k){go(f+12|0);R=b;S=v;T=m;U=p;V=q;W=w;X=y;Y=A;Z=C;_=E;$=G;aa=I;ba=K;ca=M;da=N;ea=L;fa=J;ga=H;ha=F;ia=D;ja=B;ka=z;la=x;ma=u;na=t;oa=r;pa=n;qa=s;ra=d;sa=e;ta=g;ua=0}else{R=b;S=v;T=m;U=p;V=q;W=w;X=y;Y=A;Z=C;_=E;$=G;aa=I;ba=K;ca=M;da=N;ea=L;fa=J;ga=H;ha=F;ia=D;ja=B;ka=z;la=x;ma=u;na=t;oa=r;pa=n;qa=s;ra=d;sa=e;ta=g;ua=k}}else{R=b;S=v;T=m;U=p;V=q;W=w;X=y;Y=A;Z=C;_=E;$=G;aa=I;ba=K;ca=M;da=N;ea=L;fa=J;ga=H;ha=F;ia=D;ja=B;ka=z;la=x;ma=u;na=t;oa=r;pa=n;qa=s;ra=d;sa=e;ta=g;ua=Q}}else{R=b;S=v;T=m;U=p;V=q;W=w;X=y;Y=A;Z=C;_=E;$=G;aa=I;ba=K;ca=M;da=N;ea=L;fa=J;ga=H;ha=F;ia=D;ja=B;ka=z;la=x;ma=u;na=t;oa=r;pa=n;qa=s;ra=d;sa=e;ta=g;ua=-20352}}else{R=l+2|0;S=l+3|0;T=l+4|0;U=l+5|0;V=l+6|0;W=l+7|0;X=l+8|0;Y=l+9|0;Z=l+10|0;_=l+11|0;$=l+12|0;aa=l+13|0;ba=l+14|0;ca=l+15|0;da=l+16|0;ea=l+17|0;fa=l+18|0;ga=l+19|0;ha=l+20|0;ia=l+21|0;ja=l+22|0;ka=l+23|0;la=l+24|0;ma=l+25|0;na=l+26|0;oa=l+27|0;pa=l+28|0;qa=l+29|0;ra=l+30|0;sa=l+31|0;ta=l+1|0;ua=h}a[l>>0]=0;a[ta>>0]=0;a[R>>0]=0;a[S>>0]=0;a[T>>0]=0;a[U>>0]=0;a[V>>0]=0;a[W>>0]=0;a[X>>0]=0;a[Y>>0]=0;a[Z>>0]=0;a[_>>0]=0;a[$>>0]=0;a[aa>>0]=0;a[ba>>0]=0;a[ca>>0]=0;a[da>>0]=0;a[ea>>0]=0;a[fa>>0]=0;a[ga>>0]=0;a[ha>>0]=0;a[ia>>0]=0;a[ja>>0]=0;a[ka>>0]=0;a[la>>0]=0;a[ma>>0]=0;a[na>>0]=0;a[oa>>0]=0;a[pa>>0]=0;a[qa>>0]=0;a[ra>>0]=0;a[sa>>0]=0;o=ua;i=j;return o|0}function Dq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Cq(a,a+40|0,b,c,d,e)|0}function Eq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Mq(b,a)|0;if(e){f=e;return f|0}f=Cq(b,b+40|0,b+124|0,b+136|0,c,d)|0;return f|0}function Fq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+160|0;e=d+124|0;f=d;g=c[a>>2]|0;if(!g){h=-20352;i=d;return h|0}if((g|0)!=(c[b>>2]|0)){h=-20352;i=d;return h|0}g=b+136|0;if(zo(a+136|0,g)|0){h=-20352;i=d;return h|0}j=b+148|0;if(zo(a+148|0,j)|0){h=-20352;i=d;return h|0}k=b+160|0;if(zo(a+160|0,k)|0){h=-20352;i=d;return h|0}fo(e);a=e+12|0;fo(a);l=e+24|0;fo(l);m=f;n=m+124|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(n|0));Mq(f,c[b>>2]|0)|0;m=yq(f,e,b+124|0,b+40|0,0,0)|0;do if(!m){if(((zo(e,g)|0)==0?(zo(a,j)|0)==0:0)?(zo(l,k)|0)==0:0){o=0;break}o=-20352}else o=m;while(0);go(e);go(a);go(l);rq(f);h=o;i=d;return h|0}function Gq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=b+100|0;if(!(c[d>>2]|0)){e=Ho(a,a,b+4|0)|0;return e|0}if((c[a>>2]|0)<0?(Ao(a,0)|0)!=0:0){e=-20352;return e|0}f=qo(a)|0;if(f>>>0>c[b+88>>2]<<1>>>0){e=-20352;return e|0}f=wd[c[d>>2]&127](a)|0;if(f){e=f;return e|0}f=b+4|0;while(1){if((c[a>>2]|0)>=0)break;if(!(Ao(a,0)|0))break;b=Do(a,a,f)|0;if(b){e=b;g=13;break}}if((g|0)==13)return e|0;while(1){if((zo(a,f)|0)<=-1){e=0;g=13;break}b=Co(a,a,f)|0;if(b){e=b;g=13;break}}if((g|0)==13)return e|0;return 0}function Hq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+48|0;f=e+36|0;g=e+24|0;h=e+12|0;j=e;fo(f);fo(g);fo(h);fo(j);k=a+16|0;a:do if(!(c[a+24>>2]|0)){l=d+24|0;m=Fo(g,l,l)|0;if(!m){l=Gq(g,a)|0;if(!l){n=Do(h,d,g)|0;if(!n){o=a+4|0;while(1){if((zo(h,o)|0)<=-1)break;p=Co(h,h,o)|0;if(p){q=p;break a}}p=Eo(j,d,g)|0;if(!p){while(1){if((c[j>>2]|0)>=0)break;if(!(Ao(j,0)|0))break;r=Do(j,j,o)|0;if(r){q=r;break a}}r=Fo(g,h,j)|0;if(!r){s=Gq(g,a)|0;if(!s){t=to(f,g,3)|0;if(!t)while(1){if((zo(f,o)|0)<=-1){u=34;break a}v=Co(f,f,o)|0;if(v){q=v;break}}else q=t}else q=s}else q=r}else q=p}else q=n}else q=l}else q=m}else{o=Fo(g,d,d)|0;if(!o){v=Gq(g,a)|0;if(!v){w=to(f,g,3)|0;if(!w){x=a+4|0;while(1){if((zo(f,x)|0)<=-1)break;y=Co(f,f,x)|0;if(y){q=y;break a}}if(Ao(k,0)|0){m=d+24|0;l=Fo(g,m,m)|0;if(!l){m=Gq(g,a)|0;if(!m){n=Fo(h,g,g)|0;if(!n){p=Gq(h,a)|0;if(!p){r=Fo(g,h,k)|0;if(!r){s=Gq(g,a)|0;if(!s){t=Do(f,f,g)|0;if(!t)while(1){if((zo(f,x)|0)<=-1){u=34;break a}y=Co(f,f,x)|0;if(y){q=y;break}}else q=t}else q=s}else q=r}else q=p}else q=n}else q=m}else q=l}else u=34}else q=w}else q=v}else q=o}while(0);b:do if((u|0)==34){k=d+12|0;x=Fo(h,k,k)|0;if(!x){y=Gq(h,a)|0;if(!y){z=xo(h,1)|0;if(!z){A=a+4|0;while(1){if((zo(h,A)|0)<=-1)break;B=Co(h,h,A)|0;if(B){q=B;break b}}o=Fo(g,d,h)|0;if(!o){v=Gq(g,a)|0;if(!v){w=xo(g,1)|0;if(!w){while(1){if((zo(g,A)|0)<=-1)break;l=Co(g,g,A)|0;if(l){q=l;break b}}l=Fo(j,h,h)|0;if(!l){m=Gq(j,a)|0;if(!m){n=xo(j,1)|0;if(!n){while(1){if((zo(j,A)|0)<=-1)break;p=Co(j,j,A)|0;if(p){q=p;break b}}p=Fo(h,f,f)|0;if(!p){r=Gq(h,a)|0;if(!r){s=Eo(h,h,g)|0;if(!s){while(1){if((c[h>>2]|0)>=0)break;if(!(Ao(h,0)|0))break;t=Do(h,h,A)|0;if(t){q=t;break b}}t=Eo(h,h,g)|0;if(!t){while(1){if((c[h>>2]|0)>=0)break;if(!(Ao(h,0)|0))break;B=Do(h,h,A)|0;if(B){q=B;break b}}B=Eo(g,g,h)|0;if(!B){while(1){if((c[g>>2]|0)>=0)break;if(!(Ao(g,0)|0))break;C=Do(g,g,A)|0;if(C){q=C;break b}}C=Fo(g,g,f)|0;if(!C){D=Gq(g,a)|0;if(!D){E=Eo(g,g,j)|0;if(!E){while(1){if((c[g>>2]|0)>=0)break;if(!(Ao(g,0)|0))break;F=Do(g,g,A)|0;if(F){q=F;break b}}F=Fo(j,k,d+24|0)|0;if(!F){G=Gq(j,a)|0;if(G){q=G;break}G=xo(j,1)|0;if(G){q=G;break}while(1){if((zo(j,A)|0)<=-1)break;G=Co(j,j,A)|0;if(G){q=G;break b}}A=jo(b,h)|0;if(A){q=A;break}A=jo(b+12|0,g)|0;if(A){q=A;break}q=jo(b+24|0,j)|0}else q=F}else q=E}else q=D}else q=C}else q=B}else q=t}else q=s}else q=r}else q=p}else q=n}else q=m}else q=l}else q=w}else q=v}else q=o}else q=z}else q=y}else q=x}while(0);go(f);go(g);go(h);go(j);i=e;return q|0}function Iq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+48|0;f=e+24|0;g=e+12|0;h=e;if(d>>>0<2){j=Kq(a,c[b>>2]|0)|0;i=e;return j|0}k=ry(d,12)|0;if(!k){j=-19840;i=e;return j|0}fo(f);fo(g);fo(h);l=jo(k,(c[b>>2]|0)+24|0)|0;a:do if(!l){m=1;do{n=k+(m*12|0)|0;o=Fo(n,k+((m+-1|0)*12|0)|0,(c[b+(m<<2)>>2]|0)+24|0)|0;if(o){p=o;break a}o=Gq(n,a)|0;m=m+1|0;if(o){p=o;break a}}while(m>>>0<d>>>0);m=d+-1|0;o=Lo(f,k+(m*12|0)|0,a+4|0)|0;if(!o){n=a+8|0;q=m;while(1){m=(q|0)==0;if(m){r=jo(g,f)|0;if(r){p=r;break a}}else{r=Fo(g,f,k+((q+-1|0)*12|0)|0)|0;if(r){p=r;break a}r=Gq(g,a)|0;if(r){p=r;break a}r=Fo(f,f,(c[b+(q<<2)>>2]|0)+24|0)|0;if(r){p=r;break a}r=Gq(f,a)|0;if(r){p=r;break a}}r=Fo(h,g,g)|0;if(r){p=r;break a}r=Gq(h,a)|0;if(r){p=r;break a}r=b+(q<<2)|0;s=c[r>>2]|0;t=Fo(s,s,h)|0;if(t){p=t;break a}t=Gq(c[r>>2]|0,a)|0;if(t){p=t;break a}t=(c[r>>2]|0)+12|0;s=Fo(t,t,h)|0;if(s){p=s;break a}s=Gq((c[r>>2]|0)+12|0,a)|0;if(s){p=s;break a}s=(c[r>>2]|0)+12|0;t=Fo(s,s,g)|0;if(t){p=t;break a}t=Gq((c[r>>2]|0)+12|0,a)|0;if(t){p=t;break a}t=io(c[r>>2]|0,c[n>>2]|0)|0;if(t){p=t;break a}t=io((c[r>>2]|0)+12|0,c[n>>2]|0)|0;if(t){p=t;break a}go((c[r>>2]|0)+24|0);if(m){p=0;break}else q=q+-1|0}}else p=o}else p=l;while(0);go(f);go(g);go(h);if(d){h=0;do{go(k+(h*12|0)|0);h=h+1|0}while((h|0)!=(d|0))}qy(k);j=p;i=e;return j|0}function Jq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;f=i;i=i+96|0;g=f+24|0;h=f+48|0;j=f+60|0;k=f+72|0;l=f+12|0;m=f;n=f+36|0;o=d+24|0;if(!(Ao(o,0)|0)){p=jo(b,e)|0;if(p){q=p;i=f;return q|0}p=jo(b+12|0,e+12|0)|0;if(p){q=p;i=f;return q|0}q=jo(b+24|0,e+24|0)|0;i=f;return q|0}p=e+24|0;r=e+32|0;do if(c[r>>2]|0){if(Ao(p,0)|0){if(!(c[r>>2]|0))break;if(!(Ao(p,1)|0))break;else q=-20352;i=f;return q|0}s=jo(b,d)|0;if(s){q=s;i=f;return q|0}s=jo(b+12|0,d+12|0)|0;if(s){q=s;i=f;return q|0}q=jo(b+24|0,o)|0;i=f;return q|0}while(0);fo(g);fo(h);fo(j);fo(k);fo(l);fo(m);fo(n);p=Fo(g,o,o)|0;a:do if(!p){r=Gq(g,a)|0;if(!r){s=Fo(h,g,o)|0;if(!s){t=Gq(h,a)|0;if(!t){u=Fo(g,g,e)|0;if(!u){v=Gq(g,a)|0;if(!v){w=Fo(h,h,e+12|0)|0;if(!w){x=Gq(h,a)|0;if(!x){y=Eo(g,g,d)|0;if(!y){z=a+4|0;while(1){if((c[g>>2]|0)>=0)break;if(!(Ao(g,0)|0))break;A=Do(g,g,z)|0;if(A){B=A;break a}}A=d+12|0;C=Eo(h,h,A)|0;if(!C){while(1){if((c[h>>2]|0)>=0)break;if(!(Ao(h,0)|0))break;D=Do(h,h,z)|0;if(D){B=D;break a}}if(!(Ao(g,0)|0)){if(!(Ao(h,0)|0)){B=Hq(a,b,d)|0;break}D=no(b,1)|0;if(D){B=D;break}D=no(b+12|0,1)|0;if(D){B=D;break}B=no(b+24|0,0)|0;break}D=Fo(n,o,g)|0;if(!D){E=Gq(n,a)|0;if(!E){F=Fo(j,g,g)|0;if(!F){G=Gq(j,a)|0;if(!G){H=Fo(k,j,g)|0;if(!H){I=Gq(k,a)|0;if(!I){J=Fo(j,j,d)|0;if(J){B=J;break}J=Gq(j,a)|0;if(J){B=J;break}J=to(g,j,2)|0;if(J){B=J;break}while(1){if((zo(g,z)|0)<=-1)break;J=Co(g,g,z)|0;if(J){B=J;break a}}J=Fo(l,h,h)|0;if(J){B=J;break}J=Gq(l,a)|0;if(J){B=J;break}J=Eo(l,l,g)|0;if(J){B=J;break}while(1){if((c[l>>2]|0)>=0)break;if(!(Ao(l,0)|0))break;J=Do(l,l,z)|0;if(J){B=J;break a}}J=Eo(l,l,k)|0;if(J){B=J;break}while(1){if((c[l>>2]|0)>=0)break;if(!(Ao(l,0)|0))break;J=Do(l,l,z)|0;if(J){B=J;break a}}J=Eo(j,j,l)|0;if(J){B=J;break}while(1){if((c[j>>2]|0)>=0)break;if(!(Ao(j,0)|0))break;J=Do(j,j,z)|0;if(J){B=J;break a}}J=Fo(j,j,h)|0;if(J){B=J;break}J=Gq(j,a)|0;if(J){B=J;break}J=Fo(k,k,A)|0;if(J){B=J;break}J=Gq(k,a)|0;if(J){B=J;break}J=Eo(m,j,k)|0;if(J){B=J;break}while(1){if((c[m>>2]|0)>=0)break;if(!(Ao(m,0)|0))break;J=Do(m,m,z)|0;if(J){B=J;break a}}z=jo(b,l)|0;if(z){B=z;break}z=jo(b+12|0,m)|0;if(z){B=z;break}B=jo(b+24|0,n)|0}else B=I}else B=H}else B=G}else B=F}else B=E}else B=D}else B=C}else B=y}else B=x}else B=w}else B=v}else B=u}else B=t}else B=s}else B=r}else B=p;while(0);go(g);go(h);go(j);go(k);go(l);go(m);go(n);q=B;i=f;return q|0}function Kq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;c=i;i=i+32|0;d=c+12|0;e=c;f=b+24|0;if(!(Ao(f,0)|0)){g=0;i=c;return g|0}fo(d);fo(e);h=Lo(d,f,a+4|0)|0;if(!h){j=Fo(e,d,d)|0;if(!j){k=Gq(e,a)|0;if(!k){l=Fo(b,b,e)|0;if(!l){m=Gq(b,a)|0;if(!m){n=b+12|0;b=Fo(n,n,e)|0;if(!b){o=Gq(n,a)|0;if(!o){p=Fo(n,n,d)|0;if(!p){q=Gq(n,a)|0;if(!q)r=no(f,1)|0;else r=q}else r=p}else r=o}else r=b}else r=m}else r=l}else r=k}else r=j}else r=h;go(d);go(e);g=r;i=c;return g|0}function Lq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if(!(Ao(c,1)|0)){e=jo(b,d)|0;if(e){f=e;return f|0}e=jo(b+12|0,d+12|0)|0;if(e){f=e;return f|0}f=jo(b+24|0,d+24|0)|0;return f|0}if(Ao(c,-1)|0){f=yq(a,b,c,d,0,0)|0;return f|0}c=jo(b,d)|0;if(c){f=c;return f|0}c=b+12|0;e=jo(c,d+12|0)|0;if(e){f=e;return f|0}e=jo(b+24|0,d+24|0)|0;if(e){f=e;return f|0}if(!(Ao(c,0)|0)){f=0;return f|0}f=Eo(c,a+4|0,c)|0;return f|0}function Mq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;rq(a);c[a>>2]=b;do switch(b|0){case 4:{c[a+100>>2]=105;d=a+4|0;c[d>>2]=1;c[a+8>>2]=12;c[a+12>>2]=23080;c[a+28>>2]=1;c[a+32>>2]=12;c[a+36>>2]=23128;e=a+76|0;c[e>>2]=1;c[a+80>>2]=12;c[a+84>>2]=23176;c[a+40>>2]=1;c[a+44>>2]=12;c[a+48>>2]=23224;c[a+52>>2]=1;c[a+56>>2]=12;c[a+60>>2]=23272;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(d)|0;c[a+92>>2]=qo(e)|0;c[a+96>>2]=1;f=0;return f|0}case 10:{c[a+100>>2]=107;e=a+4|0;c[e>>2]=1;c[a+8>>2]=6;c[a+12>>2]=23680;c[a+16>>2]=1;c[a+20>>2]=1;c[a+24>>2]=23704;c[a+28>>2]=1;c[a+32>>2]=1;c[a+36>>2]=23712;d=a+76|0;c[d>>2]=1;c[a+80>>2]=6;c[a+84>>2]=23720;c[a+40>>2]=1;c[a+44>>2]=6;c[a+48>>2]=23744;c[a+52>>2]=1;c[a+56>>2]=6;c[a+60>>2]=23768;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(e)|0;c[a+92>>2]=qo(d)|0;c[a+96>>2]=1;f=0;return f|0}case 11:{c[a+100>>2]=108;d=a+4|0;c[d>>2]=1;c[a+8>>2]=7;c[a+12>>2]=23792;c[a+16>>2]=1;c[a+20>>2]=1;c[a+24>>2]=23824;c[a+28>>2]=1;c[a+32>>2]=1;c[a+36>>2]=23832;e=a+76|0;c[e>>2]=1;c[a+80>>2]=8;c[a+84>>2]=23840;c[a+40>>2]=1;c[a+44>>2]=7;c[a+48>>2]=23872;c[a+52>>2]=1;c[a+56>>2]=7;c[a+60>>2]=23904;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(d)|0;c[a+92>>2]=qo(e)|0;c[a+96>>2]=1;f=0;return f|0}case 6:{e=a+4|0;c[e>>2]=1;c[a+8>>2]=8;c[a+12>>2]=24080;c[a+16>>2]=1;c[a+20>>2]=8;c[a+24>>2]=24112;c[a+28>>2]=1;c[a+32>>2]=8;c[a+36>>2]=24144;d=a+76|0;c[d>>2]=1;c[a+80>>2]=8;c[a+84>>2]=24176;c[a+40>>2]=1;c[a+44>>2]=8;c[a+48>>2]=24208;c[a+52>>2]=1;c[a+56>>2]=8;c[a+60>>2]=24240;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(e)|0;c[a+92>>2]=qo(d)|0;c[a+96>>2]=1;f=0;return f|0}case 2:{c[a+100>>2]=103;d=a+4|0;c[d>>2]=1;c[a+8>>2]=8;c[a+12>>2]=22760;c[a+28>>2]=1;c[a+32>>2]=7;c[a+36>>2]=22792;e=a+76|0;c[e>>2]=1;c[a+80>>2]=7;c[a+84>>2]=22824;c[a+40>>2]=1;c[a+44>>2]=7;c[a+48>>2]=22856;c[a+52>>2]=1;c[a+56>>2]=7;c[a+60>>2]=22888;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(d)|0;c[a+92>>2]=qo(e)|0;c[a+96>>2]=1;f=0;return f|0}case 1:{c[a+100>>2]=102;e=a+4|0;c[e>>2]=1;c[a+8>>2]=6;c[a+12>>2]=22632;c[a+28>>2]=1;c[a+32>>2]=6;c[a+36>>2]=22656;d=a+76|0;c[d>>2]=1;c[a+80>>2]=6;c[a+84>>2]=22680;c[a+40>>2]=1;c[a+44>>2]=6;c[a+48>>2]=22704;c[a+52>>2]=1;c[a+56>>2]=6;c[a+60>>2]=22728;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(e)|0;c[a+92>>2]=qo(d)|0;c[a+96>>2]=1;f=0;return f|0}case 3:{c[a+100>>2]=104;d=a+4|0;c[d>>2]=1;c[a+8>>2]=8;c[a+12>>2]=22920;c[a+28>>2]=1;c[a+32>>2]=8;c[a+36>>2]=22952;e=a+76|0;c[e>>2]=1;c[a+80>>2]=8;c[a+84>>2]=22984;c[a+40>>2]=1;c[a+44>>2]=8;c[a+48>>2]=23016;c[a+52>>2]=1;c[a+56>>2]=8;c[a+60>>2]=23048;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(d)|0;c[a+92>>2]=qo(e)|0;c[a+96>>2]=1;f=0;return f|0}case 5:{c[a+100>>2]=106;e=a+4|0;c[e>>2]=1;c[a+8>>2]=17;c[a+12>>2]=23320;c[a+28>>2]=1;c[a+32>>2]=17;c[a+36>>2]=23392;d=a+76|0;c[d>>2]=1;c[a+80>>2]=17;c[a+84>>2]=23464;c[a+40>>2]=1;c[a+44>>2]=17;c[a+48>>2]=23536;c[a+52>>2]=1;c[a+56>>2]=17;c[a+60>>2]=23608;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(e)|0;c[a+92>>2]=qo(d)|0;c[a+96>>2]=1;f=0;return f|0}case 7:{d=a+4|0;c[d>>2]=1;c[a+8>>2]=12;c[a+12>>2]=24272;c[a+16>>2]=1;c[a+20>>2]=12;c[a+24>>2]=24320;c[a+28>>2]=1;c[a+32>>2]=12;c[a+36>>2]=24368;e=a+76|0;c[e>>2]=1;c[a+80>>2]=12;c[a+84>>2]=24416;c[a+40>>2]=1;c[a+44>>2]=12;c[a+48>>2]=24464;c[a+52>>2]=1;c[a+56>>2]=12;c[a+60>>2]=24512;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(d)|0;c[a+92>>2]=qo(e)|0;c[a+96>>2]=1;f=0;return f|0}case 12:{c[a+100>>2]=109;e=a+4|0;c[e>>2]=1;c[a+8>>2]=8;c[a+12>>2]=23936;c[a+16>>2]=1;c[a+20>>2]=1;c[a+24>>2]=23968;c[a+28>>2]=1;c[a+32>>2]=1;c[a+36>>2]=23976;d=a+76|0;c[d>>2]=1;c[a+80>>2]=8;c[a+84>>2]=23984;c[a+40>>2]=1;c[a+44>>2]=8;c[a+48>>2]=24016;c[a+52>>2]=1;c[a+56>>2]=8;c[a+60>>2]=24048;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(e)|0;c[a+92>>2]=qo(d)|0;c[a+96>>2]=1;f=0;return f|0}case 8:{d=a+4|0;c[d>>2]=1;c[a+8>>2]=16;c[a+12>>2]=24560;c[a+16>>2]=1;c[a+20>>2]=16;c[a+24>>2]=24624;c[a+28>>2]=1;c[a+32>>2]=16;c[a+36>>2]=24688;e=a+76|0;c[e>>2]=1;c[a+80>>2]=16;c[a+84>>2]=24752;c[a+40>>2]=1;c[a+44>>2]=16;c[a+48>>2]=24816;c[a+52>>2]=1;c[a+56>>2]=16;c[a+60>>2]=24880;c[a+64>>2]=1;c[a+68>>2]=1;c[a+72>>2]=22752;c[a+88>>2]=qo(d)|0;c[a+92>>2]=qo(e)|0;c[a+96>>2]=1;f=0;return f|0}case 9:{c[a+100>>2]=110;e=so(a+16|0,16,24944)|0;if(!e){d=a+4|0;g=no(d,1)|0;if(!g){h=xo(d,255)|0;if(!h){i=uo(d,d,19)|0;if(!i){c[a+88>>2]=qo(d)|0;d=no(a+40|0,9)|0;if(!d){j=no(a+64|0,1)|0;if(!j){go(a+52|0);c[a+92>>2]=254;f=0;return f|0}else k=j}else k=d}else k=i}else k=h}else k=g}else k=e;rq(a);f=k;return f|0}default:{rq(a);f=-20096;return f|0}}while(0);return 0}function Nq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;b=ho(a,12)|0;if(b)return b|0;d=a+8|0;e=c[d>>2]|0;f=c[a+4>>2]|0;a=e+(f<<2)|0;g=e+24|0;h=c[g>>2]|0;i=h+(c[e>>2]|0)|0;j=i>>>0<h>>>0&1;k=e+4|0;l=e+28|0;m=j+(c[k>>2]|0)|0;n=c[l>>2]|0;o=m+n|0;p=c[e+40>>2]|0;q=p+i|0;c[e>>2]=q;i=q>>>0<p>>>0&1;q=i+o|0;r=c[e+44>>2]|0;s=q+r|0;c[k>>2]=s;k=(o>>>0<n>>>0&1)+(m>>>0<j>>>0&1)+(q>>>0<i>>>0&1)+(s>>>0<r>>>0&1)|0;s=e+8|0;i=k+(c[s>>2]|0)|0;q=i>>>0<k>>>0&1;k=e+12|0;j=q+(c[k>>2]|0)|0;m=h+i|0;i=m>>>0<h>>>0&1;h=i+j|0;o=h+n|0;t=e+32|0;u=c[t>>2]|0;v=u+m|0;m=v>>>0<u>>>0&1;u=m+o|0;w=c[e+36>>2]|0;x=u+w|0;y=p+v|0;c[s>>2]=y;s=y>>>0<p>>>0&1;p=s+x|0;y=p+r|0;c[k>>2]=y;k=(h>>>0<i>>>0&1)+(j>>>0<q>>>0&1)+(o>>>0<n>>>0&1)+(u>>>0<m>>>0&1)+(x>>>0<w>>>0&1)+(p>>>0<s>>>0&1)+(y>>>0<r>>>0&1)|0;r=e+16|0;y=k+(c[r>>2]|0)|0;c[r>>2]=y;s=y>>>0<k>>>0&1;k=e+20|0;p=s+(c[k>>2]|0)|0;c[k>>2]=p;w=c[d>>2]|0;d=w+32|0;x=(c[d>>2]|0)+y|0;c[r>>2]=x;y=x>>>0<(c[d>>2]|0)>>>0&1;d=w+36|0;m=y+p|0;c[k>>2]=m;u=m+(c[d>>2]|0)|0;c[k>>2]=u;n=u>>>0<(c[d>>2]|0)>>>0&1;d=w+40|0;o=(c[d>>2]|0)+x|0;c[r>>2]=o;r=o>>>0<(c[d>>2]|0)>>>0&1;d=w+44|0;w=r+u|0;c[k>>2]=w;u=w+(c[d>>2]|0)|0;c[k>>2]=u;c[g>>2]=(m>>>0<y>>>0&1)+(p>>>0<s>>>0&1)+n+(w>>>0<r>>>0&1)+(u>>>0<(c[d>>2]|0)>>>0&1);if((f|0)<=7)return b|0;BH(l|0,0,(a>>>0>t>>>0?a:t)+-28+~e+4&-4|0)|0;return b|0}function Oq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;b=i;i=i+48|0;d=b+32|0;e=b;c[d>>2]=1;f=d+4|0;c[f>>2]=8;c[d+8>>2]=e;c[e>>2]=0;c[e+4>>2]=0;c[e+8>>2]=0;c[e+12>>2]=0;c[e+16>>2]=0;c[e+20>>2]=0;c[e+24>>2]=0;c[e+28>>2]=0;g=ho(a,14)|0;if(g){i=b;return g|0}h=c[a+8>>2]|0;j=c[h>>2]|0;k=h+28|0;l=c[k>>2]|0;m=j-l|0;n=c[h+44>>2]|0;o=(j>>>0<l>>>0?255:0)-(m>>>0<n>>>0&1)|0;c[h>>2]=m-n;m=h+4|0;j=c[m>>2]|0;p=o<<24>>24;if((o&255)<<24>>24<0){q=p+j|0;r=(j>>>0<(0-p|0)>>>0)<<31>>31}else{o=p+j|0;q=o;r=o>>>0<p>>>0&1}p=c[h+32>>2]|0;o=q-p|0;j=c[h+48>>2]|0;s=r-(q>>>0<p>>>0&1)+((o>>>0<j>>>0)<<31>>31)|0;c[m>>2]=o-j;o=h+8|0;m=c[o>>2]|0;if((s&255)<<24>>24<0){t=s+m|0;u=(m>>>0<(0-s|0)>>>0)<<31>>31}else{q=s+m|0;t=q;u=q>>>0<s>>>0&1}s=c[h+36>>2]|0;q=t-s|0;m=c[h+52>>2]|0;r=u-(t>>>0<s>>>0&1)+((q>>>0<m>>>0)<<31>>31)|0;c[o>>2]=q-m;q=h+12|0;o=c[q>>2]|0;if((r&255)<<24>>24<0){v=r+o|0;w=(o>>>0<(0-r|0)>>>0)<<31>>31}else{t=r+o|0;v=t;w=t>>>0<r>>>0&1}r=c[h+40>>2]|0;t=v-r+l|0;o=t+n|0;u=((v>>>0<r>>>0)<<31>>31)+w+(t>>>0<l>>>0&1)+(o>>>0<n>>>0&1)|0;c[q>>2]=o;o=h+16|0;q=c[o>>2]|0;if((u&255)<<24>>24<0){x=u+q|0;y=(q>>>0<(0-u|0)>>>0)<<31>>31}else{l=u+q|0;x=l;y=l>>>0<u>>>0&1}u=x-n+p|0;l=u+j|0;q=((x>>>0<n>>>0)<<31>>31)+y+(u>>>0<p>>>0&1)+(l>>>0<j>>>0&1)|0;c[o>>2]=l;l=h+20|0;o=c[l>>2]|0;if((q&255)<<24>>24<0){z=q+o|0;A=(o>>>0<(0-q|0)>>>0)<<31>>31}else{p=q+o|0;z=p;A=p>>>0<q>>>0&1}q=z-j+s|0;p=q+m|0;o=((z>>>0<j>>>0)<<31>>31)+A+(q>>>0<s>>>0&1)+(p>>>0<m>>>0&1)|0;c[l>>2]=p;p=h+24|0;l=c[p>>2]|0;if((o&255)<<24>>24<0){B=o+l|0;C=(l>>>0<(0-o|0)>>>0)<<31>>31}else{s=o+l|0;B=s;C=s>>>0<o>>>0&1}o=B-m+r|0;s=(o>>>0<r>>>0&1)+(C-(B>>>0<m>>>0&1))|0;m=s&255;c[p>>2]=o;c[k>>2]=(s|0)>0?s:0;k=a+4|0;if((c[k>>2]|0)>>>0>8){o=8;do{c[h+(o<<2)>>2]=0;o=o+1|0}while(o>>>0<(c[k>>2]|0)>>>0)}if(m<<24>>24>=0){i=b;return g|0}c[e+((c[f>>2]|0)+-1<<2)>>2]=0-s;if(Co(a,d,a)|0){i=b;return g|0}c[a>>2]=-1;i=b;return g|0}function Pq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=i;i=i+48|0;d=b+36|0;e=b;c[d>>2]=1;f=d+4|0;c[f>>2]=9;c[d+8>>2]=e;g=e;h=g+36|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=ho(a,16)|0;if(g){i=b;return g|0}h=c[a+8>>2]|0;j=h+32|0;k=c[j>>2]|0;l=k+(c[h>>2]|0)|0;m=c[h+36>>2]|0;n=l+m|0;o=c[h+44>>2]|0;p=n-o|0;q=c[h+48>>2]|0;r=p-q|0;s=c[h+52>>2]|0;t=r-s|0;u=c[h+56>>2]|0;v=(n>>>0<m>>>0&1)+(l>>>0<k>>>0&1)+((n>>>0<o>>>0)<<31>>31)+((p>>>0<q>>>0)<<31>>31)+((r>>>0<s>>>0)<<31>>31)+((t>>>0<u>>>0)<<31>>31)|0;c[h>>2]=t-u;t=h+4|0;r=c[t>>2]|0;if((v&255)<<24>>24<0){w=v+r|0;x=(r>>>0<(0-v|0)>>>0)<<31>>31}else{p=v+r|0;w=p;x=p>>>0<v>>>0&1}v=m+w|0;w=c[h+40>>2]|0;p=v+w|0;r=p-q|0;n=r-s|0;l=n-u|0;y=c[h+60>>2]|0;z=(v>>>0<m>>>0&1)+x+(p>>>0<w>>>0&1)+((p>>>0<q>>>0)<<31>>31)+((r>>>0<s>>>0)<<31>>31)+((n>>>0<u>>>0)<<31>>31)+((l>>>0<y>>>0)<<31>>31)|0;c[t>>2]=l-y;l=h+8|0;t=c[l>>2]|0;n=z<<24>>24;if((z&255)<<24>>24<0){A=n+t|0;B=(t>>>0<(0-n|0)>>>0)<<31>>31}else{z=n+t|0;A=z;B=z>>>0<n>>>0&1}n=w+A|0;A=n+o|0;z=A-s|0;t=z-u|0;r=(n>>>0<w>>>0&1)+B+(A>>>0<o>>>0&1)+((A>>>0<s>>>0)<<31>>31)+((z>>>0<u>>>0)<<31>>31)+((t>>>0<y>>>0)<<31>>31)|0;c[l>>2]=t-y;t=h+12|0;l=c[t>>2]|0;z=r<<24>>24;if((r&255)<<24>>24<0){C=z+l|0;D=(l>>>0<(0-z|0)>>>0)<<31>>31}else{r=z+l|0;C=r;D=r>>>0<z>>>0&1}z=o+C|0;C=z+o|0;r=C+q|0;l=r+q|0;A=l+s|0;B=A-y|0;n=B-k|0;p=(z>>>0<o>>>0&1)+D+(C>>>0<o>>>0&1)+(r>>>0<q>>>0&1)+(l>>>0<q>>>0&1)+(A>>>0<s>>>0&1)+((A>>>0<y>>>0)<<31>>31)+((B>>>0<k>>>0)<<31>>31)+((n>>>0<m>>>0)<<31>>31)|0;c[t>>2]=n-m;n=h+16|0;t=c[n>>2]|0;B=p<<24>>24;if((p&255)<<24>>24<0){E=B+t|0;F=(t>>>0<(0-B|0)>>>0)<<31>>31}else{p=B+t|0;E=p;F=p>>>0<B>>>0&1}B=q+E|0;E=B+q|0;p=E+s|0;t=p+s|0;A=t+u|0;l=A-m|0;r=(B>>>0<q>>>0&1)+F+(E>>>0<q>>>0&1)+(p>>>0<s>>>0&1)+(t>>>0<s>>>0&1)+(A>>>0<u>>>0&1)+((A>>>0<m>>>0)<<31>>31)+((l>>>0<w>>>0)<<31>>31)|0;c[n>>2]=l-w;l=h+20|0;n=c[l>>2]|0;A=r<<24>>24;if((r&255)<<24>>24<0){G=A+n|0;H=(n>>>0<(0-A|0)>>>0)<<31>>31}else{r=A+n|0;G=r;H=r>>>0<A>>>0&1}A=s+G|0;G=A+s|0;r=G+u|0;n=r+u|0;t=n+y|0;p=t-w|0;E=(A>>>0<s>>>0&1)+H+(G>>>0<s>>>0&1)+(r>>>0<u>>>0&1)+(n>>>0<u>>>0&1)+(t>>>0<y>>>0&1)+((t>>>0<w>>>0)<<31>>31)+((p>>>0<o>>>0)<<31>>31)|0;c[l>>2]=p-o;p=h+24|0;l=c[p>>2]|0;t=E<<24>>24;if((E&255)<<24>>24<0){I=t+l|0;J=(l>>>0<(0-t|0)>>>0)<<31>>31}else{E=t+l|0;I=E;J=E>>>0<t>>>0&1}t=u+I|0;I=t+u|0;E=I+y|0;l=E+y|0;n=l+u|0;r=n+s|0;G=r-k|0;H=(t>>>0<u>>>0&1)+J+(I>>>0<u>>>0&1)+(E>>>0<y>>>0&1)+(l>>>0<y>>>0&1)+(n>>>0<u>>>0&1)+(r>>>0<s>>>0&1)+((r>>>0<k>>>0)<<31>>31)+((G>>>0<m>>>0)<<31>>31)|0;c[p>>2]=G-m;m=h+28|0;G=c[m>>2]|0;p=H<<24>>24;if((H&255)<<24>>24<0){K=p+G|0;L=(G>>>0<(0-p|0)>>>0)<<31>>31}else{H=p+G|0;K=H;L=H>>>0<p>>>0&1}p=y+K|0;K=p+y|0;H=K+y|0;G=H+k|0;r=G-w|0;u=r-o|0;n=u-q|0;l=(p>>>0<y>>>0&1)+L+(K>>>0<y>>>0&1)+(H>>>0<y>>>0&1)+(G>>>0<k>>>0&1)+((G>>>0<w>>>0)<<31>>31)+((r>>>0<o>>>0)<<31>>31)+((u>>>0<q>>>0)<<31>>31)+((n>>>0<s>>>0)<<31>>31)|0;q=l&255;c[m>>2]=n-s;s=l<<24>>24;c[j>>2]=(s|0)>0?s:0;j=a+4|0;if((c[j>>2]|0)>>>0>9){l=9;do{c[h+(l<<2)>>2]=0;l=l+1|0}while(l>>>0<(c[j>>2]|0)>>>0)}if(q<<24>>24>=0){i=b;return g|0}c[e+((c[f>>2]|0)+-1<<2)>>2]=0-s;if(Co(a,d,a)|0){i=b;return g|0}c[a>>2]=-1;i=b;return g|0}function Qq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;b=i;i=i+64|0;d=b+52|0;e=b;c[d>>2]=1;f=d+4|0;c[f>>2]=13;c[d+8>>2]=e;g=e;h=g+52|0;do{c[g>>2]=0;g=g+4|0}while((g|0)<(h|0));g=ho(a,24)|0;if(g){i=b;return g|0}h=c[a+8>>2]|0;j=h+48|0;k=c[j>>2]|0;l=k+(c[h>>2]|0)|0;m=c[h+84>>2]|0;n=l+m|0;o=c[h+80>>2]|0;p=n+o|0;q=c[h+92>>2]|0;r=(n>>>0<m>>>0&1)+(l>>>0<k>>>0&1)+(p>>>0<o>>>0&1)+((p>>>0<q>>>0)<<31>>31)|0;c[h>>2]=p-q;p=h+4|0;l=c[p>>2]|0;if((r&255)<<24>>24<0){s=r+l|0;t=(l>>>0<(0-r|0)>>>0)<<31>>31}else{n=r+l|0;s=n;t=n>>>0<r>>>0&1}r=c[h+52>>2]|0;n=r+s|0;s=c[h+88>>2]|0;l=n+s|0;u=l+q|0;v=u-k|0;w=(n>>>0<r>>>0&1)+t+(l>>>0<s>>>0&1)+(u>>>0<q>>>0&1)+((u>>>0<k>>>0)<<31>>31)+((v>>>0<o>>>0)<<31>>31)|0;c[p>>2]=v-o;v=h+8|0;p=c[v>>2]|0;u=w<<24>>24;if((w&255)<<24>>24<0){x=u+p|0;y=(p>>>0<(0-u|0)>>>0)<<31>>31}else{w=u+p|0;x=w;y=w>>>0<u>>>0&1}u=c[h+56>>2]|0;w=u+x|0;x=w+q|0;p=x-r|0;l=(w>>>0<u>>>0&1)+y+(x>>>0<q>>>0&1)+((x>>>0<r>>>0)<<31>>31)+((p>>>0<m>>>0)<<31>>31)|0;c[v>>2]=p-m;p=h+12|0;v=c[p>>2]|0;if((l&255)<<24>>24<0){z=l+v|0;A=(v>>>0<(0-l|0)>>>0)<<31>>31}else{x=l+v|0;z=x;A=x>>>0<l>>>0&1}l=c[h+60>>2]|0;x=l+z|0;z=x+k|0;v=z+o|0;y=v+m|0;w=y-u|0;t=w-s|0;n=(x>>>0<l>>>0&1)+A+(z>>>0<k>>>0&1)+(v>>>0<o>>>0&1)+(y>>>0<m>>>0&1)+((y>>>0<u>>>0)<<31>>31)+((w>>>0<s>>>0)<<31>>31)+((t>>>0<q>>>0)<<31>>31)|0;c[p>>2]=t-q;t=h+16|0;p=c[t>>2]|0;w=n<<24>>24;if((n&255)<<24>>24<0){B=w+p|0;C=(p>>>0<(0-w|0)>>>0)<<31>>31}else{n=w+p|0;B=n;C=n>>>0<w>>>0&1}w=m+B|0;B=w+m|0;n=c[h+64>>2]|0;p=B+n|0;y=p+r|0;v=y+k|0;z=v+o|0;A=z+s|0;x=A-l|0;D=x-q|0;E=(w>>>0<m>>>0&1)+C+(B>>>0<m>>>0&1)+(p>>>0<n>>>0&1)+(y>>>0<r>>>0&1)+(v>>>0<k>>>0&1)+(z>>>0<o>>>0&1)+(A>>>0<s>>>0&1)+((A>>>0<l>>>0)<<31>>31)+((x>>>0<q>>>0)<<31>>31)+((D>>>0<q>>>0)<<31>>31)|0;c[t>>2]=D-q;D=h+20|0;t=c[D>>2]|0;x=E<<24>>24;if((E&255)<<24>>24<0){F=x+t|0;G=(t>>>0<(0-x|0)>>>0)<<31>>31}else{E=x+t|0;F=E;G=E>>>0<x>>>0&1}x=s+F|0;F=x+s|0;E=c[h+68>>2]|0;t=F+E|0;A=t+u|0;z=A+r|0;k=z+m|0;v=k+q|0;y=(x>>>0<s>>>0&1)+G+(F>>>0<s>>>0&1)+(t>>>0<E>>>0&1)+(A>>>0<u>>>0&1)+(z>>>0<r>>>0&1)+(k>>>0<m>>>0&1)+(v>>>0<q>>>0&1)+((v>>>0<n>>>0)<<31>>31)|0;c[D>>2]=v-n;v=h+24|0;D=c[v>>2]|0;k=y<<24>>24;if((y&255)<<24>>24<0){H=k+D|0;I=(D>>>0<(0-k|0)>>>0)<<31>>31}else{y=k+D|0;H=y;I=y>>>0<k>>>0&1}k=q+H|0;H=k+q|0;y=c[h+72>>2]|0;D=H+y|0;r=D+l|0;z=r+u|0;A=z+s|0;t=(k>>>0<q>>>0&1)+I+(H>>>0<q>>>0&1)+(D>>>0<y>>>0&1)+(r>>>0<l>>>0&1)+(z>>>0<u>>>0&1)+(A>>>0<s>>>0&1)+((A>>>0<E>>>0)<<31>>31)|0;c[v>>2]=A-E;A=h+28|0;v=c[A>>2]|0;u=t<<24>>24;if((t&255)<<24>>24<0){J=u+v|0;K=(v>>>0<(0-u|0)>>>0)<<31>>31}else{t=u+v|0;J=t;K=t>>>0<u>>>0&1}u=c[h+76>>2]|0;t=u+J|0;J=t+n|0;v=J+l|0;z=v+q|0;r=(t>>>0<u>>>0&1)+K+(J>>>0<n>>>0&1)+(v>>>0<l>>>0&1)+(z>>>0<q>>>0&1)+((z>>>0<y>>>0)<<31>>31)|0;c[A>>2]=z-y;z=h+32|0;A=c[z>>2]|0;l=r<<24>>24;if((r&255)<<24>>24<0){L=l+A|0;M=(A>>>0<(0-l|0)>>>0)<<31>>31}else{r=l+A|0;L=r;M=r>>>0<l>>>0&1}l=o+L|0;L=l+E|0;r=L+n|0;A=(l>>>0<o>>>0&1)+M+(L>>>0<E>>>0&1)+(r>>>0<n>>>0&1)+((r>>>0<u>>>0)<<31>>31)|0;c[z>>2]=r-u;r=h+36|0;z=c[r>>2]|0;if((A&255)<<24>>24<0){N=A+z|0;O=(z>>>0<(0-A|0)>>>0)<<31>>31}else{n=A+z|0;N=n;O=n>>>0<A>>>0&1}A=m+N|0;N=A+y|0;n=N+E|0;z=(A>>>0<m>>>0&1)+O+(N>>>0<y>>>0&1)+(n>>>0<E>>>0&1)+((n>>>0<o>>>0)<<31>>31)|0;c[r>>2]=n-o;n=h+40|0;r=c[n>>2]|0;if((z&255)<<24>>24<0){P=z+r|0;Q=(r>>>0<(0-z|0)>>>0)<<31>>31}else{E=z+r|0;P=E;Q=E>>>0<z>>>0&1}z=s+P|0;P=z+u|0;E=P+y|0;r=(z>>>0<s>>>0&1)+Q+(P>>>0<u>>>0&1)+(E>>>0<y>>>0&1)+((E>>>0<m>>>0)<<31>>31)|0;c[n>>2]=E-m;m=h+44|0;E=c[m>>2]|0;if((r&255)<<24>>24<0){R=r+E|0;S=(E>>>0<(0-r|0)>>>0)<<31>>31}else{n=r+E|0;R=n;S=n>>>0<r>>>0&1}r=q+R|0;R=r+o|0;n=R+u|0;E=(r>>>0<q>>>0&1)+S+(R>>>0<o>>>0&1)+(n>>>0<u>>>0&1)+((n>>>0<s>>>0)<<31>>31)|0;u=E&255;c[m>>2]=n-s;c[j>>2]=(E|0)>0?E:0;j=a+4|0;if((c[j>>2]|0)>>>0>13){s=13;do{c[h+(s<<2)>>2]=0;s=s+1|0}while(s>>>0<(c[j>>2]|0)>>>0)}if(u<<24>>24>=0){i=b;return g|0}c[e+((c[f>>2]|0)+-1<<2)>>2]=0-E;if(Co(a,d,a)|0){i=b;return g|0}c[a>>2]=-1;i=b;return g|0}function Rq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0;b=i;i=i+96|0;d=b+72|0;e=b;f=a+4|0;g=c[f>>2]|0;if(g>>>0<17){h=0;i=b;return h|0}c[d>>2]=1;j=g+-16|0;g=j>>>0>18?18:j;c[d+4>>2]=g;c[d+8>>2]=e;j=a+8|0;zH(e|0,(c[j>>2]|0)+64|0,g<<2|0)|0;g=yo(d,9)|0;if(g){h=g;i=b;return h|0}g=c[j>>2]|0;j=g+64|0;c[j>>2]=c[j>>2]&511;if((c[f>>2]|0)>>>0>17){j=17;do{c[g+(j<<2)>>2]=0;j=j+1|0}while(j>>>0<(c[f>>2]|0)>>>0)}h=Bo(a,a,d)|0;i=b;return h|0}function Sq(a){a=a|0;return Wq(a,24968,6)|0}function Tq(a){a=a|0;return Wq(a,24960,7)|0}function Uq(a){a=a|0;return Wq(a,24952,8)|0}function Vq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;b=i;i=i+64|0;d=b+40|0;e=b;f=a+4|0;g=c[f>>2]|0;if(g>>>0<8){h=0;i=b;return h|0}c[d>>2]=1;j=g+-7|0;g=d+4|0;k=j>>>0>9?9:j;c[g>>2]=k;c[d+8>>2]=e;j=e;l=j+40|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(l|0));j=a+8|0;zH(e|0,(c[j>>2]|0)+28|0,k<<2|0)|0;k=yo(d,31)|0;if(k){h=k;i=b;return h|0}c[g>>2]=(c[g>>2]|0)+1;g=po(a,255,0)|0;if(g){h=g;i=b;return h|0}if((c[f>>2]|0)>>>0>8){g=c[j>>2]|0;j=8;do{c[g+(j<<2)>>2]=0;j=j+1|0}while(j>>>0<(c[f>>2]|0)>>>0)}f=to(d,d,19)|0;if(f){h=f;i=b;return h|0}h=Bo(a,a,d)|0;i=b;return h|0}function Wq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+64|0;f=e+52|0;g=e+40|0;h=e;j=a+4|0;k=c[j>>2]|0;if(k>>>0<d>>>0){l=0;i=e;return l|0}c[g>>2]=1;c[g+8>>2]=b;b=g+4|0;c[b>>2]=2;c[f>>2]=1;c[f+8>>2]=h;m=k-d|0;n=f+4|0;o=m>>>0>d>>>0?d:m;c[n>>2]=o;m=h;p=m+40|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(p|0));q=a+8|0;r=c[q>>2]|0;zH(h|0,r+(d<<2)|0,o<<2|0)|0;c[n>>2]=o+2;if(k>>>0>d>>>0){k=d;do{c[r+(k<<2)>>2]=0;k=k+1|0}while(k>>>0<(c[j>>2]|0)>>>0)}k=Fo(f,f,g)|0;if(k){l=k;i=e;return l|0}k=Bo(a,a,f)|0;if(k){l=k;i=e;return l|0}k=c[j>>2]|0;r=k-d|0;o=r>>>0>d>>>0?d:r;c[n>>2]=o;m=h;p=m+40|0;do{c[m>>2]=0;m=m+4|0}while((m|0)<(p|0));m=c[q>>2]|0;zH(h|0,m+(d<<2)|0,o<<2|0)|0;c[n>>2]=o+(c[b>>2]|0);if(k>>>0>d>>>0){k=d;do{c[m+(k<<2)>>2]=0;k=k+1|0}while(k>>>0<(c[j>>2]|0)>>>0)}j=Fo(f,f,g)|0;if(j){l=j;i=e;return l|0}l=Bo(a,a,f)|0;i=e;return l|0}function Xq(a){a=a|0;var b=0,d=0,e=0,f=0;BH(a|0,0,37504)|0;hu(a,0);b=a+620|0;kr(b);d=a+216|0;e=c[d>>2]|0;if((e|0)>19)return;c[a+220+(e*20|0)>>2]=21;c[a+220+(e*20|0)+4>>2]=0;c[a+220+(e*20|0)+12>>2]=32;c[a+220+(e*20|0)+16>>2]=1;e=c[d>>2]|0;f=e+1|0;c[d>>2]=f;if((e|0)>18)return;c[a+220+(f*20|0)>>2]=22;c[a+220+(f*20|0)+4>>2]=0;c[a+220+(f*20|0)+12>>2]=4;c[a+220+(f*20|0)+16>>2]=0;f=c[d>>2]|0;e=f+1|0;c[d>>2]=e;if((f|0)>18)return;c[a+220+(e*20|0)>>2]=23;c[a+220+(e*20|0)+4>>2]=b;c[a+220+(e*20|0)+12>>2]=32;c[a+220+(e*20|0)+16>>2]=1;c[d>>2]=(c[d>>2]|0)+1;return}function Yq(b){b=b|0;var c=0,d=0;lr(b+620|0);c=37504;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function Zq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+64|0;g=f;if(e>>>0>64){h=-60;i=f;return h|0}j=b+216|0;k=b+220|0;l=0;while(1){if((l|0)>256){h=-60;m=11;break}l=l+1|0;n=_q(b)|0;if(n){h=n;m=11;break}n=c[j>>2]|0;if((n|0)>0){o=1;p=0}else{m=8;break}while(1){q=(c[k+(p*20|0)+8>>2]|0)>>>0<(c[k+(p*20|0)+12>>2]|0)>>>0?0:o;p=p+1|0;if((p|0)>=(n|0)){r=q;break}else o=q}if(r){m=8;break}}if((m|0)==8){r=g;o=r+64|0;do{a[r>>0]=0;r=r+1|0}while((r|0)<(o|0));ku(b,g);BH(b|0,0,216)|0;hu(b,0);ju(b,g,64);lu(g,64,g,0);b=c[j>>2]|0;if((b|0)>0){j=0;do{c[k+(j*20|0)+8>>2]=0;j=j+1|0}while((j|0)<(b|0))}zH(d|0,g|0,e|0)|0;h=0;i=f;return h|0}else if((m|0)==11){i=f;return h|0}return 0}function _q(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=i;i=i+208|0;e=d+200|0;f=d+136|0;g=d+8|0;h=d;j=b+216|0;k=c[j>>2]|0;if(!k){l=-64;i=d;return l|0}if((k|0)<=0){l=-61;i=d;return l|0}k=e+1|0;m=0;n=0;while(1){o=(c[b+220+(n*20|0)+16>>2]|0)==1?1:m;c[h>>2]=0;p=Ad[c[b+220+(n*20|0)>>2]&31](c[b+220+(n*20|0)+4>>2]|0,g,128,h)|0;if(p){l=p;q=11;break}p=c[h>>2]|0;if(p){if(p>>>0>64){lu(g,p,f,0);r=f;s=64}else{r=g;s=p}a[e>>0]=n;a[k>>0]=s;ju(b,e,2);ju(b,r,s);p=b+220+(n*20|0)+8|0;c[p>>2]=(c[p>>2]|0)+(c[h>>2]|0)}n=n+1|0;if((n|0)>=(c[j>>2]|0)){t=o;break}else m=o}if((q|0)==11){i=d;return l|0}l=(t|0)==0?-61:0;i=d;return l|0}function $q(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;c[e>>2]=0;a=wc(24976,24992)|0;if(!a){f=-60;return f|0}g=(Xa(b|0,1,d|0,a|0)|0)==(d|0);gc(a|0)|0;if(!g){f=-60;return f|0}c[e>>2]=d;f=0;return f|0}function ar(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;b=mu()|0;c[f>>2]=0;if(e>>>0<4)return 0;a[d>>0]=b;a[d+1>>0]=b>>8;a[d+2>>0]=b>>16;a[d+3>>0]=b>>24;c[f>>2]=4;return 0}function br(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;c[e>>2]=0;if(mr(a,b,d)|0){f=-60;return f|0}c[e>>2]=d;f=0;return f|0}function cr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0;f=i;i=i+1024|0;g=f+1e3|0;h=f+984|0;j=f+968|0;k=f+952|0;l=f+456|0;m=f+480|0;n=f+488|0;o=f+496|0;p=f+472|0;q=f+64|0;r=f+72|0;s=f+80|0;t=f+88|0;u=f+96|0;v=f+104|0;w=f+112|0;x=f+120|0;y=f+128|0;z=f+136|0;A=f+144|0;B=f+152|0;C=f+160|0;D=f+168|0;E=f+176|0;F=f+184|0;G=f+192|0;H=f+200|0;I=f+208|0;J=f+216|0;K=f+224|0;L=f+232|0;M=f+240|0;N=f+248|0;O=f+256|0;P=f+264|0;Q=f+272|0;R=f+280|0;S=f+288|0;T=f+296|0;U=f+304|0;V=f+312|0;W=f+320|0;X=f+328|0;Y=f+336|0;Z=f+344|0;_=f+352|0;$=f+360|0;aa=f+368|0;ba=f+376|0;ca=f+384|0;da=f+392|0;ea=f+400|0;fa=f+408|0;ga=f+416|0;ha=f+424|0;ia=f+432|0;ja=f+440|0;ka=f+448|0;la=f+928|0;ma=f+944|0;na=f+960|0;oa=f+976|0;pa=f+992|0;qa=f+1008|0;ra=f+504|0;sa=f+512|0;ta=f+520|0;ua=f+528|0;va=f+536|0;wa=f+544|0;xa=f+552|0;ya=f+560|0;za=f+568|0;Aa=f+576|0;Ba=f+584|0;Ca=f+592|0;Da=f+600|0;Ea=f+608|0;Fa=f+616|0;Ga=f+624|0;Ha=f+632|0;Ia=f+640|0;Ja=f+648|0;Ka=f+656|0;La=f+664|0;Ma=f+672|0;Na=f+680|0;Oa=f+688|0;Pa=f+696|0;Qa=f+704|0;Ra=f+712|0;Sa=f+720|0;Ta=f+728|0;Ua=f+736|0;Va=f+744|0;Wa=f+752|0;Xa=f+760|0;Ya=f+768|0;Za=f+776|0;_a=f+784|0;$a=f+792|0;ab=f+800|0;bb=f+808|0;cb=f+816|0;db=f+824|0;eb=f+832|0;fb=f+840|0;gb=f+848|0;hb=f+856|0;ib=f+864|0;jb=f+872|0;kb=f+880|0;lb=f+896|0;mb=f+904|0;nb=f+56|0;ob=f+32|0;pb=f+8|0;qb=f+40|0;rb=f;sb=f+24|0;tb=f+16|0;ub=f+48|0;vb=f+912|0;wb=f+920|0;xb=f+464|0;yb=f+936|0;if(!e){i=f;return}BH(d|0,0,e|0)|0;zb=(b|0)<0?0-b|0:b;b=zb&65408;do if((b|0)==7808){dy(d,e,25664,f+888|0)|0;Ab=85}else if((b|0)==7936){dy(d,e,25704,kb)|0;Ab=85}else if((b|0)==14592){dy(d,e,25776,jb)|0;Ab=85}else if((b|0)==14848){dy(d,e,25848,ib)|0;Ab=85}else if((b|0)==17280){dy(d,e,25376,qb)|0;Ab=85}else if((b|0)==17152){dy(d,e,25416,pb)|0;Ab=85}else if((b|0)==17024){dy(d,e,25456,ob)|0;Ab=85}else if((b|0)==10240){dy(d,e,25e3,yb)|0;Ab=85}else if((b|0)==15744){dy(d,e,26184,db)|0;Ab=85}else if((b|0)==16e3){dy(d,e,26216,cb)|0;Ab=85}else if((b|0)==16128){dy(d,e,26256,bb)|0;Ab=85}else if((b|0)==24960){dy(d,e,26648,Va)|0;Ab=85}else if((b|0)==25088){dy(d,e,26688,Ua)|0;Ab=85}else if((b|0)==25216){dy(d,e,26752,Ta)|0;Ab=85}else if((b|0)==25344){dy(d,e,26808,Sa)|0;Ab=85}else if((b|0)==4480){dy(d,e,27680,ya)|0;Ab=85}else if((b|0)==4608){dy(d,e,27712,xa)|0;Ab=85}else if((b|0)==4992){dy(d,e,27752,wa)|0;Ab=85}else if((b|0)==15872){dy(d,e,27824,va)|0;Ab=85}else if((b|0)==15616){dy(d,e,27856,ua)|0;Ab=85}else if((b|0)==15360){dy(d,e,27888,ta)|0;Ab=85}else if((b|0)==14720){dy(d,e,27936,sa)|0;Ab=85}else if((b|0)==8064){dy(d,e,27992,ra)|0;Ab=85}else if((b|0)==12160){dy(d,e,28040,qa)|0;Ab=85}else if((b|0)==11904){dy(d,e,28088,pa)|0;Ab=85}else if((b|0)==11776){dy(d,e,28152,oa)|0;Ab=85}else if((b|0)==16512){dy(d,e,28232,na)|0;Ab=85}else if((b|0)==16640){dy(d,e,28272,ma)|0;Ab=85}else if((b|0)==16768){dy(d,e,28336,la)|0;Ab=85}else if((b|0)==8320){dy(d,e,28392,ka)|0;Ab=85}else if((b|0)==8448){dy(d,e,28464,ja)|0;Ab=85}else if((b|0)==8576){dy(d,e,28496,ia)|0;Ab=85}else if((b|0)==8704){dy(d,e,28568,ha)|0;Ab=85}else if((b|0)==14976){dy(d,e,25920,hb)|0;Ab=85}else if((b|0)==15104){dy(d,e,25968,gb)|0;Ab=85}else if((b|0)==15232){dy(d,e,26040,fb)|0;Ab=85}else if((b|0)==15488){dy(d,e,26112,eb)|0;Ab=85}else if((b|0)==9600){dy(d,e,25024,xb)|0;Ab=85}else if((b|0)==9472){dy(d,e,25080,wb)|0;Ab=85}else if((b|0)==9344){dy(d,e,25128,vb)|0;Ab=85}else if((b|0)==4736){dy(d,e,26504,Ya)|0;Ab=85}else if((b|0)==24704){dy(d,e,26552,Xa)|0;Ab=85}else if((b|0)==24832){dy(d,e,26600,Wa)|0;Ab=85}else if((b|0)==8832){dy(d,e,28624,ga)|0;Ab=85}else if((b|0)==8960){dy(d,e,28672,fa)|0;Ab=85}else if((b|0)==9728){dy(d,e,28720,ea)|0;Ab=85}else if((b|0)==9856){dy(d,e,28768,da)|0;Ab=85}else if((b|0)==9984){dy(d,e,28848,ca)|0;Ab=85}else if((b|0)==10112){dy(d,e,28928,ba)|0;Ab=85}else if((b|0)==10368){dy(d,e,28976,aa)|0;Ab=85}else if((b|0)==10496){dy(d,e,29016,$)|0;Ab=85}else if((b|0)==10624){dy(d,e,29056,_)|0;Ab=85}else if((b|0)==16256){dy(d,e,26320,ab)|0;Ab=85}else if((b|0)==5248){dy(d,e,26352,$a)|0;Ab=85}else if((b|0)==5120){dy(d,e,26392,_a)|0;Ab=85}else if((b|0)==4864){dy(d,e,26456,Za)|0;Ab=85}else if((b|0)==19968){dy(d,e,27144,Ka)|0;Ab=85}else if((b|0)==19840){dy(d,e,27184,Ja)|0;Ab=85}else if((b|0)==19712){dy(d,e,27216,Ia)|0;Ab=85}else if((b|0)==19584){dy(d,e,27288,Ha)|0;Ab=85}else if((b|0)==19456){dy(d,e,27328,Ga)|0;Ab=85}else if((b|0)==24448){dy(d,e,27400,Fa)|0;Ab=85}else if((b|0)==20608){dy(d,e,27440,Ea)|0;Ab=85}else if((b|0)==20736){dy(d,e,27488,Da)|0;Ab=85}else if((b|0)==20864){dy(d,e,27528,Ca)|0;Ab=85}else if((b|0)==20992){dy(d,e,27560,Ba)|0;Ab=85}else if((b|0)==4224){dy(d,e,27600,Aa)|0;Ab=85}else if((b|0)==4352){dy(d,e,27640,za)|0;Ab=85}else if((b|0)==19328){dy(d,e,26856,Ra)|0;Ab=85}else if((b|0)==19200){dy(d,e,26904,Qa)|0;Ab=85}else if((b|0)==19072){dy(d,e,26936,Pa)|0;Ab=85}else if((b|0)==18944){dy(d,e,26976,Oa)|0;Ab=85}else if((b|0)==9216){dy(d,e,25176,ub)|0;Ab=85}else if((b|0)==9088){dy(d,e,25216,tb)|0;Ab=85}else if((b|0)==17536){dy(d,e,25256,sb)|0;Ab=85}else if((b|0)==17408){dy(d,e,25312,rb)|0;Ab=85}else if((b|0)==16896){dy(d,e,25496,nb)|0;Ab=85}else if((b|0)==12032){dy(d,e,25552,mb)|0;Ab=85}else if((b|0)==7680){dy(d,e,25584,lb)|0;Ab=85}else if((b|0)==20352){dy(d,e,27016,Na)|0;Ab=85}else if((b|0)==20224){dy(d,e,27056,Ma)|0;Ab=85}else if((b|0)==20096){dy(d,e,27104,La)|0;Ab=85}else if(b)Ab=85;while(0);if((Ab|0)==85?(a[d>>0]|0)==0:0){c[Z>>2]=b;dy(d,e,29096,Z)|0}Z=zb&-65409;if(!Z){i=f;return}zb=yH(d|0)|0;do if(zb){b=e-zb|0;if(b>>>0<5){i=f;return}else{dy(d+zb|0,b,29128,Y)|0;b=zb+3|0;Bb=e-b|0;Cb=d+b|0;break}}else{Bb=e;Cb=d}while(0);do switch(Z|0){case 16:{dy(Cb,Bb,30536,u)|0;break}case 13:{dy(Cb,Bb,30576,t)|0;break}case 15:{dy(Cb,Bb,30616,s)|0;break}case 52:{dy(Cb,Bb,30656,r)|0;break}case 56:{dy(Cb,Bb,30752,p)|0;break}case 54:{dy(Cb,Bb,30696,q)|0;break}case 58:{dy(Cb,Bb,30808,o)|0;break}case 50:{dy(Cb,Bb,30848,n)|0;break}case 46:{dy(Cb,Bb,29136,X)|0;break}case 51:{dy(Cb,Bb,29160,W)|0;break}case 49:{dy(Cb,Bb,29200,V)|0;break}case 9:{dy(Cb,Bb,29240,U)|0;break}case 5:{dy(Cb,Bb,29280,T)|0;break}case 20:{dy(Cb,Bb,29392,R)|0;break}case 34:{dy(Cb,Bb,29632,L)|0;break}case 98:{dy(Cb,Bb,29720,J)|0;break}case 100:{dy(Cb,Bb,29768,I)|0;break}case 102:{dy(Cb,Bb,29840,H)|0;break}case 104:{dy(Cb,Bb,29896,G)|0;break}case 106:{dy(Cb,Bb,29936,F)|0;break}case 108:{dy(Cb,Bb,29968,E)|0;break}case 42:{dy(Cb,Bb,30032,D)|0;break}case 44:{dy(Cb,Bb,30072,C)|0;break}case 2:{dy(Cb,Bb,30112,B)|0;break}case 4:{dy(Cb,Bb,30184,A)|0;break}case 6:{dy(Cb,Bb,30232,z)|0;break}case 8:{dy(Cb,Bb,30296,y)|0;break}case 10:{dy(Cb,Bb,30344,x)|0;break}case 14:{dy(Cb,Bb,30488,v)|0;break}case 12:{dy(Cb,Bb,30416,w)|0;break}case 3:{dy(Cb,Bb,29336,S)|0;break}case 18:{dy(Cb,Bb,29432,Q)|0;break}case 63:{dy(Cb,Bb,29472,P)|0;break}case 64:{dy(Cb,Bb,29512,O)|0;break}case 62:{dy(Cb,Bb,29560,N)|0;break}case 32:{dy(Cb,Bb,29600,M)|0;break}case 96:{dy(Cb,Bb,29664,K)|0;break}case 60:{dy(Cb,Bb,30896,m)|0;break}case 61:{dy(Cb,Bb,30944,l)|0;break}case 7:{dy(Cb,Bb,31e3,k)|0;break}case 11:{dy(Cb,Bb,31040,j)|0;break}case 48:{dy(Cb,Bb,31080,h)|0;break}default:{}}while(0);if(a[Cb>>0]|0){i=f;return}c[g>>2]=Z;dy(Cb,Bb,29096,g)|0;i=f;return}function dr(a){a=a|0;BH(a|0,0,392)|0;return}function er(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;h=i;i=i+32|0;j=h+8|0;k=h;l=So(e,g,1)|0;if(!l){m=-20;i=h;return m|0}if((c[l+24>>2]|0)!=16){m=-20;i=h;return m|0}Uo(b);e=Vo(b,l)|0;if(e){m=e;i=h;return m|0}e=Xo(b,f,g,1)|0;if(e){m=e;i=h;return m|0}c[k>>2]=0;e=j;g=e+16|0;do{a[e>>0]=0;e=e+1|0}while((e|0)<(g|0));e=$o(b,j,16,j,k)|0;if(!e){k=(d[j+1>>0]|0)<<16|(d[j>>0]|0)<<24|(d[j+2>>0]|0)<<8|(d[j+3>>0]|0);g=(d[j+5>>0]|0)<<16|(d[j+4>>0]|0)<<24|(d[j+6>>0]|0)<<8|(d[j+7>>0]|0);f=(d[j+9>>0]|0)<<16|(d[j+8>>0]|0)<<24|(d[j+10>>0]|0)<<8|(d[j+11>>0]|0);l=(d[j+13>>0]|0)<<16|(d[j+12>>0]|0)<<24|(d[j+14>>0]|0)<<8|(d[j+15>>0]|0);j=b+128|0;c[j>>2]=l;c[j+4>>2]=f;j=b+256|0;c[j>>2]=g;c[j+4>>2]=k;j=b+192|0;c[j>>2]=0;c[j+4>>2]=0;j=b+64|0;c[j>>2]=0;c[j+4>>2]=0;j=vH(0,0,l&1|0,0)|0;n=DH(g|0,0,63)|0;o=E;p=xH(l|0,f|0,1)|0;q=p|n;n=E|o;o=xH(g|0,k|0,1)|0;r=E;s=j&-520093696^r;j=b+96|0;c[j>>2]=q;c[j+4>>2]=n;j=b+224|0;c[j>>2]=o;c[j+4>>2]=s;j=vH(0,0,p&1|0,0)|0;p=DH(o|0,r|0,63)|0;r=E;t=xH(q|0,n|0,1)|0;u=t|p;p=E|r;r=xH(o|0,s|0,1)|0;v=E;w=j&-520093696^v;j=b+80|0;c[j>>2]=u;c[j+4>>2]=p;j=b+208|0;c[j>>2]=r;c[j+4>>2]=w;j=vH(0,0,t&1|0,0)|0;t=DH(r|0,v|0,63)|0;v=E;x=xH(u|0,p|0,1)|0;y=t|x;x=v|E;v=xH(r|0,w|0,1)|0;t=j&-520093696^E;j=b+72|0;c[j>>2]=y;c[j+4>>2]=x;j=b+200|0;c[j>>2]=v;c[j+4>>2]=t;j=v^r;z=t^w;A=b+216|0;c[A>>2]=j;c[A+4>>2]=z;A=y^u;B=x^p;C=b+88|0;c[C>>2]=A;c[C+4>>2]=B;C=v^o;D=t^s;F=b+232|0;c[F>>2]=C;c[F+4>>2]=D;F=y^q;G=x^n;H=b+104|0;c[H>>2]=F;c[H+4>>2]=G;H=r^o;I=w^s;J=b+240|0;c[J>>2]=H;c[J+4>>2]=I;J=u^q;K=p^n;L=b+112|0;c[L>>2]=J;c[L+4>>2]=K;L=j^o;M=z^s;N=b+248|0;c[N>>2]=L;c[N+4>>2]=M;N=A^q;O=B^n;P=b+120|0;c[P>>2]=N;c[P+4>>2]=O;P=b+264|0;c[P>>2]=v^g;c[P+4>>2]=t^k;t=b+136|0;c[t>>2]=y^l;c[t+4>>2]=x^f;x=b+272|0;c[x>>2]=r^g;c[x+4>>2]=w^k;w=b+144|0;c[w>>2]=u^l;c[w+4>>2]=p^f;p=b+280|0;c[p>>2]=j^g;c[p+4>>2]=z^k;z=b+152|0;c[z>>2]=A^l;c[z+4>>2]=B^f;B=b+288|0;c[B>>2]=o^g;c[B+4>>2]=s^k;s=b+160|0;c[s>>2]=q^l;c[s+4>>2]=n^f;n=b+296|0;c[n>>2]=C^g;c[n+4>>2]=D^k;D=b+168|0;c[D>>2]=F^l;c[D+4>>2]=G^f;G=b+304|0;c[G>>2]=H^g;c[G+4>>2]=I^k;I=b+176|0;c[I>>2]=J^l;c[I+4>>2]=K^f;K=b+312|0;c[K>>2]=L^g;c[K+4>>2]=M^k;k=b+184|0;c[k>>2]=N^l;c[k+4>>2]=O^f;Q=0}else Q=e;m=Q;i=h;return m|0}function fr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;j=i;i=i+16|0;k=j;c[k>>2]=0;l=b+352|0;m=b+368|0;n=b+384|0;o=l;p=o+32|0;do{a[o>>0]=0;o=o+1|0}while((o|0)<(p|0));c[n>>2]=d;d=b+320|0;n=b+328|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;c[d+12>>2]=0;if((f|0)==12){o=l;d=e;p=o+12|0;do{a[o>>0]=a[d>>0]|0;o=o+1|0;d=d+1|0}while((o|0)<(p|0));a[b+367>>0]=1}else{d=f>>>21&255;o=f>>>13&255;p=f>>>5&255;q=f<<3&255;if(!f){r=b+354|0;s=b+355|0;t=b+356|0;u=b+357|0;v=b+358|0;w=b+359|0;x=b+360|0;y=b+361|0;z=b+362|0;A=b+363|0;B=b+364|0;C=b+365|0;D=b+366|0;E=b+367|0;F=b+353|0;G=0;H=0;I=0;J=0;K=0;L=0;M=0;N=0;O=0;P=0;Q=0;R=0;S=0;T=0;U=0;V=0}else{W=f;f=e;while(1){e=W>>>0<16?W:16;if(e){X=(W^-16)>>>0>4294967279?W:16;Y=0;do{Z=b+352+Y|0;a[Z>>0]=a[Z>>0]^a[f+Y>>0];Y=Y+1|0}while((Y|0)!=(X|0))}jr(b,l,l);if((W|0)==(e|0))break;else{W=W-e|0;f=f+e|0}}f=b+353|0;W=b+354|0;X=b+355|0;Y=b+356|0;Z=b+357|0;_=b+358|0;$=b+359|0;aa=b+360|0;ba=b+361|0;ca=b+362|0;da=b+363|0;ea=b+364|0;fa=b+365|0;ga=b+366|0;ha=b+367|0;r=W;s=X;t=Y;u=Z;v=_;w=$;x=aa;y=ba;z=ca;A=da;B=ea;C=fa;D=ga;E=ha;F=f;G=a[l>>0]|0;H=a[f>>0]|0;I=a[W>>0]|0;J=a[X>>0]|0;K=a[Y>>0]|0;L=a[Z>>0]|0;M=a[_>>0]|0;N=a[$>>0]|0;O=a[aa>>0]|0;P=a[ba>>0]|0;Q=a[ca>>0]|0;R=a[da>>0]|0;S=a[ea>>0]|0;T=a[fa>>0]|0;U=a[ga>>0]|0;V=a[ha>>0]|0}a[l>>0]=G;a[F>>0]=H;a[r>>0]=I;a[s>>0]=J;a[t>>0]=K;a[u>>0]=L;a[v>>0]=M;a[w>>0]=N;a[x>>0]=O;a[y>>0]=P;a[z>>0]=Q;a[A>>0]=R;a[B>>0]=S^d;a[C>>0]=T^o;a[D>>0]=U^p;a[E>>0]=V^q;jr(b,l,l)}q=$o(b,l,16,b+336|0,k)|0;if(q){ia=q;i=j;return ia|0}q=n;c[q>>2]=h;c[q+4>>2]=0;if(!h){ia=0;i=j;return ia|0}else{ja=h;ka=g}while(1){g=ja>>>0<16?ja:16;if(g){h=(ja^-16)>>>0>4294967279?ja:16;q=0;do{n=b+368+q|0;a[n>>0]=a[n>>0]^a[ka+q>>0];q=q+1|0}while((q|0)!=(h|0))}jr(b,m,m);if((ja|0)==(g|0)){ia=0;break}else{ja=ja-g|0;ka=ka+g|0}}i=j;return ia|0}function gr(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+32|0;h=g+8|0;j=g;c[j>>2]=0;if(f>>>0>e>>>0?(f-e|0)>>>0<d>>>0:0){k=-20;i=g;return k|0}l=b+320|0;m=l;n=c[m>>2]|0;o=c[m+4>>2]|0;m=CH(n|0,o|0,d|0,0)|0;p=E;if(p>>>0<o>>>0|(p|0)==(o|0)&m>>>0<n>>>0|(p>>>0>15|(p|0)==15&m>>>0>4294967264)){k=-20;i=g;return k|0}n=l;c[n>>2]=m;c[n+4>>2]=p;if(!d){k=0;i=g;return k|0}p=b+352|0;n=b+368|0;m=b+384|0;l=d;d=f;f=e;while(1){e=l>>>0<16?l:16;o=16;do{if(o>>>0<=12)break;o=o+-1|0;q=b+352+o|0;r=(a[q>>0]|0)+1<<24>>24;a[q>>0]=r}while(r<<24>>24==0);o=$o(b,p,16,h,j)|0;if(o){k=o;s=18;break}if(e){o=(l^-16)>>>0>4294967279?l:16;r=0;do{q=f+r|0;if(!(c[m>>2]|0)){t=b+368+r|0;a[t>>0]=a[t>>0]^a[q>>0]}t=a[q>>0]^a[h+r>>0];a[d+r>>0]=t;if((c[m>>2]|0)==1){q=b+368+r|0;a[q>>0]=a[q>>0]^t}r=r+1|0}while((r|0)!=(o|0))}jr(b,n,n);if((l|0)==(e|0)){k=0;s=18;break}else{l=l-e|0;d=d+e|0;f=f+e|0}}if((s|0)==18){i=g;return k|0}return 0}function hr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=b+320|0;g=c[f>>2]|0;h=c[f+4>>2]|0;f=DH(g|0,h|0,3)|0;i=E;j=b+328|0;k=c[j>>2]|0;l=c[j+4>>2]|0;j=DH(k|0,l|0,3)|0;m=E;if((e+-4|0)>>>0>12){n=-20;return n|0}o=(e|0)==0;if(!o)zH(d|0,b+336|0,e|0)|0;if((j|f|0)==0&(m|i|0)==0){n=0;return n|0}i=xH(k|0,l|0,29)|0;m=xH(k|0,l|0,53)|0;p=xH(k|0,l|0,45)|0;q=xH(k|0,l|0,37)|0;r=xH(k|0,l|0,21)|0;s=xH(k|0,l|0,13)|0;t=xH(k|0,l|0,5)|0;l=xH(g|0,h|0,29)|0;k=xH(g|0,h|0,53)|0;u=xH(g|0,h|0,45)|0;v=xH(g|0,h|0,37)|0;w=xH(g|0,h|0,21)|0;x=xH(g|0,h|0,13)|0;y=xH(g|0,h|0,5)|0;h=b+368|0;a[h>>0]=a[h>>0]^m&255;m=b+369|0;a[m>>0]=a[m>>0]^p&255;p=b+370|0;a[p>>0]=a[p>>0]^q&255;q=b+371|0;a[q>>0]=a[q>>0]^i&255;i=b+372|0;a[i>>0]=a[i>>0]^r&255;r=b+373|0;a[r>>0]=a[r>>0]^s&255;s=b+374|0;a[s>>0]=a[s>>0]^t&255;t=b+375|0;a[t>>0]=a[t>>0]^j&255;j=b+376|0;a[j>>0]=a[j>>0]^k&255;k=b+377|0;a[k>>0]=a[k>>0]^u&255;u=b+378|0;a[u>>0]=a[u>>0]^v&255;v=b+379|0;a[v>>0]=a[v>>0]^l&255;l=b+380|0;a[l>>0]=a[l>>0]^w&255;w=b+381|0;a[w>>0]=a[w>>0]^x&255;x=b+382|0;a[x>>0]=a[x>>0]^y&255;y=b+383|0;a[y>>0]=a[y>>0]^f&255;jr(b,h,h);if(o){n=0;return n|0}else z=0;do{o=d+z|0;a[o>>0]=a[o>>0]^a[b+368+z>>0];z=z+1|0}while((z|0)!=(e|0));n=0;return n|0}function ir(b){b=b|0;var c=0,d=0;Uo(b);c=392;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function jr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=a[d+15>>0]|0;g=f&15;h=b+192+(g<<3)|0;i=b+64+(g<<3)|0;g=f;f=c[i>>2]|0;j=c[h>>2]|0;k=c[h+4>>2]|0;h=c[i+4>>2]|0;i=15;while(1){if((i|0)==15){l=f;m=j;n=k;o=h}else{p=g&15;q=DH(j|0,k|0,60)|0;r=E;s=xH(f|0,h|0,4)|0;t=E|r;r=xH(j|0,k|0,4)|0;u=E;v=31120+((f&15)<<3)|0;w=DH(c[v>>2]|0,c[v+4>>2]|0,48)|0;v=b+192+(p<<3)|0;x=b+64+(p<<3)|0;l=c[x>>2]^(s|q);m=w^r^c[v>>2];n=E^u^c[v+4>>2];o=c[x+4>>2]^t}t=DH(m|0,n|0,60)|0;x=E;v=xH(l|0,o|0,4)|0;u=E|x;x=xH(m|0,n|0,4)|0;r=E;w=31120+((l&15)<<3)|0;q=DH(c[w>>2]|0,c[w+4>>2]|0,48)|0;w=(g&255)>>>4&255;s=b+192+(w<<3)|0;p=q^x^c[s>>2];x=E^r^c[s+4>>2];s=b+64+(w<<3)|0;w=c[s>>2]^(v|t);t=c[s+4>>2]^u;u=i+-1|0;if((i|0)<=0){y=p;z=x;A=w;B=t;break}g=a[d+u>>0]|0;f=w;j=p;k=x;h=t;i=u}i=xH(y|0,z|0,56)|0;a[e>>0]=i;i=xH(y|0,z|0,48)|0;a[e+1>>0]=i;i=xH(y|0,z|0,40)|0;a[e+2>>0]=i;a[e+3>>0]=z;i=xH(y|0,z|0,24)|0;a[e+4>>0]=i;i=xH(y|0,z|0,16)|0;a[e+5>>0]=i;i=xH(y|0,z|0,8)|0;a[e+6>>0]=i;a[e+7>>0]=y;y=xH(A|0,B|0,56)|0;a[e+8>>0]=y;y=xH(A|0,B|0,48)|0;a[e+9>>0]=y;y=xH(A|0,B|0,40)|0;a[e+10>>0]=y;a[e+11>>0]=B;y=xH(A|0,B|0,24)|0;a[e+12>>0]=y;y=xH(A|0,B|0,16)|0;a[e+13>>0]=y;y=xH(A|0,B|0,8)|0;a[e+14>>0]=y;a[e+15>>0]=A;return}function kr(a){a=a|0;BH(a|0,0,36880)|0;nr(a);return}function lr(b){b=b|0;var c=0,d=0;if(!b)return;c=36880;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function mr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+16|0;f=e;if(!d){i=e;return 0}g=a+8|0;h=a+12|0;j=a+16|0;k=d;d=b;while(1){b=k>>>0>4?4:k;l=c[h>>2]|0;if((l|0)>1023){nr(a);m=c[h>>2]|0}else m=l;l=c[g>>2]|0;c[g>>2]=l+1;n=c[j+(l<<2)>>2]|0;c[h>>2]=m+1;c[f>>2]=n^c[j+(m<<2)>>2];zH(d|0,f|0,b|0)|0;if((k|0)==(b|0))break;else{k=k-b|0;d=d+b|0}}i=e;return 0}function nr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0;b=i;i=i+64|0;d=b;e=c[a>>2]|0;f=a+4|0;g=c[f>>2]|0;h=d;j=h+64|0;do{c[h>>2]=0;h=h+4|0}while((h|0)<(j|0));h=d+4|0;j=d+8|0;k=d+12|0;l=d+16|0;m=d+20|0;n=d+24|0;o=d+28|0;p=d+32|0;q=d+36|0;r=d+40|0;s=d+44|0;t=d+48|0;u=d+52|0;v=d+56|0;w=d+60|0;x=0;y=0;z=0;A=0;B=0;C=0;D=0;E=0;F=e;e=g;g=0;G=0;H=0;I=0;while(1){J=F>>20;if(!(J&1)){K=J;L=G}else{J=F>>21^1;if(!(J&1)){M=J;N=G}else{J=F>>22^1;if(!(J&1)){O=J;P=G}else{J=F>>23^1;if(!(J&1)){Q=J;R=G}else{J=F>>24^1;if(!(J&1)){S=J;T=G}else{J=F>>25^1;if(!(J&1)){U=J;V=G}else{J=F>>26^1;if(!(J&1)){W=J;X=G}else{J=F>>27^1;if(!(J&1)){Y=J;Z=G}else{J=F>>28^1;if(!(J&1)){_=J;$=G}else{J=F>>29^1;if(!(J&1)){aa=J;ba=G}else{J=F>>30^1;if(!(J&1)){ca=J;da=G}else{J=F>>31^1;ca=J;da=(J&1)+1+G|0}aa=ca;ba=da+1|0}_=aa;$=ba+1|0}Y=_;Z=$+1|0}W=Y;X=Z+1|0}U=W;V=X+1|0}S=U;T=V+1|0}Q=S;R=T+1|0}O=Q;P=R+1|0}M=O;N=P+1|0}K=M;L=N+1|0}J=F>>>18&7;ea=F&8191;fa=e&8191;ga=mu()|0;ha=a+4112+(ea<<2)|0;ia=c[ha>>2]|0;c[d>>2]=B^ia;ja=a+4112+(fa<<2)|0;ka=c[ja>>2]|0;c[h>>2]=C^ka;la=a+4112+((ea^1)<<2)|0;c[j>>2]=D^c[la>>2];ma=a+4112+((fa^4)<<2)|0;c[k>>2]=E^c[ma>>2];c[ha>>2]=ka<<30^ga^ka>>2;c[ja>>2]=ga^L^ia<<31^ia>>1;ia=c[la>>2]|0;c[la>>2]=ia<<29^ga^ia>>3;ia=c[ma>>2]|0;c[ma>>2]=ia<<28^ga^ia>>4;ia=a+4112+((ea^2)<<2)|0;c[l>>2]=x^c[ia>>2];ma=a+4112+((fa^2)<<2)|0;la=c[ma>>2]|0;c[m>>2]=y^la;ja=a+4112+((ea^3)<<2)|0;c[n>>2]=z^c[ja>>2];ka=a+4112+((fa^6)<<2)|0;c[o>>2]=A^c[ka>>2];ha=(K&1|0)==0;na=ha?ja:ia;oa=ha?ia:ja;ja=c[oa>>2]|0;c[oa>>2]=la<<26^ga^la>>6;c[ma>>2]=ja<<27^ga^ja>>5;ja=mu()|0;ga=c[na>>2]|0;c[na>>2]=ga<<25^ja^ga>>7;ga=c[ka>>2]|0;c[ka>>2]=ga<<24^ja^ga>>8;ga=a+4112+((ea^4)<<2)|0;ka=a+4112+((fa^1)<<2)|0;na=c[a+4112+((g^7^fa)<<2)>>2]^c[d+(g<<2)>>2];fa=F&8;ma=na&8183|fa;la=ma^8;oa=na>>>10&7;if(!(e&2))pa=H;else{if(!(e&4)){if(!(e&8)){if(!(e&16)){if(!(e&32)){if(!(e&64)){if(!(e&128)){if(!(e&256)){if(!(e&512)){if(!(e&1024)){if(!(e&2048))qa=H-(e>>>12|-2)|0;else qa=H;ra=qa+1|0}else ra=H;sa=ra+1|0}else sa=H;ta=sa+1|0}else ta=H;ua=ta+1|0}else ua=H;va=ua+1|0}else va=H;wa=va+1|0}else wa=H;xa=wa+1|0}else xa=H;ya=xa+1|0}else ya=H;za=ya+1|0}else za=H;pa=za+1|0}ia=a+4112+((ea^5)<<2)|0;ha=a+4112+((ma^13)<<2)|0;Aa=c[ga>>2]|0;c[p>>2]=c[p>>2]^Aa;Ba=c[ka>>2]|0;c[q>>2]=c[q>>2]^Ba;c[r>>2]=c[r>>2]^c[ia>>2];c[s>>2]=c[s>>2]^c[ha>>2];c[ga>>2]=Ba<<22^ja^Ba>>10;c[ka>>2]=pa^ja^Aa<<23^Aa>>9;Aa=c[ia>>2]|0;c[ia>>2]=Aa<<21^ja^Aa>>11;Aa=c[ha>>2]|0;c[ha>>2]=Aa<<20^ja^Aa>>12;Aa=a+4112+((ea^6)<<2)|0;ha=c[Aa>>2]|0;ia=c[t>>2]^ha;c[t>>2]=ia;ka=a+4112+((ma^11)<<2)|0;Ba=c[ka>>2]|0;ga=c[u>>2]^Ba;c[u>>2]=ga;Ca=ea^7;ea=a+4112+(Ca<<2)|0;Da=c[v>>2]^c[ea>>2];c[v>>2]=Da;Ea=a+4112+((ma^15)<<2)|0;Fa=c[w>>2]^c[Ea>>2];c[w>>2]=Fa;c[Aa>>2]=Ba<<18^ja^Ba>>14;c[ka>>2]=ha<<19^ja^ha>>13;ha=c[ea>>2]|0;c[ea>>2]=ha<<17^ja^ha>>15;ha=c[Ea>>2]|0;c[Ea>>2]=ha<<16^ja^ha>>16;ha=c[a+4112+((Ca^J)<<2)>>2]^c[d+((J|8)<<2)>>2];J=na&16;Ca=a+16+(((I|1|0)%1024|0)<<2)|0;ja=c[d>>2]|0;Ea=c[h>>2]|0;ea=c[j>>2]|0;ka=c[k>>2]|0;Ba=c[l>>2]|0;Aa=c[m>>2]|0;Ga=c[n>>2]|0;Ha=c[o>>2]|0;Ia=J^16^ha&8190;c[Ca>>2]=c[Ca>>2]^ja^Ea^ea^ka^Ba^Aa^Ga^Ha^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^ia^ga^Da^Fa;Fa=ha>>20;if(!(Fa&1)){Ja=Fa;Ka=L}else{Fa=ha>>21^1;if(!(Fa&1)){La=Fa;Ma=L}else{Fa=ha>>22^1;if(!(Fa&1)){Na=Fa;Oa=L}else{Fa=ha>>23^1;if(!(Fa&1)){Pa=Fa;Qa=L}else{Fa=ha>>24^1;if(!(Fa&1)){Ra=Fa;Sa=L}else{Fa=ha>>25^1;if(!(Fa&1)){Ta=Fa;Ua=L}else{Fa=ha>>26^1;if(!(Fa&1)){Va=Fa;Wa=L}else{Fa=ha>>27^1;if(!(Fa&1)){Xa=Fa;Ya=L}else{Fa=ha>>28^1;if(!(Fa&1)){Za=Fa;_a=L}else{Fa=ha>>29^1;if(!(Fa&1)){$a=Fa;ab=L}else{Fa=ha>>30^1;if(!(Fa&1)){bb=Fa;cb=L}else{Fa=ha>>31^1;bb=Fa;cb=L+1+(Fa&1)|0}$a=bb;ab=cb+1|0}Za=$a;_a=ab+1|0}Xa=Za;Ya=_a+1|0}Va=Xa;Wa=Ya+1|0}Ta=Va;Ua=Wa+1|0}Ra=Ta;Sa=Ua+1|0}Pa=Ra;Qa=Sa+1|0}Na=Pa;Oa=Qa+1|0}La=Na;Ma=Oa+1|0}Ja=La;Ka=Ma+1|0}Fa=ha>>>18&7;Da=mu()|0;ga=a+4112+(Ia<<2)|0;ia=c[ga>>2]|0;c[d>>2]=ja^ia;ja=a+4112+(la<<2)|0;Ca=c[ja>>2]|0;c[h>>2]=Ea^Ca;Ea=a+4112+((Ia|1)<<2)|0;c[j>>2]=ea^c[Ea>>2];ea=a+4112+((ma^12)<<2)|0;c[k>>2]=ka^c[ea>>2];c[ga>>2]=Ca<<30^Da^Ca>>2;c[ja>>2]=Da^Ka^ia<<31^ia>>1;ia=c[Ea>>2]|0;c[Ea>>2]=ia<<29^Da^ia>>3;ia=c[ea>>2]|0;c[ea>>2]=ia<<28^Da^ia>>4;ia=a+4112+((Ia^2)<<2)|0;c[l>>2]=Ba^c[ia>>2];Ba=a+4112+((ma^10)<<2)|0;ea=c[Ba>>2]|0;c[m>>2]=Aa^ea;Aa=a+4112+((Ia^3)<<2)|0;c[n>>2]=Ga^c[Aa>>2];Ga=a+4112+((ma^14)<<2)|0;c[o>>2]=Ha^c[Ga>>2];Ha=(Ja&1|0)==0;Ea=Ha?Aa:ia;ja=Ha?ia:Aa;Aa=c[ja>>2]|0;c[ja>>2]=ea<<26^Da^ea>>6;c[Ba>>2]=Aa<<27^Da^Aa>>5;Aa=mu()|0;Da=c[Ea>>2]|0;c[Ea>>2]=Da<<25^Aa^Da>>7;Da=c[Ga>>2]|0;c[Ga>>2]=Da<<24^Aa^Da>>8;Da=a+4112+((Ia^4)<<2)|0;Ga=a+4112+((ma^9)<<2)|0;ma=c[a+4112+((oa^7^la)<<2)>>2]^c[d+(oa<<2)>>2];oa=ha&8;ha=ma&8183|oa;la=ha^8;Ea=ma>>>10&7;if(!(na&2))db=pa;else{if(!(na&4)){if(!fa)eb=pa;else{if(!J){if(!(na&32)){if(!(na&64)){if(!(na&128)){if(!(na&256)){if(!(na&512)){if(!(na&1024)){if(!(na&2048))fb=2-(na>>>12&1)+pa|0;else fb=pa;gb=fb+1|0}else gb=pa;hb=gb+1|0}else hb=pa;ib=hb+1|0}else ib=pa;jb=ib+1|0}else jb=pa;kb=jb+1|0}else kb=pa;lb=kb+1|0}else lb=pa;mb=lb+1|0}else mb=pa;eb=mb+1|0}nb=eb+1|0}else nb=pa;db=nb+1|0}na=a+4112+((Ia^5)<<2)|0;J=a+4112+((ha^13)<<2)|0;fa=c[Da>>2]|0;c[p>>2]=c[p>>2]^fa;Ba=c[Ga>>2]|0;c[q>>2]=c[q>>2]^Ba;c[r>>2]=c[r>>2]^c[na>>2];c[s>>2]=c[s>>2]^c[J>>2];c[Da>>2]=Ba<<22^Aa^Ba>>10;c[Ga>>2]=db^Aa^fa<<23^fa>>9;fa=c[na>>2]|0;c[na>>2]=fa<<21^Aa^fa>>11;fa=c[J>>2]|0;c[J>>2]=fa<<20^Aa^fa>>12;fa=a+4112+((Ia^6)<<2)|0;J=c[fa>>2]|0;na=c[t>>2]^J;c[t>>2]=na;Ga=a+4112+((ha^11)<<2)|0;Ba=c[Ga>>2]|0;Da=c[u>>2]^Ba;c[u>>2]=Da;ea=a+4112+((Ia^7)<<2)|0;ja=c[v>>2]^c[ea>>2];c[v>>2]=ja;ia=a+4112+((ha^15)<<2)|0;Ha=c[w>>2]^c[ia>>2];c[w>>2]=Ha;c[fa>>2]=Ba<<18^Aa^Ba>>14;c[Ga>>2]=J<<19^Aa^J>>13;J=c[ea>>2]|0;c[ea>>2]=J<<17^Aa^J>>15;J=c[ia>>2]|0;c[ia>>2]=J<<16^Aa^J>>16;J=c[a+4112+((Fa^7^Ia)<<2)>>2]^c[d+((Fa|8)<<2)>>2];Fa=ma&16;Ia=a+16+(((I|2|0)%1024|0)<<2)|0;Aa=c[d>>2]|0;ia=c[h>>2]|0;ea=c[j>>2]|0;Ga=c[k>>2]|0;Ba=c[l>>2]|0;fa=c[m>>2]|0;Ca=c[n>>2]|0;ga=c[o>>2]|0;ka=Fa^16^J&8190;c[Ia>>2]=c[Ia>>2]^Aa^ia^ea^Ga^Ba^fa^Ca^ga^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^na^Da^ja^Ha;Ha=J>>20;if(!(Ha&1)){ob=Ha;pb=Ka}else{Ha=J>>21^1;if(!(Ha&1)){qb=Ha;rb=Ka}else{Ha=J>>22^1;if(!(Ha&1)){sb=Ha;tb=Ka}else{Ha=J>>23^1;if(!(Ha&1)){ub=Ha;vb=Ka}else{Ha=J>>24^1;if(!(Ha&1)){wb=Ha;xb=Ka}else{Ha=J>>25^1;if(!(Ha&1)){yb=Ha;zb=Ka}else{Ha=J>>26^1;if(!(Ha&1)){Ab=Ha;Bb=Ka}else{Ha=J>>27^1;if(!(Ha&1)){Cb=Ha;Db=Ka}else{Ha=J>>28^1;if(!(Ha&1)){Eb=Ha;Fb=Ka}else{Ha=J>>29^1;if(!(Ha&1)){Gb=Ha;Hb=Ka}else{Ha=J>>30^1;if(!(Ha&1)){Ib=Ha;Jb=Ka}else{Ha=J>>31^1;Ib=Ha;Jb=Ka+1+(Ha&1)|0}Gb=Ib;Hb=Jb+1|0}Eb=Gb;Fb=Hb+1|0}Cb=Eb;Db=Fb+1|0}Ab=Cb;Bb=Db+1|0}yb=Ab;zb=Bb+1|0}wb=yb;xb=zb+1|0}ub=wb;vb=xb+1|0}sb=ub;tb=vb+1|0}qb=sb;rb=tb+1|0}ob=qb;pb=rb+1|0}Ha=J>>>18&7;ja=mu()|0;Da=a+4112+(ka<<2)|0;na=c[Da>>2]|0;c[d>>2]=Aa^na;Aa=a+4112+(la<<2)|0;Ia=c[Aa>>2]|0;c[h>>2]=ia^Ia;ia=a+4112+((ka|1)<<2)|0;c[j>>2]=ea^c[ia>>2];ea=a+4112+((ha^12)<<2)|0;c[k>>2]=Ga^c[ea>>2];c[Da>>2]=Ia<<30^ja^Ia>>2;c[Aa>>2]=ja^pb^na<<31^na>>1;na=c[ia>>2]|0;c[ia>>2]=na<<29^ja^na>>3;na=c[ea>>2]|0;c[ea>>2]=na<<28^ja^na>>4;na=a+4112+((ka^2)<<2)|0;c[l>>2]=Ba^c[na>>2];Ba=a+4112+((ha^10)<<2)|0;ea=c[Ba>>2]|0;c[m>>2]=fa^ea;fa=a+4112+((ka^3)<<2)|0;c[n>>2]=Ca^c[fa>>2];Ca=a+4112+((ha^14)<<2)|0;c[o>>2]=ga^c[Ca>>2];ga=(ob&1|0)==0;ia=ga?fa:na;Aa=ga?na:fa;fa=c[Aa>>2]|0;c[Aa>>2]=ea<<26^ja^ea>>6;c[Ba>>2]=fa<<27^ja^fa>>5;fa=mu()|0;ja=c[ia>>2]|0;c[ia>>2]=ja<<25^fa^ja>>7;ja=c[Ca>>2]|0;c[Ca>>2]=ja<<24^fa^ja>>8;ja=a+4112+((ka^4)<<2)|0;Ca=a+4112+((ha^9)<<2)|0;ha=c[a+4112+((Ea^7^la)<<2)>>2]^c[d+(Ea<<2)>>2];Ea=J&8;J=ha&8183|Ea;la=J^8;ia=ha>>>10&7;if(!(ma&2))Kb=db;else{if(!(ma&4)){if(!oa)Lb=db;else{if(!Fa){if(!(ma&32)){if(!(ma&64)){if(!(ma&128)){if(!(ma&256)){if(!(ma&512)){if(!(ma&1024)){if(!(ma&2048))Mb=2-(ma>>>12&1)+db|0;else Mb=db;Nb=Mb+1|0}else Nb=db;Ob=Nb+1|0}else Ob=db;Pb=Ob+1|0}else Pb=db;Qb=Pb+1|0}else Qb=db;Rb=Qb+1|0}else Rb=db;Sb=Rb+1|0}else Sb=db;Tb=Sb+1|0}else Tb=db;Lb=Tb+1|0}Ub=Lb+1|0}else Ub=db;Kb=Ub+1|0}ma=a+4112+((ka^5)<<2)|0;Fa=a+4112+((J^13)<<2)|0;oa=c[ja>>2]|0;c[p>>2]=c[p>>2]^oa;Ba=c[Ca>>2]|0;c[q>>2]=c[q>>2]^Ba;c[r>>2]=c[r>>2]^c[ma>>2];c[s>>2]=c[s>>2]^c[Fa>>2];c[ja>>2]=Ba<<22^fa^Ba>>10;c[Ca>>2]=Kb^fa^oa<<23^oa>>9;oa=c[ma>>2]|0;c[ma>>2]=oa<<21^fa^oa>>11;oa=c[Fa>>2]|0;c[Fa>>2]=oa<<20^fa^oa>>12;oa=a+4112+((ka^6)<<2)|0;Fa=c[oa>>2]|0;ma=c[t>>2]^Fa;c[t>>2]=ma;Ca=a+4112+((J^11)<<2)|0;Ba=c[Ca>>2]|0;ja=c[u>>2]^Ba;c[u>>2]=ja;ea=a+4112+((ka^7)<<2)|0;Aa=c[v>>2]^c[ea>>2];c[v>>2]=Aa;na=a+4112+((J^15)<<2)|0;ga=c[w>>2]^c[na>>2];c[w>>2]=ga;c[oa>>2]=Ba<<18^fa^Ba>>14;c[Ca>>2]=Fa<<19^fa^Fa>>13;Fa=c[ea>>2]|0;c[ea>>2]=Fa<<17^fa^Fa>>15;Fa=c[na>>2]|0;c[na>>2]=Fa<<16^fa^Fa>>16;Fa=c[a+4112+((Ha^7^ka)<<2)>>2]^c[d+((Ha|8)<<2)>>2];Ha=ha&16;ka=a+16+(((I|3|0)%1024|0)<<2)|0;fa=c[d>>2]|0;na=c[h>>2]|0;ea=c[j>>2]|0;Ca=c[k>>2]|0;Ba=c[l>>2]|0;oa=c[m>>2]|0;Ia=c[n>>2]|0;Da=c[o>>2]|0;Ga=Ha^16^Fa&8190;c[ka>>2]=c[ka>>2]^fa^na^ea^Ca^Ba^oa^Ia^Da^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^ma^ja^Aa^ga;ga=Fa>>20;if(!(ga&1)){Vb=ga;Wb=pb}else{ga=Fa>>21^1;if(!(ga&1)){Xb=ga;Yb=pb}else{ga=Fa>>22^1;if(!(ga&1)){Zb=ga;_b=pb}else{ga=Fa>>23^1;if(!(ga&1)){$b=ga;ac=pb}else{ga=Fa>>24^1;if(!(ga&1)){bc=ga;cc=pb}else{ga=Fa>>25^1;if(!(ga&1)){dc=ga;ec=pb}else{ga=Fa>>26^1;if(!(ga&1)){fc=ga;gc=pb}else{ga=Fa>>27^1;if(!(ga&1)){hc=ga;ic=pb}else{ga=Fa>>28^1;if(!(ga&1)){jc=ga;kc=pb}else{ga=Fa>>29^1;if(!(ga&1)){lc=ga;mc=pb}else{ga=Fa>>30^1;if(!(ga&1)){nc=ga;oc=pb}else{ga=Fa>>31^1;nc=ga;oc=pb+1+(ga&1)|0}lc=nc;mc=oc+1|0}jc=lc;kc=mc+1|0}hc=jc;ic=kc+1|0}fc=hc;gc=ic+1|0}dc=fc;ec=gc+1|0}bc=dc;cc=ec+1|0}$b=bc;ac=cc+1|0}Zb=$b;_b=ac+1|0}Xb=Zb;Yb=_b+1|0}Vb=Xb;Wb=Yb+1|0}ga=Fa>>>18&7;Aa=mu()|0;ja=a+4112+(Ga<<2)|0;ma=c[ja>>2]|0;c[d>>2]=fa^ma;fa=a+4112+(la<<2)|0;ka=c[fa>>2]|0;c[h>>2]=na^ka;na=a+4112+((Ga|1)<<2)|0;c[j>>2]=ea^c[na>>2];ea=a+4112+((J^12)<<2)|0;c[k>>2]=Ca^c[ea>>2];c[ja>>2]=ka<<30^Aa^ka>>2;c[fa>>2]=Aa^Wb^ma<<31^ma>>1;ma=c[na>>2]|0;c[na>>2]=ma<<29^Aa^ma>>3;ma=c[ea>>2]|0;c[ea>>2]=ma<<28^Aa^ma>>4;ma=a+4112+((Ga^2)<<2)|0;c[l>>2]=Ba^c[ma>>2];Ba=a+4112+((J^10)<<2)|0;ea=c[Ba>>2]|0;c[m>>2]=oa^ea;oa=a+4112+((Ga^3)<<2)|0;c[n>>2]=Ia^c[oa>>2];Ia=a+4112+((J^14)<<2)|0;c[o>>2]=Da^c[Ia>>2];Da=(Vb&1|0)==0;na=Da?oa:ma;fa=Da?ma:oa;oa=c[fa>>2]|0;c[fa>>2]=ea<<26^Aa^ea>>6;c[Ba>>2]=oa<<27^Aa^oa>>5;oa=mu()|0;Aa=c[na>>2]|0;c[na>>2]=Aa<<25^oa^Aa>>7;Aa=c[Ia>>2]|0;c[Ia>>2]=Aa<<24^oa^Aa>>8;Aa=a+4112+((Ga^4)<<2)|0;Ia=a+4112+((J^9)<<2)|0;J=c[a+4112+((ia^7^la)<<2)>>2]^c[d+(ia<<2)>>2];ia=J&8183|Fa&8;Fa=ia^8;g=J>>>10&7;if(!(ha&2))pc=Kb;else{if(!(ha&4)){if(!Ea)qc=Kb;else{if(!Ha){if(!(ha&32)){if(!(ha&64)){if(!(ha&128)){if(!(ha&256)){if(!(ha&512)){if(!(ha&1024)){if(!(ha&2048))rc=2-(ha>>>12&1)+Kb|0;else rc=Kb;sc=rc+1|0}else sc=Kb;tc=sc+1|0}else tc=Kb;uc=tc+1|0}else uc=Kb;vc=uc+1|0}else vc=Kb;wc=vc+1|0}else wc=Kb;xc=wc+1|0}else xc=Kb;yc=xc+1|0}else yc=Kb;qc=yc+1|0}zc=qc+1|0}else zc=Kb;pc=zc+1|0}ha=a+4112+((Ga^5)<<2)|0;Ha=a+4112+((ia^13)<<2)|0;Ea=c[Aa>>2]|0;c[p>>2]=c[p>>2]^Ea;la=c[Ia>>2]|0;c[q>>2]=c[q>>2]^la;c[r>>2]=c[r>>2]^c[ha>>2];c[s>>2]=c[s>>2]^c[Ha>>2];c[Aa>>2]=la<<22^oa^la>>10;c[Ia>>2]=pc^oa^Ea<<23^Ea>>9;Ea=c[ha>>2]|0;c[ha>>2]=Ea<<21^oa^Ea>>11;Ea=c[Ha>>2]|0;c[Ha>>2]=Ea<<20^oa^Ea>>12;Ea=a+4112+((Ga^6)<<2)|0;Ha=c[Ea>>2]|0;ha=c[t>>2]^Ha;c[t>>2]=ha;Ia=a+4112+((ia^11)<<2)|0;la=c[Ia>>2]|0;Aa=c[u>>2]^la;c[u>>2]=Aa;na=a+4112+((Ga^7)<<2)|0;Ba=c[v>>2]^c[na>>2];c[v>>2]=Ba;ea=a+4112+((ia^15)<<2)|0;ia=c[w>>2]^c[ea>>2];c[w>>2]=ia;c[Ea>>2]=la<<18^oa^la>>14;c[Ia>>2]=Ha<<19^oa^Ha>>13;Ha=c[na>>2]|0;c[na>>2]=Ha<<17^oa^Ha>>15;Ha=c[ea>>2]|0;c[ea>>2]=Ha<<16^oa^Ha>>16;I=I+4|0;Ha=a+16+(((I|0)%1024|0)<<2)|0;B=c[d>>2]|0;C=c[h>>2]|0;D=c[j>>2]|0;E=c[k>>2]|0;x=c[l>>2]|0;y=c[m>>2]|0;z=c[n>>2]|0;A=c[o>>2]|0;oa=J&16^16^(c[a+4112+((ga^7^Ga)<<2)>>2]^c[d+((ga|8)<<2)>>2])&-2;c[Ha>>2]=c[Ha>>2]^B^C^D^E^x^y^z^A^c[p>>2]^c[q>>2]^c[r>>2]^c[s>>2]^ha^Aa^Ba^ia;if((I|0)>=4096){Ac=Fa;Bc=oa;break}else{F=oa;e=Fa;G=Wb;H=pc}}c[a>>2]=Bc;c[f>>2]=Ac;c[a+8>>2]=0;c[a+12>>2]=512;i=b;return}function or(a){a=a|0;var b=0;switch(a|0){case 8:{b=31488;break}case 3:{b=31248;break}case 5:{b=31344;break}case 7:{b=31440;break}case 4:{b=31296;break}case 6:{b=31392;break}default:b=0}return b|0}function pr(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function qr(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;if(!b)return;d=c[b>>2]|0;if(!d)return;e=c[b+4>>2]|0;if(e)td[c[d+36>>2]&255](e);e=b+8|0;d=c[e>>2]|0;if(d){f=c[(c[b>>2]|0)+12>>2]|0;if(!f)g=d;else{h=f<<1;f=d;while(1){h=h+-1|0;a[f>>0]=0;if(!h)break;else f=f+1|0}g=c[e>>2]|0}qy(g)}a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;g=b+4|0;a[b+3>>0]=0;a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;b=g+4|0;a[g+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;return}function rr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((a|0)==0|(b|0)==0){e=-20736;return e|0}f=sd[c[b+32>>2]&31]()|0;c[a+4>>2]=f;if(!f){e=-20864;return e|0}if((d|0)!=0?(d=ry(2,c[b+12>>2]|0)|0,c[a+8>>2]=d,(d|0)==0):0){td[c[b+36>>2]&255](f);e=-20864;return e|0}c[a>>2]=b;e=0;return e|0}function sr(a){a=a|0;var b=0,d=0;if(!a){b=-20736;return b|0}d=c[a>>2]|0;if(!d){b=-20736;return b|0}td[c[d+16>>2]&255](c[a+4>>2]|0);b=0;return b|0}function tr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-20736;return e|0}f=c[a>>2]|0;if(!f){e=-20736;return e|0}xd[c[f+20>>2]&63](c[a+4>>2]|0,b,d);e=0;return e|0}function ur(a,b){a=a|0;b=b|0;var d=0,e=0;if(!a){d=-20736;return d|0}e=c[a>>2]|0;if(!e){d=-20736;return d|0}ud[c[e+24>>2]&127](c[a+4>>2]|0,b);d=0;return d|0}function vr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if(!a){f=-20736;return f|0}xd[c[a+28>>2]&63](b,d,e);f=0;return f|0}function wr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+64|0;g=f;if(!b){h=-20736;i=f;return h|0}j=c[b>>2]|0;if(!j){h=-20736;i=f;return h|0}k=b+8|0;l=c[k>>2]|0;if(!l){h=-20736;i=f;return h|0}m=c[j+12>>2]|0;if(m>>>0<e>>>0){n=b+4|0;td[c[j+16>>2]&255](c[n>>2]|0);xd[c[(c[b>>2]|0)+20>>2]&63](c[n>>2]|0,d,e);ud[c[(c[b>>2]|0)+24>>2]&127](c[n>>2]|0,g);n=c[b>>2]|0;o=g;p=c[n+8>>2]|0;q=c[k>>2]|0;r=c[n+12>>2]|0}else{o=d;p=e;q=l;r=m}BH(q|0,54,r|0)|0;BH(q+r|0,92,c[(c[b>>2]|0)+12>>2]|0)|0;if(p){m=0;do{l=q+m|0;e=o+m|0;a[l>>0]=a[e>>0]^a[l>>0];l=q+(m+r)|0;a[l>>0]=a[e>>0]^a[l>>0];m=m+1|0}while((m|0)!=(p|0))}a[g>>0]=0;a[g+1>>0]=0;a[g+2>>0]=0;a[g+3>>0]=0;a[g+4>>0]=0;a[g+5>>0]=0;a[g+6>>0]=0;a[g+7>>0]=0;a[g+8>>0]=0;a[g+9>>0]=0;a[g+10>>0]=0;a[g+11>>0]=0;a[g+12>>0]=0;a[g+13>>0]=0;a[g+14>>0]=0;a[g+15>>0]=0;a[g+16>>0]=0;a[g+17>>0]=0;a[g+18>>0]=0;a[g+19>>0]=0;a[g+20>>0]=0;a[g+21>>0]=0;a[g+22>>0]=0;a[g+23>>0]=0;a[g+24>>0]=0;a[g+25>>0]=0;a[g+26>>0]=0;a[g+27>>0]=0;a[g+28>>0]=0;a[g+29>>0]=0;a[g+30>>0]=0;a[g+31>>0]=0;a[g+32>>0]=0;a[g+33>>0]=0;a[g+34>>0]=0;a[g+35>>0]=0;a[g+36>>0]=0;a[g+37>>0]=0;a[g+38>>0]=0;a[g+39>>0]=0;a[g+40>>0]=0;a[g+41>>0]=0;a[g+42>>0]=0;a[g+43>>0]=0;a[g+44>>0]=0;a[g+45>>0]=0;a[g+46>>0]=0;a[g+47>>0]=0;a[g+48>>0]=0;a[g+49>>0]=0;a[g+50>>0]=0;a[g+51>>0]=0;a[g+52>>0]=0;a[g+53>>0]=0;a[g+54>>0]=0;a[g+55>>0]=0;a[g+56>>0]=0;a[g+57>>0]=0;a[g+58>>0]=0;a[g+59>>0]=0;a[g+60>>0]=0;a[g+61>>0]=0;a[g+62>>0]=0;a[g+63>>0]=0;g=b+4|0;td[c[(c[b>>2]|0)+16>>2]&255](c[g>>2]|0);p=c[b>>2]|0;xd[c[p+20>>2]&63](c[g>>2]|0,q,c[p+12>>2]|0);h=0;i=f;return h|0}function xr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if(!a){e=-20736;return e|0}f=c[a>>2]|0;if(!f){e=-20736;return e|0}if(!(c[a+8>>2]|0)){e=-20736;return e|0}xd[c[f+20>>2]&63](c[a+4>>2]|0,b,d);e=0;return e|0}function yr(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0;d=i;i=i+64|0;e=d;if(!a){f=-20736;i=d;return f|0}g=c[a>>2]|0;if(!g){f=-20736;i=d;return f|0}h=c[a+8>>2]|0;if(!h){f=-20736;i=d;return f|0}j=h+(c[g+12>>2]|0)|0;h=a+4|0;ud[c[g+24>>2]&127](c[h>>2]|0,e);td[c[(c[a>>2]|0)+16>>2]&255](c[h>>2]|0);g=c[a>>2]|0;xd[c[g+20>>2]&63](c[h>>2]|0,j,c[g+12>>2]|0);g=c[a>>2]|0;xd[c[g+20>>2]&63](c[h>>2]|0,e,c[g+8>>2]|0);ud[c[(c[a>>2]|0)+24>>2]&127](c[h>>2]|0,b);f=0;i=d;return f|0}function zr(a){a=a|0;var b=0,d=0,e=0,f=0;if(!a){b=-20736;return b|0}d=c[a>>2]|0;if(!d){b=-20736;return b|0}e=c[a+8>>2]|0;if(!e){b=-20736;return b|0}f=a+4|0;td[c[d+16>>2]&255](c[f>>2]|0);d=c[a>>2]|0;xd[c[d+20>>2]&63](c[f>>2]|0,e,c[d+12>>2]|0);b=0;return b|0}function Ar(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+80|0;k=j+16|0;l=j;if(!b){m=-20736;i=j;return m|0};c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;n=sd[c[b+32>>2]&31]()|0;o=l+4|0;c[o>>2]=n;if(!n){m=-20864;i=j;return m|0}p=ry(2,c[b+12>>2]|0)|0;q=l+8|0;c[q>>2]=p;if(!p){td[c[b+36>>2]&255](n);m=-20864;i=j;return m|0}c[l>>2]=b;wr(l,d,e)|0;e=c[l>>2]|0;do if(!e)r=k;else{if(c[q>>2]|0){xd[c[e+20>>2]&63](c[o>>2]|0,f,g);d=c[l>>2]|0;if(!d){r=k;break}else{s=d;t=k}}else{s=e;t=k}d=c[q>>2]|0;if(d){b=d+(c[s+12>>2]|0)|0;ud[c[s+24>>2]&127](c[o>>2]|0,t);td[c[(c[l>>2]|0)+16>>2]&255](c[o>>2]|0);d=c[l>>2]|0;xd[c[d+20>>2]&63](c[o>>2]|0,b,c[d+12>>2]|0);d=c[l>>2]|0;xd[c[d+20>>2]&63](c[o>>2]|0,t,c[d+8>>2]|0);ud[c[(c[l>>2]|0)+24>>2]&127](c[o>>2]|0,h);d=c[l>>2]|0;if(!d){m=0;i=j;return m|0}else u=d}else u=s;d=c[o>>2]|0;if(d)td[c[u+36>>2]&255](d);d=c[q>>2]|0;if(d){b=c[(c[l>>2]|0)+12>>2]|0;if(!b)v=d;else{n=b<<1;b=d;while(1){n=n+-1|0;a[b>>0]=0;if(!n)break;else b=b+1|0}v=c[q>>2]|0}qy(v)}a[l>>0]=0;a[l+1>>0]=0;a[l+2>>0]=0;a[l+3>>0]=0;a[o>>0]=0;a[o+1>>0]=0;a[o+2>>0]=0;b=o+4|0;a[o+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;m=0;i=j;return m|0}while(0);m=0;i=j;return m|0}function Br(a){a=a|0;var b=0;if(!a){b=0;return b|0}b=c[a+8>>2]&255;return b|0}function Cr(a){a=a|0;var b=0;if(!a)b=0;else b=c[a>>2]|0;return b|0}function Dr(a){a=a|0;var b=0;if(!a){b=0;return b|0}b=c[a+4>>2]|0;return b|0}function Er(a){a=a|0;ev(a);return}function Fr(a,b,c){a=a|0;b=b|0;c=c|0;gv(a,b,c);return}function Gr(a,b){a=a|0;b=b|0;hv(a,b);return}function Hr(){var a=0;a=ry(1,88)|0;if(!a)return a|0;bv(a);return a|0}function Ir(a){a=a|0;cv(a);qy(a);return}function Jr(a,b){a=a|0;b=b|0;dv(a,b);return}function Kr(a,b){a=a|0;b=b|0;fv(a,b);return}function Lr(a){a=a|0;Tt(a);return}function Mr(a,b,c){a=a|0;b=b|0;c=c|0;Vt(a,b,c);return}function Nr(a,b){a=a|0;b=b|0;Wt(a,b);return}function Or(){var a=0;a=ry(1,92)|0;if(!a)return a|0;Qt(a);return a|0}function Pr(a){a=a|0;Rt(a);qy(a);return}function Qr(a,b){a=a|0;b=b|0;St(a,b);return}function Rr(a,b){a=a|0;b=b|0;Ut(a,b);return}function Sr(a){a=a|0;$t(a,1);return}function Tr(a,b,c){a=a|0;b=b|0;c=c|0;bu(a,b,c);return}function Ur(a,b){a=a|0;b=b|0;cu(a,b);return}function Vr(a,b,c){a=a|0;b=b|0;c=c|0;du(a,b,c,1);return}function Wr(){var a=0;a=ry(1,108)|0;if(!a)return a|0;Yt(a);return a|0}function Xr(a){a=a|0;Zt(a);qy(a);return}function Yr(a,b){a=a|0;b=b|0;_t(a,b);return}function Zr(a,b){a=a|0;b=b|0;au(a,b);return}function _r(a){a=a|0;$t(a,0);return}function $r(a,b,c){a=a|0;b=b|0;c=c|0;du(a,b,c,0);return}function as(a){a=a|0;hu(a,1);return}function bs(a,b,c){a=a|0;b=b|0;c=c|0;ju(a,b,c);return}function cs(a,b){a=a|0;b=b|0;ku(a,b);return}function ds(a,b,c){a=a|0;b=b|0;c=c|0;lu(a,b,c,1);return}function es(){var a=0;a=ry(1,216)|0;if(!a)return a|0;eu(a);return a|0}function fs(a){a=a|0;fu(a);qy(a);return}function gs(a,b){a=a|0;b=b|0;gu(a,b);return}function hs(a,b){a=a|0;b=b|0;iu(a,b);return}function is(a){a=a|0;hu(a,0);return}function js(a,b,c){a=a|0;b=b|0;c=c|0;lu(a,b,c,0);return}function ks(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=-46;return d|0}e=a+8|0;f=c[a+4>>2]|0;if((f|0)==5)if(!(ky(31600,c[e>>2]|0,5)|0))g=31648;else{d=-46;return d|0}else if((f|0)==7)if(!(ky(31592,c[e>>2]|0,7)|0))g=31628;else{d=-46;return d|0}else if((f|0)==9?(ky(31576,c[e>>2]|0,9)|0)==0:0)g=31608;else{d=-46;return d|0}c[b>>2]=c[g+16>>2];d=0;return d|0}function ls(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((a|0)!=1)if((a|0)!=2)if((a|0)==3){e=31600;f=31648}else{g=-46;return g|0}else{e=31592;f=31628}else{e=31576;f=31608}c[b>>2]=e;c[d>>2]=c[f+4>>2];g=0;return g|0}function ms(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=-46;return d|0}e=a+8|0;f=c[a+4>>2]|0;if((f|0)==9){a=c[e>>2]|0;if(ky(31768,a,9)|0)if(ky(31784,a,9)|0)if(!(ky(31800,a,9)|0))g=32032;else{d=-46;return d|0}else g=32012;else g=31992}else if((f|0)==5){a=c[e>>2]|0;if(ky(31704,a,5)|0)if(ky(31728,a,5)|0)if(ky(31736,a,5)|0)if(ky(31744,a,5)|0)if(ky(31752,a,5)|0)if(!(ky(31760,a,5)|0))g=31972;else{d=-46;return d|0}else g=31952;else g=31932;else g=31912;else g=31892;else g=31852}else if((f|0)==10)if(!(ky(31816,c[e>>2]|0,10)|0))g=32052;else{d=-46;return d|0}else if((f|0)==8){f=c[e>>2]|0;if(ky(31688,f,8)|0)if(!(ky(31712,f,8)|0))g=31872;else{d=-46;return d|0}else g=31832}else{d=-46;return d|0}c[b>>2]=c[g+16>>2];d=0;return d|0}function ns(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((a|0)!=1)if((a|0)!=2)if((a|0)!=3)if((a|0)!=4)if((a|0)!=5)if((a|0)!=10)if((a|0)!=11)if((a|0)!=12)if((a|0)!=6)if((a|0)!=7)if((a|0)!=8)if((a|0)==9){e=31816;f=32052}else{g=-46;return g|0}else{e=31800;f=32032}else{e=31784;f=32012}else{e=31768;f=31992}else{e=31760;f=31972}else{e=31752;f=31952}else{e=31744;f=31932}else{e=31736;f=31912}else{e=31728;f=31892}else{e=31712;f=31872}else{e=31704;f=31852}else{e=31688;f=31832}c[b>>2]=e;c[d>>2]=c[f+4>>2];g=0;return g|0}function os(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=-46;return d|0}e=a+8|0;f=c[a+4>>2]|0;if((f|0)==9){a=c[e>>2]|0;if(ky(32120,a,9)|0)if(ky(32136,a,9)|0)if(ky(32152,a,9)|0)if(ky(32168,a,9)|0)if(ky(32184,a,9)|0)if(!(ky(32200,a,9)|0))g=32356;else{d=-46;return d|0}else g=32336;else g=32316;else g=32296;else g=32276;else g=32256}else if((f|0)==8)if(!(ky(32104,c[e>>2]|0,8)|0))g=32236;else{d=-46;return d|0}else if((f|0)==5?(ky(32096,c[e>>2]|0,5)|0)==0:0)g=32216;else{d=-46;return d|0}c[b>>2]=c[g+16>>2];d=0;return d|0}function ps(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((a|0)!=33)if((a|0)!=37)if((a|0)!=5)if((a|0)!=6)if((a|0)!=7)if((a|0)!=14)if((a|0)!=15)if((a|0)==16){e=32200;f=32356}else{g=-46;return g|0}else{e=32184;f=32336}else{e=32168;f=32316}else{e=32152;f=32296}else{e=32136;f=32276}else{e=32120;f=32256}else{e=32104;f=32236}else{e=32096;f=32216}c[b>>2]=e;c[d>>2]=c[f+4>>2];g=0;return g|0}function qs(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=-46;return d|0}e=a+8|0;f=c[a+4>>2]|0;if((f|0)==5)if(!(ky(32448,c[e>>2]|0,5)|0))g=32580;else{d=-46;return d|0}else if((f|0)==9){a=c[e>>2]|0;if(ky(32456,a,9)|0)if(ky(32472,a,9)|0)if(ky(32488,a,9)|0)if(!(ky(32504,a,9)|0))g=32660;else{d=-46;return d|0}else g=32640;else g=32620;else g=32600}else if((f|0)==8){f=c[e>>2]|0;if(ky(32400,f,8)|0)if(ky(32416,f,8)|0)if(!(ky(32432,f,8)|0))g=32560;else{d=-46;return d|0}else g=32540;else g=32520}else{d=-46;return d|0}c[b>>2]=c[g+16>>2];d=0;return d|0}function rs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((a|0)!=1)if((a|0)!=2)if((a|0)!=3)if((a|0)!=4)if((a|0)!=5)if((a|0)!=6)if((a|0)!=7)if((a|0)==8){e=32504;f=32660}else{g=-46;return g|0}else{e=32488;f=32640}else{e=32472;f=32620}else{e=32456;f=32600}else{e=32448;f=32580}else{e=32432;f=32560}else{e=32416;f=32540}else{e=32400;f=32520}c[b>>2]=e;c[d>>2]=c[f+4>>2];g=0;return g|0}function ss(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if(!a){e=-46;return e|0}if((c[a+4>>2]|0)!=10){e=-46;return e|0}f=c[a+8>>2]|0;if(ky(32704,f,10)|0)if(!(ky(32720,f,10)|0))g=32760;else{e=-46;return e|0}else g=32736;c[b>>2]=c[g+16>>2];c[d>>2]=c[g+20>>2];e=0;return e|0}function ts(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;if(!a){d=-46;return d|0}if((c[a+4>>2]|0)!=7){d=-46;return d|0}e=c[a+8>>2]|0;if(ky(32808,e,7)|0)if(!(ky(32816,e,7)|0))f=32844;else{d=-46;return d|0}else f=32824;c[b>>2]=c[f+16>>2];d=0;return d|0}function us(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((a|0)!=1)if((a|0)==2){e=32816;f=32844}else{g=-46;return g|0}else{e=32808;f=32824}c[b>>2]=e;c[d>>2]=c[f+4>>2];g=0;return g|0}function vs(a){a=a|0;if(!a)return;c[a>>2]=0;c[a+4>>2]=0;return}function ws(b){b=b|0;var d=0,e=0;if(!b)return;d=c[b>>2]|0;if(!d)return;e=b+4|0;td[c[d+40>>2]&255](c[e>>2]|0);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;a[e>>0]=0;a[b+5>>0]=0;a[b+6>>0]=0;a[b+7>>0]=0;return}function xs(a){a=a|0;var b=0;if((a|0)==1)b=33760;else if((a|0)==3)b=33856;else if((a|0)==2)b=33808;else if((a|0)==4)b=33904;else b=0;return b|0}function ys(a,b){a=a|0;b=b|0;var d=0,e=0;if((a|0)==0|(b|0)==0){d=-16e3;return d|0}if(c[a>>2]|0){d=-16e3;return d|0}e=sd[c[b+36>>2]&31]()|0;c[a+4>>2]=e;if(!e){d=-16256;return d|0}c[a>>2]=b;d=0;return d|0}function zs(a,b){a=a|0;b=b|0;var d=0,e=0;if(!a){d=0;return d|0}e=c[a>>2]|0;if(!e){d=0;return d|0}d=wd[c[e+12>>2]&127](b)|0;return d|0}function As(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;if(!a){h=-16e3;return h|0}i=c[a>>2]|0;if(!i){h=-16e3;return h|0}do if(!e){j=or(b)|0;if(!j){h=-16e3;return h|0}else{k=(Br(j)|0)&255;l=c[a>>2]|0;m=k;break}}else{l=i;m=e}while(0);e=c[l+16>>2]|0;if(!e){h=-16128;return h|0}h=vd[e&63](c[a+4>>2]|0,b,d,m,f,g)|0;return h|0}function Bs(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0;if(!a){j=-16e3;return j|0}k=c[a>>2]|0;if(!k){j=-16e3;return j|0}do if(!e){l=or(b)|0;if(!l){j=-16e3;return j|0}else{m=(Br(l)|0)&255;n=c[a>>2]|0;o=m;break}}else{n=k;o=e}while(0);e=c[n+20>>2]|0;if(!e){j=-16128;return j|0}j=zd[e&31](c[a+4>>2]|0,b,d,o,f,g,h,i)|0;return j|0}function Cs(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;if(!a){j=-16e3;return j|0}k=c[a>>2]|0;if(!k){j=-16e3;return j|0}l=c[k+24>>2]|0;if(!l){j=-16128;return j|0}j=zd[l&31](c[a+4>>2]|0,b,d,e,f,g,h,i)|0;return j|0}function Ds(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;if(!a){j=-16e3;return j|0}k=c[a>>2]|0;if(!k){j=-16e3;return j|0}l=c[k+28>>2]|0;if(!l){j=-16128;return j|0}j=zd[l&31](c[a+4>>2]|0,b,d,e,f,g,h,i)|0;return j|0}function Es(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=-16e3;return d|0}e=c[a>>2]|0;if((b|0)==0|(e|0)==0){d=-16e3;return d|0}f=c[b>>2]|0;if(!f){d=-16e3;return d|0}g=c[f+32>>2]|0;if(!g){d=-16e3;return d|0}if((c[f>>2]|0)==5){if((c[e>>2]|0)!=1){d=-16128;return d|0}}else if((e|0)!=(f|0)){d=-16128;return d|0}d=Cd[g&63](c[a+4>>2]|0,c[b+4>>2]|0)|0;return d|0}function Fs(a){a=a|0;var b=0,d=0;if(!a){b=0;return b|0}d=c[a>>2]|0;if(!d){b=0;return b|0}b=wd[c[d+8>>2]&127](c[a+4>>2]|0)|0;return b|0}function Gs(a){a=a|0;var b=0,d=0;if((a|0)!=0?(b=c[a>>2]|0,(b|0)!=0):0)d=c[b>>2]|0;else d=0;return d|0}function Hs(a){a=a|0;return c[a+4>>2]<<3|0}function Is(a){a=a|0;return ((a|0)==1|(a|0)==6)&1|0}function Js(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=a+4|0;if((c[h>>2]|0)>>>0>g>>>0){i=-17280;return i|0}j=Pt(a,0,0,0,b,e,d,f)|0;if(j){i=j;return i|0}i=(c[h>>2]|0)>>>0<g>>>0?-14592:0;return i|0}function Ks(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[g>>2]=c[a+4>>2];return Nt(a,h,i,1,b,e,d,f)|0}function Ls(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if((c[a+4>>2]|0)!=(d|0)){j=-16512;return j|0}j=Lt(a,h,i,1,f,b,e,g)|0;return j|0}function Ms(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0;j=c[a+4>>2]|0;c[f>>2]=j;if(j>>>0>g>>>0){k=-17408;return k|0}k=Jt(a,h,i,0,d,b,e)|0;return k|0}function Ns(a,b){a=a|0;b=b|0;return Ft(a,b)|0}function Os(){var a=0;a=ry(1,172)|0;if(!a)return a|0;At(a,0,0);return a|0}function Ps(a){a=a|0;Ct(a);qy(a);return}function Qs(a,b){a=a|0;b=b|0;c[b>>2]=1;c[b+4>>2]=33992;c[b+8>>2]=a+8;c[b+12>>2]=1;c[b+16>>2]=34e3;c[b+20>>2]=a+20;return}function Rs(a){a=a|0;return c[a+88>>2]|0}function Ss(a){a=a|0;return ((a|0)==4|(a&-2|0)==2)&1|0}function Ts(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;b=i;i=i+176|0;g=b;Wu(g);h=Uu(g,a)|0;if(!h){a=Tu(g,c,d,e,f)|0;j=(a|0)==-19456?-14592:a}else j=h;Vu(g);i=b;return j|0}function Us(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0;j=i;i=i+176|0;k=j;Wu(k);l=Uu(k,a)|0;if(!l)m=Su(k,b,c,d,e,f,g,h)|0;else m=l;Vu(k);i=j;return m|0}function Vs(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return ru(a,b,c,d,e,f,g,h)|0}function Ws(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return qu(a,b,c,d,e,f,g,h)|0}function Xs(a,b){a=a|0;b=b|0;return Fq(a,b)|0}function Ys(){var a=0;a=ry(1,172)|0;if(!a)return a|0;pq(a);return a|0}function Zs(a){a=a|0;sq(a);qy(a);return}function _s(a,b){a=a|0;b=b|0;c[b>>2]=2;c[b+4>>2]=33984;c[b+8>>2]=a+136;return}function $s(a){a=a|0;return (a&-2|0)==2|0}function at(a){a=a|0;return (a|0)==4|0}function bt(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;b=Tu(a,c,d,e,f)|0;return ((b|0)==-19456?-14592:b)|0}function ct(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return Su(a,b,c,d,e,f,g,h)|0}function dt(){var a=0;a=ry(1,172)|0;if(!a)return a|0;Wu(a);return a|0}function et(a){a=a|0;Vu(a);qy(a);return}function ft(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return -7936}function gt(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0;l=i;i=i+16|0;m=l;c[m>>2]=0;n=ht(a,b,d,e,f,g,h,j,k,m)|0;i=l;return n|0}function ht(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;n=i;i=i+400|0;o=n+68|0;p=n+72|0;q=n+104|0;r=n+368|0;s=n+88|0;t=n;u=n+64|0;c[u>>2]=0;v=Ro(e)|0;if(!v){w=-7936;i=n;return w|0}e=(c[v+8>>2]|0)>>>3;c[m>>2]=0;x=v+16|0;y=c[x>>2]|0;do if(h>>>0<=128){c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;BH(q|0,0,258)|0;z=b+8|0;A=(c[z>>2]|0)+(c[b+4>>2]|0)|0;if((c[b>>2]|0)==48){B=p+4|0;C=On(z,A,B,4)|0;if(!C){D=c[z>>2]|0;c[p+8>>2]=D;c[z>>2]=D+(c[B>>2]|0);D=Pn(z,A,o)|0;if(!D){if((c[z>>2]|0)!=(A|0)){E=-7910;break}}else{F=D;G=7}}else{F=C;G=7}if((G|0)==7?(C=F+-7808|0,(C|0)!=0):0){E=C;break}if(h){C=0;do{a[q+(C<<1|1)>>0]=a[g+C>>0]|0;C=C+1|0}while((C|0)!=(h|0))}C=(h<<1)+2|0;D=p+8|0;A=it(r,e,q,C,c[D>>2]|0,c[B>>2]|0,f,1,c[o>>2]|0)|0;if(!A)if(!y)E=0;else E=it(s,y,q,C,c[D>>2]|0,c[B>>2]|0,f,2,c[o>>2]|0)|0;else E=A}else E=-7906}else E=-8064;while(0);if(E){w=E;i=n;return w|0}To(t);E=Vo(t,v)|0;if(!E){v=Xo(t,r,e<<3,d)|0;if(!v){d=Yo(t,s,c[x>>2]|0)|0;if(!d){x=Zo(t)|0;if(!x){e=$o(t,j,k,l,u)|0;if(!e){k=c[u>>2]|0;c[m>>2]=(c[m>>2]|0)+k;j=(ap(t,l+k|0,u)|0)!=0;c[m>>2]=(c[m>>2]|0)+(c[u>>2]|0);H=j?-7680:0}else H=e}else H=x}else H=d}else H=v}else H=E;a[r>>0]=0;a[r+1>>0]=0;a[r+2>>0]=0;a[r+3>>0]=0;a[r+4>>0]=0;a[r+5>>0]=0;a[r+6>>0]=0;a[r+7>>0]=0;a[r+8>>0]=0;a[r+9>>0]=0;a[r+10>>0]=0;a[r+11>>0]=0;a[r+12>>0]=0;a[r+13>>0]=0;a[r+14>>0]=0;a[r+15>>0]=0;a[r+16>>0]=0;a[r+17>>0]=0;a[r+18>>0]=0;a[r+19>>0]=0;a[r+20>>0]=0;a[r+21>>0]=0;a[r+22>>0]=0;a[r+23>>0]=0;a[r+24>>0]=0;a[r+25>>0]=0;a[r+26>>0]=0;a[r+27>>0]=0;a[r+28>>0]=0;a[r+29>>0]=0;a[r+30>>0]=0;a[r+31>>0]=0;a[s>>0]=0;a[s+1>>0]=0;a[s+2>>0]=0;a[s+3>>0]=0;a[s+4>>0]=0;a[s+5>>0]=0;a[s+6>>0]=0;a[s+7>>0]=0;a[s+8>>0]=0;a[s+9>>0]=0;a[s+10>>0]=0;a[s+11>>0]=0;a[s+12>>0]=0;a[s+13>>0]=0;a[s+14>>0]=0;a[s+15>>0]=0;Uo(t);w=H;i=n;return w|0}function it(b,c,e,f,g,h,j,k,l){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;m=i;i=i+592|0;n=m+464|0;o=m+336|0;p=m+208|0;q=m+80|0;r=m+16|0;s=m;if(c>>>0>128|f>>>0>64|h>>>0>64){t=-8064;i=m;return t|0}u=or(j)|0;if(!u){t=-7936;i=m;return t|0}pr(s);j=rr(s,u,0)|0;if(j){t=j;i=m;return t|0}j=Br(u)|0;v=(j&255)<33?64:128;BH(n|0,k&255|0,v|0)|0;k=v;w=o;while(1){x=k>>>0>h>>>0?h:k;zH(w|0,g|0,x|0)|0;if((k|0)==(x|0))break;else{k=k-x|0;w=w+x|0}}w=j&255;j=v;k=p;while(1){g=j>>>0>f>>>0?f:j;zH(k|0,e|0,g|0)|0;if((j|0)==(g|0))break;else{j=j-g|0;k=k+g|0}}a:do if(c){k=l>>>0>1;j=sr(s)|0;if(!j){e=c;f=b;while(1){g=tr(s,n,v)|0;if(g){y=g;break a}g=tr(s,o,v)|0;if(g){y=g;break a}g=tr(s,p,v)|0;if(g){y=g;break a}g=ur(s,r)|0;if(g){y=g;break a}if(k){g=1;do{h=vr(u,r,w,r)|0;g=g+1|0;if(h){y=h;break a}}while(g>>>0<l>>>0)}g=e>>>0>w>>>0?w:e;zH(f|0,r|0,g|0)|0;h=e;e=e-g|0;f=f+g|0;if((h|0)==(g|0)){y=0;break a}else{z=v;A=q}while(1){g=z>>>0>w>>>0?w:z;zH(A|0,r|0,g|0)|0;if((z|0)==(g|0)){B=v;break}else{z=z-g|0;A=A+g|0}}while(1){if(!B){C=0;D=v;break}B=B+-1|0;g=q+B|0;h=(a[g>>0]|0)+1<<24>>24;a[g>>0]=h;if(h<<24>>24){C=0;D=v;break}}while(1){D=D+-1|0;h=o+D|0;g=(d[q+D>>0]|0)+(d[h>>0]|0)|0;a[h>>0]=g+C;if(!D){E=0;F=v;break}else C=(g+(C&255)|0)>>>8}while(1){F=F+-1|0;g=p+F|0;h=(d[q+F>>0]|0)+(d[g>>0]|0)|0;a[g>>0]=h+E;if(!F)break;else E=(h+(E&255)|0)>>>8}h=sr(s)|0;if(h){y=h;break}}}else y=j}else y=0;while(0);E=128;F=o;while(1){E=E+-1|0;a[F>>0]=0;if(!E){G=128;H=p;break}else F=F+1|0}while(1){G=G+-1|0;a[H>>0]=0;if(!G){I=128;J=q;break}else H=H+1|0}while(1){I=I+-1|0;a[J>>0]=0;if(!I)break;else J=J+1|0}a[r>>0]=0;a[r+1>>0]=0;a[r+2>>0]=0;a[r+3>>0]=0;a[r+4>>0]=0;a[r+5>>0]=0;a[r+6>>0]=0;a[r+7>>0]=0;a[r+8>>0]=0;a[r+9>>0]=0;a[r+10>>0]=0;a[r+11>>0]=0;a[r+12>>0]=0;a[r+13>>0]=0;a[r+14>>0]=0;a[r+15>>0]=0;a[r+16>>0]=0;a[r+17>>0]=0;a[r+18>>0]=0;a[r+19>>0]=0;a[r+20>>0]=0;a[r+21>>0]=0;a[r+22>>0]=0;a[r+23>>0]=0;a[r+24>>0]=0;a[r+25>>0]=0;a[r+26>>0]=0;a[r+27>>0]=0;a[r+28>>0]=0;a[r+29>>0]=0;a[r+30>>0]=0;a[r+31>>0]=0;a[r+32>>0]=0;a[r+33>>0]=0;a[r+34>>0]=0;a[r+35>>0]=0;a[r+36>>0]=0;a[r+37>>0]=0;a[r+38>>0]=0;a[r+39>>0]=0;a[r+40>>0]=0;a[r+41>>0]=0;a[r+42>>0]=0;a[r+43>>0]=0;a[r+44>>0]=0;a[r+45>>0]=0;a[r+46>>0]=0;a[r+47>>0]=0;a[r+48>>0]=0;a[r+49>>0]=0;a[r+50>>0]=0;a[r+51>>0]=0;a[r+52>>0]=0;a[r+53>>0]=0;a[r+54>>0]=0;a[r+55>>0]=0;a[r+56>>0]=0;a[r+57>>0]=0;a[r+58>>0]=0;a[r+59>>0]=0;a[r+60>>0]=0;a[r+61>>0]=0;a[r+62>>0]=0;a[r+63>>0]=0;qr(s);t=y;i=m;return t|0}function jt(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=j;c[k>>2]=0;l=kt(a,b,d,e,f,g,h,k)|0;i=j;return l|0}function kt(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;k=i;i=i+240|0;l=k+16|0;m=k+96|0;n=k+132|0;o=k;p=k+128|0;q=k+136|0;r=k+148|0;s=k+160|0;t=k+4|0;u=k+112|0;v=k+176|0;w=k+208|0;x=k+100|0;y=k+124|0;z=k+32|0;c[n>>2]=0;c[o>>2]=0;A=c[a+8>>2]|0;c[p>>2]=A;B=A+(c[a+4>>2]|0)|0;c[j>>2]=0;if((c[a>>2]|0)!=48){C=-12130;i=k;return C|0}a=Sn(p,B,q,s)|0;if(a){C=a+-12032|0;i=k;return C|0}if((c[q+4>>2]|0)!=9){C=-11904;i=k;return C|0}if(ky(34008,c[q+8>>2]|0,9)|0){C=-11904;i=k;return C|0}q=c[s+8>>2]|0;c[m>>2]=q;a=q+(c[s+4>>2]|0)|0;a:do if((c[s>>2]|0)==48){q=u+4|0;A=On(m,a,q,4)|0;do if(!A){D=c[m>>2]|0;c[u+8>>2]=D;c[m>>2]=D+(c[q>>2]|0);D=Pn(m,a,n)|0;if(!D){if((c[m>>2]|0)!=(a|0)){E=Pn(m,a,o)|0;if(!((E|0)==0|(E|0)==-98)){F=E;G=22;break}if((c[m>>2]|0)!=(a|0)){E=Tn(m,a,l)|0;if(E){F=E;G=22;break}if((c[l+4>>2]|0)!=8){H=-11904;break a}E=c[l+8>>2]|0;if(ky(34024,E,8)|0)if(ky(34040,E,8)|0)if(ky(34056,E,8)|0)if(ky(34072,E,8)|0)if(!(ky(34088,E,8)|0))I=8;else{H=-11904;break a}else I=7;else I=6;else I=5;else I=4;if((c[m>>2]|0)==(a|0))J=I;else{H=-12134;break a}}else J=4}else J=4;K=J}else{F=D;G=22}}else{F=A;G=22}while(0);if((G|0)==22){A=F+-12032|0;if(!A)K=4;else{C=A;i=k;return C|0}}A=or(K)|0;if(!A){C=-11904;i=k;return C|0}D=Sn(p,B,r,t)|0;if(D){C=D+-12032|0;i=k;return C|0}if(os(r,y)|0){C=-11904;i=k;return C|0}D=Ro(c[y>>2]|0)|0;if(!D){C=-11904;i=k;return C|0}c[o>>2]=(c[D+8>>2]|0)>>>3;if((c[t>>2]|0)!=4){C=-12032;i=k;return C|0}E=t+4|0;if((c[E>>2]|0)!=(c[D+16>>2]|0)){C=-12032;i=k;return C|0}pr(x);To(z);zH(w|0,c[t+8>>2]|0,c[E>>2]|0)|0;L=rr(x,A,1)|0;if(!L){A=lt(x,d,e,c[u+8>>2]|0,c[q>>2]|0,c[n>>2]|0,c[o>>2]|0,v)|0;if(!A){M=Vo(z,D)|0;if(!M){D=Xo(z,v,c[o>>2]<<3,b)|0;if(!D){N=(dp(z,w,c[E>>2]|0,f,g,h,j)|0)!=0;O=N?-11776:0}else O=D}else O=M}else O=A}else O=L;qr(x);Uo(z);C=O;i=k;return C|0}else H=-12130;while(0);C=H;i=k;return C|0}function lt(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;l=i;i=i+144|0;m=l+72|0;n=l+8|0;o=l;p=Br(c[b>>2]|0)|0;c[o>>2]=0;a[o+3>>0]=1;if(!j){q=0;i=l;return q|0}r=p&255;s=h>>>0>1;t=p<<24>>24==0;p=j;j=k;a:while(1){k=wr(b,d,e)|0;if(k){q=k;u=22;break}k=xr(b,f,g)|0;if(k){q=k;u=22;break}k=xr(b,o,4)|0;if(k){q=k;u=22;break}k=yr(b,n)|0;if(k){q=k;u=22;break}zH(m|0,n|0,r|0)|0;b:do if(s){if(t){k=1;while(1){v=wr(b,d,e)|0;if(v){q=v;u=22;break a}v=xr(b,m,r)|0;if(v){q=v;u=22;break a}v=yr(b,m)|0;if(v){q=v;u=22;break a}k=k+1|0;if(k>>>0>=h>>>0)break b}}else w=1;do{k=wr(b,d,e)|0;if(k){q=k;u=22;break a}k=xr(b,m,r)|0;if(k){q=k;u=22;break a}k=yr(b,m)|0;if(!k)x=0;else{q=k;u=22;break a}do{k=n+x|0;a[k>>0]=a[k>>0]^a[m+x>>0];x=x+1|0}while((x|0)!=(r|0));w=w+1|0}while(w>>>0<h>>>0)}while(0);k=p>>>0<r>>>0?p:r;zH(j|0,n|0,k|0)|0;v=p;p=p-k|0;j=j+k|0;y=4;do{if(!y)break;y=y+-1|0;z=o+y|0;A=(a[z>>0]|0)+1<<24>>24;a[z>>0]=A}while(A<<24>>24==0);if((v|0)==(k|0)){q=0;u=22;break}}if((u|0)==22){i=l;return q|0}return 0}function mt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;e=i;i=i+32|0;f=e+20|0;g=e+16|0;h=e+4|0;j=e;c[j>>2]=0;k=On(a,b,g,48)|0;if(k){l=k+-15616|0;i=e;return l|0}k=(c[a>>2]|0)+(c[g>>2]|0)|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;b=Sn(a,k,f,h)|0;a:do if(b){m=b+-14976|0;if(m){l=m;i=e;return l|0}}else{do if(!(ks(f,j)|0)){if((c[j>>2]|0)==1){m=c[h>>2]|0;if(!((m|0)==0|(m|0)==5)){n=-14976;break}if(c[h+4>>2]|0){n=-14976;break}}break a}else n=-15488;while(0);l=n;i=e;return l|0}while(0);n=Rn(a,k,g)|0;if(n){l=n+-15104|0;i=e;return l|0}if(((c[a>>2]|0)+(c[g>>2]|0)|0)!=(k|0)){l=-15206;i=e;return l|0}g=xs(c[j>>2]|0)|0;if(!g){l=-15488;i=e;return l|0}n=ys(d,g)|0;if(n){l=n;i=e;return l|0}n=c[j>>2]|0;do if((n|0)!=1)if((n&-2|0)==2){j=d+4|0;g=c[j>>2]|0;if((c[h>>2]|0)==6)if(!(ms(h,f)|0)){b=c[g>>2]|0;m=c[f>>2]|0;if((b|0)==0|(b|0)==(m|0)){b=Mq(g,m)|0;if(b){o=b;break}b=c[j>>2]|0;j=b+136|0;m=c[a>>2]|0;g=xq(b,j,m,k-m|0)|0;if(!g)p=Aq(b,j)|0;else p=g;c[a>>2]=k;q=p;r=36;break}else s=-15616}else s=-14848;else s=-15616;o=s}else o=-15488;else{g=c[d+4>>2]|0;j=On(a,k,f,48)|0;do if(!j)if(((c[a>>2]|0)+(c[f>>2]|0)|0)==(k|0)){b=g+8|0;m=Qn(a,k,b)|0;if(!m){t=Qn(a,k,g+20|0)|0;if(!t){if((c[a>>2]|0)!=(k|0)){u=-15206;break}if(Dt(g)|0){u=-15104;break}c[g+4>>2]=ro(b)|0;u=0;break}else v=t}else v=m;u=v+-15104|0}else u=-15206;else u=j+-15104|0;while(0);q=u;r=36}while(0);if((r|0)==36)if(!q)if((c[a>>2]|0)==(k|0)){l=0;i=e;return l|0}else o=-15206;else o=q;ws(d);l=o;i=e;return l|0}function nt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;h=i;i=i+16|0;j=h+12|0;k=h;jv(k);do if((e|0)!=0?(l=d+(e+-1)|0,(a[l>>0]|0)==0):0){m=kv(k,34104,34136,d,f,g,j)|0;if((m|0)==-4864){n=-15360;break}else if((m|0)==-4224){if(a[l>>0]|0){o=30;break}p=kv(k,34168,34200,d,f,g,j)|0;if(!p){q=xs(2)|0;if(!q){n=-15488;break}r=ys(b,q)|0;if(!r){q=qt(c[b+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0)|0;if(!q)s=0;else{t=q;o=16}}else{t=r;o=16}if((o|0)==16){ws(b);s=t}lv(k);n=s;break}else if((p|0)==-4224){if(a[l>>0]|0){o=30;break}r=kv(k,34232,34264,d,0,0,j)|0;if(!r){q=rt(b,c[k>>2]|0,c[k+4>>2]|0)|0;if(q)ws(b);lv(k);n=q;break}else if((r|0)!=-4224){n=r;break}if(a[l>>0]|0){o=30;break}l=kv(k,34296,34336,d,0,0,j)|0;if((l|0)==-4224){o=30;break}else if(l){n=l;break}l=st(b,c[k>>2]|0,c[k+4>>2]|0,f,g)|0;if(l)ws(b);lv(k);n=l;break}else if((p|0)==-4992){n=-15232;break}else if((p|0)==-4864){n=-15360;break}else{n=p;break}}else if(!m){p=xs(1)|0;if(!p){n=-15488;break}l=ys(b,p)|0;if(!l){p=pt(c[b+4>>2]|0,c[k>>2]|0,c[k+4>>2]|0)|0;if(!p)u=0;else{v=p;o=7}}else{v=l;o=7}if((o|0)==7){ws(b);u=v}lv(k);n=u;break}else if((m|0)==-4992){n=-15232;break}else{n=m;break}}else o=30;while(0);if((o|0)==30){o=st(b,d,e,f,g)|0;if(o){ws(b);if((o|0)!=-15232)if(rt(b,d,e)|0){ws(b);o=xs(1)|0;if(o)if((ys(b,o)|0)==0?(o=b+4|0,(pt(c[o>>2]|0,d,e)|0)!=0):0){ws(b);g=xs(2)|0;if(g)if((ys(b,g)|0)==0?(qt(c[o>>2]|0,d,e)|0)!=0:0){ws(b);n=-15616}else n=0;else n=-15488}else n=0;else n=-15488}else n=0;else n=-15232}else n=0}i=h;return n|0}function ot(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+32|0;g=f+16|0;h=f+12|0;j=f;jv(j);do if(e)if(!(a[d+(e+-1)>>0]|0)){k=kv(j,34376,34408,d,0,0,h)|0;if(!k){l=c[j+4>>2]|0;m=c[j>>2]|0;break}else if((k|0)==-4224){l=e;m=d;break}lv(j);n=k;i=f;return n|0}else{l=e;m=d}else{l=0;m=d}while(0);c[g>>2]=m;d=mt(g,m+l|0,b)|0;lv(j);n=d;i=f;return n|0}function pt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+16|0;f=e+4|0;g=e;c[g>>2]=b;h=On(g,b+d|0,f,48)|0;if(h){j=h+-15616|0;i=e;return j|0}h=(c[g>>2]|0)+(c[f>>2]|0)|0;f=Pn(g,h,a)|0;if(f){j=f+-15616|0;i=e;return j|0}if(c[a>>2]|0){j=-15744;i=e;return j|0}f=a+8|0;d=Qn(g,h,f)|0;if(!d){b=Qn(g,h,a+20|0)|0;if(!b){k=Qn(g,h,a+32|0)|0;if(!k){l=Qn(g,h,a+44|0)|0;if(!l){m=Qn(g,h,a+56|0)|0;if(!m){n=Qn(g,h,a+68|0)|0;if(!n){o=Qn(g,h,a+80|0)|0;if(!o){p=Qn(g,h,a+92|0)|0;if(!p){c[a+4>>2]=ro(f)|0;if((c[g>>2]|0)!=(h|0)){Ct(a);j=-15718;i=e;return j|0}h=Et(a)|0;if(!h){j=0;i=e;return j|0}Ct(a);j=h;i=e;return j|0}else q=p}else q=o}else q=n}else q=m}else q=l}else q=k}else q=b}else q=d;Ct(a);j=q+-15616|0;i=e;return j|0}function qt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;f=i;i=i+32|0;g=f+24|0;h=f+20|0;j=f+16|0;k=f+4|0;l=f;c[l>>2]=d;m=On(l,d+e|0,j,48)|0;if(m){n=m+-15616|0;i=f;return n|0}m=(c[l>>2]|0)+(c[j>>2]|0)|0;e=Pn(l,m,h)|0;if(e){n=e+-15616|0;i=f;return n|0}if((c[h>>2]|0)!=1){n=-15744;i=f;return n|0}h=On(l,m,j,4)|0;if(h){n=h+-15616|0;i=f;return n|0}h=b+124|0;e=vo(h,c[l>>2]|0,c[j>>2]|0)|0;if(e){sq(b);n=e+-15616|0;i=f;return n|0}e=(c[l>>2]|0)+(c[j>>2]|0)|0;c[l>>2]=e;do if((e|0)==(m|0))o=31;else{d=On(l,m,j,160)|0;if(!d)o=12;else if((d|0)!=-98){sq(b);n=d+-15616|0;i=f;return n|0}a:do if((o|0)==12){d=c[l>>2]|0;p=d+(c[j>>2]|0)|0;q=a[d>>0]|0;d=q&255;c[k>>2]=d;do if(q<<24>>24==6){r=k+4|0;s=On(l,p,r,d)|0;if(!s){t=c[l>>2]|0;c[k+8>>2]=t;u=t+(c[r>>2]|0)|0;c[l>>2]=u;if((u|0)!=(p|0)){v=-15718;break}}else{u=s+-15616|0;if(u){v=u;break}}if((c[k>>2]|0)==6)if(!(ms(k,g)|0)){u=c[b>>2]|0;s=c[g>>2]|0;if((u|0)==0|(u|0)==(s|0)){u=Mq(b,s)|0;if(!u)break a;else{v=u;break}}else w=-15616}else w=-14848;else w=-15616;v=w}else v=-15714;while(0);sq(b);n=v;i=f;return n|0}while(0);p=On(l,m,j,161)|0;if((p|0)==-98){o=31;break}else if(p){sq(b);n=p+-15616|0;i=f;return n|0}p=(c[l>>2]|0)+(c[j>>2]|0)|0;d=Rn(l,p,j)|0;if(d){n=d+-15616|0;i=f;return n|0}d=c[l>>2]|0;if((d+(c[j>>2]|0)|0)!=(p|0)){n=-15718;i=f;return n|0}q=b+136|0;u=xq(b,q,d,p-d|0)|0;if(!u)x=Aq(b,q)|0;else x=u;c[l>>2]=p;if(!x){y=b;break}else if((x|0)==-20096){o=31;break}else n=-15616;i=f;return n|0}while(0);if((o|0)==31){o=yq(b,b+136|0,h,b+40|0,0,0)|0;if(!o)y=b;else{sq(b);n=o+-15616|0;i=f;return n|0}}o=zq(y,h)|0;if(!o){n=0;i=f;return n|0}sq(b);n=o;i=f;return n|0}function rt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;e=i;i=i+48|0;f=e+28|0;g=e+24|0;h=e+20|0;j=e+8|0;k=e+4|0;l=e;c[k>>2]=b;c[l>>2]=0;m=On(k,b+d|0,h,48)|0;if(m){n=m+-15616|0;i=e;return n|0}m=(c[k>>2]|0)+(c[h>>2]|0)|0;d=Pn(k,m,g)|0;if(d){n=d+-15616|0;i=e;return n|0}if(c[g>>2]|0){n=-15744;i=e;return n|0};c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;g=Sn(k,m,f,j)|0;a:do if(g){d=g+-14976|0;if(d){o=d;p=14}}else{do if(!(ks(f,l)|0)){if((c[l>>2]|0)==1){d=c[j>>2]|0;if(!((d|0)==0|(d|0)==5)){q=-14976;break}if(c[j+4>>2]|0){q=-14976;break}}break a}else q=-15488;while(0);o=q;p=14}while(0);if((p|0)==14){n=o+-15616|0;i=e;return n|0}o=On(k,m,h,4)|0;if(o){n=o+-15616|0;i=e;return n|0}if(!(c[h>>2]|0)){n=-15712;i=e;return n|0}o=xs(c[l>>2]|0)|0;if(!o){n=-15488;i=e;return n|0}m=ys(a,o)|0;if(m){n=m;i=e;return n|0}m=c[l>>2]|0;if((m|0)==1){l=pt(c[a+4>>2]|0,c[k>>2]|0,c[h>>2]|0)|0;if(!l){n=0;i=e;return n|0}ws(a);n=l;i=e;return n|0}if((m&-2|0)!=2){n=-15488;i=e;return n|0}m=a+4|0;l=c[m>>2]|0;if((c[j>>2]|0)==6)if(!(ms(j,f)|0)){j=c[l>>2]|0;o=c[f>>2]|0;if((j|0)==0|(j|0)==(o|0)){j=Mq(l,o)|0;if(!j){o=qt(c[m>>2]|0,c[k>>2]|0,c[h>>2]|0)|0;if(!o){n=0;i=e;return n|0}else r=o}else r=j}else{s=-15616;p=27}}else{s=-14848;p=27}else{s=-15616;p=27}if((p|0)==27)r=s;ws(a);n=r;i=e;return n|0}function st(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=i;i=i+48|0;j=h+36|0;k=h+32|0;l=h+20|0;m=h+8|0;n=h+4|0;o=h;c[k>>2]=d;if(!g){p=-15360;i=h;return p|0}q=On(k,d+e|0,j,48)|0;if(q){p=q+-15616|0;i=h;return p|0}q=(c[k>>2]|0)+(c[j>>2]|0)|0;e=Sn(k,q,l,m)|0;if(e){p=e+-15616|0;i=h;return p|0}e=On(k,q,j,4)|0;if(e){p=e+-15616|0;i=h;return p|0}e=ry(1,c[j>>2]|0)|0;if(!e){p=-16256;i=h;return p|0}do if(!(ss(l,o,n)|0)){q=gt(m,0,c[n>>2]|0,c[o>>2]|0,f,g,c[k>>2]|0,c[j>>2]|0,e)|0;if(q){qy(e);p=(q|0)==-7680?-15232:q;i=h;return p|0}}else{q=c[l+4>>2]|0;if((q|0)==10){if(!(ky(34440,c[l+8>>2]|0,10)|0)){d=ft(m,0,f,g,c[k>>2]|0,c[j>>2]|0,e)|0;if(d){qy(e);p=d;i=h;return p|0}if((a[e>>0]|0)==48)break;qy(e);p=-15232;i=h;return p|0}}else if((q|0)==9?(ky(34456,c[l+8>>2]|0,9)|0)==0:0){q=jt(m,0,f,g,c[k>>2]|0,c[j>>2]|0,e)|0;if(!q)break;qy(e);p=(q|0)==-11776?-15232:q;i=h;return p|0}qy(e);p=-14720;i=h;return p|0}while(0);k=rt(b,e,c[j>>2]|0)|0;qy(e);p=k;i=h;return p|0}function tt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+144|0;f=e;g=e+4|0;if((Gs(d)|0)!=1){if((Gs(d)|0)!=2){h=-14720;i=e;return h|0}j=c[d+4>>2]|0;c[f>>2]=0;k=wq(j,j+136|0,0,f,g,133)|0;if(!k){j=c[a>>2]|0;if(j>>>0>=b>>>0?(l=c[f>>2]|0,(j-b|0)>>>0>=l>>>0):0){m=j+(0-l)|0;c[a>>2]=m;zH(m|0,g|0,l|0)|0;n=c[f>>2]|0}else n=-108}else n=k;h=n;i=e;return h|0}n=c[d+4>>2]|0;d=Xn(a,b,n+20|0)|0;if((d|0)<0){h=d;i=e;return h|0}k=Xn(a,b,n+8|0)|0;if((k|0)<0){h=k;i=e;return h|0}n=k+d|0;d=Un(a,b,n)|0;if((d|0)<0){h=d;i=e;return h|0}k=Vn(a,b,48)|0;if((k|0)<0){h=k;i=e;return h|0}h=d+n+k|0;i=e;return h|0}function ut(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+32|0;g=f+16|0;h=f+12|0;j=f+8|0;k=f+4|0;l=f;c[j>>2]=d+e;e=tt(j,d,b)|0;if((e|0)<0){m=e;i=f;return m|0}n=c[j>>2]|0;if((n-d|0)<1){m=-108;i=f;return m|0}o=n+-1|0;c[j>>2]=o;a[o>>0]=0;o=e+1|0;e=Un(j,d,o)|0;if((e|0)<0){m=e;i=f;return m|0}n=Vn(j,d,3)|0;if((n|0)<0){m=n;i=f;return m|0}p=e+o+n|0;n=ls(Gs(b)|0,l,k)|0;if(n){m=n;i=f;return m|0}if((Gs(b)|0)==2){n=ns(c[c[b+4>>2]>>2]|0,g,h)|0;if(!n)q=Zn(j,d,c[g>>2]|0,c[h>>2]|0)|0;else q=n;if((q|0)<0){m=q;i=f;return m|0}else r=q}else r=0;q=_n(j,d,c[l>>2]|0,c[k>>2]|0,r)|0;if((q|0)<0){m=q;i=f;return m|0}r=p+q|0;q=Un(j,d,r)|0;if((q|0)<0){m=q;i=f;return m|0}p=Vn(j,d,48)|0;if((p|0)<0){m=p;i=f;return m|0}m=q+r+p|0;i=f;return m|0}function vt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;f=i;i=i+144|0;g=f+140|0;h=f+4|0;j=f;c[j>>2]=d+e;a:do if((Gs(b)|0)==1){e=c[b+4>>2]|0;k=Xn(j,d,e+92|0)|0;if((k|0)>=0){l=Xn(j,d,e+80|0)|0;if((l|0)>=0){m=Xn(j,d,e+68|0)|0;if((m|0)>=0){n=Xn(j,d,e+56|0)|0;if((n|0)>=0){o=Xn(j,d,e+44|0)|0;if((o|0)>=0){p=Xn(j,d,e+32|0)|0;if((p|0)>=0){q=Xn(j,d,e+20|0)|0;if((q|0)>=0){r=Xn(j,d,e+8|0)|0;if((r|0)>=0){e=ao(j,d,0)|0;if((e|0)>=0){s=l+k+m+n+o+p+q+r+e|0;t=Un(j,d,s)|0;if((t|0)>=0){u=Vn(j,d,48)|0;if((u|0)<0)v=u;else v=t+s+u|0}else v=t}else v=e}else v=r}else v=q}else v=p}else v=o}else v=n}else v=m}else v=l}else v=k}else if((Gs(b)|0)==2){k=c[b+4>>2]|0;c[g>>2]=0;l=wq(k,k+136|0,0,g,h,133)|0;do if(!l){m=c[j>>2]|0;if(m>>>0>=d>>>0?(n=c[g>>2]|0,(m-d|0)>>>0>=n>>>0):0){o=m+(0-n)|0;c[j>>2]=o;zH(o|0,h|0,n|0)|0;w=c[g>>2]|0;break}v=-108;break a}else w=l;while(0);if((w|0)>=0){l=c[j>>2]|0;if((l-d|0)>=1){n=l+-1|0;c[j>>2]=n;a[n>>0]=0;n=w+1|0;l=Un(j,d,n)|0;if((l|0)>=0){o=Vn(j,d,3)|0;if((o|0)>=0){m=l+n+o|0;n=Un(j,d,m)|0;if((n|0)>=0){p=Vn(j,d,-95)|0;if((p|0)>=0){q=ns(c[k>>2]|0,g,h)|0;if(!q)x=Zn(j,d,c[g>>2]|0,c[h>>2]|0)|0;else x=q;if((x|0)>=0){q=Un(j,d,x)|0;if((q|0)>=0){r=Vn(j,d,-96)|0;if((r|0)>=0){e=Xn(j,d,k+124|0)|0;if((e|0)>=0){a[c[j>>2]>>0]=4;t=ao(j,d,1)|0;if((t|0)>=0){u=n+m+p+x+q+r+e+t|0;m=Un(j,d,u)|0;if((m|0)>=0){s=Vn(j,d,48)|0;if((s|0)<0)v=s;else v=m+u+s|0}else v=m}else v=t}else v=e}else v=r}else v=q}else v=x}else v=p}else v=n}else v=o}else v=l}else v=-108}else v=w}else v=-14720;while(0);i=f;return v|0}function wt(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;k=i;i=i+192|0;l=k+184|0;m=k+16|0;n=k;o=k+176|0;p=k+180|0;q=k+188|0;r=k+12|0;s=k+164|0;t=k+152|0;u=k+8|0;v=k+4|0;c[n>>2]=d+e;c[o>>2]=0;do if((Gs(b)|0)==1){w=c[b+4>>2]|0;x=Xn(n,d,w+92|0)|0;if((x|0)<0){y=x;i=k;return y|0}z=Xn(n,d,w+80|0)|0;if((z|0)<0){y=z;i=k;return y|0}A=Xn(n,d,w+68|0)|0;if((A|0)<0){y=A;i=k;return y|0}B=Xn(n,d,w+56|0)|0;if((B|0)<0){y=B;i=k;return y|0}C=Xn(n,d,w+44|0)|0;if((C|0)<0){y=C;i=k;return y|0}D=Xn(n,d,w+32|0)|0;if((D|0)<0){y=D;i=k;return y|0}E=Xn(n,d,w+20|0)|0;if((E|0)<0){y=E;i=k;return y|0}F=Xn(n,d,w+8|0)|0;if((F|0)<0){y=F;i=k;return y|0}w=ao(n,d,0)|0;if((w|0)<0){y=w;i=k;return y|0}G=z+x+A+B+C+D+E+F+w|0;w=Un(n,d,G)|0;if((w|0)<0){y=w;i=k;return y|0}F=Vn(n,d,48)|0;if((F|0)<0){y=F;i=k;return y|0}else{H=w+G+F|0;break}}else{if((Gs(b)|0)!=2){y=-14720;i=k;return y|0}F=c[b+4>>2]|0;c[l>>2]=0;G=wq(F,F+136|0,0,l,m,133)|0;do if(!G){w=c[n>>2]|0;if(w>>>0>=d>>>0?(E=c[l>>2]|0,(w-d|0)>>>0>=E>>>0):0){D=w+(0-E)|0;c[n>>2]=D;zH(D|0,m|0,E|0)|0;I=c[l>>2]|0;break}y=-108;i=k;return y|0}else I=G;while(0);if((I|0)<0){y=I;i=k;return y|0}G=c[n>>2]|0;if((G-d|0)<1){y=-108;i=k;return y|0}E=G+-1|0;c[n>>2]=E;a[E>>0]=0;E=I+1|0;G=Un(n,d,E)|0;if((G|0)<0){y=G;i=k;return y|0}D=Vn(n,d,3)|0;if((D|0)<0){y=D;i=k;return y|0}w=G+E+D|0;D=Un(n,d,w)|0;if((D|0)<0){y=D;i=k;return y|0}E=Vn(n,d,-95)|0;if((E|0)<0){y=E;i=k;return y|0}G=Xn(n,d,F+124|0)|0;if((G|0)<0){y=G;i=k;return y|0}a[c[n>>2]>>0]=4;C=ao(n,d,1)|0;if((C|0)<0){y=C;i=k;return y|0}B=D+w+E+G+C|0;C=Un(n,d,B)|0;if((C|0)<0){y=C;i=k;return y|0}G=Vn(n,d,48)|0;if((G|0)<0){y=G;i=k;return y|0}else{H=C+B+G|0;break}}while(0);I=Un(n,d,H)|0;if((I|0)<0){y=I;i=k;return y|0}G=Vn(n,d,4)|0;if((G|0)<0){y=G;i=k;return y|0}B=I+H+G|0;G=ls(Gs(b)|0,p,o)|0;if(G){y=G;i=k;return y|0}if((Gs(b)|0)==2){G=ns(c[c[b+4>>2]>>2]|0,l,m)|0;if(!G)J=Zn(n,d,c[l>>2]|0,c[m>>2]|0)|0;else J=G;if((J|0)<0){y=J;i=k;return y|0}else K=J}else K=0;J=_n(n,d,c[p>>2]|0,c[o>>2]|0,K)|0;if((J|0)<0){y=J;i=k;return y|0}K=ao(n,d,0)|0;if((K|0)<0){y=K;i=k;return y|0}o=B+J+K|0;K=Un(n,d,o)|0;if((K|0)<0){y=K;i=k;return y|0}J=Vn(n,d,48)|0;if((J|0)<0){y=J;i=k;return y|0}B=K+o+J|0;if(!((f|0)!=0&(g|0)!=0&(B|0)!=0)){y=B;i=k;return y|0}c[u>>2]=0;c[v>>2]=h;J=Sn(v,h+j|0,s,t)|0;if(J){y=J+-16e3|0;i=k;return y|0}J=ry(1,B+16|0)|0;if(!J){y=-16256;i=k;return y|0}do if(!(ss(s,r,q)|0)){v=ht(t,1,c[q>>2]|0,c[r>>2]|0,f,g,c[n>>2]|0,B,J,u)|0;if(v){qy(J);y=v;i=k;return y|0}}else{v=c[s+4>>2]|0;if((v|0)==9){if(ky(34456,c[s+8>>2]|0,9)|0)break;o=kt(t,1,f,g,c[n>>2]|0,B,J,u)|0;if(!o)break;qy(J);y=o;i=k;return y|0}else if((v|0)!=10)break;if(!(ky(34440,c[s+8>>2]|0,10)|0)){v=ft(t,1,f,g,c[n>>2]|0,B,J)|0;if(!v){c[u>>2]=B;break}qy(J);y=v;i=k;return y|0}}while(0);B=c[u>>2]|0;u=d+(e-B)|0;c[n>>2]=u;zH(u|0,J|0,B|0)|0;qy(J);J=Un(n,d,B)|0;if((J|0)<0){y=J;i=k;return y|0}u=Vn(n,d,4)|0;if((u|0)<0){y=u;i=k;return y|0}e=Wn(n,d,h,j)|0;if((e|0)<0){y=e;i=k;return y|0}j=J+B+u+e|0;e=Un(n,d,j)|0;if((e|0)<0){y=e;i=k;return y|0}u=Vn(n,d,48)|0;if((u|0)<0){y=u;i=k;return y|0}y=e+j+u|0;i=k;return y|0}function xt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+2096|0;f=e+4|0;g=e;c[g>>2]=0;h=ut(a,f,2086)|0;if((h|0)<0){j=h;i=e;return j|0}j=mv(34472,34504,f+(2086-h)|0,h,b,d,g)|0;i=e;return j|0}function yt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+5712|0;f=e+4|0;g=e;c[g>>2]=0;h=vt(a,f,5707)|0;if((h|0)<0){j=h;i=e;return j|0}if((Gs(a)|0)!=1)if((Gs(a)|0)==2){k=34576;l=34640}else{j=-14720;i=e;return j|0}else{k=34536;l=34608}j=mv(k,l,f+(5707-h)|0,h,b,d,g)|0;i=e;return j|0}function zt(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+5712|0;k=j+4|0;l=j;c[l>>2]=0;m=wt(a,k,5707,e,f,g,h)|0;if((m|0)<0){n=m;i=j;return n|0}h=(e|0)!=0&(f|0)!=0;n=mv(h?34672:34712,h?34744:34784,k+(5707-m)|0,m,b,d,l)|0;i=j;return n|0}function At(a,b,d){a=a|0;b=b|0;d=d|0;BH(a|0,0,168)|0;c[a+164>>2]=b;c[a+168>>2]=d;return}function Bt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+48|0;h=g+36|0;j=g+24|0;k=g+12|0;l=g;if((b|0)==0|e>>>0<128|(f|0)<3){m=-16512;i=g;return m|0}fo(h);fo(j);fo(k);fo(l);n=a+20|0;o=no(n,f)|0;a:do if(!o){f=a+44|0;p=(e+1|0)>>>1;q=a+56|0;r=a+8|0;do{s=No(f,p,0,b,d)|0;if(s){t=s;break a}s=No(q,p,0,b,d)|0;if(s){t=s;break a}if((zo(f,q)|0)<0)ko(f,q);if(zo(f,q)|0){s=Fo(r,f,q)|0;if(s){t=s;break a}if((qo(r)|0)==(e|0)){s=uo(h,f,1)|0;if(s){t=s;break a}s=uo(j,q,1)|0;if(s){t=s;break a}s=Fo(k,h,j)|0;if(s){t=s;break a}s=Jo(l,n,k)|0;if(s){t=s;break a}}}}while((Ao(l,1)|0)!=0);p=a+32|0;s=Lo(p,n,k)|0;if(!s){u=Ho(a+68|0,p,h)|0;if(!u){v=Ho(a+80|0,p,j)|0;if(!v){p=Lo(a+92|0,q,f)|0;if(!p){c[a+4>>2]=((qo(r)|0)+7|0)>>>3;t=0}else t=p}else t=v}else t=u}else t=s}else t=o;while(0);go(h);go(j);go(k);go(l);if(!t){m=0;i=g;return m|0}Ct(a);m=t+-16768|0;i=g;return m|0}function Ct(a){a=a|0;go(a+140|0);go(a+152|0);go(a+128|0);go(a+116|0);go(a+104|0);go(a+92|0);go(a+80|0);go(a+68|0);go(a+56|0);go(a+44|0);go(a+32|0);go(a+20|0);go(a+8|0);return}function Dt(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+8|0;d=c[a+16>>2]|0;if(!d)return -16896;e=a+20|0;f=c[a+28>>2]|0;if(!f)return -16896;if(!(c[d>>2]&1))return -16896;if(!(c[f>>2]&1))return -16896;if((qo(b)|0)>>>0<128)return -16896;if((qo(b)|0)>>>0>8192)return -16896;if((qo(e)|0)>>>0<2)return -16896;else return ((zo(e,b)|0)>>31&16896)+-16896|0;return 0}function Et(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;b=i;i=i+160|0;d=b+132|0;e=b+108|0;f=b+60|0;g=b+48|0;h=b+96|0;j=b+120|0;k=b+144|0;l=b+24|0;m=b+12|0;n=b+72|0;o=b+36|0;p=b+84|0;q=b;r=a+8|0;s=c[a+16>>2]|0;if(!s){t=-16896;i=b;return t|0}u=a+20|0;v=c[a+28>>2]|0;if(!v){t=-16896;i=b;return t|0}if(!(c[s>>2]&1)){t=-16896;i=b;return t|0}if(!(c[v>>2]&1)){t=-16896;i=b;return t|0}if((qo(r)|0)>>>0<128){t=-16896;i=b;return t|0}if((qo(r)|0)>>>0>8192){t=-16896;i=b;return t|0}if((qo(u)|0)>>>0<2){t=-16896;i=b;return t|0}v=((zo(u,r)|0)>>31&16896)+-16896|0;if(v){t=v;i=b;return t|0}v=a+44|0;if(!(c[a+52>>2]|0)){t=-16896;i=b;return t|0}s=a+56|0;if(!(c[a+64>>2]|0)){t=-16896;i=b;return t|0}w=a+32|0;if(!(c[a+40>>2]|0)){t=-16896;i=b;return t|0}fo(d);fo(e);fo(f);fo(g);fo(h);fo(j);fo(k);fo(l);fo(m);fo(n);fo(o);fo(p);fo(q);x=Fo(d,v,s)|0;a:do if(!x){y=Fo(e,w,u)|0;if(!y){z=uo(f,v,1)|0;if(!z){A=uo(g,s,1)|0;if(!A){B=Fo(h,f,g)|0;if(!B){C=Jo(k,u,h)|0;if(!C){D=Jo(l,f,g)|0;if(!D){E=Go(m,n,h,l)|0;if(!E){F=Ho(j,e,m)|0;if(F){G=F;break}F=Ho(o,w,f)|0;if(F){G=F;break}F=Ho(p,w,g)|0;if(F){G=F;break}F=Lo(q,s,v)|0;if(F){G=F;break}do if(!(zo(d,r)|0)){if(zo(o,a+68|0)|0)break;if(zo(p,a+80|0)|0)break;if(zo(q,a+92|0)|0)break;if(Ao(n,0)|0)break;if(Ao(j,1)|0)break;if(!(Ao(k,1)|0)){G=0;break a}}while(0);G=-16896}else G=E}else G=D}else G=C}else G=B}else G=A}else G=z}else G=y}else G=x;while(0);go(d);go(e);go(f);go(g);go(h);go(j);go(k);go(l);go(m);go(n);go(o);go(p);go(q);if((G|0)==-16896){t=-16896;i=b;return t|0}else if(!G){t=0;i=b;return t|0}else{t=G+-16896|0;i=b;return t|0}return 0}function Ft(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=a+8|0;e=c[a+16>>2]|0;if(!e)return -16896;f=a+20|0;g=c[a+28>>2]|0;if(!g)return -16896;if(!(c[e>>2]&1))return -16896;if(!(c[g>>2]&1))return -16896;if((qo(d)|0)>>>0<128)return -16896;if((qo(d)|0)>>>0>8192)return -16896;if((qo(f)|0)>>>0<2)return -16896;if(((zo(f,d)|0)>>31&16896|0)!=16896)return -16896;if(Et(b)|0)return -16896;if(!(zo(d,b+8|0)|0)){d=(zo(f,b+20|0)|0)==0;return (d?0:-16896)|0}else return -16896;return 0}function Gt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0;e=i;i=i+16|0;f=e;fo(f);g=a+4|0;h=vo(f,b,c[g>>2]|0)|0;if(!h){b=a+8|0;if((zo(f,b)|0)<=-1){j=c[g>>2]|0;g=Io(f,f,a+20|0,b,a+104|0)|0;if(!g)k=wo(f,d,j)|0;else k=g}else k=-4}else k=h;go(f);i=e;return ((k|0)==0?0:k+-17024|0)|0}function Ht(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=i;i=i+48|0;h=g+24|0;j=g+12|0;k=g;l=a+44|0;if(!(c[a+52>>2]|0)){i=g;return -16512}m=a+56|0;if(!(c[a+64>>2]|0)){i=g;return -16512}if(!(c[a+40>>2]|0)){i=g;return -16512}fo(h);fo(j);fo(k);n=a+4|0;o=vo(h,e,c[n>>2]|0)|0;a:do if(!o){e=a+8|0;if((zo(h,e)|0)<=-1){p=(b|0)!=0;if(p){q=a+152|0;r=a+140|0;if(!(c[a+160>>2]|0)){s=0;while(1){if((s|0)>10){t=-17536;break a}u=Ko(q,(c[n>>2]|0)+-1|0,b,d)|0;if(u){t=u;break a}u=Jo(r,q,e)|0;if(u){t=u;break a}if(!(Ao(r,1)|0))break;else s=s+1|0}s=Lo(r,q,e)|0;if(s){t=s;break}v=Io(r,r,a+20|0,e,a+104|0)|0}else{s=Fo(r,r,r)|0;if(s){t=s;break}s=Ho(r,r,e)|0;if(s){t=s;break}s=Fo(q,q,q)|0;if(s){t=s;break}v=Ho(q,q,e)|0}if(v){t=v;break}s=Fo(h,h,r)|0;if(s){t=s;break}s=Ho(h,h,e)|0;if(s){t=s;break}}s=Io(j,h,a+68|0,l,a+116|0)|0;if(!s){u=Io(k,h,a+80|0,m,a+128|0)|0;if(!u){w=Eo(h,j,k)|0;if(!w){x=Fo(j,h,a+92|0)|0;if(!x){y=Ho(h,j,l)|0;if(!y){z=Fo(j,h,m)|0;if(!z){A=Do(h,k,j)|0;if(!A){if(p){B=Fo(h,h,a+152|0)|0;if(B){t=B;break}B=Ho(h,h,e)|0;if(B){t=B;break}}t=wo(h,f,c[n>>2]|0)|0}else t=A}else t=z}else t=y}else t=x}else t=w}else t=u}else t=s}else t=-4}else t=o;while(0);go(h);go(j);go(k);i=g;return ((t|0)==0?0:t+-17152|0)|0}function It(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;if((f|0)==1){if((d|0)==0|(c[b+164>>2]|0)!=0){j=-16512;return j|0}}else if(!d){j=-16512;return j|0}k=c[b+4>>2]|0;if(k>>>0<(g+11|0)>>>0){j=-16512;return j|0}l=-3-g+k|0;m=i+1|0;a[i>>0]=0;n=(f|0)==0;f=i+2|0;a:do if(n){a[m>>0]=2;do if(!l){a[f>>0]=0;zH(i+3|0,h|0,g|0)|0}else{o=l;p=f;while(1){o=o+-1|0;q=100;while(1){r=od[d&127](e,p,1)|0;if(a[p>>0]|0){s=r;t=q;break}u=q+-1|0;if((u|0)!=0&(r|0)==0)q=u;else{s=r;t=u;break}}if((s|0)!=0|(t|0)==0){v=s;break}q=p+1|0;if(!o){w=q;x=p;y=17;break}else p=q}if((y|0)==17){a[w>>0]=0;zH(x+2|0,h|0,g|0)|0;if(n)break;else break a}j=v+-17536|0;return j|0}while(0);j=Gt(b,i,i)|0;return j|0}else{a[m>>0]=1;if(!l){z=3;A=f}else{p=k+-1-g|0;BH(f|0,-1,k+-3-g|0)|0;z=p+1|0;A=i+p|0}a[A>>0]=0;zH(i+z|0,h|0,g|0)|0}while(0);j=Ht(b,d,e,i,i)|0;return j|0}function Jt(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if(c[a+164>>2]|0){i=-16640;return i|0}i=It(a,b,d,e,f,g,h)|0;return i|0}function Kt(b,e,f,g,h,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;m=i;i=i+1024|0;n=m;o=(g|0)==1;if(o?(c[b+164>>2]|0)!=0:0){p=-16512;i=m;return p|0}q=c[b+4>>2]|0;if((q+-16|0)>>>0>1008){p=-16512;i=m;return p|0}if(!g)r=Gt(b,j,n)|0;else r=Ht(b,e,f,j,n)|0;if(r){p=r;i=m;return p|0}r=a[n>>0]|0;j=d[n+1>>0]|0;if(o){o=j^2|r&255;f=q+-3|0;if(!f)s=0;else{e=0;b=0;g=0;while(1){t=d[n+(e+2)>>0]|0;g=(0-t&128|t)>>>7^1|g&255;t=((0-g&128|g)>>>7^1)+b|0;e=e+1|0;if((e|0)==(f|0)){s=t;break}else b=t}}u=s;v=o|d[n+(s+2)>>0]}else{s=j^1|r&255;r=q+-3|0;if(!r)w=0;else{j=0;o=0;b=0;while(1){b=(a[n+(j+2)>>0]|0)!=-1|b&255;f=((b|0)==0&1)+o|0;j=j+1|0;if((j|0)==(r|0)){w=f;break}else o=f}}u=w;v=s|d[n+(w+2)>>0]}if((v&255)<<24>>24){p=-16640;i=m;return p|0}v=-3-u+q|0;if(v>>>0>l>>>0){p=-17408;i=m;return p|0}c[h>>2]=v;zH(k|0,n+(u+3)|0,v|0)|0;p=0;i=m;return p|0}function Lt(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if(c[a+164>>2]|0){j=-16640;return j|0}j=Kt(a,b,d,e,f,g,h,i)|0;return j|0}function Mt(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;l=i;i=i+16|0;m=l+4|0;n=l;o=l+8|0;c[m>>2]=0;c[n>>2]=0;if((f|0)==1?(c[b+164>>2]|0)!=0:0){p=-16512;i=l;return p|0}q=b+4|0;r=c[q>>2]|0;s=(g|0)==0;do if(!s){t=or(g)|0;if(!t){p=-16512;i=l;return p|0}if(!(rs(g,n,m)|0)){u=r+-13-(c[m>>2]|0)|0;v=(Br(t)|0)&255;w=u;break}else{p=-16512;i=l;return p|0}}else{v=h;w=r+-3|0}while(0);h=w-v|0;if(h>>>0<8|h>>>0>r>>>0){p=-16512;i=l;return p|0}a[k>>0]=0;a[k+1>>0]=1;BH(k+2|0,-1,h|0)|0;r=k+(h+3)|0;a[k+(h+2)>>0]=0;if(s)zH(r|0,j|0,v|0)|0;else{a[r>>0]=48;r=c[m>>2]|0;a[k+(h+4)>>0]=v+8+r;a[k+(h+5)>>0]=48;a[k+(h+6)>>0]=r+4;a[k+(h+7)>>0]=6;m=h+9|0;a[k+(h+8)>>0]=r;zH(k+m|0,c[n>>2]|0,r|0)|0;n=r+m|0;a[k+n>>0]=5;a[k+(n+1)>>0]=0;a[k+(n+2)>>0]=4;a[k+(n+3)>>0]=v;zH(k+(n+4)|0,j|0,v|0)|0}if(!f){p=Gt(b,k,k)|0;i=l;return p|0}f=c[q>>2]|0;v=ry(1,f)|0;if(!v){p=-16;i=l;return p|0}j=ry(1,f)|0;if(!j){qy(v);p=-16;i=l;return p|0}f=Ht(b,d,e,k,v)|0;if(!f){e=Gt(b,v,j)|0;if(!e){b=c[q>>2]|0;if(!b)x=0;else{d=0;n=0;while(1){m=a[k+n>>0]^a[j+n>>0]|d;n=n+1|0;if(n>>>0>=b>>>0){x=m;break}else d=m}}a[o>>0]=x;if(!(a[o>>0]|0)){zH(k|0,v|0,c[q>>2]|0)|0;y=0}else y=-17152}else y=e}else y=f;qy(v);qy(j);p=y;i=l;return p|0}function Nt(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if(c[a+164>>2]|0){j=-16640;return j|0}j=Mt(a,b,d,e,f,g,h,i)|0;return j|0}function Ot(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;l=i;i=i+1056|0;m=l+20|0;n=l+16|0;o=l+24|0;p=l+12|0;q=l;if((f|0)==1?(c[b+164>>2]|0)!=0:0)r=-16512;else s=3;a:do if((s|0)==3){t=c[b+4>>2]|0;if((t+-16|0)>>>0<=1008){if(!f)u=Gt(b,k,o)|0;else u=Ht(b,d,e,k,o)|0;if(!u){v=o+1|0;c[n>>2]=v;if((a[o>>0]|0)==0?(w=o+2|0,c[n>>2]=w,(a[v>>0]|0)==1):0){v=a[w>>0]|0;if(!(v<<24>>24))x=w;else{y=o+(t+-1)|0;z=w;w=v;while(1){if(!(z>>>0<y>>>0&w<<24>>24==-1)){r=-16640;break a}v=z+1|0;c[n>>2]=v;w=a[v>>0]|0;if(!(w<<24>>24)){x=v;break}else z=v}}z=x+1|0;c[n>>2]=z;w=o-z+t|0;if((g|0)==0&(w|0)==(h|0)){y=(ky(z,j,h)|0)==0;r=y?0:-17280;break}y=or(g)|0;if(y){z=(Br(y)|0)&255;y=x+(w+1)|0;if(((((((((On(n,y,m,48)|0)==0?((c[m>>2]|0)+2|0)==(w|0):0)?(On(n,y,m,48)|0)==0:0)?(z+6+(c[m>>2]|0)|0)==(w|0):0)?(w=q+4|0,(On(n,y,w,6)|0)==0):0)?(v=c[n>>2]|0,c[q+8>>2]=v,c[n>>2]=v+(c[w>>2]|0),w=(qs(q,p)|0)==0,w&(c[p>>2]|0)==(g|0)):0)?(On(n,y,m,5)|0)==0:0)?(w=(On(n,y,m,4)|0)==0,w&(c[m>>2]|0)==(z|0)):0)?(w=c[n>>2]|0,(ky(w,j,z)|0)==0):0){v=w+z|0;c[n>>2]=v;r=(v|0)==(y|0)?0:-17280}else r=-17280}else r=-16512}else r=-16640}else r=u}else r=-16512}while(0);i=l;return r|0}function Pt(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;if(c[a+164>>2]|0){j=-16640;return j|0}j=Ot(a,b,d,e,f,g,h,i)|0;return j|0}function Qt(a){a=a|0;var b=0;b=a;a=b+92|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function Rt(b){b=b|0;var c=0,d=0;if(!b)return;c=92;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function St(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=d+92|0;do{c[d>>2]=c[a>>2];d=d+4|0;a=a+4|0}while((d|0)<(b|0));return}function Tt(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=1732584193;c[a+12>>2]=-271733879;c[a+16>>2]=-1732584194;c[a+20>>2]=271733878;c[a+24>>2]=-1009589776;return}\nfunction Ox(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0,X=0.0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0.0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0.0,qa=0,ra=0.0,sa=0.0,ta=0,ua=0.0,va=0,wa=0.0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0.0,Ha=0,Ia=0,Ja=0,Ka=0,La=0.0,Ma=0,Na=0,Oa=0,Pa=0.0,Qa=0.0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab=0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0,Xb=0,Yb=0,Zb=0,_b=0,$b=0.0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0,yc=0,zc=0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0.0,gd=0.0,hd=0.0,id=0.0,jd=0.0,kd=0.0,ld=0.0,md=0,nd=0,od=0.0,pd=0,qd=0.0,rd=0;g=i;i=i+512|0;h=g;if((e|0)==2){j=53;k=-1074}else if(!e){j=24;k=-149}else if((e|0)==1){j=53;k=-1074}else{l=0.0;i=g;return +l}e=b+4|0;m=b+100|0;do{n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;o=d[n>>0]|0}else o=Qx(b)|0}while((Lx(o)|0)!=0);p=o;do if((p|0)==43|(p|0)==45){o=1-(((p|0)==45&1)<<1)|0;n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;q=d[n>>0]|0;r=o;break}else{q=Qx(b)|0;r=o;break}}else{q=p;r=1}while(0);p=q;q=0;while(1){if((p|32|0)!=(a[80728+q>>0]|0)){s=p;v=q;break}do if(q>>>0<7){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;w=d[o>>0]|0;break}else{w=Qx(b)|0;break}}else w=p;while(0);o=q+1|0;if(o>>>0<8){p=w;q=o}else{s=w;v=o;break}}do if((v|0)==3)x=23;else if((v|0)!=8){w=(f|0)!=0;if(w&v>>>0>3)if((v|0)==8)break;else{x=23;break}do if(!v){if((s|32|0)==110){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;y=d[q>>0]|0}else y=Qx(b)|0;if((y|32|0)!=97)break;q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;z=d[q>>0]|0}else z=Qx(b)|0;if((z|32|0)!=110)break;q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;A=d[q>>0]|0}else A=Qx(b)|0;if((A|0)==40)B=1;else{if(!(c[m>>2]|0)){l=t;i=g;return +l}c[e>>2]=(c[e>>2]|0)+-1;l=t;i=g;return +l}while(1){q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;C=d[q>>0]|0}else C=Qx(b)|0;if(!((C+-48|0)>>>0<10|(C+-65|0)>>>0<26)?!((C|0)==95|(C+-97|0)>>>0<26):0){D=C;F=B;break}B=B+1|0}if((D|0)==41){l=t;i=g;return +l}q=(c[m>>2]|0)==0;if(!q)c[e>>2]=(c[e>>2]|0)+-1;if(!w){c[(_c()|0)>>2]=22;Px(b,0);l=0.0;i=g;return +l}if((F|0)==0|q){l=t;i=g;return +l}q=F;p=c[e>>2]|0;while(1){q=q+-1|0;o=p+-1|0;if(!q){G=o;break}else p=o}c[e>>2]=G;l=t;i=g;return +l}do if((s|0)==48){p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;H=d[p>>0]|0}else H=Qx(b)|0;if((H|32|0)!=120){if(!(c[m>>2]|0)){I=48;break}c[e>>2]=(c[e>>2]|0)+-1;I=48;break}p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;J=d[p>>0]|0;K=0}else{J=Qx(b)|0;K=0}while(1){if((J|0)==46){L=K;x=71;break}else if((J|0)!=48){M=0;N=0;O=0;Q=0;R=J;S=K;T=0;U=0;V=1.0;W=0;X=0.0;break}p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;J=d[p>>0]|0;K=1;continue}else{J=Qx(b)|0;K=1;continue}}if((x|0)==71){p=c[e>>2]|0;if(p>>>0<(c[m>>2]|0)>>>0){c[e>>2]=p+1;Y=d[p>>0]|0}else Y=Qx(b)|0;if((Y|0)==48){p=0;q=0;while(1){o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;Z=d[o>>0]|0}else Z=Qx(b)|0;o=CH(p|0,q|0,-1,-1)|0;n=E;if((Z|0)==48){p=o;q=n}else{M=0;N=0;O=o;Q=n;R=Z;S=1;T=1;U=0;V=1.0;W=0;X=0.0;break}}}else{M=0;N=0;O=0;Q=0;R=Y;S=L;T=1;U=0;V=1.0;W=0;X=0.0}}while(1){q=R+-48|0;p=R|32;if(q>>>0>=10){n=(R|0)==46;if(!(n|(p+-97|0)>>>0<6)){_=N;$=O;ba=M;ca=Q;da=R;ea=S;fa=T;ga=W;ha=X;break}if(n)if(!T){ia=N;ja=M;ka=N;la=M;ma=S;na=1;oa=U;pa=V;qa=W;ra=X}else{_=N;$=O;ba=M;ca=Q;da=46;ea=S;fa=T;ga=W;ha=X;break}else x=83}else x=83;if((x|0)==83){x=0;n=(R|0)>57?p+-87|0:q;do if(!((M|0)<0|(M|0)==0&N>>>0<8)){if((M|0)<0|(M|0)==0&N>>>0<14){sa=V*.0625;ta=U;ua=sa;va=W;wa=X+sa*+(n|0);break}if((U|0)!=0|(n|0)==0){ta=U;ua=V;va=W;wa=X}else{ta=1;ua=V;va=W;wa=X+V*.5}}else{ta=U;ua=V;va=n+(W<<4)|0;wa=X}while(0);n=CH(N|0,M|0,1,0)|0;ia=O;ja=Q;ka=n;la=E;ma=1;na=T;oa=ta;pa=ua;qa=va;ra=wa}n=c[e>>2]|0;if(n>>>0<(c[m>>2]|0)>>>0){c[e>>2]=n+1;M=la;N=ka;O=ia;Q=ja;R=d[n>>0]|0;S=ma;T=na;U=oa;V=pa;W=qa;X=ra;continue}else{M=la;N=ka;O=ia;Q=ja;R=Qx(b)|0;S=ma;T=na;U=oa;V=pa;W=qa;X=ra;continue}}if(!ea){n=(c[m>>2]|0)==0;if(!n)c[e>>2]=(c[e>>2]|0)+-1;if(f){if(!n?(n=c[e>>2]|0,c[e>>2]=n+-1,(fa|0)!=0):0)c[e>>2]=n+-2}else Px(b,0);l=+(r|0)*0.0;i=g;return +l}n=(fa|0)==0;q=n?_:$;p=n?ba:ca;if((ba|0)<0|(ba|0)==0&_>>>0<8){n=_;o=ba;xa=ga;while(1){ya=xa<<4;n=CH(n|0,o|0,1,0)|0;o=E;if(!((o|0)<0|(o|0)==0&n>>>0<8)){za=ya;break}else xa=ya}}else za=ga;do if((da|32|0)==112){xa=my(b,f)|0;n=E;if((xa|0)==0&(n|0)==-2147483648)if(!f){Px(b,0);l=0.0;i=g;return +l}else{if(!(c[m>>2]|0)){Aa=0;Ba=0;break}c[e>>2]=(c[e>>2]|0)+-1;Aa=0;Ba=0;break}else{Aa=xa;Ba=n}}else if(!(c[m>>2]|0)){Aa=0;Ba=0}else{c[e>>2]=(c[e>>2]|0)+-1;Aa=0;Ba=0}while(0);n=DH(q|0,p|0,2)|0;xa=CH(n|0,E|0,-32,-1)|0;n=CH(xa|0,E|0,Aa|0,Ba|0)|0;xa=E;if(!za){l=+(r|0)*0.0;i=g;return +l}if((xa|0)>0|(xa|0)==0&n>>>0>(0-k|0)>>>0){c[(_c()|0)>>2]=34;l=+(r|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;i=g;return +l}o=k+-106|0;ya=((o|0)<0)<<31>>31;if((xa|0)<(ya|0)|(xa|0)==(ya|0)&n>>>0<o>>>0){c[(_c()|0)>>2]=34;l=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;i=g;return +l}if((za|0)>-1){o=n;ya=xa;Ca=za;sa=ha;while(1){Da=!(sa>=.5);Ea=Da&1|Ca<<1;Fa=Ea^1;Ga=sa+(Da?sa:sa+-1.0);Da=CH(o|0,ya|0,-1,-1)|0;Ha=E;if((Ea|0)>-1){o=Da;ya=Ha;Ca=Fa;sa=Ga}else{Ia=Da;Ja=Ha;Ka=Fa;La=Ga;break}}}else{Ia=n;Ja=xa;Ka=za;La=ha}Ca=vH(32,0,k|0,((k|0)<0)<<31>>31|0)|0;ya=CH(Ia|0,Ja|0,Ca|0,E|0)|0;Ca=E;if(0>(Ca|0)|0==(Ca|0)&j>>>0>ya>>>0)if((ya|0)<0){Ma=0;x=124}else{Na=ya;x=122}else{Na=j;x=122}do if((x|0)==122){if((Na|0)<53){Ma=Na;x=124;break}Oa=Na;Pa=+(r|0);Qa=0.0}while(0);if((x|0)==124){sa=+(r|0);Oa=Ma;Pa=sa;Qa=+Sx(+Xx(1.0,84-Ma|0),sa)}xa=(Ka&1|0)==0&(La!=0.0&(Oa|0)<32);sa=Pa*(xa?0.0:La)+(Qa+Pa*+(((xa&1)+Ka|0)>>>0))-Qa;if(!(sa!=0.0))c[(_c()|0)>>2]=34;l=+Yx(sa,Ia);i=g;return +l}else I=s;while(0);xa=k+j|0;n=0-xa|0;ya=I;Ca=0;while(1){if((ya|0)==46){Ra=Ca;x=135;break}else if((ya|0)!=48){Sa=ya;Ta=0;Ua=0;Va=Ca;Wa=0;break}o=c[e>>2]|0;if(o>>>0<(c[m>>2]|0)>>>0){c[e>>2]=o+1;ya=d[o>>0]|0;Ca=1;continue}else{ya=Qx(b)|0;Ca=1;continue}}if((x|0)==135){Ca=c[e>>2]|0;if(Ca>>>0<(c[m>>2]|0)>>>0){c[e>>2]=Ca+1;Xa=d[Ca>>0]|0}else Xa=Qx(b)|0;if((Xa|0)==48){Ca=0;ya=0;while(1){o=CH(Ca|0,ya|0,-1,-1)|0;p=E;q=c[e>>2]|0;if(q>>>0<(c[m>>2]|0)>>>0){c[e>>2]=q+1;Ya=d[q>>0]|0}else Ya=Qx(b)|0;if((Ya|0)==48){Ca=o;ya=p}else{Sa=Ya;Ta=o;Ua=p;Va=1;Wa=1;break}}}else{Sa=Xa;Ta=0;Ua=0;Va=Ra;Wa=1}}c[h>>2]=0;ya=Sa+-48|0;Ca=(Sa|0)==46;a:do if(Ca|ya>>>0<10){p=h+496|0;o=Sa;q=0;Fa=0;Ha=Ca;Da=ya;Ea=Ta;Za=Ua;_a=Va;$a=Wa;ab=0;bb=0;cb=0;b:while(1){do if(Ha)if(!$a){db=q;eb=Fa;fb=q;gb=Fa;hb=_a;ib=1;jb=ab;kb=bb;lb=cb}else{mb=Ea;nb=Za;ob=q;pb=Fa;qb=_a;rb=ab;sb=bb;tb=cb;break b}else{ub=CH(q|0,Fa|0,1,0)|0;vb=E;wb=(o|0)!=48;if((bb|0)>=125){if(!wb){db=Ea;eb=Za;fb=ub;gb=vb;hb=_a;ib=$a;jb=ab;kb=bb;lb=cb;break}c[p>>2]=c[p>>2]|1;db=Ea;eb=Za;fb=ub;gb=vb;hb=_a;ib=$a;jb=ab;kb=bb;lb=cb;break}xb=h+(bb<<2)|0;if(!ab)yb=Da;else yb=o+-48+((c[xb>>2]|0)*10|0)|0;c[xb>>2]=yb;xb=ab+1|0;zb=(xb|0)==9;db=Ea;eb=Za;fb=ub;gb=vb;hb=1;ib=$a;jb=zb?0:xb;kb=(zb&1)+bb|0;lb=wb?ub:cb}while(0);ub=c[e>>2]|0;if(ub>>>0<(c[m>>2]|0)>>>0){c[e>>2]=ub+1;Ab=d[ub>>0]|0}else Ab=Qx(b)|0;Da=Ab+-48|0;Ha=(Ab|0)==46;if(!(Ha|Da>>>0<10)){Bb=Ab;Cb=fb;Db=db;Eb=gb;Fb=eb;Gb=hb;Hb=ib;Ib=jb;Jb=kb;Kb=lb;x=158;break a}else{o=Ab;q=fb;Fa=gb;Ea=db;Za=eb;_a=hb;$a=ib;ab=jb;bb=kb;cb=lb}}Lb=ob;Mb=pb;Nb=mb;Ob=nb;Pb=(qb|0)!=0;Qb=rb;Rb=sb;Sb=tb;x=166}else{Bb=Sa;Cb=0;Db=Ta;Eb=0;Fb=Ua;Gb=Va;Hb=Wa;Ib=0;Jb=0;Kb=0;x=158}while(0);do if((x|0)==158){ya=(Hb|0)==0;Ca=ya?Cb:Db;cb=ya?Eb:Fb;ya=(Gb|0)!=0;if(!((Bb|32|0)==101&ya))if((Bb|0)>-1){Lb=Cb;Mb=Eb;Nb=Ca;Ob=cb;Pb=ya;Qb=Ib;Rb=Jb;Sb=Kb;x=166;break}else{Tb=Cb;Ub=Eb;Vb=ya;Wb=Ca;Xb=cb;Yb=Ib;Zb=Jb;_b=Kb;x=168;break}ya=my(b,f)|0;bb=E;if((ya|0)==0&(bb|0)==-2147483648){if(!f){Px(b,0);$b=0.0;break}if(!(c[m>>2]|0)){ac=0;bc=0}else{c[e>>2]=(c[e>>2]|0)+-1;ac=0;bc=0}}else{ac=ya;bc=bb}bb=CH(ac|0,bc|0,Ca|0,cb|0)|0;cc=bb;dc=Cb;ec=E;fc=Eb;gc=Ib;hc=Jb;ic=Kb;x=170}while(0);if((x|0)==166)if(c[m>>2]|0){c[e>>2]=(c[e>>2]|0)+-1;if(Pb){cc=Nb;dc=Lb;ec=Ob;fc=Mb;gc=Qb;hc=Rb;ic=Sb;x=170}else x=169}else{Tb=Lb;Ub=Mb;Vb=Pb;Wb=Nb;Xb=Ob;Yb=Qb;Zb=Rb;_b=Sb;x=168}if((x|0)==168)if(Vb){cc=Wb;dc=Tb;ec=Xb;fc=Ub;gc=Yb;hc=Zb;ic=_b;x=170}else x=169;do if((x|0)==169){c[(_c()|0)>>2]=22;Px(b,0);$b=0.0}else if((x|0)==170){bb=c[h>>2]|0;if(!bb){$b=+(r|0)*0.0;break}if(((fc|0)<0|(fc|0)==0&dc>>>0<10)&((cc|0)==(dc|0)&(ec|0)==(fc|0))?j>>>0>30|(bb>>>j|0)==0:0){$b=+(r|0)*+(bb>>>0);break}bb=(k|0)/-2|0;cb=((bb|0)<0)<<31>>31;if((ec|0)>(cb|0)|(ec|0)==(cb|0)&cc>>>0>bb>>>0){c[(_c()|0)>>2]=34;$b=+(r|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}bb=k+-106|0;cb=((bb|0)<0)<<31>>31;if((ec|0)<(cb|0)|(ec|0)==(cb|0)&cc>>>0<bb>>>0){c[(_c()|0)>>2]=34;$b=+(r|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if(!gc)jc=hc;else{if((gc|0)<9){bb=h+(hc<<2)|0;cb=c[bb>>2]|0;Ca=gc;while(1){ya=cb*10|0;Ca=Ca+1|0;if((Ca|0)==9){kc=ya;break}else cb=ya}c[bb>>2]=kc}jc=hc+1|0}if((ic|0)<9?(ic|0)<=(cc|0)&(cc|0)<18:0){if((cc|0)==9){$b=+(r|0)*+((c[h>>2]|0)>>>0);break}if((cc|0)<9){$b=+(r|0)*+((c[h>>2]|0)>>>0)/+(c[80744+(8-cc<<2)>>2]|0);break}cb=j+27+(aa(cc,-3)|0)|0;Ca=c[h>>2]|0;if((cb|0)>30|(Ca>>>cb|0)==0){$b=+(r|0)*+(Ca>>>0)*+(c[80744+(cc+-10<<2)>>2]|0);break}}Ca=(cc|0)%9|0;if(!Ca){lc=0;mc=0;nc=cc;oc=jc}else{cb=(cc|0)>-1?Ca:Ca+9|0;Ca=c[80744+(8-cb<<2)>>2]|0;if(jc){ya=1e9/(Ca|0)|0;ab=0;$a=0;_a=0;Za=cc;while(1){Ea=h+(_a<<2)|0;Fa=c[Ea>>2]|0;q=((Fa>>>0)/(Ca>>>0)|0)+$a|0;c[Ea>>2]=q;Ea=aa((Fa>>>0)%(Ca>>>0)|0,ya)|0;Fa=(_a|0)==(ab|0)&(q|0)==0;_a=_a+1|0;q=Fa?Za+-9|0:Za;o=Fa?_a&127:ab;if((_a|0)==(jc|0)){pc=Ea;qc=o;rc=q;break}else{ab=o;$a=Ea;Za=q}}if(!pc){sc=qc;tc=rc;uc=jc}else{c[h+(jc<<2)>>2]=pc;sc=qc;tc=rc;uc=jc+1|0}}else{sc=0;tc=cc;uc=0}lc=sc;mc=0;nc=9-cb+tc|0;oc=uc}c:while(1){Za=h+(lc<<2)|0;if((nc|0)<18){$a=mc;ab=oc;while(1){_a=0;ya=ab+127|0;Ca=ab;while(1){bb=ya&127;q=h+(bb<<2)|0;Ea=DH(c[q>>2]|0,0,29)|0;o=CH(Ea|0,E|0,_a|0,0)|0;Ea=E;if(Ea>>>0>0|(Ea|0)==0&o>>>0>1e9){Fa=JH(o|0,Ea|0,1e9,0)|0;Da=KH(o|0,Ea|0,1e9,0)|0;vc=Da;wc=Fa}else{vc=o;wc=0}c[q>>2]=vc;q=(bb|0)==(lc|0);o=(bb|0)!=(Ca+127&127|0)|q?Ca:(vc|0)==0?bb:Ca;if(q){xc=wc;yc=o;break}else{_a=wc;ya=bb+-1|0;Ca=o}}Ca=$a+-29|0;if(!xc){$a=Ca;ab=yc}else{zc=Ca;Ac=xc;Bc=yc;break}}}else{if((nc|0)==18){Cc=mc;Dc=oc}else{Ec=lc;Fc=mc;Gc=nc;Hc=oc;break}while(1){if((c[Za>>2]|0)>>>0>=9007199){Ec=lc;Fc=Cc;Gc=18;Hc=Dc;break c}ab=0;$a=Dc+127|0;Ca=Dc;while(1){ya=$a&127;_a=h+(ya<<2)|0;o=DH(c[_a>>2]|0,0,29)|0;bb=CH(o|0,E|0,ab|0,0)|0;o=E;if(o>>>0>0|(o|0)==0&bb>>>0>1e9){q=JH(bb|0,o|0,1e9,0)|0;Fa=KH(bb|0,o|0,1e9,0)|0;Ic=Fa;Jc=q}else{Ic=bb;Jc=0}c[_a>>2]=Ic;_a=(ya|0)==(lc|0);bb=(ya|0)!=(Ca+127&127|0)|_a?Ca:(Ic|0)==0?ya:Ca;if(_a){Kc=Jc;Lc=bb;break}else{ab=Jc;$a=ya+-1|0;Ca=bb}}Ca=Cc+-29|0;if(!Kc){Cc=Ca;Dc=Lc}else{zc=Ca;Ac=Kc;Bc=Lc;break}}}Za=lc+127&127;if((Za|0)==(Bc|0)){Ca=Bc+127&127;$a=h+((Bc+126&127)<<2)|0;c[$a>>2]=c[$a>>2]|c[h+(Ca<<2)>>2];Mc=Ca}else Mc=Bc;c[h+(Za<<2)>>2]=Ac;lc=Za;mc=zc;nc=nc+9|0;oc=Mc}d:while(1){Nc=Hc+1&127;cb=h+((Hc+127&127)<<2)|0;Za=Ec;Ca=Fc;$a=Gc;while(1){ab=($a|0)==18;bb=($a|0)>27?9:1;ya=ab^1;Oc=Za;Pc=Ca;while(1){Qc=Oc&127;Rc=(Qc|0)==(Hc|0);do if(!Rc){_a=c[h+(Qc<<2)>>2]|0;if(_a>>>0<9007199){x=220;break}if(_a>>>0>9007199)break;_a=Oc+1&127;if((_a|0)==(Hc|0)){x=220;break}q=c[h+(_a<<2)>>2]|0;if(q>>>0<254740991){x=220;break}if(!(q>>>0>254740991|ya)){Sc=Qc;Tc=Oc;Uc=Pc;Vc=Hc;break d}}else x=220;while(0);if((x|0)==220?(x=0,ab):0){x=221;break d}q=Pc+bb|0;if((Oc|0)==(Hc|0)){Oc=Hc;Pc=q}else{Wc=q;Xc=Oc;break}}ab=(1<<bb)+-1|0;ya=1e9>>>bb;q=Xc;_a=0;Fa=Xc;o=$a;while(1){Da=h+(Fa<<2)|0;Ea=c[Da>>2]|0;Ha=(Ea>>>bb)+_a|0;c[Da>>2]=Ha;Da=aa(Ea&ab,ya)|0;Ea=(Fa|0)==(q|0)&(Ha|0)==0;Fa=Fa+1&127;Ha=Ea?o+-9|0:o;p=Ea?Fa:q;if((Fa|0)==(Hc|0)){Yc=Da;Zc=p;$c=Ha;break}else{q=p;_a=Da;o=Ha}}if(!Yc){Za=Zc;Ca=Wc;$a=$c;continue}if((Nc|0)!=(Zc|0)){ad=Wc;bd=Yc;cd=Zc;dd=$c;break}c[cb>>2]=c[cb>>2]|1;Za=Zc;Ca=Wc;$a=$c}c[h+(Hc<<2)>>2]=bd;Ec=cd;Fc=ad;Gc=dd;Hc=Nc}if((x|0)==221)if(Rc){c[h+(Nc+-1<<2)>>2]=0;Sc=Hc;Tc=Oc;Uc=Pc;Vc=Nc}else{Sc=Qc;Tc=Oc;Uc=Pc;Vc=Hc}sa=+((c[h+(Sc<<2)>>2]|0)>>>0);$a=Tc+1&127;if(($a|0)==(Vc|0)){Ca=Tc+2&127;c[h+(Ca+-1<<2)>>2]=0;ed=Ca}else ed=Vc;Ga=+(r|0);fd=Ga*(sa*1.0e9+ +((c[h+($a<<2)>>2]|0)>>>0));$a=Uc+53|0;Ca=$a-k|0;Za=(Ca|0)<(j|0);cb=Za&1;o=Za?((Ca|0)<0?0:Ca):j;if((o|0)<53){sa=+Sx(+Xx(1.0,105-o|0),fd);gd=+Ux(fd,+Xx(1.0,53-o|0));hd=sa;id=gd;jd=sa+(fd-gd)}else{hd=0.0;id=0.0;jd=fd}_a=Tc+2&127;do if((_a|0)==(ed|0))kd=id;else{q=c[h+(_a<<2)>>2]|0;do if(q>>>0>=5e8){if(q>>>0>5e8){ld=Ga*.75+id;break}if((Tc+3&127|0)==(ed|0)){ld=Ga*.5+id;break}else{ld=Ga*.75+id;break}}else{if((q|0)==0?(Tc+3&127|0)==(ed|0):0){ld=id;break}ld=Ga*.25+id}while(0);if((53-o|0)<=1){kd=ld;break}if(+Ux(ld,1.0)!=0.0){kd=ld;break}kd=ld+1.0}while(0);Ga=jd+kd-hd;do if(($a&2147483647|0)>(-2-xa|0)){if(!(+P(+Ga)>=9007199254740992.0)){md=cb;nd=Uc;od=Ga}else{md=Za&(o|0)==(Ca|0)?0:cb;nd=Uc+1|0;od=Ga*.5}if((nd+50|0)<=(n|0)?!(kd!=0.0&(md|0)!=0):0){pd=nd;qd=od;break}c[(_c()|0)>>2]=34;pd=nd;qd=od}else{pd=Uc;qd=Ga}while(0);$b=+Yx(qd,pd)}while(0);l=$b;i=g;return +l}while(0);if(c[m>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;c[(_c()|0)>>2]=22;Px(b,0);l=0.0;i=g;return +l}while(0);if((x|0)==23){x=(c[m>>2]|0)==0;if(!x)c[e>>2]=(c[e>>2]|0)+-1;if(!(v>>>0<4|(f|0)==0|x)){x=c[e>>2]|0;f=v;while(1){v=x+-1|0;f=f+-1|0;if(f>>>0<=3){rd=v;break}else x=v}c[e>>2]=rd}}l=+(r|0)*u;i=g;return +l}function Px(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a+104>>2]=b;d=c[a+4>>2]|0;e=c[a+8>>2]|0;f=e-d|0;c[a+108>>2]=f;if((b|0)!=0&(f|0)>(b|0)){c[a+100>>2]=d+b;return}else{c[a+100>>2]=e;return}}function Qx(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=b+104|0;f=c[e>>2]|0;if(!((f|0)!=0?(c[b+108>>2]|0)>=(f|0):0))g=3;if((g|0)==3?(f=by(b)|0,(f|0)>=0):0){h=c[e>>2]|0;e=b+8|0;if(h){i=c[e>>2]|0;j=c[b+4>>2]|0;k=i;l=h-(c[b+108>>2]|0)+-1|0;if((k-j|0)>(l|0)){c[b+100>>2]=j+l;m=i}else{n=k;o=i;g=9}}else{i=c[e>>2]|0;n=i;o=i;g=9}if((g|0)==9){c[b+100>>2]=n;m=o}o=c[b+4>>2]|0;if(m){n=b+108|0;c[n>>2]=m+1-o+(c[n>>2]|0)}n=o+-1|0;if((d[n>>0]|0|0)==(f|0)){p=f;return p|0}a[n>>0]=f;p=f;return p|0}c[b+100>>2]=0;p=-1;return p|0}function Rx(a,b){a=+a;b=+b;var d=0,e=0,f=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;h[k>>3]=b;f=c[k+4>>2]&-2147483648|e&2147483647;c[k>>2]=d;c[k+4>>2]=f;return +(+h[k>>3])}function Sx(a,b){a=+a;b=+b;return +(+Rx(a,b))}function Tx(a,b){a=+a;b=+b;var d=0,e=0,f=0,g=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;h[k>>3]=b;f=c[k>>2]|0;g=c[k+4>>2]|0;i=xH(d|0,e|0,52)|0;j=i&2047;i=xH(f|0,g|0,52)|0;l=i&2047;i=e&-2147483648;m=DH(f|0,g|0,1)|0;n=E;if(!((m|0)==0&(n|0)==0)?(o=g&2147483647,!(o>>>0>2146435072|(o|0)==2146435072&f>>>0>0|(j|0)==2047)):0){o=DH(d|0,e|0,1)|0;p=E;if(!(p>>>0>n>>>0|(p|0)==(n|0)&o>>>0>m>>>0))return +((o|0)==(m|0)&(p|0)==(n|0)?a*0.0:a);if(!j){n=DH(d|0,e|0,12)|0;p=E;if((p|0)>-1|(p|0)==-1&n>>>0>4294967295){m=n;n=p;p=0;while(1){o=p+-1|0;m=DH(m|0,n|0,1)|0;n=E;if(!((n|0)>-1|(n|0)==-1&m>>>0>4294967295)){q=o;break}else p=o}}else q=0;p=DH(d|0,e|0,1-q|0)|0;r=p;s=E;t=q}else{r=d;s=e&1048575|1048576;t=j}if(!l){j=DH(f|0,g|0,12)|0;e=E;if((e|0)>-1|(e|0)==-1&j>>>0>4294967295){d=j;j=e;e=0;while(1){q=e+-1|0;d=DH(d|0,j|0,1)|0;j=E;if(!((j|0)>-1|(j|0)==-1&d>>>0>4294967295)){u=q;break}else e=q}}else u=0;e=DH(f|0,g|0,1-u|0)|0;v=e;w=E;x=u}else{v=f;w=g&1048575|1048576;x=l}l=vH(r|0,s|0,v|0,w|0)|0;g=E;f=(g|0)>-1|(g|0)==-1&l>>>0>4294967295;a:do if((t|0)>(x|0)){u=f;e=l;d=g;j=r;q=s;p=t;while(1){if(u)if((j|0)==(v|0)&(q|0)==(w|0))break;else{y=e;z=d}else{y=j;z=q}m=DH(y|0,z|0,1)|0;n=E;o=p+-1|0;A=vH(m|0,n|0,v|0,w|0)|0;B=E;C=(B|0)>-1|(B|0)==-1&A>>>0>4294967295;if((o|0)>(x|0)){u=C;e=A;d=B;j=m;q=n;p=o}else{D=C;F=m;G=n;H=A;I=B;J=o;break a}}K=a*0.0;return +K}else{D=f;F=r;G=s;H=l;I=g;J=t}while(0);if(D)if((F|0)==(v|0)&(G|0)==(w|0)){K=a*0.0;return +K}else{L=I;M=H}else{L=G;M=F}if(L>>>0<1048576|(L|0)==1048576&M>>>0<0){F=M;G=L;H=J;while(1){I=DH(F|0,G|0,1)|0;w=E;v=H+-1|0;if(w>>>0<1048576|(w|0)==1048576&I>>>0<0){F=I;G=w;H=v}else{N=I;O=w;P=v;break}}}else{N=M;O=L;P=J}if((P|0)>0){J=CH(N|0,O|0,0,-1048576)|0;L=E;M=DH(P|0,0,52)|0;Q=L|E;R=J|M}else{M=xH(N|0,O|0,1-P|0)|0;Q=E;R=M}c[k>>2]=R;c[k+4>>2]=Q|i;K=+h[k>>3];return +K}S=a*b;K=S/S;return +K}function Ux(a,b){a=+a;b=+b;return +(+Tx(a,b))}function Vx(a,b){a=+a;b=b|0;var d=0,e=0,f=0,g=0,i=0.0,j=0.0,l=0.0,m=0;h[k>>3]=a;d=c[k>>2]|0;e=c[k+4>>2]|0;f=xH(d|0,e|0,52)|0;g=f&2047;if((g|0)==2047){i=a;return +i}else if(!g){if(a!=0.0){j=+Vx(a*18446744073709551616.0,b);l=j;m=(c[b>>2]|0)+-64|0}else{l=a;m=0}c[b>>2]=m;i=l;return +i}else{c[b>>2]=g+-1022;c[k>>2]=d;c[k+4>>2]=e&-2146435073|1071644672;i=+h[k>>3];return +i}return +(0.0)}function Wx(a,b){a=+a;b=b|0;return +(+Vx(a,b))}function Xx(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,g=0,i=0.0;if((b|0)>1023){d=a*8988465674311579538646525.0e283;e=b+-1023|0;if((e|0)>1023){f=b+-2046|0;g=(f|0)>1023?1023:f;i=d*8988465674311579538646525.0e283}else{g=e;i=d}}else if((b|0)<-1022){d=a*2.2250738585072014e-308;e=b+1022|0;if((e|0)<-1022){f=b+2044|0;g=(f|0)<-1022?-1022:f;i=d*2.2250738585072014e-308}else{g=e;i=d}}else{g=b;i=a}b=DH(g+1023|0,0,52)|0;g=E;c[k>>2]=b;c[k+4>>2]=g;return +(i*+h[k>>3])}function Yx(a,b){a=+a;b=b|0;return +(+Xx(a,b))}function Zx(a,b){a=a|0;b=b|0;var c=0;if(!a)c=0;else c=_x(a,b,0)|0;return c|0}function _x(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if(!b){f=1;return f|0}if(d>>>0<128){a[b>>0]=d;f=1;return f|0}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;f=2;return f|0}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;f=3;return f|0}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;f=4;return f|0}else{c[(_c()|0)>>2]=84;f=-1;return f|0}return 0}function $x(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=b+20|0;d=b+44|0;if((c[e>>2]|0)>>>0>(c[d>>2]|0)>>>0)od[c[b+36>>2]&127](b,0,0)|0;c[b+16>>2]=0;c[b+28>>2]=0;c[e>>2]=0;e=c[b>>2]|0;if(!(e&20)){f=c[d>>2]|0;c[b+8>>2]=f;c[b+4>>2]=f;g=0;return g|0}if(!(e&4)){g=-1;return g|0}c[b>>2]=e|32;g=-1;return g|0}function ay(b){b=b|0;var d=0,e=0,f=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;e=c[b>>2]|0;if(!(e&8)){c[b+8>>2]=0;c[b+4>>2]=0;d=c[b+44>>2]|0;c[b+28>>2]=d;c[b+20>>2]=d;c[b+16>>2]=d+(c[b+48>>2]|0);f=0;return f|0}else{c[b>>2]=e|32;f=-1;return f|0}return 0}function by(a){a=a|0;var b=0,e=0,f=0;b=i;i=i+16|0;e=b;if((c[a+8>>2]|0)==0?($x(a)|0)!=0:0)f=-1;else if((od[c[a+32>>2]&127](a,e,1)|0)==1)f=d[e>>0]|0;else f=-1;i=b;return f|0}function cy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=e+16|0;g=c[f>>2]|0;do if(!g)if(!(ay(e)|0)){h=c[f>>2]|0;break}else{i=0;return i|0}else h=g;while(0);g=e+20|0;f=c[g>>2]|0;if((h-f|0)>>>0<d>>>0){i=od[c[e+36>>2]&127](e,b,d)|0;return i|0}a:do if((a[e+75>>0]|0)>-1){h=d;while(1){if(!h){j=d;k=b;l=f;m=0;break a}n=h+-1|0;if((a[b+n>>0]|0)==10){o=h;break}else h=n}if((od[c[e+36>>2]&127](e,b,o)|0)>>>0<o>>>0){i=o;return i|0}else{j=d-o|0;k=b+o|0;l=c[g>>2]|0;m=o;break}}else{j=d;k=b;l=f;m=0}while(0);zH(l|0,k|0,j|0)|0;c[g>>2]=(c[g>>2]|0)+j;i=m+j|0;return i|0}function dy(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=fy(a,b,d,g)|0;i=f;return e|0}function ey(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+224|0;f=e+120|0;g=e+80|0;h=e;j=e+136|0;k=g;l=k+40|0;do{c[k>>2]=0;k=k+4|0}while((k|0)<(l|0));c[f>>2]=c[d>>2];if((ny(0,b,f,h,g)|0)<0){m=-1;i=e;return m|0}d=a+48|0;if(!(c[d>>2]|0)){k=a+44|0;l=c[k>>2]|0;c[k>>2]=j;n=a+28|0;c[n>>2]=j;o=a+20|0;c[o>>2]=j;c[d>>2]=80;p=a+16|0;c[p>>2]=j+80;j=ny(a,b,f,h,g)|0;if(!l)q=j;else{od[c[a+36>>2]&127](a,0,0)|0;r=(c[o>>2]|0)==0?-1:j;c[k>>2]=l;c[d>>2]=0;c[p>>2]=0;c[n>>2]=0;c[o>>2]=0;q=r}}else q=ny(a,b,f,h,g)|0;m=q;i=e;return m|0}function fy(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+128|0;h=g+112|0;j=g;k=j;l=80776;m=k+112|0;do{c[k>>2]=c[l>>2];k=k+4|0;l=l+4|0}while((k|0)<(m|0));if((d+-1|0)>>>0>2147483646)if(!d){n=h;o=1}else{c[(_c()|0)>>2]=75;p=-1;i=g;return p|0}else{n=b;o=d}d=-2-n|0;b=o>>>0>d>>>0?d:o;c[j+48>>2]=b;o=j+20|0;c[o>>2]=n;c[j+44>>2]=n;d=n+b|0;n=j+16|0;c[n>>2]=d;c[j+28>>2]=d;d=ey(j,e,f)|0;if(!b){p=d;i=g;return p|0}b=c[o>>2]|0;a[b+(((b|0)==(c[n>>2]|0))<<31>>31)>>0]=0;p=d;i=g;return p|0}function gy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0;d=i;i=i+112|0;e=d;f=e;g=f+112|0;do{c[f>>2]=0;f=f+4|0}while((f|0)<(g|0));f=e+4|0;c[f>>2]=a;g=e+8|0;c[g>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Px(e,0);h=+Ox(e,2,1);j=(c[f>>2]|0)-(c[g>>2]|0)+(c[e+108>>2]|0)|0;if(!b){i=d;return +h}c[b>>2]=(j|0)!=0?a+j|0:a;i=d;return +h}function hy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+112|0;f=e;c[f>>2]=0;g=f+4|0;c[g>>2]=a;c[f+44>>2]=a;h=f+8|0;c[h>>2]=(a|0)<0?-1:a+2147483647|0;c[f+76>>2]=-1;Px(f,0);j=Nx(f,d,1,-1,-1)|0;d=E;if(!b){E=d;i=e;return j|0}c[b>>2]=a+((c[g>>2]|0)+(c[f+108>>2]|0)-(c[h>>2]|0));E=d;i=e;return j|0}function iy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;e=i;i=i+112|0;f=e;c[f>>2]=0;g=f+4|0;c[g>>2]=a;c[f+44>>2]=a;h=f+8|0;c[h>>2]=(a|0)<0?-1:a+2147483647|0;c[f+76>>2]=-1;Px(f,0);j=Nx(f,d,1,0,-2147483648)|0;d=E;if(!b){E=d;i=e;return j|0}c[b>>2]=a+((c[g>>2]|0)+(c[f+108>>2]|0)-(c[h>>2]|0));E=d;i=e;return j|0}function jy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=d&255;g=(e|0)!=0;a:do if(g&(b&3|0)!=0){h=d&255;i=e;j=b;while(1){if((a[j>>0]|0)==h<<24>>24){k=i;l=j;m=6;break a}n=j+1|0;o=i+-1|0;p=(o|0)!=0;if(p&(n&3|0)!=0){i=o;j=n}else{q=o;r=p;s=n;m=5;break}}}else{q=e;r=g;s=b;m=5}while(0);if((m|0)==5)if(r){k=q;l=s;m=6}else{t=0;u=s}b:do if((m|0)==6){s=d&255;if((a[l>>0]|0)==s<<24>>24){t=k;u=l}else{q=aa(f,16843009)|0;c:do if(k>>>0>3){r=k;b=l;while(1){g=c[b>>2]^q;if((g&-2139062144^-2139062144)&g+-16843009){v=r;w=b;break}g=b+4|0;e=r+-4|0;if(e>>>0>3){r=e;b=g}else{x=e;y=g;m=11;break c}}z=v;A=w}else{x=k;y=l;m=11}while(0);if((m|0)==11)if(!x){t=0;u=y;break}else{z=x;A=y}while(1){if((a[A>>0]|0)==s<<24>>24){t=z;u=A;break b}q=A+1|0;z=z+-1|0;if(!z){t=0;u=q;break}else A=q}}}while(0);return ((t|0)!=0?u:0)|0}function ky(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!d){e=0;return e|0}else{f=d;g=b;h=c}while(1){c=a[g>>0]|0;b=a[h>>0]|0;if(c<<24>>24!=b<<24>>24){i=c;j=b;break}f=f+-1|0;if(!f){e=0;k=5;break}else{g=g+1|0;h=h+1|0}}if((k|0)==5)return e|0;e=(i&255)-(j&255)|0;return e|0}function ly(b,c){b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=a[b>>0]|0;e=a[c>>0]|0;if(d<<24>>24==0?1:d<<24>>24!=e<<24>>24){f=d;g=e}else{e=b;b=c;do{e=e+1|0;b=b+1|0;c=a[e>>0]|0;d=a[b>>0]|0}while(!(c<<24>>24==0?1:c<<24>>24!=d<<24>>24));f=c;g=d}return (f&255)-(g&255)|0}function my(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;e=a+4|0;f=c[e>>2]|0;g=a+100|0;if(f>>>0<(c[g>>2]|0)>>>0){c[e>>2]=f+1;h=d[f>>0]|0}else h=Qx(a)|0;if((h|0)==43|(h|0)==45){f=(h|0)==45&1;i=c[e>>2]|0;if(i>>>0<(c[g>>2]|0)>>>0){c[e>>2]=i+1;j=d[i>>0]|0}else j=Qx(a)|0;if((b|0)!=0&(j+-48|0)>>>0>9?(c[g>>2]|0)!=0:0){c[e>>2]=(c[e>>2]|0)+-1;k=j;l=f}else{k=j;l=f}}else{k=h;l=0}if((k+-48|0)>>>0>9){if(!(c[g>>2]|0)){m=-2147483648;n=0;E=m;return n|0}c[e>>2]=(c[e>>2]|0)+-1;m=-2147483648;n=0;E=m;return n|0}else{o=k;p=0}while(1){k=o+-48+(p*10|0)|0;h=c[e>>2]|0;if(h>>>0<(c[g>>2]|0)>>>0){c[e>>2]=h+1;q=d[h>>0]|0}else q=Qx(a)|0;if((q+-48|0)>>>0<10&(k|0)<214748364){o=q;p=k}else{r=k;s=q;break}}q=((r|0)<0)<<31>>31;if((s+-48|0)>>>0<10){p=r;o=q;k=s;while(1){h=IH(p|0,o|0,10,0)|0;f=E;j=CH(k|0,((k|0)<0)<<31>>31|0,-48,-1)|0;b=CH(j|0,E|0,h|0,f|0)|0;f=E;h=c[e>>2]|0;if(h>>>0<(c[g>>2]|0)>>>0){c[e>>2]=h+1;t=d[h>>0]|0}else t=Qx(a)|0;if((t+-48|0)>>>0<10&((f|0)<21474836|(f|0)==21474836&b>>>0<2061584302)){p=b;o=f;k=t}else{u=b;v=f;w=t;break}}}else{u=r;v=q;w=s}if((w+-48|0)>>>0<10)do{w=c[e>>2]|0;if(w>>>0<(c[g>>2]|0)>>>0){c[e>>2]=w+1;x=d[w>>0]|0}else x=Qx(a)|0}while((x+-48|0)>>>0<10);if(c[g>>2]|0)c[e>>2]=(c[e>>2]|0)+-1;e=(l|0)!=0;l=vH(0,0,u|0,v|0)|0;m=e?E:v;n=e?l:u;E=m;return n|0}function ny(e,f,g,j,l){e=e|0;f=f|0;g=g|0;j=j|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0.0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0.0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0.0,yb=0.0,zb=0.0,Ab=0.0,Bb=0,Cb=0,Db=0,Eb=0,Fb=0,Gb=0,Hb=0,Ib=0,Jb=0,Kb=0,Lb=0,Mb=0,Nb=0,Ob=0,Pb=0,Qb=0,Rb=0,Sb=0,Tb=0,Ub=0,Vb=0,Wb=0.0,Xb=0,Yb=0,Zb=0,_b=0,$b=0,ac=0,bc=0,cc=0,dc=0,ec=0,fc=0,gc=0,hc=0,ic=0,jc=0,kc=0,lc=0,mc=0,nc=0,oc=0,pc=0,qc=0,rc=0,sc=0,tc=0,uc=0,vc=0,wc=0,xc=0.0,yc=0.0,zc=0.0,Ac=0,Bc=0,Cc=0,Dc=0,Ec=0,Fc=0,Gc=0,Hc=0,Ic=0,Jc=0,Kc=0,Lc=0,Mc=0,Nc=0,Oc=0,Pc=0,Qc=0,Rc=0,Sc=0,Tc=0,Uc=0,Vc=0,Wc=0,Xc=0,Yc=0,Zc=0,$c=0,ad=0,bd=0,cd=0,dd=0,ed=0,fd=0,gd=0,hd=0,jd=0,kd=0,ld=0,md=0,nd=0,od=0,pd=0,qd=0,rd=0,sd=0,td=0,ud=0,vd=0,wd=0,xd=0,yd=0,zd=0,Ad=0,Bd=0,Cd=0,Dd=0,Ed=0,Fd=0,Gd=0,Hd=0,Id=0,Jd=0,Kd=0,Ld=0;m=i;i=i+864|0;n=m+16|0;o=m+8|0;p=m+560|0;q=p;r=m+840|0;s=m+584|0;t=m+520|0;u=m;v=m+852|0;w=(e|0)!=0;x=t+40|0;y=x;z=t+39|0;t=u+4|0;A=u;B=r+12|0;C=r+11|0;r=B;D=r-q|0;F=-2-q|0;G=r+2|0;H=n+288|0;I=p+9|0;J=I;K=p+8|0;L=0;M=0;N=0;O=f;f=0;P=0;a:while(1){do if((N|0)>-1)if((f|0)>(2147483647-N|0)){c[(_c()|0)>>2]=75;Q=-1;break}else{Q=f+N|0;break}else Q=N;while(0);R=a[O>>0]|0;if(!(R<<24>>24)){S=Q;T=P;U=344;break}else{V=R;W=O}while(1){if(V<<24>>24==37){X=W;Y=W;U=9;break}else if(!(V<<24>>24)){Z=W;_=W;break}R=W+1|0;V=a[R>>0]|0;W=R}b:do if((U|0)==9)while(1){U=0;if((a[X+1>>0]|0)!=37){Z=X;_=Y;break b}R=Y+1|0;$=X+2|0;if((a[$>>0]|0)==37){X=$;Y=R;U=9}else{Z=$;_=R;break}}while(0);R=_-O|0;if(w)cy(O,R,e)|0;if((_|0)!=(O|0)){N=Q;O=Z;f=R;continue}$=Z+1|0;ba=a[$>>0]|0;ca=(ba<<24>>24)+-48|0;if(ca>>>0<10){da=(a[Z+2>>0]|0)==36;ea=da?Z+3|0:$;fa=a[ea>>0]|0;ga=da?ca:-1;ha=da?1:P;ia=ea}else{fa=ba;ga=-1;ha=P;ia=$}$=fa<<24>>24;c:do if(($&-32|0)==32){ba=$;ea=fa;da=0;ca=ia;while(1){if(!(1<<ba+-32&75913)){ja=ea;ka=da;la=ca;break c}ma=1<<(ea<<24>>24)+-32|da;na=ca+1|0;oa=a[na>>0]|0;ba=oa<<24>>24;if((ba&-32|0)!=32){ja=oa;ka=ma;la=na;break}else{ea=oa;da=ma;ca=na}}}else{ja=fa;ka=0;la=ia}while(0);do if(ja<<24>>24==42){$=la+1|0;ca=(a[$>>0]|0)+-48|0;if(ca>>>0<10?(a[la+2>>0]|0)==36:0){c[l+(ca<<2)>>2]=10;pa=1;qa=la+3|0;ra=c[j+((a[$>>0]|0)+-48<<3)>>2]|0}else{if(ha){sa=-1;U=363;break a}if(!w){ta=ka;ua=$;va=0;wa=0;break}ca=(c[g>>2]|0)+(4-1)&~(4-1);da=c[ca>>2]|0;c[g>>2]=ca+4;pa=0;qa=$;ra=da}if((ra|0)<0){ta=ka|8192;ua=qa;va=pa;wa=0-ra|0}else{ta=ka;ua=qa;va=pa;wa=ra}}else{da=(ja<<24>>24)+-48|0;if(da>>>0<10){$=la;ca=0;ea=da;while(1){da=(ca*10|0)+ea|0;ba=$+1|0;ea=(a[ba>>0]|0)+-48|0;if(ea>>>0>=10){xa=da;ya=ba;break}else{$=ba;ca=da}}if((xa|0)<0){sa=-1;U=363;break a}else{ta=ka;ua=ya;va=ha;wa=xa}}else{ta=ka;ua=la;va=ha;wa=0}}while(0);d:do if((a[ua>>0]|0)==46){ca=ua+1|0;$=a[ca>>0]|0;if($<<24>>24!=42){ea=($<<24>>24)+-48|0;if(ea>>>0<10){za=ca;Aa=0;Ba=ea}else{Ca=ca;Da=0;break}while(1){ca=(Aa*10|0)+Ba|0;ea=za+1|0;Ba=(a[ea>>0]|0)+-48|0;if(Ba>>>0>=10){Ca=ea;Da=ca;break d}else{za=ea;Aa=ca}}}ca=ua+2|0;ea=(a[ca>>0]|0)+-48|0;if(ea>>>0<10?(a[ua+3>>0]|0)==36:0){c[l+(ea<<2)>>2]=10;Ca=ua+4|0;Da=c[j+((a[ca>>0]|0)+-48<<3)>>2]|0;break}if(va){sa=-1;U=363;break a}if(w){ea=(c[g>>2]|0)+(4-1)&~(4-1);$=c[ea>>2]|0;c[g>>2]=ea+4;Ca=ca;Da=$}else{Ca=ca;Da=0}}else{Ca=ua;Da=-1}while(0);ca=Ca;$=0;while(1){ea=(a[ca>>0]|0)+-65|0;if(ea>>>0>57){sa=-1;U=363;break a}da=ca+1|0;ba=a[80888+($*58|0)+ea>>0]|0;ea=ba&255;if((ea+-1|0)>>>0<8){ca=da;$=ea}else{Ea=da;Fa=ba;Ga=ea;Ha=ca;Ia=$;break}}if(!(Fa<<24>>24)){sa=-1;U=363;break}$=(ga|0)>-1;e:do if(Fa<<24>>24==19)if($){sa=-1;U=363;break a}else{Ja=L;Ka=M;U=62}else{if($){c[l+(ga<<2)>>2]=Ga;ca=j+(ga<<3)|0;Ja=c[ca+4>>2]|0;Ka=c[ca>>2]|0;U=62;break}if(!w){sa=0;U=363;break a}if((Fa&255)>20){La=M;Ma=L}else do switch(Ga|0){case 9:{ca=(c[g>>2]|0)+(4-1)&~(4-1);ea=c[ca>>2]|0;c[g>>2]=ca+4;La=ea;Ma=L;break e;break}case 10:{ea=(c[g>>2]|0)+(4-1)&~(4-1);ca=c[ea>>2]|0;c[g>>2]=ea+4;La=ca;Ma=((ca|0)<0)<<31>>31;break e;break}case 11:{ca=(c[g>>2]|0)+(4-1)&~(4-1);ea=c[ca>>2]|0;c[g>>2]=ca+4;La=ea;Ma=0;break e;break}case 12:{ea=(c[g>>2]|0)+(8-1)&~(8-1);ca=ea;ba=c[ca>>2]|0;da=c[ca+4>>2]|0;c[g>>2]=ea+8;La=ba;Ma=da;break e;break}case 13:{da=(c[g>>2]|0)+(4-1)&~(4-1);ba=c[da>>2]|0;c[g>>2]=da+4;La=ba<<16>>16;Ma=(((ba&65535)<<16>>16|0)<0)<<31>>31;break e;break}case 14:{ba=(c[g>>2]|0)+(4-1)&~(4-1);da=c[ba>>2]|0;c[g>>2]=ba+4;La=da&65535;Ma=0;break e;break}case 15:{da=(c[g>>2]|0)+(4-1)&~(4-1);ba=c[da>>2]|0;c[g>>2]=da+4;La=ba<<24>>24;Ma=(((ba&255)<<24>>24|0)<0)<<31>>31;break e;break}case 16:{ba=(c[g>>2]|0)+(4-1)&~(4-1);da=c[ba>>2]|0;c[g>>2]=ba+4;La=da&255;Ma=0;break e;break}case 17:{da=(c[g>>2]|0)+(8-1)&~(8-1);Na=+h[da>>3];c[g>>2]=da+8;h[k>>3]=Na;La=c[k>>2]|0;Ma=c[k+4>>2]|0;break e;break}case 18:{da=(c[g>>2]|0)+(8-1)&~(8-1);Na=+h[da>>3];c[g>>2]=da+8;h[k>>3]=Na;La=c[k>>2]|0;Ma=c[k+4>>2]|0;break e;break}default:{La=M;Ma=L;break e}}while(0)}while(0);if((U|0)==62){U=0;if(w){La=Ka;Ma=Ja}else{L=Ja;M=Ka;N=Q;O=Ea;f=R;P=va;continue}}$=a[Ha>>0]|0;da=(Ia|0)!=0&($&15|0)==3?$&-33:$;$=ta&-65537;ba=(ta&8192|0)==0?ta:$;f:do switch(da|0){case 110:{switch(Ia|0){case 0:{c[La>>2]=Q;L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a;break}case 1:{c[La>>2]=Q;L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a;break}case 2:{ea=La;c[ea>>2]=Q;c[ea+4>>2]=((Q|0)<0)<<31>>31;L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a;break}case 3:{b[La>>1]=Q;L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a;break}case 4:{a[La>>0]=Q;L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a;break}case 6:{c[La>>2]=Q;L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a;break}case 7:{ea=La;c[ea>>2]=Q;c[ea+4>>2]=((Q|0)<0)<<31>>31;L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a;break}default:{L=Ma;M=La;N=Q;O=Ea;f=R;P=va;continue a}}break}case 112:{Oa=ba|8;Pa=Da>>>0>8?Da:8;Qa=120;U=73;break}case 88:case 120:{Oa=ba;Pa=Da;Qa=da;U=73;break}case 111:{ea=(La|0)==0&(Ma|0)==0;if(ea)Ra=x;else{ca=x;na=La;ma=Ma;while(1){oa=ca+-1|0;a[oa>>0]=na&7|48;na=xH(na|0,ma|0,3)|0;ma=E;if((na|0)==0&(ma|0)==0){Ra=oa;break}else ca=oa}}ca=(ba&8|0)==0|ea;Sa=La;Ta=Ma;Ua=Ra;Va=ba;Wa=Da;Xa=ca&1^1;Ya=ca?81368:81373;U=89;break}case 105:case 100:{if((Ma|0)<0){ca=vH(0,0,La|0,Ma|0)|0;Za=E;_a=ca;$a=1;ab=81368;U=84;break f}if(!(ba&2048)){ca=ba&1;Za=Ma;_a=La;$a=ca;ab=(ca|0)==0?81368:81370;U=84}else{Za=Ma;_a=La;$a=1;ab=81369;U=84}break}case 117:{Za=Ma;_a=La;$a=0;ab=81368;U=84;break}case 99:{a[z>>0]=La;bb=Ma;cb=La;db=z;eb=$;fb=1;gb=0;hb=81368;ib=x;break}case 109:{jb=id(c[(_c()|0)>>2]|0)|0;U=94;break}case 115:{jb=(La|0)!=0?La:81384;U=94;break}case 67:{c[u>>2]=La;c[t>>2]=0;kb=u;lb=A;mb=-1;U=97;break}case 83:{ca=La;if(!Da){nb=La;ob=ca;pb=0;U=102}else{kb=ca;lb=La;mb=Da;U=97}break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{c[k>>2]=La;c[k+4>>2]=Ma;Na=+h[k>>3];c[o>>2]=0;if((Ma|0)>=0)if(!(ba&2048)){ca=ba&1;qb=Na;rb=ca;sb=(ca|0)==0?81393:81398}else{qb=Na;rb=1;sb=81395}else{qb=-Na;rb=1;sb=81392}h[k>>3]=qb;ca=c[k+4>>2]&2146435072;do if(ca>>>0<2146435072|(ca|0)==2146435072&0<0){Na=+Wx(qb,o)*2.0;ma=Na!=0.0;if(ma)c[o>>2]=(c[o>>2]|0)+-1;na=da|32;if((na|0)==97){oa=da&32;tb=(oa|0)==0?sb:sb+9|0;ub=rb|2;vb=12-Da|0;do if(!(Da>>>0>11|(vb|0)==0)){wb=vb;xb=8.0;while(1){wb=wb+-1|0;yb=xb*16.0;if(!wb){zb=yb;break}else xb=yb}if((a[tb>>0]|0)==45){Ab=-(zb+(-Na-zb));break}else{Ab=Na+zb-zb;break}}else Ab=Na;while(0);vb=c[o>>2]|0;wb=(vb|0)<0?0-vb|0:vb;if((wb|0)<0){vb=B;Bb=wb;Cb=((wb|0)<0)<<31>>31;while(1){Db=KH(Bb|0,Cb|0,10,0)|0;Eb=vb+-1|0;a[Eb>>0]=Db|48;Db=JH(Bb|0,Cb|0,10,0)|0;if(Cb>>>0>9|(Cb|0)==9&Bb>>>0>4294967295){vb=Eb;Bb=Db;Cb=E}else{Fb=Eb;Gb=Db;break}}Hb=Fb;Ib=Gb}else{Hb=B;Ib=wb}if(!Ib)Jb=Hb;else{Cb=Hb;Bb=Ib;while(1){vb=Cb+-1|0;a[vb>>0]=(Bb>>>0)%10|0|48;if(Bb>>>0<10){Jb=vb;break}else{Cb=vb;Bb=(Bb>>>0)/10|0}}}if((Jb|0)==(B|0)){a[C>>0]=48;Kb=C}else Kb=Jb;a[Kb+-1>>0]=(c[o>>2]>>31&2)+43;Bb=Kb+-2|0;a[Bb>>0]=da+15;if(!(ba&8))if((Da|0)<1){xb=Ab;Cb=p;while(1){wb=~~xb;vb=Cb+1|0;a[Cb>>0]=d[81352+wb>>0]|oa;xb=(xb-+(wb|0))*16.0;if((vb-q|0)!=1|xb==0.0)Lb=vb;else{a[vb>>0]=46;Lb=Cb+2|0}if(!(xb!=0.0)){Mb=Lb;break}else Cb=Lb}}else{xb=Ab;Cb=p;while(1){vb=~~xb;wb=Cb+1|0;a[Cb>>0]=d[81352+vb>>0]|oa;xb=(xb-+(vb|0))*16.0;if((wb-q|0)==1){a[wb>>0]=46;Nb=Cb+2|0}else Nb=wb;if(!(xb!=0.0)){Mb=Nb;break}else Cb=Nb}}else{xb=Ab;Cb=p;while(1){wb=~~xb;vb=Cb+1|0;a[Cb>>0]=d[81352+wb>>0]|oa;xb=(xb-+(wb|0))*16.0;if((vb-q|0)==1){a[vb>>0]=46;Ob=Cb+2|0}else Ob=vb;if(!(xb!=0.0)){Mb=Ob;break}else Cb=Ob}}Cb=Mb;oa=(Da|0)!=0&(F+Cb|0)<(Da|0)?G+Da-Bb|0:D-Bb+Cb|0;vb=oa+ub|0;wb=ba&73728;Db=(wa|0)>(vb|0);if((wb|0)==0&Db){Eb=wa-vb|0;BH(s|0,32,(Eb>>>0>256?256:Eb)|0)|0;if(Eb>>>0>255){Pb=Eb;do{cy(s,256,e)|0;Pb=Pb+-256|0}while(Pb>>>0>255);Qb=Eb&255}else Qb=Eb;cy(s,Qb,e)|0}cy(tb,ub,e)|0;if((wb|0)==65536&Db){Pb=wa-vb|0;BH(s|0,48,(Pb>>>0>256?256:Pb)|0)|0;if(Pb>>>0>255){Rb=Pb;do{cy(s,256,e)|0;Rb=Rb+-256|0}while(Rb>>>0>255);Sb=Pb&255}else Sb=Pb;cy(s,Sb,e)|0}Rb=Cb-q|0;cy(p,Rb,e)|0;ub=r-Bb|0;tb=oa-ub-Rb|0;if((tb|0)>0){BH(s|0,48,(tb>>>0>256?256:tb)|0)|0;if(tb>>>0>255){Rb=tb;do{cy(s,256,e)|0;Rb=Rb+-256|0}while(Rb>>>0>255);Tb=tb&255}else Tb=tb;cy(s,Tb,e)|0}cy(Bb,ub,e)|0;if((wb|0)==8192&Db){Rb=wa-vb|0;BH(s|0,32,(Rb>>>0>256?256:Rb)|0)|0;if(Rb>>>0>255){oa=Rb;do{cy(s,256,e)|0;oa=oa+-256|0}while(oa>>>0>255);Ub=Rb&255}else Ub=Rb;cy(s,Ub,e)|0}Vb=Db?wa:vb;break}oa=(Da|0)<0?6:Da;if(ma){wb=(c[o>>2]|0)+-28|0;c[o>>2]=wb;Wb=Na*268435456.0;Xb=wb}else{Wb=Na;Xb=c[o>>2]|0}wb=(Xb|0)<0?n:H;ub=wb;xb=Wb;Bb=wb;while(1){tb=~~xb>>>0;c[Bb>>2]=tb;Cb=Bb+4|0;xb=(xb-+(tb>>>0))*1.0e9;if(!(xb!=0.0)){Yb=Cb;break}else Bb=Cb}Bb=c[o>>2]|0;if((Bb|0)>0){ma=Bb;vb=wb;Db=Yb;while(1){Rb=(ma|0)>29?29:ma;Cb=Db+-4|0;do if(Cb>>>0<vb>>>0)Zb=vb;else{tb=0;Pb=Cb;while(1){Eb=DH(c[Pb>>2]|0,0,Rb|0)|0;_b=CH(Eb|0,E|0,tb|0,0)|0;Eb=E;$b=KH(_b|0,Eb|0,1e9,0)|0;c[Pb>>2]=$b;$b=JH(_b|0,Eb|0,1e9,0)|0;Pb=Pb+-4|0;if(Pb>>>0<vb>>>0){ac=$b;break}else tb=$b}if(!ac){Zb=vb;break}tb=vb+-4|0;c[tb>>2]=ac;Zb=tb}while(0);Cb=Db;while(1){if(Cb>>>0<=Zb>>>0){bc=Cb;break}tb=Cb+-4|0;if(!(c[tb>>2]|0))Cb=tb;else{bc=Cb;break}}Cb=(c[o>>2]|0)-Rb|0;c[o>>2]=Cb;if((Cb|0)>0){ma=Cb;vb=Zb;Db=bc}else{cc=Cb;dc=Zb;ec=bc;break}}}else{cc=Bb;dc=wb;ec=Yb}g:do if((cc|0)<0){Db=((oa+25|0)/9|0)+1|0;if((na|0)!=102){vb=cc;ma=dc;Cb=ec;while(1){tb=0-vb|0;Pb=(tb|0)>9?9:tb;do if(ma>>>0<Cb>>>0){tb=(1<<Pb)+-1|0;$b=1e9>>>Pb;Eb=0;_b=ma;while(1){fc=c[_b>>2]|0;c[_b>>2]=(fc>>>Pb)+Eb;gc=aa(fc&tb,$b)|0;_b=_b+4|0;if(_b>>>0>=Cb>>>0){hc=gc;break}else Eb=gc}Eb=(c[ma>>2]|0)==0?ma+4|0:ma;if(!hc){ic=Eb;jc=Cb;break}c[Cb>>2]=hc;ic=Eb;jc=Cb+4|0}else{ic=(c[ma>>2]|0)==0?ma+4|0:ma;jc=Cb}while(0);Eb=(jc-ic>>2|0)>(Db|0)?ic+(Db<<2)|0:jc;vb=(c[o>>2]|0)+Pb|0;c[o>>2]=vb;if((vb|0)>=0){kc=ic;lc=Eb;break g}else{ma=ic;Cb=Eb}}}Cb=wb+(Db<<2)|0;ma=cc;vb=dc;Rb=ec;while(1){Eb=0-ma|0;_b=(Eb|0)>9?9:Eb;do if(vb>>>0<Rb>>>0){Eb=(1<<_b)+-1|0;$b=1e9>>>_b;tb=0;gc=vb;while(1){fc=c[gc>>2]|0;c[gc>>2]=(fc>>>_b)+tb;mc=aa(fc&Eb,$b)|0;gc=gc+4|0;if(gc>>>0>=Rb>>>0){nc=mc;break}else tb=mc}tb=(c[vb>>2]|0)==0?vb+4|0:vb;if(!nc){oc=tb;pc=Rb;break}c[Rb>>2]=nc;oc=tb;pc=Rb+4|0}else{oc=(c[vb>>2]|0)==0?vb+4|0:vb;pc=Rb}while(0);Pb=(pc-ub>>2|0)>(Db|0)?Cb:pc;ma=(c[o>>2]|0)+_b|0;c[o>>2]=ma;if((ma|0)>=0){kc=oc;lc=Pb;break}else{vb=oc;Rb=Pb}}}else{kc=dc;lc=ec}while(0);do if(kc>>>0<lc>>>0){Bb=(ub-kc>>2)*9|0;Rb=c[kc>>2]|0;if(Rb>>>0<10){qc=Bb;break}else{rc=Bb;sc=10}while(1){sc=sc*10|0;Bb=rc+1|0;if(Rb>>>0<sc>>>0){qc=Bb;break}else rc=Bb}}else qc=0;while(0);Rb=(na|0)==103;Bb=(oa|0)!=0;vb=oa-((na|0)!=102?qc:0)+((Bb&Rb)<<31>>31)|0;if((vb|0)<(((lc-ub>>2)*9|0)+-9|0)){ma=vb+9216|0;vb=(ma|0)/9|0;Cb=wb+(vb+-1023<<2)|0;Db=((ma|0)%9|0)+1|0;if((Db|0)<9){ma=10;Pb=Db;while(1){Db=ma*10|0;Pb=Pb+1|0;if((Pb|0)==9){tc=Db;break}else ma=Db}}else tc=10;ma=c[Cb>>2]|0;Pb=(ma>>>0)%(tc>>>0)|0;if((Pb|0)==0?(wb+(vb+-1022<<2)|0)==(lc|0):0){uc=kc;vc=Cb;wc=qc}else U=221;do if((U|0)==221){U=0;xb=(((ma>>>0)/(tc>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;na=(tc|0)/2|0;do if(Pb>>>0<na>>>0)xc=.5;else{if((Pb|0)==(na|0)?(wb+(vb+-1022<<2)|0)==(lc|0):0){xc=1.0;break}xc=1.5}while(0);do if(!rb){yc=xb;zc=xc}else{if((a[sb>>0]|0)!=45){yc=xb;zc=xc;break}yc=-xb;zc=-xc}while(0);na=ma-Pb|0;c[Cb>>2]=na;if(!(yc+zc!=yc)){uc=kc;vc=Cb;wc=qc;break}Db=na+tc|0;c[Cb>>2]=Db;if(Db>>>0>999999999){Db=kc;na=Cb;while(1){tb=na+-4|0;c[na>>2]=0;if(tb>>>0<Db>>>0){gc=Db+-4|0;c[gc>>2]=0;Ac=gc}else Ac=Db;gc=(c[tb>>2]|0)+1|0;c[tb>>2]=gc;if(gc>>>0>999999999){Db=Ac;na=tb}else{Bc=Ac;Cc=tb;break}}}else{Bc=kc;Cc=Cb}na=(ub-Bc>>2)*9|0;Db=c[Bc>>2]|0;if(Db>>>0<10){uc=Bc;vc=Cc;wc=na;break}else{Dc=na;Ec=10}while(1){Ec=Ec*10|0;na=Dc+1|0;if(Db>>>0<Ec>>>0){uc=Bc;vc=Cc;wc=na;break}else Dc=na}}while(0);Cb=vc+4|0;Fc=uc;Gc=wc;Hc=lc>>>0>Cb>>>0?Cb:lc}else{Fc=kc;Gc=qc;Hc=lc}Cb=0-Gc|0;Pb=Hc;while(1){if(Pb>>>0<=Fc>>>0){Ic=0;Jc=Pb;break}ma=Pb+-4|0;if(!(c[ma>>2]|0))Pb=ma;else{Ic=1;Jc=Pb;break}}do if(Rb){Pb=(Bb&1^1)+oa|0;if((Pb|0)>(Gc|0)&(Gc|0)>-5){Kc=da+-1|0;Lc=Pb+-1-Gc|0}else{Kc=da+-2|0;Lc=Pb+-1|0}Pb=ba&8;if(Pb){Mc=Kc;Nc=Lc;Oc=Pb;break}do if(Ic){Pb=c[Jc+-4>>2]|0;if(!Pb){Pc=9;break}if(!((Pb>>>0)%10|0)){Qc=10;Rc=0}else{Pc=0;break}while(1){Qc=Qc*10|0;ma=Rc+1|0;if((Pb>>>0)%(Qc>>>0)|0){Pc=ma;break}else Rc=ma}}else Pc=9;while(0);Pb=((Jc-ub>>2)*9|0)+-9|0;if((Kc|32|0)==102){_b=Pb-Pc|0;ma=(_b|0)<0?0:_b;Mc=Kc;Nc=(Lc|0)<(ma|0)?Lc:ma;Oc=0;break}else{ma=Pb+Gc-Pc|0;Pb=(ma|0)<0?0:ma;Mc=Kc;Nc=(Lc|0)<(Pb|0)?Lc:Pb;Oc=0;break}}else{Mc=da;Nc=oa;Oc=ba&8}while(0);oa=Nc|Oc;ub=(oa|0)!=0&1;Bb=(Mc|32|0)==102;if(Bb){Sc=(Gc|0)>0?Gc:0;Tc=0}else{Rb=(Gc|0)<0?Cb:Gc;if((Rb|0)<0){Pb=B;ma=Rb;_b=((Rb|0)<0)<<31>>31;while(1){vb=KH(ma|0,_b|0,10,0)|0;Db=Pb+-1|0;a[Db>>0]=vb|48;vb=JH(ma|0,_b|0,10,0)|0;if(_b>>>0>9|(_b|0)==9&ma>>>0>4294967295){Pb=Db;ma=vb;_b=E}else{Uc=Db;Vc=vb;break}}Wc=Uc;Xc=Vc}else{Wc=B;Xc=Rb}if(!Xc)Yc=Wc;else{_b=Wc;ma=Xc;while(1){Pb=_b+-1|0;a[Pb>>0]=(ma>>>0)%10|0|48;if(ma>>>0<10){Yc=Pb;break}else{_b=Pb;ma=(ma>>>0)/10|0}}}if((r-Yc|0)<2){ma=Yc;while(1){_b=ma+-1|0;a[_b>>0]=48;if((r-_b|0)<2)ma=_b;else{Zc=_b;break}}}else Zc=Yc;a[Zc+-1>>0]=(Gc>>31&2)+43;ma=Zc+-2|0;a[ma>>0]=Mc;Sc=r-ma|0;Tc=ma}ma=rb+1+Nc+ub+Sc|0;_b=ba&73728;Rb=(wa|0)>(ma|0);if((_b|0)==0&Rb){Pb=wa-ma|0;BH(s|0,32,(Pb>>>0>256?256:Pb)|0)|0;if(Pb>>>0>255){Cb=Pb;do{cy(s,256,e)|0;Cb=Cb+-256|0}while(Cb>>>0>255);$c=Pb&255}else $c=Pb;cy(s,$c,e)|0}cy(sb,rb,e)|0;if((_b|0)==65536&Rb){Cb=wa-ma|0;BH(s|0,48,(Cb>>>0>256?256:Cb)|0)|0;if(Cb>>>0>255){ub=Cb;do{cy(s,256,e)|0;ub=ub+-256|0}while(ub>>>0>255);ad=Cb&255}else ad=Cb;cy(s,ad,e)|0}if(Bb){ub=Fc>>>0>wb>>>0?wb:Fc;Pb=ub;while(1){vb=c[Pb>>2]|0;if(!vb)bd=I;else{Db=I;na=vb;while(1){vb=Db+-1|0;a[vb>>0]=(na>>>0)%10|0|48;if(na>>>0<10){bd=vb;break}else{Db=vb;na=(na>>>0)/10|0}}}do if((Pb|0)==(ub|0)){if((bd|0)!=(I|0)){cd=bd;break}a[K>>0]=48;cd=K}else{if(bd>>>0>p>>>0)dd=bd;else{cd=bd;break}while(1){na=dd+-1|0;a[na>>0]=48;if(na>>>0>p>>>0)dd=na;else{cd=na;break}}}while(0);cy(cd,J-cd|0,e)|0;na=Pb+4|0;if(na>>>0>wb>>>0){ed=na;break}else Pb=na}if(oa)cy(81448,1,e)|0;if((Nc|0)>0&ed>>>0<Jc>>>0){Pb=Nc;wb=ed;while(1){ub=c[wb>>2]|0;if(ub){Bb=I;Cb=ub;while(1){ub=Bb+-1|0;a[ub>>0]=(Cb>>>0)%10|0|48;if(Cb>>>0<10){fd=ub;break}else{Bb=ub;Cb=(Cb>>>0)/10|0}}if(fd>>>0>p>>>0){gd=fd;U=289}else hd=fd}else{gd=I;U=289}if((U|0)==289)while(1){U=0;Cb=gd+-1|0;a[Cb>>0]=48;if(Cb>>>0>p>>>0){gd=Cb;U=289}else{hd=Cb;break}}Cb=(Pb|0)>9;cy(hd,Cb?9:Pb,e)|0;wb=wb+4|0;Bb=Pb+-9|0;if(!(Cb&wb>>>0<Jc>>>0)){jd=Bb;break}else Pb=Bb}}else jd=Nc;if((jd|0)>0){BH(s|0,48,(jd>>>0>256?256:jd)|0)|0;if(jd>>>0>255){Pb=jd;do{cy(s,256,e)|0;Pb=Pb+-256|0}while(Pb>>>0>255);kd=jd&255}else kd=jd;cy(s,kd,e)|0}}else{Pb=Ic?Jc:Fc+4|0;do if((Nc|0)>-1){wb=(Oc|0)==0;oa=Nc;Bb=Fc;while(1){Cb=c[Bb>>2]|0;if(Cb){ub=I;na=Cb;while(1){Cb=ub+-1|0;a[Cb>>0]=(na>>>0)%10|0|48;if(na>>>0<10){ld=ub;md=Cb;break}else{ub=Cb;na=(na>>>0)/10|0}}if((md|0)!=(I|0)){nd=ld;od=md}else U=303}else U=303;if((U|0)==303){U=0;a[K>>0]=48;nd=I;od=K}do if((Bb|0)==(Fc|0)){cy(od,1,e)|0;if(wb&(oa|0)<1){pd=nd;break}cy(81448,1,e)|0;pd=nd}else{if(od>>>0>p>>>0)qd=od;else{pd=od;break}while(1){na=qd+-1|0;a[na>>0]=48;if(na>>>0>p>>>0)qd=na;else{pd=na;break}}}while(0);na=J-pd|0;cy(pd,(oa|0)>(na|0)?na:oa,e)|0;ub=oa-na|0;Bb=Bb+4|0;if(!(Bb>>>0<Pb>>>0&(ub|0)>-1)){rd=ub;break}else oa=ub}if((rd|0)<=0)break;BH(s|0,48,(rd>>>0>256?256:rd)|0)|0;if(rd>>>0>255){oa=rd;do{cy(s,256,e)|0;oa=oa+-256|0}while(oa>>>0>255);sd=rd&255}else sd=rd;cy(s,sd,e)|0}while(0);cy(Tc,r-Tc|0,e)|0}if((_b|0)==8192&Rb){Pb=wa-ma|0;BH(s|0,32,(Pb>>>0>256?256:Pb)|0)|0;if(Pb>>>0>255){oa=Pb;do{cy(s,256,e)|0;oa=oa+-256|0}while(oa>>>0>255);td=Pb&255}else td=Pb;cy(s,td,e)|0}Vb=Rb?wa:ma}else{oa=(da&32|0)!=0;_b=qb!=qb|0.0!=0.0;Bb=_b?0:rb;wb=_b?(oa?81432:81440):oa?81416:81424;oa=Bb+3|0;_b=(wa|0)>(oa|0);if((ba&8192|0)==0&_b){ub=wa-oa|0;BH(s|0,32,(ub>>>0>256?256:ub)|0)|0;if(ub>>>0>255){na=ub;do{cy(s,256,e)|0;na=na+-256|0}while(na>>>0>255);ud=ub&255}else ud=ub;cy(s,ud,e)|0}cy(sb,Bb,e)|0;cy(wb,3,e)|0;if((ba&73728|0)==8192&_b){na=wa-oa|0;BH(s|0,32,(na>>>0>256?256:na)|0)|0;if(na>>>0>255){ma=na;do{cy(s,256,e)|0;ma=ma+-256|0}while(ma>>>0>255);vd=na&255}else vd=na;cy(s,vd,e)|0}Vb=_b?wa:oa}while(0);L=Ma;M=La;N=Q;O=Ea;f=Vb;P=va;continue a;break}default:{bb=Ma;cb=La;db=O;eb=ba;fb=Da;gb=0;hb=81368;ib=x}}while(0);if((U|0)==73){U=0;da=Qa&32;if(!((La|0)==0&(Ma|0)==0)){R=x;ca=La;ea=Ma;while(1){ma=R+-1|0;a[ma>>0]=d[81352+(ca&15)>>0]|da;ca=xH(ca|0,ea|0,4)|0;ea=E;if((ca|0)==0&(ea|0)==0){wd=ma;break}else R=ma}if(!(Oa&8)){Sa=La;Ta=Ma;Ua=wd;Va=Oa;Wa=Pa;Xa=0;Ya=81368;U=89}else{Sa=La;Ta=Ma;Ua=wd;Va=Oa;Wa=Pa;Xa=2;Ya=81368+(Qa>>4)|0;U=89}}else{Sa=La;Ta=Ma;Ua=x;Va=Oa;Wa=Pa;Xa=0;Ya=81368;U=89}}else if((U|0)==84){U=0;if(Za>>>0>0|(Za|0)==0&_a>>>0>4294967295){R=x;ea=_a;ca=Za;while(1){da=KH(ea|0,ca|0,10,0)|0;ma=R+-1|0;a[ma>>0]=da|48;da=JH(ea|0,ca|0,10,0)|0;if(ca>>>0>9|(ca|0)==9&ea>>>0>4294967295){R=ma;ea=da;ca=E}else{xd=ma;yd=da;break}}zd=xd;Ad=yd}else{zd=x;Ad=_a}if(!Ad){Sa=_a;Ta=Za;Ua=zd;Va=ba;Wa=Da;Xa=$a;Ya=ab;U=89}else{ca=zd;ea=Ad;while(1){R=ca+-1|0;a[R>>0]=(ea>>>0)%10|0|48;if(ea>>>0<10){Sa=_a;Ta=Za;Ua=R;Va=ba;Wa=Da;Xa=$a;Ya=ab;U=89;break}else{ca=R;ea=(ea>>>0)/10|0}}}}else if((U|0)==94){U=0;ea=jy(jb,0,Da)|0;ca=(ea|0)==0;bb=Ma;cb=La;db=jb;eb=$;fb=ca?Da:ea-jb|0;gb=0;hb=81368;ib=ca?jb+Da|0:ea}else if((U|0)==97){U=0;ea=0;ca=0;R=kb;while(1){da=c[R>>2]|0;if(!da){Bd=ea;Cd=ca;break}ma=Zx(v,da)|0;if((ma|0)<0|ma>>>0>(mb-ea|0)>>>0){Bd=ea;Cd=ma;break}da=ma+ea|0;if(mb>>>0>da>>>0){ea=da;ca=ma;R=R+4|0}else{Bd=da;Cd=ma;break}}if((Cd|0)<0){sa=-1;U=363;break}else{nb=lb;ob=kb;pb=Bd;U=102}}if((U|0)==89){U=0;R=(Wa|0)>-1?Va&-65537:Va;ca=(Sa|0)!=0|(Ta|0)!=0;if(ca|(Wa|0)!=0){ea=(ca&1^1)+(y-Ua)|0;bb=Ta;cb=Sa;db=Ua;eb=R;fb=(Wa|0)>(ea|0)?Wa:ea;gb=Xa;hb=Ya;ib=x}else{bb=Ta;cb=Sa;db=x;eb=R;fb=0;gb=Xa;hb=Ya;ib=x}}else if((U|0)==102){U=0;R=ba&73728;ea=(wa|0)>(pb|0);if((R|0)==0&ea){ca=wa-pb|0;BH(s|0,32,(ca>>>0>256?256:ca)|0)|0;if(ca>>>0>255){$=ca;do{cy(s,256,e)|0;$=$+-256|0}while($>>>0>255);Dd=ca&255}else Dd=ca;cy(s,Dd,e)|0}h:do if(pb){$=0;ba=ob;while(1){ma=c[ba>>2]|0;if(!ma)break h;da=Zx(v,ma)|0;$=da+$|0;if(($|0)>(pb|0))break h;cy(v,da,e)|0;if($>>>0>=pb>>>0)break;else ba=ba+4|0}}while(0);if((R|0)==8192&ea){ca=wa-pb|0;BH(s|0,32,(ca>>>0>256?256:ca)|0)|0;if(ca>>>0>255){ba=ca;do{cy(s,256,e)|0;ba=ba+-256|0}while(ba>>>0>255);Ed=ca&255}else Ed=ca;cy(s,Ed,e)|0}L=Ma;M=nb;N=Q;O=Ea;f=ea?wa:pb;P=va;continue}ba=ib-db|0;R=(fb|0)<(ba|0)?ba:fb;$=gb+R|0;da=(wa|0)<($|0)?$:wa;ma=eb&73728;wb=(da|0)>($|0);if((ma|0)==0&wb){Bb=da-$|0;BH(s|0,32,(Bb>>>0>256?256:Bb)|0)|0;if(Bb>>>0>255){ub=Bb;do{cy(s,256,e)|0;ub=ub+-256|0}while(ub>>>0>255);Fd=Bb&255}else Fd=Bb;cy(s,Fd,e)|0}cy(hb,gb,e)|0;if((ma|0)==65536&wb){ub=da-$|0;BH(s|0,48,(ub>>>0>256?256:ub)|0)|0;if(ub>>>0>255){ea=ub;do{cy(s,256,e)|0;ea=ea+-256|0}while(ea>>>0>255);Gd=ub&255}else Gd=ub;cy(s,Gd,e)|0}if((R|0)>(ba|0)){ea=R-ba|0;BH(s|0,48,(ea>>>0>256?256:ea)|0)|0;if(ea>>>0>255){Bb=ea;do{cy(s,256,e)|0;Bb=Bb+-256|0}while(Bb>>>0>255);Hd=ea&255}else Hd=ea;cy(s,Hd,e)|0}cy(db,ba,e)|0;if((ma|0)==8192&wb){Bb=da-$|0;BH(s|0,32,(Bb>>>0>256?256:Bb)|0)|0;if(Bb>>>0>255){R=Bb;do{cy(s,256,e)|0;R=R+-256|0}while(R>>>0>255);Id=Bb&255}else Id=Bb;cy(s,Id,e)|0}L=bb;M=cb;N=Q;O=Ea;f=da;P=va}if((U|0)==344){if(e){sa=S;i=m;return sa|0}if(!T){sa=0;i=m;return sa|0}else Jd=1;while(1){T=c[l+(Jd<<2)>>2]|0;if(!T){Kd=Jd;break}S=j+(Jd<<3)|0;i:do if(T>>>0<=20)do switch(T|0){case 9:{e=(c[g>>2]|0)+(4-1)&~(4-1);va=c[e>>2]|0;c[g>>2]=e+4;c[S>>2]=va;break i;break}case 10:{va=(c[g>>2]|0)+(4-1)&~(4-1);e=c[va>>2]|0;c[g>>2]=va+4;va=S;c[va>>2]=e;c[va+4>>2]=((e|0)<0)<<31>>31;break i;break}case 11:{e=(c[g>>2]|0)+(4-1)&~(4-1);va=c[e>>2]|0;c[g>>2]=e+4;e=S;c[e>>2]=va;c[e+4>>2]=0;break i;break}case 12:{e=(c[g>>2]|0)+(8-1)&~(8-1);va=e;P=c[va>>2]|0;f=c[va+4>>2]|0;c[g>>2]=e+8;e=S;c[e>>2]=P;c[e+4>>2]=f;break i;break}case 13:{f=(c[g>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[g>>2]=f+4;f=(e&65535)<<16>>16;e=S;c[e>>2]=f;c[e+4>>2]=((f|0)<0)<<31>>31;break i;break}case 14:{f=(c[g>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[g>>2]=f+4;f=S;c[f>>2]=e&65535;c[f+4>>2]=0;break i;break}case 15:{f=(c[g>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[g>>2]=f+4;f=(e&255)<<24>>24;e=S;c[e>>2]=f;c[e+4>>2]=((f|0)<0)<<31>>31;break i;break}case 16:{f=(c[g>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[g>>2]=f+4;f=S;c[f>>2]=e&255;c[f+4>>2]=0;break i;break}case 17:{f=(c[g>>2]|0)+(8-1)&~(8-1);qb=+h[f>>3];c[g>>2]=f+8;h[S>>3]=qb;break i;break}case 18:{f=(c[g>>2]|0)+(8-1)&~(8-1);qb=+h[f>>3];c[g>>2]=f+8;h[S>>3]=qb;break i;break}default:break i}while(0);while(0);Jd=Jd+1|0;if((Jd|0)>=10){sa=1;U=363;break}}if((U|0)==363){i=m;return sa|0}if((Kd|0)<10)Ld=Kd;else{sa=1;i=m;return sa|0}while(1){if(c[l+(Ld<<2)>>2]|0){sa=-1;U=363;break}Ld=Ld+1|0;if((Ld|0)>=10){sa=1;U=363;break}}if((U|0)==363){i=m;return sa|0}}else if((U|0)==363){i=m;return sa|0}return 0}function oy(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+20|0;f=c[e>>2]|0;g=(c[a+16>>2]|0)-f|0;a=g>>>0>d>>>0?d:g;zH(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0}function py(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Na=0,Oa=0,Pa=0,Ra=0,Sa=0,Ta=0,Ua=0;do if(a>>>0<245){b=a>>>0<11?16:a+11&-8;d=b>>>3;e=c[20364]|0;f=e>>>d;if(f&3){g=(f&1^1)+d|0;h=g<<1;i=81496+(h<<2)|0;j=81496+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do if((i|0)!=(l|0)){if(l>>>0<(c[20368]|0)>>>0)tc();m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else tc()}else c[20364]=e&~(1<<g);while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}j=c[20366]|0;if(b>>>0>j>>>0){if(f){l=2<<d;i=f<<d&(l|0-l);l=(i&0-i)+-1|0;i=l>>>12&16;m=l>>>i;l=m>>>5&8;o=m>>>l;m=o>>>2&4;p=o>>>m;o=p>>>1&2;q=p>>>o;p=q>>>1&1;r=(l|i|m|o|p)+(q>>>p)|0;p=r<<1;q=81496+(p<<2)|0;o=81496+(p+2<<2)|0;p=c[o>>2]|0;m=p+8|0;i=c[m>>2]|0;do if((q|0)!=(i|0)){if(i>>>0<(c[20368]|0)>>>0)tc();l=i+12|0;if((c[l>>2]|0)==(p|0)){c[l>>2]=q;c[o>>2]=i;s=c[20366]|0;break}else tc()}else{c[20364]=e&~(1<<r);s=j}while(0);j=r<<3;e=j-b|0;c[p+4>>2]=b|3;i=p+b|0;c[p+(b|4)>>2]=e|1;c[p+j>>2]=e;if(s){j=c[20369]|0;o=s>>>3;q=o<<1;d=81496+(q<<2)|0;f=c[20364]|0;k=1<<o;if(f&k){o=81496+(q+2<<2)|0;h=c[o>>2]|0;if(h>>>0<(c[20368]|0)>>>0)tc();else{t=o;u=h}}else{c[20364]=f|k;t=81496+(q+2<<2)|0;u=d}c[t>>2]=j;c[u+12>>2]=j;c[j+8>>2]=u;c[j+12>>2]=d}c[20366]=e;c[20369]=i;n=m;return n|0}i=c[20365]|0;if(i){e=(i&0-i)+-1|0;i=e>>>12&16;d=e>>>i;e=d>>>5&8;j=d>>>e;d=j>>>2&4;q=j>>>d;j=q>>>1&2;k=q>>>j;q=k>>>1&1;f=c[81760+((e|i|d|j|q)+(k>>>q)<<2)>>2]|0;q=(c[f+4>>2]&-8)-b|0;k=f;j=f;while(1){f=c[k+16>>2]|0;if(!f){d=c[k+20>>2]|0;if(!d){v=q;w=j;break}else x=d}else x=f;f=(c[x+4>>2]&-8)-b|0;d=f>>>0<q>>>0;q=d?f:q;k=x;j=d?x:j}j=c[20368]|0;if(w>>>0<j>>>0)tc();k=w+b|0;if(w>>>0>=k>>>0)tc();q=c[w+24>>2]|0;m=c[w+12>>2]|0;do if((m|0)==(w|0)){p=w+20|0;r=c[p>>2]|0;if(!r){d=w+16|0;f=c[d>>2]|0;if(!f){y=0;break}else{z=f;A=d}}else{z=r;A=p}while(1){p=z+20|0;r=c[p>>2]|0;if(r){z=r;A=p;continue}p=z+16|0;r=c[p>>2]|0;if(!r){B=z;C=A;break}else{z=r;A=p}}if(C>>>0<j>>>0)tc();else{c[C>>2]=0;y=B;break}}else{p=c[w+8>>2]|0;if(p>>>0<j>>>0)tc();r=p+12|0;if((c[r>>2]|0)!=(w|0))tc();d=m+8|0;if((c[d>>2]|0)==(w|0)){c[r>>2]=m;c[d>>2]=p;y=m;break}else tc()}while(0);do if(q){m=c[w+28>>2]|0;j=81760+(m<<2)|0;if((w|0)==(c[j>>2]|0)){c[j>>2]=y;if(!y){c[20365]=c[20365]&~(1<<m);break}}else{if(q>>>0<(c[20368]|0)>>>0)tc();m=q+16|0;if((c[m>>2]|0)==(w|0))c[m>>2]=y;else c[q+20>>2]=y;if(!y)break}m=c[20368]|0;if(y>>>0<m>>>0)tc();c[y+24>>2]=q;j=c[w+16>>2]|0;do if(j)if(j>>>0<m>>>0)tc();else{c[y+16>>2]=j;c[j+24>>2]=y;break}while(0);j=c[w+20>>2]|0;if(j)if(j>>>0<(c[20368]|0)>>>0)tc();else{c[y+20>>2]=j;c[j+24>>2]=y;break}}while(0);if(v>>>0<16){q=v+b|0;c[w+4>>2]=q|3;j=w+(q+4)|0;c[j>>2]=c[j>>2]|1}else{c[w+4>>2]=b|3;c[w+(b|4)>>2]=v|1;c[w+(v+b)>>2]=v;j=c[20366]|0;if(j){q=c[20369]|0;m=j>>>3;j=m<<1;p=81496+(j<<2)|0;d=c[20364]|0;r=1<<m;if(d&r){m=81496+(j+2<<2)|0;f=c[m>>2]|0;if(f>>>0<(c[20368]|0)>>>0)tc();else{D=m;E=f}}else{c[20364]=d|r;D=81496+(j+2<<2)|0;E=p}c[D>>2]=q;c[E+12>>2]=q;c[q+8>>2]=E;c[q+12>>2]=p}c[20366]=v;c[20369]=k}n=w+8|0;return n|0}else F=b}else F=b}else if(a>>>0<=4294967231){p=a+11|0;q=p&-8;j=c[20365]|0;if(j){r=0-q|0;d=p>>>8;if(d)if(q>>>0>16777215)G=31;else{p=(d+1048320|0)>>>16&8;f=d<<p;d=(f+520192|0)>>>16&4;m=f<<d;f=(m+245760|0)>>>16&2;i=14-(d|p|f)+(m<<f>>>15)|0;G=q>>>(i+7|0)&1|i<<1}else G=0;i=c[81760+(G<<2)>>2]|0;a:do if(!i){H=r;I=0;J=0;K=86}else{f=r;m=0;p=q<<((G|0)==31?0:25-(G>>>1)|0);d=i;e=0;while(1){h=c[d+4>>2]&-8;o=h-q|0;if(o>>>0<f>>>0)if((h|0)==(q|0)){L=o;M=d;N=d;K=90;break a}else{O=o;P=d}else{O=f;P=e}o=c[d+20>>2]|0;d=c[d+16+(p>>>31<<2)>>2]|0;h=(o|0)==0|(o|0)==(d|0)?m:o;if(!d){H=O;I=h;J=P;K=86;break}else{f=O;m=h;p=p<<1;e=P}}}while(0);if((K|0)==86){if((I|0)==0&(J|0)==0){i=2<<G;r=j&(i|0-i);if(!r){F=q;break}i=(r&0-r)+-1|0;r=i>>>12&16;b=i>>>r;i=b>>>5&8;k=b>>>i;b=k>>>2&4;e=k>>>b;k=e>>>1&2;p=e>>>k;e=p>>>1&1;Q=c[81760+((i|r|b|k|e)+(p>>>e)<<2)>>2]|0;R=0}else{Q=I;R=J}if(!Q){S=H;T=R}else{L=H;M=Q;N=R;K=90}}if((K|0)==90)while(1){K=0;e=(c[M+4>>2]&-8)-q|0;p=e>>>0<L>>>0;k=p?e:L;e=p?M:N;p=c[M+16>>2]|0;if(p){L=k;M=p;N=e;K=90;continue}M=c[M+20>>2]|0;if(!M){S=k;T=e;break}else{L=k;N=e;K=90}}if((T|0)!=0?S>>>0<((c[20366]|0)-q|0)>>>0:0){j=c[20368]|0;if(T>>>0<j>>>0)tc();e=T+q|0;if(T>>>0>=e>>>0)tc();k=c[T+24>>2]|0;p=c[T+12>>2]|0;do if((p|0)==(T|0)){b=T+20|0;r=c[b>>2]|0;if(!r){i=T+16|0;m=c[i>>2]|0;if(!m){U=0;break}else{V=m;W=i}}else{V=r;W=b}while(1){b=V+20|0;r=c[b>>2]|0;if(r){V=r;W=b;continue}b=V+16|0;r=c[b>>2]|0;if(!r){X=V;Y=W;break}else{V=r;W=b}}if(Y>>>0<j>>>0)tc();else{c[Y>>2]=0;U=X;break}}else{b=c[T+8>>2]|0;if(b>>>0<j>>>0)tc();r=b+12|0;if((c[r>>2]|0)!=(T|0))tc();i=p+8|0;if((c[i>>2]|0)==(T|0)){c[r>>2]=p;c[i>>2]=b;U=p;break}else tc()}while(0);do if(k){p=c[T+28>>2]|0;j=81760+(p<<2)|0;if((T|0)==(c[j>>2]|0)){c[j>>2]=U;if(!U){c[20365]=c[20365]&~(1<<p);break}}else{if(k>>>0<(c[20368]|0)>>>0)tc();p=k+16|0;if((c[p>>2]|0)==(T|0))c[p>>2]=U;else c[k+20>>2]=U;if(!U)break}p=c[20368]|0;if(U>>>0<p>>>0)tc();c[U+24>>2]=k;j=c[T+16>>2]|0;do if(j)if(j>>>0<p>>>0)tc();else{c[U+16>>2]=j;c[j+24>>2]=U;break}while(0);j=c[T+20>>2]|0;if(j)if(j>>>0<(c[20368]|0)>>>0)tc();else{c[U+20>>2]=j;c[j+24>>2]=U;break}}while(0);b:do if(S>>>0>=16){c[T+4>>2]=q|3;c[T+(q|4)>>2]=S|1;c[T+(S+q)>>2]=S;k=S>>>3;if(S>>>0<256){j=k<<1;p=81496+(j<<2)|0;b=c[20364]|0;i=1<<k;if(b&i){k=81496+(j+2<<2)|0;r=c[k>>2]|0;if(r>>>0<(c[20368]|0)>>>0)tc();else{Z=k;_=r}}else{c[20364]=b|i;Z=81496+(j+2<<2)|0;_=p}c[Z>>2]=e;c[_+12>>2]=e;c[T+(q+8)>>2]=_;c[T+(q+12)>>2]=p;break}p=S>>>8;if(p)if(S>>>0>16777215)$=31;else{j=(p+1048320|0)>>>16&8;i=p<<j;p=(i+520192|0)>>>16&4;b=i<<p;i=(b+245760|0)>>>16&2;r=14-(p|j|i)+(b<<i>>>15)|0;$=S>>>(r+7|0)&1|r<<1}else $=0;r=81760+($<<2)|0;c[T+(q+28)>>2]=$;c[T+(q+20)>>2]=0;c[T+(q+16)>>2]=0;i=c[20365]|0;b=1<<$;if(!(i&b)){c[20365]=i|b;c[r>>2]=e;c[T+(q+24)>>2]=r;c[T+(q+12)>>2]=e;c[T+(q+8)>>2]=e;break}b=c[r>>2]|0;c:do if((c[b+4>>2]&-8|0)!=(S|0)){r=S<<(($|0)==31?0:25-($>>>1)|0);i=b;while(1){j=i+16+(r>>>31<<2)|0;p=c[j>>2]|0;if(!p){aa=j;ba=i;break}if((c[p+4>>2]&-8|0)==(S|0)){ca=p;break c}else{r=r<<1;i=p}}if(aa>>>0<(c[20368]|0)>>>0)tc();else{c[aa>>2]=e;c[T+(q+24)>>2]=ba;c[T+(q+12)>>2]=e;c[T+(q+8)>>2]=e;break b}}else ca=b;while(0);b=ca+8|0;i=c[b>>2]|0;r=c[20368]|0;if(i>>>0>=r>>>0&ca>>>0>=r>>>0){c[i+12>>2]=e;c[b>>2]=e;c[T+(q+8)>>2]=i;c[T+(q+12)>>2]=ca;c[T+(q+24)>>2]=0;break}else tc()}else{i=S+q|0;c[T+4>>2]=i|3;b=T+(i+4)|0;c[b>>2]=c[b>>2]|1}while(0);n=T+8|0;return n|0}else F=q}else F=q}else F=-1;while(0);T=c[20366]|0;if(T>>>0>=F>>>0){S=T-F|0;ca=c[20369]|0;if(S>>>0>15){c[20369]=ca+F;c[20366]=S;c[ca+(F+4)>>2]=S|1;c[ca+T>>2]=S;c[ca+4>>2]=F|3}else{c[20366]=0;c[20369]=0;c[ca+4>>2]=T|3;S=ca+(T+4)|0;c[S>>2]=c[S>>2]|1}n=ca+8|0;return n|0}ca=c[20367]|0;if(ca>>>0>F>>>0){S=ca-F|0;c[20367]=S;ca=c[20370]|0;c[20370]=ca+F;c[ca+(F+4)>>2]=S|1;c[ca+4>>2]=F|3;n=ca+8|0;return n|0}do if(!(c[20482]|0)){ca=Qa(30)|0;if(!(ca+-1&ca)){c[20484]=ca;c[20483]=ca;c[20485]=-1;c[20486]=-1;c[20487]=0;c[20475]=0;c[20482]=(Jb(0)|0)&-16^1431655768;break}else tc()}while(0);ca=F+48|0;S=c[20484]|0;T=F+47|0;ba=S+T|0;aa=0-S|0;S=ba&aa;if(S>>>0<=F>>>0){n=0;return n|0}$=c[20474]|0;if(($|0)!=0?(_=c[20472]|0,Z=_+S|0,Z>>>0<=_>>>0|Z>>>0>$>>>0):0){n=0;return n|0}d:do if(!(c[20475]&4)){$=c[20370]|0;e:do if($){Z=81904;while(1){_=c[Z>>2]|0;if(_>>>0<=$>>>0?(U=Z+4|0,(_+(c[U>>2]|0)|0)>>>0>$>>>0):0){da=Z;ea=U;break}Z=c[Z+8>>2]|0;if(!Z){K=174;break e}}Z=ba-(c[20367]|0)&aa;if(Z>>>0<2147483647){U=Ma(Z|0)|0;_=(U|0)==((c[da>>2]|0)+(c[ea>>2]|0)|0);X=_?Z:0;if(_)if((U|0)==(-1|0))fa=X;else{ga=U;ha=X;K=194;break d}else{ia=U;ja=Z;ka=X;K=184}}else fa=0}else K=174;while(0);do if((K|0)==174){$=Ma(0)|0;if(($|0)!=(-1|0)){q=$;X=c[20483]|0;Z=X+-1|0;if(!(Z&q))la=S;else la=S-q+(Z+q&0-X)|0;X=c[20472]|0;q=X+la|0;if(la>>>0>F>>>0&la>>>0<2147483647){Z=c[20474]|0;if((Z|0)!=0?q>>>0<=X>>>0|q>>>0>Z>>>0:0){fa=0;break}Z=Ma(la|0)|0;q=(Z|0)==($|0);X=q?la:0;if(q){ga=$;ha=X;K=194;break d}else{ia=Z;ja=la;ka=X;K=184}}else fa=0}else fa=0}while(0);f:do if((K|0)==184){X=0-ja|0;do if(ca>>>0>ja>>>0&(ja>>>0<2147483647&(ia|0)!=(-1|0))?(Z=c[20484]|0,$=T-ja+Z&0-Z,$>>>0<2147483647):0)if((Ma($|0)|0)==(-1|0)){Ma(X|0)|0;fa=ka;break f}else{ma=$+ja|0;break}else ma=ja;while(0);if((ia|0)==(-1|0))fa=ka;else{ga=ia;ha=ma;K=194;break d}}while(0);c[20475]=c[20475]|4;na=fa;K=191}else{na=0;K=191}while(0);if((((K|0)==191?S>>>0<2147483647:0)?(fa=Ma(S|0)|0,S=Ma(0)|0,fa>>>0<S>>>0&((fa|0)!=(-1|0)&(S|0)!=(-1|0))):0)?(ma=S-fa|0,S=ma>>>0>(F+40|0)>>>0,S):0){ga=fa;ha=S?ma:na;K=194}if((K|0)==194){na=(c[20472]|0)+ha|0;c[20472]=na;if(na>>>0>(c[20473]|0)>>>0)c[20473]=na;na=c[20370]|0;g:do if(na){ma=81904;do{S=c[ma>>2]|0;fa=ma+4|0;ia=c[fa>>2]|0;if((ga|0)==(S+ia|0)){oa=S;pa=fa;qa=ia;ra=ma;K=204;break}ma=c[ma+8>>2]|0}while((ma|0)!=0);if(((K|0)==204?(c[ra+12>>2]&8|0)==0:0)?na>>>0<ga>>>0&na>>>0>=oa>>>0:0){c[pa>>2]=qa+ha;ma=(c[20367]|0)+ha|0;ia=na+8|0;fa=(ia&7|0)==0?0:0-ia&7;ia=ma-fa|0;c[20370]=na+fa;c[20367]=ia;c[na+(fa+4)>>2]=ia|1;c[na+(ma+4)>>2]=40;c[20371]=c[20486];break}ma=c[20368]|0;if(ga>>>0<ma>>>0){c[20368]=ga;sa=ga}else sa=ma;ma=ga+ha|0;ia=81904;while(1){if((c[ia>>2]|0)==(ma|0)){ta=ia;ua=ia;K=212;break}ia=c[ia+8>>2]|0;if(!ia){va=81904;break}}if((K|0)==212)if(!(c[ua+12>>2]&8)){c[ta>>2]=ga;ia=ua+4|0;c[ia>>2]=(c[ia>>2]|0)+ha;ia=ga+8|0;ma=(ia&7|0)==0?0:0-ia&7;ia=ga+(ha+8)|0;fa=(ia&7|0)==0?0:0-ia&7;ia=ga+(fa+ha)|0;S=ma+F|0;ka=ga+S|0;ja=ia-(ga+ma)-F|0;c[ga+(ma+4)>>2]=F|3;h:do if((ia|0)!=(na|0)){if((ia|0)==(c[20369]|0)){T=(c[20366]|0)+ja|0;c[20366]=T;c[20369]=ka;c[ga+(S+4)>>2]=T|1;c[ga+(T+S)>>2]=T;break}T=ha+4|0;ca=c[ga+(T+fa)>>2]|0;if((ca&3|0)==1){la=ca&-8;ea=ca>>>3;i:do if(ca>>>0>=256){da=c[ga+((fa|24)+ha)>>2]|0;aa=c[ga+(ha+12+fa)>>2]|0;do if((aa|0)==(ia|0)){ba=fa|16;X=ga+(T+ba)|0;$=c[X>>2]|0;if(!$){Z=ga+(ba+ha)|0;ba=c[Z>>2]|0;if(!ba){wa=0;break}else{xa=ba;ya=Z}}else{xa=$;ya=X}while(1){X=xa+20|0;$=c[X>>2]|0;if($){xa=$;ya=X;continue}X=xa+16|0;$=c[X>>2]|0;if(!$){za=xa;Aa=ya;break}else{xa=$;ya=X}}if(Aa>>>0<sa>>>0)tc();else{c[Aa>>2]=0;wa=za;break}}else{X=c[ga+((fa|8)+ha)>>2]|0;if(X>>>0<sa>>>0)tc();$=X+12|0;if((c[$>>2]|0)!=(ia|0))tc();Z=aa+8|0;if((c[Z>>2]|0)==(ia|0)){c[$>>2]=aa;c[Z>>2]=X;wa=aa;break}else tc()}while(0);if(!da)break;aa=c[ga+(ha+28+fa)>>2]|0;X=81760+(aa<<2)|0;do if((ia|0)!=(c[X>>2]|0)){if(da>>>0<(c[20368]|0)>>>0)tc();Z=da+16|0;if((c[Z>>2]|0)==(ia|0))c[Z>>2]=wa;else c[da+20>>2]=wa;if(!wa)break i}else{c[X>>2]=wa;if(wa)break;c[20365]=c[20365]&~(1<<aa);break i}while(0);aa=c[20368]|0;if(wa>>>0<aa>>>0)tc();c[wa+24>>2]=da;X=fa|16;Z=c[ga+(X+ha)>>2]|0;do if(Z)if(Z>>>0<aa>>>0)tc();else{c[wa+16>>2]=Z;c[Z+24>>2]=wa;break}while(0);Z=c[ga+(T+X)>>2]|0;if(!Z)break;if(Z>>>0<(c[20368]|0)>>>0)tc();else{c[wa+20>>2]=Z;c[Z+24>>2]=wa;break}}else{Z=c[ga+((fa|8)+ha)>>2]|0;aa=c[ga+(ha+12+fa)>>2]|0;da=81496+(ea<<1<<2)|0;do if((Z|0)!=(da|0)){if(Z>>>0<sa>>>0)tc();if((c[Z+12>>2]|0)==(ia|0))break;tc()}while(0);if((aa|0)==(Z|0)){c[20364]=c[20364]&~(1<<ea);break}do if((aa|0)==(da|0))Ba=aa+8|0;else{if(aa>>>0<sa>>>0)tc();X=aa+8|0;if((c[X>>2]|0)==(ia|0)){Ba=X;break}tc()}while(0);c[Z+12>>2]=aa;c[Ba>>2]=Z}while(0);Ca=ga+((la|fa)+ha)|0;Da=la+ja|0}else{Ca=ia;Da=ja}ea=Ca+4|0;c[ea>>2]=c[ea>>2]&-2;c[ga+(S+4)>>2]=Da|1;c[ga+(Da+S)>>2]=Da;ea=Da>>>3;if(Da>>>0<256){T=ea<<1;ca=81496+(T<<2)|0;da=c[20364]|0;X=1<<ea;do if(!(da&X)){c[20364]=da|X;Ea=81496+(T+2<<2)|0;Fa=ca}else{ea=81496+(T+2<<2)|0;$=c[ea>>2]|0;if($>>>0>=(c[20368]|0)>>>0){Ea=ea;Fa=$;break}tc()}while(0);c[Ea>>2]=ka;c[Fa+12>>2]=ka;c[ga+(S+8)>>2]=Fa;c[ga+(S+12)>>2]=ca;break}T=Da>>>8;do if(!T)Ga=0;else{if(Da>>>0>16777215){Ga=31;break}X=(T+1048320|0)>>>16&8;da=T<<X;la=(da+520192|0)>>>16&4;$=da<<la;da=($+245760|0)>>>16&2;ea=14-(la|X|da)+($<<da>>>15)|0;Ga=Da>>>(ea+7|0)&1|ea<<1}while(0);T=81760+(Ga<<2)|0;c[ga+(S+28)>>2]=Ga;c[ga+(S+20)>>2]=0;c[ga+(S+16)>>2]=0;ca=c[20365]|0;ea=1<<Ga;if(!(ca&ea)){c[20365]=ca|ea;c[T>>2]=ka;c[ga+(S+24)>>2]=T;c[ga+(S+12)>>2]=ka;c[ga+(S+8)>>2]=ka;break}ea=c[T>>2]|0;j:do if((c[ea+4>>2]&-8|0)!=(Da|0)){T=Da<<((Ga|0)==31?0:25-(Ga>>>1)|0);ca=ea;while(1){da=ca+16+(T>>>31<<2)|0;$=c[da>>2]|0;if(!$){Ha=da;Ia=ca;break}if((c[$+4>>2]&-8|0)==(Da|0)){Ja=$;break j}else{T=T<<1;ca=$}}if(Ha>>>0<(c[20368]|0)>>>0)tc();else{c[Ha>>2]=ka;c[ga+(S+24)>>2]=Ia;c[ga+(S+12)>>2]=ka;c[ga+(S+8)>>2]=ka;break h}}else Ja=ea;while(0);ea=Ja+8|0;ca=c[ea>>2]|0;T=c[20368]|0;if(ca>>>0>=T>>>0&Ja>>>0>=T>>>0){c[ca+12>>2]=ka;c[ea>>2]=ka;c[ga+(S+8)>>2]=ca;c[ga+(S+12)>>2]=Ja;c[ga+(S+24)>>2]=0;break}else tc()}else{ca=(c[20367]|0)+ja|0;c[20367]=ca;c[20370]=ka;c[ga+(S+4)>>2]=ca|1}while(0);n=ga+(ma|8)|0;return n|0}else va=81904;while(1){S=c[va>>2]|0;if(S>>>0<=na>>>0?(ka=c[va+4>>2]|0,ja=S+ka|0,ja>>>0>na>>>0):0){Ka=S;La=ka;Na=ja;break}va=c[va+8>>2]|0}ma=Ka+(La+-39)|0;ja=Ka+(La+-47+((ma&7|0)==0?0:0-ma&7))|0;ma=na+16|0;ka=ja>>>0<ma>>>0?na:ja;ja=ka+8|0;S=ga+8|0;ia=(S&7|0)==0?0:0-S&7;S=ha+-40-ia|0;c[20370]=ga+ia;c[20367]=S;c[ga+(ia+4)>>2]=S|1;c[ga+(ha+-36)>>2]=40;c[20371]=c[20486];S=ka+4|0;c[S>>2]=27;c[ja>>2]=c[20476];c[ja+4>>2]=c[20477];c[ja+8>>2]=c[20478];c[ja+12>>2]=c[20479];c[20476]=ga;c[20477]=ha;c[20479]=0;c[20478]=ja;ja=ka+28|0;c[ja>>2]=7;if((ka+32|0)>>>0<Na>>>0){ia=ja;do{ja=ia;ia=ia+4|0;c[ia>>2]=7}while((ja+8|0)>>>0<Na>>>0)}if((ka|0)!=(na|0)){ia=ka-na|0;c[S>>2]=c[S>>2]&-2;c[na+4>>2]=ia|1;c[ka>>2]=ia;ja=ia>>>3;if(ia>>>0<256){fa=ja<<1;ca=81496+(fa<<2)|0;ea=c[20364]|0;T=1<<ja;if(ea&T){ja=81496+(fa+2<<2)|0;Z=c[ja>>2]|0;if(Z>>>0<(c[20368]|0)>>>0)tc();else{Oa=ja;Pa=Z}}else{c[20364]=ea|T;Oa=81496+(fa+2<<2)|0;Pa=ca}c[Oa>>2]=na;c[Pa+12>>2]=na;c[na+8>>2]=Pa;c[na+12>>2]=ca;break}ca=ia>>>8;if(ca)if(ia>>>0>16777215)Ra=31;else{fa=(ca+1048320|0)>>>16&8;T=ca<<fa;ca=(T+520192|0)>>>16&4;ea=T<<ca;T=(ea+245760|0)>>>16&2;Z=14-(ca|fa|T)+(ea<<T>>>15)|0;Ra=ia>>>(Z+7|0)&1|Z<<1}else Ra=0;Z=81760+(Ra<<2)|0;c[na+28>>2]=Ra;c[na+20>>2]=0;c[ma>>2]=0;T=c[20365]|0;ea=1<<Ra;if(!(T&ea)){c[20365]=T|ea;c[Z>>2]=na;c[na+24>>2]=Z;c[na+12>>2]=na;c[na+8>>2]=na;break}ea=c[Z>>2]|0;k:do if((c[ea+4>>2]&-8|0)!=(ia|0)){Z=ia<<((Ra|0)==31?0:25-(Ra>>>1)|0);T=ea;while(1){fa=T+16+(Z>>>31<<2)|0;ca=c[fa>>2]|0;if(!ca){Sa=fa;Ta=T;break}if((c[ca+4>>2]&-8|0)==(ia|0)){Ua=ca;break k}else{Z=Z<<1;T=ca}}if(Sa>>>0<(c[20368]|0)>>>0)tc();else{c[Sa>>2]=na;c[na+24>>2]=Ta;c[na+12>>2]=na;c[na+8>>2]=na;break g}}else Ua=ea;while(0);ea=Ua+8|0;ia=c[ea>>2]|0;ma=c[20368]|0;if(ia>>>0>=ma>>>0&Ua>>>0>=ma>>>0){c[ia+12>>2]=na;c[ea>>2]=na;c[na+8>>2]=ia;c[na+12>>2]=Ua;c[na+24>>2]=0;break}else tc()}}else{ia=c[20368]|0;if((ia|0)==0|ga>>>0<ia>>>0)c[20368]=ga;c[20476]=ga;c[20477]=ha;c[20479]=0;c[20373]=c[20482];c[20372]=-1;ia=0;do{ea=ia<<1;ma=81496+(ea<<2)|0;c[81496+(ea+3<<2)>>2]=ma;c[81496+(ea+2<<2)>>2]=ma;ia=ia+1|0}while((ia|0)!=32);ia=ga+8|0;ma=(ia&7|0)==0?0:0-ia&7;ia=ha+-40-ma|0;c[20370]=ga+ma;c[20367]=ia;c[ga+(ma+4)>>2]=ia|1;c[ga+(ha+-36)>>2]=40;c[20371]=c[20486]}while(0);ha=c[20367]|0;if(ha>>>0>F>>>0){ga=ha-F|0;c[20367]=ga;ha=c[20370]|0;c[20370]=ha+F;c[ha+(F+4)>>2]=ga|1;c[ha+4>>2]=F|3;n=ha+8|0;return n|0}}c[(_c()|0)>>2]=12;n=0;return n|0}function qy(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;if(!a)return;b=a+-8|0;d=c[20368]|0;if(b>>>0<d>>>0)tc();e=c[a+-4>>2]|0;f=e&3;if((f|0)==1)tc();g=e&-8;h=a+(g+-8)|0;do if(!(e&1)){i=c[b>>2]|0;if(!f)return;j=-8-i|0;k=a+j|0;l=i+g|0;if(k>>>0<d>>>0)tc();if((k|0)==(c[20369]|0)){m=a+(g+-4)|0;n=c[m>>2]|0;if((n&3|0)!=3){o=k;p=l;break}c[20366]=l;c[m>>2]=n&-2;c[a+(j+4)>>2]=l|1;c[h>>2]=l;return}n=i>>>3;if(i>>>0<256){i=c[a+(j+8)>>2]|0;m=c[a+(j+12)>>2]|0;q=81496+(n<<1<<2)|0;if((i|0)!=(q|0)){if(i>>>0<d>>>0)tc();if((c[i+12>>2]|0)!=(k|0))tc()}if((m|0)==(i|0)){c[20364]=c[20364]&~(1<<n);o=k;p=l;break}if((m|0)!=(q|0)){if(m>>>0<d>>>0)tc();q=m+8|0;if((c[q>>2]|0)==(k|0))r=q;else tc()}else r=m+8|0;c[i+12>>2]=m;c[r>>2]=i;o=k;p=l;break}i=c[a+(j+24)>>2]|0;m=c[a+(j+12)>>2]|0;do if((m|0)==(k|0)){q=a+(j+20)|0;n=c[q>>2]|0;if(!n){s=a+(j+16)|0;t=c[s>>2]|0;if(!t){u=0;break}else{v=t;w=s}}else{v=n;w=q}while(1){q=v+20|0;n=c[q>>2]|0;if(n){v=n;w=q;continue}q=v+16|0;n=c[q>>2]|0;if(!n){x=v;y=w;break}else{v=n;w=q}}if(y>>>0<d>>>0)tc();else{c[y>>2]=0;u=x;break}}else{q=c[a+(j+8)>>2]|0;if(q>>>0<d>>>0)tc();n=q+12|0;if((c[n>>2]|0)!=(k|0))tc();s=m+8|0;if((c[s>>2]|0)==(k|0)){c[n>>2]=m;c[s>>2]=q;u=m;break}else tc()}while(0);if(i){m=c[a+(j+28)>>2]|0;q=81760+(m<<2)|0;if((k|0)==(c[q>>2]|0)){c[q>>2]=u;if(!u){c[20365]=c[20365]&~(1<<m);o=k;p=l;break}}else{if(i>>>0<(c[20368]|0)>>>0)tc();m=i+16|0;if((c[m>>2]|0)==(k|0))c[m>>2]=u;else c[i+20>>2]=u;if(!u){o=k;p=l;break}}m=c[20368]|0;if(u>>>0<m>>>0)tc();c[u+24>>2]=i;q=c[a+(j+16)>>2]|0;do if(q)if(q>>>0<m>>>0)tc();else{c[u+16>>2]=q;c[q+24>>2]=u;break}while(0);q=c[a+(j+20)>>2]|0;if(q)if(q>>>0<(c[20368]|0)>>>0)tc();else{c[u+20>>2]=q;c[q+24>>2]=u;o=k;p=l;break}else{o=k;p=l}}else{o=k;p=l}}else{o=b;p=g}while(0);if(o>>>0>=h>>>0)tc();b=a+(g+-4)|0;u=c[b>>2]|0;if(!(u&1))tc();if(!(u&2)){if((h|0)==(c[20370]|0)){d=(c[20367]|0)+p|0;c[20367]=d;c[20370]=o;c[o+4>>2]=d|1;if((o|0)!=(c[20369]|0))return;c[20369]=0;c[20366]=0;return}if((h|0)==(c[20369]|0)){d=(c[20366]|0)+p|0;c[20366]=d;c[20369]=o;c[o+4>>2]=d|1;c[o+d>>2]=d;return}d=(u&-8)+p|0;x=u>>>3;do if(u>>>0>=256){y=c[a+(g+16)>>2]|0;w=c[a+(g|4)>>2]|0;do if((w|0)==(h|0)){v=a+(g+12)|0;r=c[v>>2]|0;if(!r){f=a+(g+8)|0;e=c[f>>2]|0;if(!e){z=0;break}else{A=e;B=f}}else{A=r;B=v}while(1){v=A+20|0;r=c[v>>2]|0;if(r){A=r;B=v;continue}v=A+16|0;r=c[v>>2]|0;if(!r){C=A;D=B;break}else{A=r;B=v}}if(D>>>0<(c[20368]|0)>>>0)tc();else{c[D>>2]=0;z=C;break}}else{v=c[a+g>>2]|0;if(v>>>0<(c[20368]|0)>>>0)tc();r=v+12|0;if((c[r>>2]|0)!=(h|0))tc();f=w+8|0;if((c[f>>2]|0)==(h|0)){c[r>>2]=w;c[f>>2]=v;z=w;break}else tc()}while(0);if(y){w=c[a+(g+20)>>2]|0;l=81760+(w<<2)|0;if((h|0)==(c[l>>2]|0)){c[l>>2]=z;if(!z){c[20365]=c[20365]&~(1<<w);break}}else{if(y>>>0<(c[20368]|0)>>>0)tc();w=y+16|0;if((c[w>>2]|0)==(h|0))c[w>>2]=z;else c[y+20>>2]=z;if(!z)break}w=c[20368]|0;if(z>>>0<w>>>0)tc();c[z+24>>2]=y;l=c[a+(g+8)>>2]|0;do if(l)if(l>>>0<w>>>0)tc();else{c[z+16>>2]=l;c[l+24>>2]=z;break}while(0);l=c[a+(g+12)>>2]|0;if(l)if(l>>>0<(c[20368]|0)>>>0)tc();else{c[z+20>>2]=l;c[l+24>>2]=z;break}}}else{l=c[a+g>>2]|0;w=c[a+(g|4)>>2]|0;y=81496+(x<<1<<2)|0;if((l|0)!=(y|0)){if(l>>>0<(c[20368]|0)>>>0)tc();if((c[l+12>>2]|0)!=(h|0))tc()}if((w|0)==(l|0)){c[20364]=c[20364]&~(1<<x);break}if((w|0)!=(y|0)){if(w>>>0<(c[20368]|0)>>>0)tc();y=w+8|0;if((c[y>>2]|0)==(h|0))E=y;else tc()}else E=w+8|0;c[l+12>>2]=w;c[E>>2]=l}while(0);c[o+4>>2]=d|1;c[o+d>>2]=d;if((o|0)==(c[20369]|0)){c[20366]=d;return}else F=d}else{c[b>>2]=u&-2;c[o+4>>2]=p|1;c[o+p>>2]=p;F=p}p=F>>>3;if(F>>>0<256){u=p<<1;b=81496+(u<<2)|0;d=c[20364]|0;E=1<<p;if(d&E){p=81496+(u+2<<2)|0;h=c[p>>2]|0;if(h>>>0<(c[20368]|0)>>>0)tc();else{G=p;H=h}}else{c[20364]=d|E;G=81496+(u+2<<2)|0;H=b}c[G>>2]=o;c[H+12>>2]=o;c[o+8>>2]=H;c[o+12>>2]=b;return}b=F>>>8;if(b)if(F>>>0>16777215)I=31;else{H=(b+1048320|0)>>>16&8;G=b<<H;b=(G+520192|0)>>>16&4;u=G<<b;G=(u+245760|0)>>>16&2;E=14-(b|H|G)+(u<<G>>>15)|0;I=F>>>(E+7|0)&1|E<<1}else I=0;E=81760+(I<<2)|0;c[o+28>>2]=I;c[o+20>>2]=0;c[o+16>>2]=0;G=c[20365]|0;u=1<<I;a:do if(G&u){H=c[E>>2]|0;b:do if((c[H+4>>2]&-8|0)!=(F|0)){b=F<<((I|0)==31?0:25-(I>>>1)|0);d=H;while(1){h=d+16+(b>>>31<<2)|0;p=c[h>>2]|0;if(!p){J=h;K=d;break}if((c[p+4>>2]&-8|0)==(F|0)){L=p;break b}else{b=b<<1;d=p}}if(J>>>0<(c[20368]|0)>>>0)tc();else{c[J>>2]=o;c[o+24>>2]=K;c[o+12>>2]=o;c[o+8>>2]=o;break a}}else L=H;while(0);H=L+8|0;d=c[H>>2]|0;b=c[20368]|0;if(d>>>0>=b>>>0&L>>>0>=b>>>0){c[d+12>>2]=o;c[H>>2]=o;c[o+8>>2]=d;c[o+12>>2]=L;c[o+24>>2]=0;break}else tc()}else{c[20365]=G|u;c[E>>2]=o;c[o+24>>2]=E;c[o+12>>2]=o;c[o+8>>2]=o}while(0);o=(c[20372]|0)+-1|0;c[20372]=o;if(!o)M=81912;else return;while(1){o=c[M>>2]|0;if(!o)break;else M=o+8|0}c[20372]=-1;return}function ry(a,b){a=a|0;b=b|0;var d=0,e=0;if(a){d=aa(b,a)|0;if((b|a)>>>0>65535)e=((d>>>0)/(a>>>0)|0|0)==(b|0)?d:-1;else e=d}else e=0;d=py(e)|0;if(!d)return d|0;if(!(c[d+-4>>2]&3))return d|0;BH(d|0,0,e|0)|0;return d|0}function sy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if(!a){d=py(b)|0;return d|0}if(b>>>0>4294967231){c[(_c()|0)>>2]=12;d=0;return d|0}e=ty(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(e){d=e+8|0;return d|0}e=py(b)|0;if(!e){d=0;return d|0}f=c[a+-4>>2]|0;g=(f&-8)-((f&3|0)==0?8:4)|0;zH(e|0,a|0,(g>>>0<b>>>0?g:b)|0)|0;qy(a);d=e;return d|0}function ty(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a+f|0;h=c[20368]|0;i=e&3;if(!((i|0)!=1&a>>>0>=h>>>0&a>>>0<g>>>0))tc();j=a+(f|4)|0;k=c[j>>2]|0;if(!(k&1))tc();if(!i){if(b>>>0<256){l=0;return l|0}if(f>>>0>=(b+4|0)>>>0?(f-b|0)>>>0<=c[20484]<<1>>>0:0){l=a;return l|0}l=0;return l|0}if(f>>>0>=b>>>0){i=f-b|0;if(i>>>0<=15){l=a;return l|0}c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=i|3;c[j>>2]=c[j>>2]|1;uy(a+b|0,i);l=a;return l|0}if((g|0)==(c[20370]|0)){i=(c[20367]|0)+f|0;if(i>>>0<=b>>>0){l=0;return l|0}j=i-b|0;c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=j|1;c[20370]=a+b;c[20367]=j;l=a;return l|0}if((g|0)==(c[20369]|0)){j=(c[20366]|0)+f|0;if(j>>>0<b>>>0){l=0;return l|0}i=j-b|0;if(i>>>0>15){c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=i|1;c[a+j>>2]=i;m=a+(j+4)|0;c[m>>2]=c[m>>2]&-2;n=a+b|0;o=i}else{c[d>>2]=e&1|j|2;i=a+(j+4)|0;c[i>>2]=c[i>>2]|1;n=0;o=0}c[20366]=o;c[20369]=n;l=a;return l|0}if(k&2){l=0;return l|0}n=(k&-8)+f|0;if(n>>>0<b>>>0){l=0;return l|0}o=n-b|0;i=k>>>3;do if(k>>>0>=256){j=c[a+(f+24)>>2]|0;m=c[a+(f+12)>>2]|0;do if((m|0)==(g|0)){p=a+(f+20)|0;q=c[p>>2]|0;if(!q){r=a+(f+16)|0;s=c[r>>2]|0;if(!s){t=0;break}else{u=s;v=r}}else{u=q;v=p}while(1){p=u+20|0;q=c[p>>2]|0;if(q){u=q;v=p;continue}p=u+16|0;q=c[p>>2]|0;if(!q){w=u;x=v;break}else{u=q;v=p}}if(x>>>0<h>>>0)tc();else{c[x>>2]=0;t=w;break}}else{p=c[a+(f+8)>>2]|0;if(p>>>0<h>>>0)tc();q=p+12|0;if((c[q>>2]|0)!=(g|0))tc();r=m+8|0;if((c[r>>2]|0)==(g|0)){c[q>>2]=m;c[r>>2]=p;t=m;break}else tc()}while(0);if(j){m=c[a+(f+28)>>2]|0;p=81760+(m<<2)|0;if((g|0)==(c[p>>2]|0)){c[p>>2]=t;if(!t){c[20365]=c[20365]&~(1<<m);break}}else{if(j>>>0<(c[20368]|0)>>>0)tc();m=j+16|0;if((c[m>>2]|0)==(g|0))c[m>>2]=t;else c[j+20>>2]=t;if(!t)break}m=c[20368]|0;if(t>>>0<m>>>0)tc();c[t+24>>2]=j;p=c[a+(f+16)>>2]|0;do if(p)if(p>>>0<m>>>0)tc();else{c[t+16>>2]=p;c[p+24>>2]=t;break}while(0);p=c[a+(f+20)>>2]|0;if(p)if(p>>>0<(c[20368]|0)>>>0)tc();else{c[t+20>>2]=p;c[p+24>>2]=t;break}}}else{p=c[a+(f+8)>>2]|0;m=c[a+(f+12)>>2]|0;j=81496+(i<<1<<2)|0;if((p|0)!=(j|0)){if(p>>>0<h>>>0)tc();if((c[p+12>>2]|0)!=(g|0))tc()}if((m|0)==(p|0)){c[20364]=c[20364]&~(1<<i);break}if((m|0)!=(j|0)){if(m>>>0<h>>>0)tc();j=m+8|0;if((c[j>>2]|0)==(g|0))y=j;else tc()}else y=m+8|0;c[p+12>>2]=m;c[y>>2]=p}while(0);if(o>>>0<16){c[d>>2]=n|e&1|2;y=a+(n|4)|0;c[y>>2]=c[y>>2]|1;l=a;return l|0}else{c[d>>2]=e&1|b|2;c[a+(b+4)>>2]=o|3;e=a+(n|4)|0;c[e>>2]=c[e>>2]|1;uy(a+b|0,o);l=a;return l|0}return 0}function uy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;d=a+b|0;e=c[a+4>>2]|0;do if(!(e&1)){f=c[a>>2]|0;if(!(e&3))return;g=a+(0-f)|0;h=f+b|0;i=c[20368]|0;if(g>>>0<i>>>0)tc();if((g|0)==(c[20369]|0)){j=a+(b+4)|0;k=c[j>>2]|0;if((k&3|0)!=3){l=g;m=h;break}c[20366]=h;c[j>>2]=k&-2;c[a+(4-f)>>2]=h|1;c[d>>2]=h;return}k=f>>>3;if(f>>>0<256){j=c[a+(8-f)>>2]|0;n=c[a+(12-f)>>2]|0;o=81496+(k<<1<<2)|0;if((j|0)!=(o|0)){if(j>>>0<i>>>0)tc();if((c[j+12>>2]|0)!=(g|0))tc()}if((n|0)==(j|0)){c[20364]=c[20364]&~(1<<k);l=g;m=h;break}if((n|0)!=(o|0)){if(n>>>0<i>>>0)tc();o=n+8|0;if((c[o>>2]|0)==(g|0))p=o;else tc()}else p=n+8|0;c[j+12>>2]=n;c[p>>2]=j;l=g;m=h;break}j=c[a+(24-f)>>2]|0;n=c[a+(12-f)>>2]|0;do if((n|0)==(g|0)){o=16-f|0;k=a+(o+4)|0;q=c[k>>2]|0;if(!q){r=a+o|0;o=c[r>>2]|0;if(!o){s=0;break}else{t=o;u=r}}else{t=q;u=k}while(1){k=t+20|0;q=c[k>>2]|0;if(q){t=q;u=k;continue}k=t+16|0;q=c[k>>2]|0;if(!q){v=t;w=u;break}else{t=q;u=k}}if(w>>>0<i>>>0)tc();else{c[w>>2]=0;s=v;break}}else{k=c[a+(8-f)>>2]|0;if(k>>>0<i>>>0)tc();q=k+12|0;if((c[q>>2]|0)!=(g|0))tc();r=n+8|0;if((c[r>>2]|0)==(g|0)){c[q>>2]=n;c[r>>2]=k;s=n;break}else tc()}while(0);if(j){n=c[a+(28-f)>>2]|0;i=81760+(n<<2)|0;if((g|0)==(c[i>>2]|0)){c[i>>2]=s;if(!s){c[20365]=c[20365]&~(1<<n);l=g;m=h;break}}else{if(j>>>0<(c[20368]|0)>>>0)tc();n=j+16|0;if((c[n>>2]|0)==(g|0))c[n>>2]=s;else c[j+20>>2]=s;if(!s){l=g;m=h;break}}n=c[20368]|0;if(s>>>0<n>>>0)tc();c[s+24>>2]=j;i=16-f|0;k=c[a+i>>2]|0;do if(k)if(k>>>0<n>>>0)tc();else{c[s+16>>2]=k;c[k+24>>2]=s;break}while(0);k=c[a+(i+4)>>2]|0;if(k)if(k>>>0<(c[20368]|0)>>>0)tc();else{c[s+20>>2]=k;c[k+24>>2]=s;l=g;m=h;break}else{l=g;m=h}}else{l=g;m=h}}else{l=a;m=b}while(0);s=c[20368]|0;if(d>>>0<s>>>0)tc();v=a+(b+4)|0;w=c[v>>2]|0;if(!(w&2)){if((d|0)==(c[20370]|0)){u=(c[20367]|0)+m|0;c[20367]=u;c[20370]=l;c[l+4>>2]=u|1;if((l|0)!=(c[20369]|0))return;c[20369]=0;c[20366]=0;return}if((d|0)==(c[20369]|0)){u=(c[20366]|0)+m|0;c[20366]=u;c[20369]=l;c[l+4>>2]=u|1;c[l+u>>2]=u;return}u=(w&-8)+m|0;t=w>>>3;do if(w>>>0>=256){p=c[a+(b+24)>>2]|0;e=c[a+(b+12)>>2]|0;do if((e|0)==(d|0)){k=a+(b+20)|0;n=c[k>>2]|0;if(!n){f=a+(b+16)|0;j=c[f>>2]|0;if(!j){x=0;break}else{y=j;z=f}}else{y=n;z=k}while(1){k=y+20|0;n=c[k>>2]|0;if(n){y=n;z=k;continue}k=y+16|0;n=c[k>>2]|0;if(!n){A=y;B=z;break}else{y=n;z=k}}if(B>>>0<s>>>0)tc();else{c[B>>2]=0;x=A;break}}else{k=c[a+(b+8)>>2]|0;if(k>>>0<s>>>0)tc();n=k+12|0;if((c[n>>2]|0)!=(d|0))tc();f=e+8|0;if((c[f>>2]|0)==(d|0)){c[n>>2]=e;c[f>>2]=k;x=e;break}else tc()}while(0);if(p){e=c[a+(b+28)>>2]|0;h=81760+(e<<2)|0;if((d|0)==(c[h>>2]|0)){c[h>>2]=x;if(!x){c[20365]=c[20365]&~(1<<e);break}}else{if(p>>>0<(c[20368]|0)>>>0)tc();e=p+16|0;if((c[e>>2]|0)==(d|0))c[e>>2]=x;else c[p+20>>2]=x;if(!x)break}e=c[20368]|0;if(x>>>0<e>>>0)tc();c[x+24>>2]=p;h=c[a+(b+16)>>2]|0;do if(h)if(h>>>0<e>>>0)tc();else{c[x+16>>2]=h;c[h+24>>2]=x;break}while(0);h=c[a+(b+20)>>2]|0;if(h)if(h>>>0<(c[20368]|0)>>>0)tc();else{c[x+20>>2]=h;c[h+24>>2]=x;break}}}else{h=c[a+(b+8)>>2]|0;e=c[a+(b+12)>>2]|0;p=81496+(t<<1<<2)|0;if((h|0)!=(p|0)){if(h>>>0<s>>>0)tc();if((c[h+12>>2]|0)!=(d|0))tc()}if((e|0)==(h|0)){c[20364]=c[20364]&~(1<<t);break}if((e|0)!=(p|0)){if(e>>>0<s>>>0)tc();p=e+8|0;if((c[p>>2]|0)==(d|0))C=p;else tc()}else C=e+8|0;c[h+12>>2]=e;c[C>>2]=h}while(0);c[l+4>>2]=u|1;c[l+u>>2]=u;if((l|0)==(c[20369]|0)){c[20366]=u;return}else D=u}else{c[v>>2]=w&-2;c[l+4>>2]=m|1;c[l+m>>2]=m;D=m}m=D>>>3;if(D>>>0<256){w=m<<1;v=81496+(w<<2)|0;u=c[20364]|0;C=1<<m;if(u&C){m=81496+(w+2<<2)|0;d=c[m>>2]|0;if(d>>>0<(c[20368]|0)>>>0)tc();else{E=m;F=d}}else{c[20364]=u|C;E=81496+(w+2<<2)|0;F=v}c[E>>2]=l;c[F+12>>2]=l;c[l+8>>2]=F;c[l+12>>2]=v;return}v=D>>>8;if(v)if(D>>>0>16777215)G=31;else{F=(v+1048320|0)>>>16&8;E=v<<F;v=(E+520192|0)>>>16&4;w=E<<v;E=(w+245760|0)>>>16&2;C=14-(v|F|E)+(w<<E>>>15)|0;G=D>>>(C+7|0)&1|C<<1}else G=0;C=81760+(G<<2)|0;c[l+28>>2]=G;c[l+20>>2]=0;c[l+16>>2]=0;E=c[20365]|0;w=1<<G;if(!(E&w)){c[20365]=E|w;c[C>>2]=l;c[l+24>>2]=C;c[l+12>>2]=l;c[l+8>>2]=l;return}w=c[C>>2]|0;a:do if((c[w+4>>2]&-8|0)==(D|0))H=w;else{C=D<<((G|0)==31?0:25-(G>>>1)|0);E=w;while(1){F=E+16+(C>>>31<<2)|0;v=c[F>>2]|0;if(!v){I=F;J=E;break}if((c[v+4>>2]&-8|0)==(D|0)){H=v;break a}else{C=C<<1;E=v}}if(I>>>0<(c[20368]|0)>>>0)tc();c[I>>2]=l;c[l+24>>2]=J;c[l+12>>2]=l;c[l+8>>2]=l;return}while(0);J=H+8|0;I=c[J>>2]|0;D=c[20368]|0;if(!(I>>>0>=D>>>0&H>>>0>=D>>>0))tc();c[I+12>>2]=l;c[J>>2]=l;c[l+8>>2]=I;c[l+12>>2]=H;c[l+24>>2]=0;return}function vy(a){a=a|0;return}function wy(a){a=a|0;var b=0;b=a+4|0;c[b>>2]=(c[b>>2]|0)+1;return}function xy(a){a=a|0;var b=0,d=0,e=0;b=a+4|0;d=c[b>>2]|0;c[b>>2]=d+-1;if(!d){td[c[(c[a>>2]|0)+8>>2]&255](a);e=1}else e=0;return e|0}function yy(a){a=a|0;if(xy(a)|0)zy(a);return}function zy(a){a=a|0;var b=0,d=0;b=a+8|0;d=c[b>>2]|0;c[b>>2]=d+-1;if(!d)td[c[(c[a>>2]|0)+16>>2]&255](a);return}function Ay(b,d){b=b|0;d=d|0;c[b>>2]=78648;Cy(b+4|0,(a[d>>0]&1)==0?d+1|0:c[d+8>>2]|0);return}function By(a,b){a=a|0;b=b|0;c[a>>2]=78648;Cy(a+4|0,b);return}function Cy(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=yH(b|0)|0;e=Mw(d+13|0)|0;c[e>>2]=d;c[e+4>>2]=d;c[e+8>>2]=0;f=e+12|0;zH(f|0,b|0,d+1|0)|0;c[a>>2]=f;return}function Dy(a,b,d){a=a|0;b=b|0;d=d|0;Jc(82048)|0;if((c[a>>2]|0)==1)do zc(82080,82048)|0;while((c[a>>2]|0)==1);if(!(c[a>>2]|0)){c[a>>2]=1;yb(82048)|0;td[d&255](b);Jc(82048)|0;c[a>>2]=-1;yb(82048)|0;nc(82080)|0}else yb(82048)|0;return}function Ey(b,d){b=b|0;d=d|0;if(!(a[d>>0]&1)){c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2]}else Fy(b,c[d+8>>2]|0,c[d+4>>2]|0);return}function Fy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0>4294967279)Jw(b);if(e>>>0<11){a[b>>0]=e<<1;f=b+1|0}else{g=e+16&-16;h=Mw(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=e;f=h}zH(f|0,d|0,e|0)|0;a[f+e>>0]=0;return}function Gy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>4294967279)Jw(b);if(d>>>0<11){a[b>>0]=d<<1;f=b+1|0}else{g=d+16&-16;h=Mw(g)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}BH(f|0,e|0,d|0)|0;a[f+d>>0]=0;return}function Hy(b){b=b|0;if(a[b>>0]&1)Ow(c[b+8>>2]|0);return}function Iy(b,d){b=b|0;d=d|0;var e=0,f=0;if((b|0)!=(d|0)){e=a[d>>0]|0;f=(e&1)==0;Ky(b,f?d+1|0:c[d+8>>2]|0,f?(e&255)>>>1:c[d+4>>2]|0)|0}return b|0}function Jy(a,b){a=a|0;b=b|0;return Ky(a,b,yH(b|0)|0)|0}function Ky(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}f=(h&1)==0;do if(g>>>0>=e>>>0){if(f)i=b+1|0;else i=c[b+8>>2]|0;AH(i|0,d|0,e|0)|0;a[i+e>>0]=0;if(!(a[b>>0]&1)){a[b>>0]=e<<1;break}else{c[b+4>>2]=e;break}}else{if(f)j=(h&255)>>>1;else j=c[b+4>>2]|0;Qy(b,g,e-g|0,j,0,j,e,d)}while(0);return b|0}function Ly(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=a[b>>0]|0;g=(f&1)==0;if(g)h=(f&255)>>>1;else h=c[b+4>>2]|0;do if(h>>>0>=d>>>0)if(g){a[b+1+d>>0]=0;a[b>>0]=d<<1;break}else{a[(c[b+8>>2]|0)+d>>0]=0;c[b+4>>2]=d;break}else My(b,d-h|0,e)|0;while(0);return}function My(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;if(d){f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}if(!(h&1))i=(h&255)>>>1;else i=c[b+4>>2]|0;if((g-i|0)>>>0<d>>>0){Ry(b,g,d-g+i|0,i,i,0,0);j=a[b>>0]|0}else j=h;if(!(j&1))k=b+1|0;else k=c[b+8>>2]|0;BH(k+i|0,e|0,d|0)|0;e=i+d|0;if(!(a[b>>0]&1))a[b>>0]=e<<1;else c[b+4>>2]=e;a[k+e>>0]=0}return b|0}function Ny(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(d>>>0>4294967279)Jw(b);e=a[b>>0]|0;if(!(e&1)){f=10;g=e}else{e=c[b>>2]|0;f=(e&-2)+-1|0;g=e&255}if(!(g&1))h=(g&255)>>>1;else h=c[b+4>>2]|0;e=h>>>0>d>>>0?h:d;if(e>>>0<11)i=10;else i=(e+16&-16)+-1|0;do if((i|0)!=(f|0)){do if((i|0)!=10){e=Mw(i+1|0)|0;if(!(g&1)){j=e;k=1;l=b+1|0;m=0;break}else{j=e;k=1;l=c[b+8>>2]|0;m=1;break}}else{j=b+1|0;k=0;l=c[b+8>>2]|0;m=1}while(0);if(!(g&1))n=(g&255)>>>1;else n=c[b+4>>2]|0;zH(j|0,l|0,n+1|0)|0;if(m)Ow(l);if(k){c[b>>2]=i+1|1;c[b+4>>2]=h;c[b+8>>2]=j;break}else{a[b>>0]=h<<1;break}}while(0);return}function Oy(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a[b>>0]|0;f=(e&1)!=0;if(f){g=(c[b>>2]&-2)+-1|0;h=c[b+4>>2]|0}else{g=10;h=(e&255)>>>1}if((h|0)==(g|0)){Ry(b,g,1,g,g,0,0);if(!(a[b>>0]&1))i=7;else i=8}else if(f)i=8;else i=7;if((i|0)==7){a[b>>0]=(h<<1)+2;j=b+1|0;k=h+1|0}else if((i|0)==8){i=c[b+8>>2]|0;f=h+1|0;c[b+4>>2]=f;j=i;k=f}a[j+h>>0]=d;a[j+k>>0]=0;return}function Py(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=10;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}if(!(h&1))i=(h&255)>>>1;else i=c[b+4>>2]|0;if((g-i|0)>>>0>=e>>>0){if(e){if(!(h&1))j=b+1|0;else j=c[b+8>>2]|0;zH(j+i|0,d|0,e|0)|0;h=i+e|0;if(!(a[b>>0]&1))a[b>>0]=h<<1;else c[b+4>>2]=h;a[j+h>>0]=0}}else Qy(b,g,e-g+i|0,i,i,0,e,d);return b|0}function Qy(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;if((-18-d|0)>>>0<e>>>0)Jw(b);if(!(a[b>>0]&1))k=b+1|0;else k=c[b+8>>2]|0;if(d>>>0<2147483623){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;n=m>>>0<11?11:m+16&-16}else n=-17;m=Mw(n)|0;if(g)zH(m|0,k|0,g|0)|0;if(i)zH(m+g|0,j|0,i|0)|0;j=f-h|0;if((j|0)!=(g|0))zH(m+(i+g)|0,k+(h+g)|0,j-g|0)|0;if((d|0)!=10)Ow(k);c[b+8>>2]=m;c[b>>2]=n|1;n=j+i|0;c[b+4>>2]=n;a[m+n>>0]=0;return}function Ry(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((-17-d|0)>>>0<e>>>0)Jw(b);if(!(a[b>>0]&1))j=b+1|0;else j=c[b+8>>2]|0;if(d>>>0<2147483623){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;m=l>>>0<11?11:l+16&-16}else m=-17;l=Mw(m)|0;if(g)zH(l|0,j|0,g|0)|0;k=f-h|0;if((k|0)!=(g|0))zH(l+(i+g)|0,j+(h+g)|0,k-g|0)|0;if((d|0)!=10)Ow(j);c[b+8>>2]=l;c[b>>2]=m|1;return}function Sy(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;if(f>>>0>4294967279)Jw(b);if(f>>>0<11){a[b>>0]=e<<1;g=b+1|0}else{h=f+16&-16;f=Mw(h)|0;c[b+8>>2]=f;c[b>>2]=h|1;c[b+4>>2]=e;g=f}zH(g|0,d|0,e|0)|0;a[g+e>>0]=0;return}function Ty(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(e>>>0>1073741807)Jw(b);if(e>>>0<2){a[b>>0]=e<<1;f=b+4|0}else{g=e+4&-4;h=Mw(g<<2)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=e;f=h}Ew(f,d,e)|0;c[f+(e<<2)>>2]=0;return}function Uy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(d>>>0>1073741807)Jw(b);if(d>>>0<2){a[b>>0]=d<<1;f=b+4|0}else{g=d+4&-4;h=Mw(g<<2)|0;c[b+8>>2]=h;c[b>>2]=g|1;c[b+4>>2]=d;f=h}Gw(f,e,d)|0;c[f+(d<<2)>>2]=0;return}function Vy(b){b=b|0;if(a[b>>0]&1)Ow(c[b+8>>2]|0);return}function Wy(a,b){a=a|0;b=b|0;return Xy(a,b,Dw(b)|0)|0}function Xy(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=a[b>>0]|0;if(!(f&1)){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)+-1|0;h=f&255}f=(h&1)==0;do if(g>>>0>=e>>>0){if(f)i=b+4|0;else i=c[b+8>>2]|0;Fw(i,d,e)|0;c[i+(e<<2)>>2]=0;if(!(a[b>>0]&1)){a[b>>0]=e<<1;break}else{c[b+4>>2]=e;break}}else{if(f)j=(h&255)>>>1;else j=c[b+4>>2]|0;_y(b,g,e-g|0,j,0,j,e,d)}while(0);return b|0}function Yy(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(d>>>0>1073741807)Jw(b);e=a[b>>0]|0;if(!(e&1)){f=1;g=e}else{e=c[b>>2]|0;f=(e&-2)+-1|0;g=e&255}if(!(g&1))h=(g&255)>>>1;else h=c[b+4>>2]|0;e=h>>>0>d>>>0?h:d;if(e>>>0<2)i=1;else i=(e+4&-4)+-1|0;do if((i|0)!=(f|0)){do if((i|0)!=1){e=Mw((i<<2)+4|0)|0;if(!(g&1)){j=e;k=1;l=b+4|0;m=0;break}else{j=e;k=1;l=c[b+8>>2]|0;m=1;break}}else{j=b+4|0;k=0;l=c[b+8>>2]|0;m=1}while(0);if(!(g&1))n=(g&255)>>>1;else n=c[b+4>>2]|0;Ew(j,l,n+1|0)|0;if(m)Ow(l);if(k){c[b>>2]=i+1|1;c[b+4>>2]=h;c[b+8>>2]=j;break}else{a[b>>0]=h<<1;break}}while(0);return}function Zy(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a[b>>0]|0;f=(e&1)!=0;if(f){g=(c[b>>2]&-2)+-1|0;h=c[b+4>>2]|0}else{g=1;h=(e&255)>>>1}if((h|0)==(g|0)){$y(b,g,1,g,g,0,0);if(!(a[b>>0]&1))i=7;else i=8}else if(f)i=8;else i=7;if((i|0)==7){a[b>>0]=(h<<1)+2;j=b+4|0;k=h+1|0}else if((i|0)==8){i=c[b+8>>2]|0;f=h+1|0;c[b+4>>2]=f;j=i;k=f}c[j+(h<<2)>>2]=d;c[j+(k<<2)>>2]=0;return}function _y(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;if((1073741806-d|0)>>>0<e>>>0)Jw(b);if(!(a[b>>0]&1))k=b+4|0;else k=c[b+8>>2]|0;if(d>>>0<536870887){l=e+d|0;e=d<<1;m=l>>>0<e>>>0?e:l;n=m>>>0<2?2:m+4&-4}else n=1073741807;m=Mw(n<<2)|0;if(g)Ew(m,k,g)|0;if(i)Ew(m+(g<<2)|0,j,i)|0;j=f-h|0;if((j|0)!=(g|0))Ew(m+(i+g<<2)|0,k+(h+g<<2)|0,j-g|0)|0;if((d|0)!=1)Ow(k);c[b+8>>2]=m;c[b>>2]=n|1;n=j+i|0;c[b+4>>2]=n;c[m+(n<<2)>>2]=0;return}function $y(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((1073741807-d|0)>>>0<e>>>0)Jw(b);if(!(a[b>>0]&1))j=b+4|0;else j=c[b+8>>2]|0;if(d>>>0<536870887){k=e+d|0;e=d<<1;l=k>>>0<e>>>0?e:k;m=l>>>0<2?2:l+4&-4}else m=1073741807;l=Mw(m<<2)|0;if(g)Ew(l,j,g)|0;k=f-h|0;if((k|0)!=(g|0))Ew(l+(i+g<<2)|0,j+(h+g<<2)|0,k-g|0)|0;if((d|0)!=1)Ow(j);c[b+8>>2]=l;c[b>>2]=m|1;return}function az(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=d;g=e-f|0;if(g>>>0>4294967279)Jw(b);if(g>>>0<11){a[b>>0]=g<<1;h=b+1|0}else{i=g+16&-16;j=Mw(i)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=g;h=j}j=e-f|0;if((d|0)!=(e|0)){f=d;d=h;while(1){a[d>>0]=a[f>>0]|0;f=f+1|0;if((f|0)==(e|0))break;else d=d+1|0}}a[h+j>>0]=0;return}function bz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=d;g=e-f|0;h=g>>2;if(h>>>0>1073741807)Jw(b);if(h>>>0<2){a[b>>0]=g>>>1;i=b+4|0}else{g=h+4&-4;j=Mw(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}j=(e-f|0)>>>2;if((d|0)!=(e|0)){f=d;d=i;while(1){c[d>>2]=c[f>>2];f=f+4|0;if((f|0)==(e|0))break;else d=d+4|0}}c[i+(j<<2)>>2]=0;return}function cz(a,b){a=a|0;b=b|0;c[a+16>>2]=(c[a+24>>2]|0)==0|b;return}function dz(a){a=a|0;ez(a);return}function ez(a){a=a|0;c[a>>2]=82200;gz(a,0);YD(a+28|0);qy(c[a+32>>2]|0);qy(c[a+36>>2]|0);qy(c[a+48>>2]|0);qy(c[a+60>>2]|0);return}function fz(a){a=a|0;ez(a);Ow(a);return}function gz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=c[a+40>>2]|0;e=a+32|0;f=a+36|0;if(d){g=d;do{g=g+-1|0;xd[c[(c[e>>2]|0)+(g<<2)>>2]&63](b,a,c[(c[f>>2]|0)+(g<<2)>>2]|0)}while((g|0)!=0)}return}function hz(a){a=a|0;var b=0,d=0;b=i;i=i+16|0;d=b;XD(d,a+28|0);i=b;return c[d>>2]|0}function iz(a,b){a=a|0;b=b|0;var d=0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0&1;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;d=a+32|0;a=d+40|0;do{c[d>>2]=0;d=d+4|0}while((d|0)<(a|0));WD(b);return}function jz(a){a=a|0;c[a>>2]=82136;YD(a+4|0);return}function kz(a){a=a|0;c[a>>2]=82136;YD(a+4|0);Ow(a);return}function lz(a){a=a|0;var b=0;c[a>>2]=82136;WD(a+4|0);b=a+8|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[b+20>>2]=0;return}function mz(a,b){a=a|0;b=b|0;return}function nz(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function oz(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function pz(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return}function qz(a){a=a|0;return 0}function rz(a){a=a|0;return 0}function sz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;f=b+12|0;g=b+16|0;a:do if((e|0)>0){h=d;i=0;while(1){j=c[f>>2]|0;if(j>>>0<(c[g>>2]|0)>>>0){c[f>>2]=j+1;k=a[j>>0]|0}else{j=wd[c[(c[b>>2]|0)+40>>2]&127](b)|0;if((j|0)==-1){l=i;break a}k=j&255}a[h>>0]=k;j=i+1|0;if((j|0)<(e|0)){h=h+1|0;i=j}else{l=j;break}}}else l=0;while(0);return l|0}function tz(a){a=a|0;return -1}function uz(a){a=a|0;var b=0,e=0;if((wd[c[(c[a>>2]|0)+36>>2]&127](a)|0)==-1)b=-1;else{e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a>>0]|0}return b|0}function vz(a,b){a=a|0;b=b|0;return -1}function wz(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=b+24|0;h=b+28|0;a:do if((f|0)>0){i=e;j=0;while(1){k=c[g>>2]|0;if(k>>>0>=(c[h>>2]|0)>>>0){if((Cd[c[(c[b>>2]|0)+52>>2]&63](b,d[i>>0]|0)|0)==-1){l=j;break a}}else{m=a[i>>0]|0;c[g>>2]=k+1;a[k>>0]=m}m=j+1|0;if((m|0)<(f|0)){i=i+1|0;j=m}else{l=m;break}}}else l=0;while(0);return l|0}function xz(a,b){a=a|0;b=b|0;return -1}function yz(a,b){a=a|0;b=b|0;return}function zz(a){a=a|0;ez(a+8|0);return}function Az(a){a=a|0;ez(a+((c[(c[a>>2]|0)+-12>>2]|0)+8)|0);return}function Bz(a){a=a|0;ez(a+8|0);Ow(a);return}function Cz(a){a=a|0;Bz(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Dz(e,f,g){e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;i=i+16|0;j=h;a[e>>0]=0;k=c[(c[f>>2]|0)+-12>>2]|0;l=f+(k+16)|0;m=c[l>>2]|0;if(!m){n=c[f+(k+72)>>2]|0;if(n)Ez(n)|0;do if(!g?(n=c[(c[f>>2]|0)+-12>>2]|0,(c[f+(n+4)>>2]&4096|0)!=0):0){c[j>>2]=hz(f+n|0)|0;n=_D(j,83696)|0;YD(j);o=c[f+((c[(c[f>>2]|0)+-12>>2]|0)+24)>>2]|0;p=n+8|0;a:do if(!o){q=0;r=9}else{n=o;while(1){s=n;if((c[s+12>>2]|0)==(c[s+16>>2]|0)){t=(wd[c[(c[n>>2]|0)+36>>2]&127](s)|0)==-1;s=t?0:n;if(t){q=s;r=9;break a}else u=s}else u=n;s=u;t=s+12|0;v=c[t>>2]|0;w=s+16|0;if((v|0)==(c[w>>2]|0))x=wd[c[(c[u>>2]|0)+36>>2]&127](s)|0;else x=d[v>>0]|0;if((x&255)<<24>>24<=-1){y=s;z=u;break a}if(!(b[(c[p>>2]|0)+(x<<24>>24<<1)>>1]&8192)){y=s;z=u;break a}v=c[t>>2]|0;if((v|0)==(c[w>>2]|0))wd[c[(c[u>>2]|0)+40>>2]&127](s)|0;else c[t>>2]=v+1;if(!u){q=0;r=9;break}else n=u}}while(0);if((r|0)==9){y=q;z=q}if(z){if((c[y+12>>2]|0)!=(c[y+16>>2]|0))break;if((wd[c[(c[z>>2]|0)+36>>2]&127](y)|0)!=-1)break}p=c[(c[f>>2]|0)+-12>>2]|0;o=f+(p+16)|0;c[o>>2]=c[o>>2]|(c[f+(p+24)>>2]|0)==0|6}while(0);a[e>>0]=(c[f+((c[(c[f>>2]|0)+-12>>2]|0)+16)>>2]|0)==0&1}else c[l>>2]=m|(c[f+(k+24)>>2]|0)==0|4;i=h;return}function Ez(b){b=b|0;var d=0,e=0,f=0;d=i;i=i+16|0;e=d;if(c[b+((c[(c[b>>2]|0)+-12>>2]|0)+24)>>2]|0){Mz(e,b);if((a[e>>0]|0)!=0?(f=c[b+((c[(c[b>>2]|0)+-12>>2]|0)+24)>>2]|0,(wd[c[(c[f>>2]|0)+24>>2]&127](f)|0)==-1):0){f=b+((c[(c[b>>2]|0)+-12>>2]|0)+16)|0;c[f>>2]=c[f>>2]|1}Nz(e)}i=d;return b|0}function Fz(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;e=i;i=i+32|0;f=e+24|0;g=e+16|0;h=e+12|0;j=e+8|0;k=e+28|0;l=e;m=e+20|0;n=e+4|0;Dz(k,b,0);if(a[k>>0]|0){c[l>>2]=0;c[n>>2]=hz(b+(c[(c[b>>2]|0)+-12>>2]|0)|0)|0;k=_D(n,82656)|0;o=c[(c[b>>2]|0)+-12>>2]|0;p=c[(c[k>>2]|0)+16>>2]|0;c[h>>2]=c[b+(o+24)>>2];c[j>>2]=0;c[g>>2]=c[h>>2];c[f>>2]=c[j>>2];vd[p&63](k,g,f,b+o|0,l,m)|0;YD(n);c[d>>2]=c[m>>2];m=c[(c[b>>2]|0)+-12>>2]|0;d=b+(m+16)|0;c[d>>2]=c[d>>2]|c[l>>2]|(c[b+(m+24)>>2]|0)==0}i=e;return b|0}function Gz(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0;f=i;i=i+16|0;g=f;h=b+4|0;c[h>>2]=0;Dz(g,b,1);j=c[(c[b>>2]|0)+-12>>2]|0;if(a[g>>0]|0){g=c[b+(j+24)>>2]|0;k=od[c[(c[g>>2]|0)+32>>2]&127](g,d,e)|0;c[h>>2]=k;if((k|0)!=(e|0)){e=c[(c[b>>2]|0)+-12>>2]|0;k=b+(e+16)|0;c[k>>2]=c[k>>2]|(c[b+(e+24)>>2]|0)==0|6}}else{e=b+(j+16)|0;c[e>>2]=c[e>>2]|(c[b+(j+24)>>2]|0)==0|4}i=f;return b|0}function Hz(a,b){a=a|0;b=b|0;return}function Iz(a){a=a|0;ez(a+4|0);return}function Jz(a){a=a|0;ez(a+((c[(c[a>>2]|0)+-12>>2]|0)+4)|0);return}function Kz(a){a=a|0;ez(a+4|0);Ow(a);return}function Lz(a){a=a|0;Kz(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return}function Mz(b,d){b=b|0;d=d|0;var e=0,f=0;a[b>>0]=0;c[b+4>>2]=d;e=c[(c[d>>2]|0)+-12>>2]|0;if(!(c[d+(e+16)>>2]|0)){f=c[d+(e+72)>>2]|0;if(f)Ez(f)|0;a[b>>0]=1}return}function Nz(a){a=a|0;var b=0,d=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)+-12>>2]|0;if(((((c[a+(d+24)>>2]|0)!=0?(c[a+(d+16)>>2]|0)==0:0)?(c[a+(d+4)>>2]&8192|0)!=0:0)?!(Ga()|0):0)?(d=c[b>>2]|0,a=c[d+((c[(c[d>>2]|0)+-12>>2]|0)+24)>>2]|0,(wd[c[(c[a>>2]|0)+24>>2]&127](a)|0)==-1):0){a=c[b>>2]|0;b=a+((c[(c[a>>2]|0)+-12>>2]|0)+16)|0;c[b>>2]=c[b>>2]|1}return}function Oz(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e+20|0;g=e+16|0;h=e+8|0;j=e;Mz(h,b);if(a[h>>0]|0){c[j>>2]=hz(b+(c[(c[b>>2]|0)+-12>>2]|0)|0)|0;k=_D(j,82832)|0;YD(j);j=c[(c[b>>2]|0)+-12>>2]|0;l=c[b+(j+24)>>2]|0;m=b+j|0;n=b+(j+76)|0;j=c[n>>2]|0;if((j|0)==-1){c[f>>2]=hz(m)|0;o=_D(f,83696)|0;p=Cd[c[(c[o>>2]|0)+28>>2]&63](o,32)|0;YD(f);o=p<<24>>24;c[n>>2]=o;q=o}else q=j;j=c[(c[k>>2]|0)+16>>2]|0;c[g>>2]=l;c[f>>2]=c[g>>2];if(!(Ed[j&31](k,f,m,q&255,d)|0)){d=b+((c[(c[b>>2]|0)+-12>>2]|0)+16)|0;c[d>>2]=c[d>>2]|5}}Nz(h);i=e;return b|0}function Pz(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=i;i=i+32|0;f=e+20|0;g=e+16|0;h=e+8|0;j=e;Mz(h,b);if(a[h>>0]|0){c[j>>2]=hz(b+(c[(c[b>>2]|0)+-12>>2]|0)|0)|0;k=_D(j,82832)|0;YD(j);j=c[(c[b>>2]|0)+-12>>2]|0;l=c[b+(j+24)>>2]|0;m=b+j|0;n=b+(j+76)|0;j=c[n>>2]|0;if((j|0)==-1){c[f>>2]=hz(m)|0;o=_D(f,83696)|0;p=Cd[c[(c[o>>2]|0)+28>>2]&63](o,32)|0;YD(f);o=p<<24>>24;c[n>>2]=o;q=o}else q=j;j=c[(c[k>>2]|0)+24>>2]|0;c[g>>2]=l;c[f>>2]=c[g>>2];if(!(Ed[j&31](k,f,m,q&255,d)|0)){d=b+((c[(c[b>>2]|0)+-12>>2]|0)+16)|0;c[d>>2]=c[d>>2]|5}}Nz(h);i=e;return b|0}function Qz(a){a=a|0;ez(a);Ow(a);return}function Rz(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;return}function Sz(a){a=a|0;return}function Tz(a){a=a|0;return}function Uz(a){a=a|0;Ow(a);return}function Vz(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do if((e|0)==(f|0)){g=c;h=6}else{b=e;i=c;while(1){if((i|0)==(d|0)){j=-1;break a}k=a[i>>0]|0;l=a[b>>0]|0;if(k<<24>>24<l<<24>>24){j=-1;break a}if(l<<24>>24<k<<24>>24){j=1;break a}k=i+1|0;b=b+1|0;if((b|0)==(f|0)){g=k;h=6;break}else i=k}}while(0);if((h|0)==6)j=(g|0)!=(d|0)&1;return j|0}function Wz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;az(a,c,d);return}function Xz(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0))e=0;else{b=0;f=c;while(1){c=(a[f>>0]|0)+(b<<4)|0;g=c&-268435456;h=(g>>>24|g)^c;f=f+1|0;if((f|0)==(d|0)){e=h;break}else b=h}}return e|0}function Yz(a){a=a|0;return}function Zz(a){a=a|0;Ow(a);return}function _z(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;a:do if((e|0)==(f|0)){g=b;h=6}else{a=e;i=b;while(1){if((i|0)==(d|0)){j=-1;break a}k=c[i>>2]|0;l=c[a>>2]|0;if((k|0)<(l|0)){j=-1;break a}if((l|0)<(k|0)){j=1;break a}k=i+4|0;a=a+4|0;if((a|0)==(f|0)){g=k;h=6;break}else i=k}}while(0);if((h|0)==6)j=(g|0)!=(d|0)&1;return j|0}function $z(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bz(a,c,d);return}function aA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0))e=0;else{a=0;f=b;while(1){b=(c[f>>2]|0)+(a<<4)|0;g=b&-268435456;h=(g>>>24|g)^b;f=f+4|0;if((f|0)==(d|0)){e=h;break}else a=h}}return e|0}function bA(a){a=a|0;return}function cA(a){a=a|0;Ow(a);return}function dA(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+64|0;k=j+48|0;l=j+16|0;m=j+4|0;n=j+8|0;o=j+52|0;p=j;q=j+12|0;r=j+24|0;s=j+20|0;do if(!(c[f+4>>2]&1)){c[m>>2]=-1;t=c[(c[b>>2]|0)+16>>2]|0;c[n>>2]=c[d>>2];c[o>>2]=c[e>>2];c[l>>2]=c[n>>2];c[k>>2]=c[o>>2];u=vd[t&63](b,l,k,f,g,m)|0;c[d>>2]=u;t=c[m>>2]|0;if((t|0)==1){a[h>>0]=1;v=u;break}else if(!t){a[h>>0]=0;v=u;break}else{a[h>>0]=1;c[g>>2]=4;v=u;break}}else{u=hz(f)|0;c[p>>2]=u;t=_D(p,83696)|0;xy(u)|0;u=hz(f)|0;c[q>>2]=u;w=_D(q,83840)|0;xy(u)|0;ud[c[(c[w>>2]|0)+24>>2]&127](r,w);ud[c[(c[w>>2]|0)+28>>2]&127](r+12|0,w);c[s>>2]=c[e>>2];c[k>>2]=c[s>>2];a[h>>0]=(MF(d,k,r,r+24|0,t,g,1)|0)==(r|0)&1;t=c[d>>2]|0;Hy(r+12|0);Hy(r);v=t}while(0);i=j;return v|0}function eA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=NF(a,k,j,e,f,g)|0;i=h;return m|0}function fA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=OF(a,k,j,e,f,g)|0;i=h;return m|0}function gA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=PF(a,k,j,e,f,g)|0;i=h;return m|0}function hA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=QF(a,k,j,e,f,g)|0;i=h;return m|0}function iA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=RF(a,k,j,e,f,g)|0;i=h;return m|0}function jA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=SF(a,k,j,e,f,g)|0;i=h;return m|0}function kA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=TF(a,k,j,e,f,g)|0;i=h;return m|0}function lA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=UF(a,k,j,e,f,g)|0;i=h;return m|0}function mA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=VF(a,k,j,e,f,g)|0;i=h;return m|0}function nA(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;b=i;i=i+240|0;k=b;l=b+208|0;m=b+188|0;n=b+200|0;o=b+8|0;p=b+4|0;q=b+24|0;r=b+184|0;s=b+204|0;c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;t=hz(g)|0;c[n>>2]=t;g=_D(n,83696)|0;Ad[c[(c[g>>2]|0)+32>>2]&31](g,82664,82690,l)|0;xy(t)|0;c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;if(!(a[o>>0]&1))u=10;else u=(c[o>>2]&-2)+-1|0;Ly(o,u,0);u=o+8|0;t=o+1|0;g=(a[o>>0]&1)==0?t:c[u>>2]|0;c[p>>2]=g;c[r>>2]=q;c[s>>2]=0;n=o+4|0;v=c[e>>2]|0;w=g;a:while(1){if(v)if((c[v+12>>2]|0)==(c[v+16>>2]|0)?(wd[c[(c[v>>2]|0)+36>>2]&127](v)|0)==-1:0){c[e>>2]=0;x=0}else x=v;else x=0;g=(x|0)==0;y=c[f>>2]|0;do if(y){if((c[y+12>>2]|0)!=(c[y+16>>2]|0))if(g){z=y;break}else{A=x;B=y;C=w;break a}if((wd[c[(c[y>>2]|0)+36>>2]&127](y)|0)!=-1)if(g){z=y;break}else{A=x;B=y;C=w;break a}else{c[f>>2]=0;D=13;break}}else D=13;while(0);if((D|0)==13){D=0;if(g){A=x;B=0;C=w;break}else z=0}y=a[o>>0]|0;E=(y&1)==0?(y&255)>>>1:c[n>>2]|0;if((c[p>>2]|0)==(w+E|0)){Ly(o,E<<1,0);if(!(a[o>>0]&1))F=10;else F=(c[o>>2]&-2)+-1|0;Ly(o,F,0);y=(a[o>>0]&1)==0?t:c[u>>2]|0;c[p>>2]=y+E;G=y}else G=w;y=x+12|0;E=c[y>>2]|0;H=x+16|0;if((E|0)==(c[H>>2]|0))I=wd[c[(c[x>>2]|0)+36>>2]&127](x)|0;else I=d[E>>0]|0;if(oA(I&255,16,G,p,s,0,m,q,r,l)|0){A=x;B=z;C=G;break}E=c[y>>2]|0;if((E|0)==(c[H>>2]|0)){wd[c[(c[x>>2]|0)+40>>2]&127](x)|0;v=x;w=G;continue}else{c[y>>2]=E+1;v=x;w=G;continue}}Ly(o,(c[p>>2]|0)-C|0,0);C=(a[o>>0]&1)==0?t:c[u>>2]|0;u=pA()|0;c[k>>2]=j;if((WF(C,u,86656,k)|0)!=1)c[h>>2]=4;if(A)if((c[A+12>>2]|0)==(c[A+16>>2]|0)?(wd[c[(c[A>>2]|0)+36>>2]&127](A)|0)==-1:0){c[e>>2]=0;J=0}else J=A;else J=0;A=(J|0)==0;do if(B){if((c[B+12>>2]|0)==(c[B+16>>2]|0)?(wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1:0){c[f>>2]=0;D=37;break}if(!A)D=38}else D=37;while(0);if((D|0)==37?A:0)D=38;if((D|0)==38)c[h>>2]=c[h>>2]|2;h=c[e>>2]|0;Hy(o);Hy(m);i=b;return h|0}function oA(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0;m=c[f>>2]|0;n=(m|0)==(e|0);do if(n){o=(a[l+24>>0]|0)==b<<24>>24;if(!o?(a[l+25>>0]|0)!=b<<24>>24:0){p=5;break}c[f>>2]=e+1;a[e>>0]=o?43:45;c[g>>2]=0;q=0}else p=5;while(0);do if((p|0)==5){o=a[i>>0]|0;if(b<<24>>24==h<<24>>24?(((o&1)==0?(o&255)>>>1:c[i+4>>2]|0)|0)!=0:0){o=c[k>>2]|0;if((o-j|0)>=160){q=0;break}r=c[g>>2]|0;c[k>>2]=o+4;c[o>>2]=r;c[g>>2]=0;q=0;break}r=l+26|0;o=l;while(1){if((a[o>>0]|0)==b<<24>>24){s=o;break}o=o+1|0;if((o|0)==(r|0)){s=r;break}}r=s-l|0;if((r|0)>23)q=-1;else{if((d|0)==10|(d|0)==8){if((r|0)>=(d|0)){q=-1;break}}else if((d|0)==16?(r|0)>=22:0){if(n){q=-1;break}if((m-e|0)>=3){q=-1;break}if((a[m+-1>>0]|0)!=48){q=-1;break}c[g>>2]=0;o=a[82664+r>>0]|0;c[f>>2]=m+1;a[m>>0]=o;q=0;break}o=a[82664+r>>0]|0;c[f>>2]=m+1;a[m>>0]=o;c[g>>2]=(c[g>>2]|0)+1;q=0}}while(0);return q|0}function pA(){if((a[86664]|0)==0?(Da(86664)|0)!=0:0){c[21670]=qb(2147483647,86672,0)|0;$c(86664)}return c[21670]|0}function qA(a){a=a|0;return}function rA(a){a=a|0;Ow(a);return}function sA(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;j=i;i=i+64|0;k=j+48|0;l=j+16|0;m=j+4|0;n=j+8|0;o=j+52|0;p=j;q=j+12|0;r=j+24|0;s=j+20|0;do if(!(c[f+4>>2]&1)){c[m>>2]=-1;t=c[(c[b>>2]|0)+16>>2]|0;c[n>>2]=c[d>>2];c[o>>2]=c[e>>2];c[l>>2]=c[n>>2];c[k>>2]=c[o>>2];u=vd[t&63](b,l,k,f,g,m)|0;c[d>>2]=u;t=c[m>>2]|0;if(!t){a[h>>0]=0;v=u;break}else if((t|0)==1){a[h>>0]=1;v=u;break}else{a[h>>0]=1;c[g>>2]=4;v=u;break}}else{u=hz(f)|0;c[p>>2]=u;t=_D(p,83688)|0;xy(u)|0;u=hz(f)|0;c[q>>2]=u;w=_D(q,83848)|0;xy(u)|0;ud[c[(c[w>>2]|0)+24>>2]&127](r,w);ud[c[(c[w>>2]|0)+28>>2]&127](r+12|0,w);c[s>>2]=c[e>>2];c[k>>2]=c[s>>2];a[h>>0]=(XF(d,k,r,r+24|0,t,g,1)|0)==(r|0)&1;t=c[d>>2]|0;Vy(r+12|0);Vy(r);v=t}while(0);i=j;return v|0}function tA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=YF(a,k,j,e,f,g)|0;i=h;return m|0}function uA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=ZF(a,k,j,e,f,g)|0;i=h;return m|0}function vA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=_F(a,k,j,e,f,g)|0;i=h;return m|0}function wA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=$F(a,k,j,e,f,g)|0;i=h;return m|0}function xA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=aG(a,k,j,e,f,g)|0;i=h;return m|0}function yA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=bG(a,k,j,e,f,g)|0;i=h;return m|0}function zA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=cG(a,k,j,e,f,g)|0;i=h;return m|0}function AA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=dG(a,k,j,e,f,g)|0;i=h;return m|0}function BA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0;h=i;i=i+16|0;j=h+12|0;k=h+8|0;l=h+4|0;m=h;c[l>>2]=c[b>>2];c[m>>2]=c[d>>2];c[k>>2]=c[l>>2];c[j>>2]=c[m>>2];m=eG(a,k,j,e,f,g)|0;i=h;return m|0}function CA(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;b=i;i=i+320|0;j=b;k=b+200|0;l=b+188|0;m=b+8|0;n=b+176|0;o=b+4|0;p=b+16|0;q=b+304|0;r=b+308|0;c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;s=hz(f)|0;c[m>>2]=s;f=_D(m,83688)|0;Ad[c[(c[f>>2]|0)+48>>2]&31](f,82664,82690,k)|0;xy(s)|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;if(!(a[n>>0]&1))t=10;else t=(c[n>>2]&-2)+-1|0;Ly(n,t,0);t=n+8|0;s=n+1|0;f=(a[n>>0]&1)==0?s:c[t>>2]|0;c[o>>2]=f;c[q>>2]=p;c[r>>2]=0;m=n+4|0;u=c[d>>2]|0;v=f;a:while(1){if(u){f=c[u+12>>2]|0;if((f|0)==(c[u+16>>2]|0))w=wd[c[(c[u>>2]|0)+36>>2]&127](u)|0;else w=c[f>>2]|0;if((w|0)==-1){c[d>>2]=0;x=0;y=1}else{x=u;y=0}}else{x=0;y=1}f=c[e>>2]|0;do if(f){z=c[f+12>>2]|0;if((z|0)==(c[f+16>>2]|0))A=wd[c[(c[f>>2]|0)+36>>2]&127](f)|0;else A=c[z>>2]|0;if((A|0)!=-1)if(y){B=f;break}else{C=x;D=f;E=v;break a}else{c[e>>2]=0;F=16;break}}else F=16;while(0);if((F|0)==16){F=0;if(y){C=x;D=0;E=v;break}else B=0}f=a[n>>0]|0;z=(f&1)==0?(f&255)>>>1:c[m>>2]|0;if((c[o>>2]|0)==(v+z|0)){Ly(n,z<<1,0);if(!(a[n>>0]&1))G=10;else G=(c[n>>2]&-2)+-1|0;Ly(n,G,0);f=(a[n>>0]&1)==0?s:c[t>>2]|0;c[o>>2]=f+z;H=f}else H=v;f=x+12|0;z=c[f>>2]|0;I=x+16|0;if((z|0)==(c[I>>2]|0))J=wd[c[(c[x>>2]|0)+36>>2]&127](x)|0;else J=c[z>>2]|0;if(DA(J,16,H,o,r,0,l,p,q,k)|0){C=x;D=B;E=H;break}z=c[f>>2]|0;if((z|0)==(c[I>>2]|0)){wd[c[(c[x>>2]|0)+40>>2]&127](x)|0;u=x;v=H;continue}else{c[f>>2]=z+4;u=x;v=H;continue}}Ly(n,(c[o>>2]|0)-E|0,0);E=(a[n>>0]&1)==0?s:c[t>>2]|0;t=pA()|0;c[j>>2]=h;if((WF(E,t,86656,j)|0)!=1)c[g>>2]=4;if(C){j=c[C+12>>2]|0;if((j|0)==(c[C+16>>2]|0))K=wd[c[(c[C>>2]|0)+36>>2]&127](C)|0;else K=c[j>>2]|0;if((K|0)==-1){c[d>>2]=0;L=1}else L=0}else L=1;do if(D){K=c[D+12>>2]|0;if((K|0)==(c[D+16>>2]|0))M=wd[c[(c[D>>2]|0)+36>>2]&127](D)|0;else M=c[K>>2]|0;if((M|0)!=-1)if(L)break;else{F=45;break}else{c[e>>2]=0;F=43;break}}else F=43;while(0);if((F|0)==43?L:0)F=45;if((F|0)==45)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(n);Hy(l);i=b;return g|0}function DA(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0;m=c[f>>2]|0;n=(m|0)==(e|0);do if(n){o=(c[l+96>>2]|0)==(b|0);if(!o?(c[l+100>>2]|0)!=(b|0):0){p=5;break}c[f>>2]=e+1;a[e>>0]=o?43:45;c[g>>2]=0;q=0}else p=5;while(0);do if((p|0)==5){o=a[i>>0]|0;if((b|0)==(h|0)?(((o&1)==0?(o&255)>>>1:c[i+4>>2]|0)|0)!=0:0){o=c[k>>2]|0;if((o-j|0)>=160){q=0;break}r=c[g>>2]|0;c[k>>2]=o+4;c[o>>2]=r;c[g>>2]=0;q=0;break}r=l+104|0;o=l;while(1){if((c[o>>2]|0)==(b|0)){s=o;break}o=o+4|0;if((o|0)==(r|0)){s=r;break}}r=s-l|0;o=r>>2;if((r|0)>92)q=-1;else{if((d|0)==10|(d|0)==8){if((o|0)>=(d|0)){q=-1;break}}else if((d|0)==16?(r|0)>=88:0){if(n){q=-1;break}if((m-e|0)>=3){q=-1;break}if((a[m+-1>>0]|0)!=48){q=-1;break}c[g>>2]=0;r=a[82664+o>>0]|0;c[f>>2]=m+1;a[m>>0]=r;q=0;break}r=a[82664+o>>0]|0;c[f>>2]=m+1;a[m>>0]=r;c[g>>2]=(c[g>>2]|0)+1;q=0}}while(0);return q|0}function EA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g;j=hz(d)|0;c[h>>2]=j;d=_D(h,83696)|0;Ad[c[(c[d>>2]|0)+32>>2]&31](d,82664,82690,e)|0;e=_D(h,83840)|0;a[f>>0]=wd[c[(c[e>>2]|0)+16>>2]&127](e)|0;ud[c[(c[e>>2]|0)+20>>2]&127](b,e);xy(j)|0;i=g;return}function FA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0;h=i;i=i+16|0;j=h;k=hz(d)|0;c[j>>2]=k;d=_D(j,83696)|0;Ad[c[(c[d>>2]|0)+32>>2]&31](d,82664,82696,e)|0;e=_D(j,83840)|0;a[f>>0]=wd[c[(c[e>>2]|0)+12>>2]&127](e)|0;a[g>>0]=wd[c[(c[e>>2]|0)+16>>2]&127](e)|0;ud[c[(c[e>>2]|0)+20>>2]&127](b,e);xy(k)|0;i=h;return}function GA(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0;do if(b<<24>>24==i<<24>>24)if(a[e>>0]|0){a[e>>0]=0;p=c[h>>2]|0;c[h>>2]=p+1;a[p>>0]=46;p=a[k>>0]|0;if((((p&1)==0?(p&255)>>>1:c[k+4>>2]|0)|0)!=0?(p=c[m>>2]|0,(p-l|0)<160):0){q=c[n>>2]|0;c[m>>2]=p+4;c[p>>2]=q;r=0}else r=0}else r=-1;else{if(b<<24>>24==j<<24>>24?(q=a[k>>0]|0,(((q&1)==0?(q&255)>>>1:c[k+4>>2]|0)|0)!=0):0){if(!(a[e>>0]|0)){r=-1;break}q=c[m>>2]|0;if((q-l|0)>=160){r=0;break}p=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=p;c[n>>2]=0;r=0;break}p=o+32|0;q=o;while(1){if((a[q>>0]|0)==b<<24>>24){s=q;break}q=q+1|0;if((q|0)==(p|0)){s=p;break}}p=s-o|0;if((p|0)<=31){q=a[82664+p>>0]|0;if((p|0)==23|(p|0)==22){a[f>>0]=80;t=c[h>>2]|0;c[h>>2]=t+1;a[t>>0]=q;r=0;break}else if((p|0)==24|(p|0)==25){t=c[h>>2]|0;if((t|0)!=(g|0)?(d[t+-1>>0]&95|0)!=(d[f>>0]&127|0):0){r=-1;break}c[h>>2]=t+1;a[t>>0]=q;r=0;break}else{t=q&95;if((((t|0)==(a[f>>0]|0)?(a[f>>0]=t|128,(a[e>>0]|0)!=0):0)?(a[e>>0]=0,t=a[k>>0]|0,(((t&1)==0?(t&255)>>>1:c[k+4>>2]|0)|0)!=0):0)?(t=c[m>>2]|0,(t-l|0)<160):0){u=c[n>>2]|0;c[m>>2]=t+4;c[t>>2]=u}u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=q;if((p|0)>21){r=0;break}c[n>>2]=(c[n>>2]|0)+1;r=0;break}}else r=-1}while(0);return r|0}function HA(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f;h=hz(b)|0;c[g>>2]=h;b=_D(g,83688)|0;Ad[c[(c[b>>2]|0)+48>>2]&31](b,82664,82690,d)|0;d=_D(g,83848)|0;c[e>>2]=wd[c[(c[d>>2]|0)+16>>2]&127](d)|0;ud[c[(c[d>>2]|0)+20>>2]&127](a,d);xy(h)|0;i=f;return}function IA(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g;j=hz(b)|0;c[h>>2]=j;b=_D(h,83688)|0;Ad[c[(c[b>>2]|0)+48>>2]&31](b,82664,82696,d)|0;d=_D(h,83848)|0;c[e>>2]=wd[c[(c[d>>2]|0)+12>>2]&127](d)|0;c[f>>2]=wd[c[(c[d>>2]|0)+16>>2]&127](d)|0;ud[c[(c[d>>2]|0)+20>>2]&127](a,d);xy(j)|0;i=g;return}function JA(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0;do if((b|0)==(i|0))if(a[e>>0]|0){a[e>>0]=0;p=c[h>>2]|0;c[h>>2]=p+1;a[p>>0]=46;p=a[k>>0]|0;if((((p&1)==0?(p&255)>>>1:c[k+4>>2]|0)|0)!=0?(p=c[m>>2]|0,(p-l|0)<160):0){q=c[n>>2]|0;c[m>>2]=p+4;c[p>>2]=q;r=0}else r=0}else r=-1;else{if((b|0)==(j|0)?(q=a[k>>0]|0,(((q&1)==0?(q&255)>>>1:c[k+4>>2]|0)|0)!=0):0){if(!(a[e>>0]|0)){r=-1;break}q=c[m>>2]|0;if((q-l|0)>=160){r=0;break}p=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=p;c[n>>2]=0;r=0;break}p=o+128|0;q=o;while(1){if((c[q>>2]|0)==(b|0)){s=q;break}q=q+4|0;if((q|0)==(p|0)){s=p;break}}p=s-o|0;q=p>>2;if((p|0)<=124){t=a[82664+q>>0]|0;if((q|0)==23|(q|0)==22)a[f>>0]=80;else if(!((q|0)==24|(q|0)==25)){q=t&95;if((((q|0)==(a[f>>0]|0)?(a[f>>0]=q|128,(a[e>>0]|0)!=0):0)?(a[e>>0]=0,q=a[k>>0]|0,(((q&1)==0?(q&255)>>>1:c[k+4>>2]|0)|0)!=0):0)?(q=c[m>>2]|0,(q-l|0)<160):0){u=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=u}}else{u=c[h>>2]|0;if((u|0)!=(g|0)?(d[u+-1>>0]&95|0)!=(d[f>>0]&127|0):0){r=-1;break}c[h>>2]=u+1;a[u>>0]=t;r=0;break}u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=t;if((p|0)>84)r=0;else{c[n>>2]=(c[n>>2]|0)+1;r=0}}else r=-1}while(0);return r|0}function KA(a){a=a|0;return}function LA(a){a=a|0;Ow(a);return}function MA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;h=i;i=i+32|0;j=h+20|0;k=h+16|0;l=h+12|0;m=h;if(!(c[e+4>>2]&1)){n=c[(c[b>>2]|0)+24>>2]|0;c[k>>2]=c[d>>2];c[j>>2]=c[k>>2];o=Ed[n&31](b,j,e,f,g&1)|0}else{f=hz(e)|0;c[l>>2]=f;e=_D(l,83840)|0;xy(f)|0;f=c[e>>2]|0;if(g)ud[c[f+24>>2]&127](m,e);else ud[c[f+28>>2]&127](m,e);e=a[m>>0]|0;f=(e&1)==0;g=m+1|0;l=m+8|0;j=f?g:m+1|0;b=f?g:c[m+8>>2]|0;g=m+4|0;f=(e&1)==0;if((b|0)!=((f?j:c[l>>2]|0)+(f?(e&255)>>>1:c[g>>2]|0)|0)){e=b;do{b=a[e>>0]|0;f=c[d>>2]|0;do if(f){n=f+24|0;k=c[n>>2]|0;if((k|0)!=(c[f+28>>2]|0)){c[n>>2]=k+1;a[k>>0]=b;break}if((Cd[c[(c[f>>2]|0)+52>>2]&63](f,b&255)|0)==-1)c[d>>2]=0}while(0);e=e+1|0;b=a[m>>0]|0;f=(b&1)==0}while((e|0)!=((f?j:c[l>>2]|0)+(f?(b&255)>>>1:c[g>>2]|0)|0))}g=c[d>>2]|0;Hy(m);o=g}i=h;return o|0}function NA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+64|0;h=b;j=b+20|0;k=b+28|0;l=b+40|0;m=b+12|0;n=b+4|0;o=b+8|0;p=b+16|0;a[j>>0]=a[86688]|0;a[j+1>>0]=a[86689]|0;a[j+2>>0]=a[86690]|0;a[j+3>>0]=a[86691]|0;a[j+4>>0]=a[86692]|0;a[j+5>>0]=a[86693]|0;OA(j+1|0,86696,1,c[e+4>>2]|0);q=pA()|0;c[h>>2]=g;g=k+(fG(k,12,q,j,h)|0)|0;j=PA(k,g,e)|0;q=hz(e)|0;c[o>>2]=q;QA(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=Yg(h,l,d,m,e,f)|0;i=b;return p|0}function OA(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(!(e&2048))f=b;else{a[b>>0]=43;f=b+1|0}if(!(e&512))g=f;else{a[f>>0]=35;g=f+1|0}f=a[c>>0]|0;if(!(f<<24>>24))h=g;else{b=c;c=g;g=f;while(1){b=b+1|0;f=c+1|0;a[c>>0]=g;g=a[b>>0]|0;if(!(g<<24>>24)){h=f;break}else c=f}}c=e&74;do if((c|0)==64)a[h>>0]=111;else if((c|0)==8)if(!(e&16384)){a[h>>0]=120;break}else{a[h>>0]=88;break}else if(d){a[h>>0]=100;break}else{a[h>>0]=117;break}while(0);return}function PA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=c[e+4>>2]&176;do if((f|0)==32)g=d;else if((f|0)==16){e=a[b>>0]|0;if(e<<24>>24==43|e<<24>>24==45){g=b+1|0;break}if((d-b|0)>1&e<<24>>24==48?(e=a[b+1>>0]|0,e<<24>>24==88|e<<24>>24==120):0)g=b+2|0;else h=7}else h=7;while(0);if((h|0)==7)g=b;return g|0}function QA(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;k=i;i=i+16|0;l=k;m=_D(j,83696)|0;n=_D(j,83840)|0;ud[c[(c[n>>2]|0)+20>>2]&127](l,n);j=a[l>>0]|0;o=l+4|0;if(((j&1)==0?(j&255)>>>1:c[o>>2]|0)|0){c[h>>2]=f;j=a[b>>0]|0;if(j<<24>>24==43|j<<24>>24==45){p=Cd[c[(c[m>>2]|0)+28>>2]&63](m,j)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=p;q=b+1|0}else q=b;if(((e-q|0)>1?(a[q>>0]|0)==48:0)?(p=q+1|0,j=a[p>>0]|0,j<<24>>24==88|j<<24>>24==120):0){j=Cd[c[(c[m>>2]|0)+28>>2]&63](m,48)|0;r=c[h>>2]|0;c[h>>2]=r+1;a[r>>0]=j;j=Cd[c[(c[m>>2]|0)+28>>2]&63](m,a[p>>0]|0)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p>>0]=j;s=q+2|0}else s=q;if((s|0)!=(e|0)?(q=e+-1|0,s>>>0<q>>>0):0){j=s;p=q;do{q=a[j>>0]|0;a[j>>0]=a[p>>0]|0;a[p>>0]=q;j=j+1|0;p=p+-1|0}while(j>>>0<p>>>0)}p=wd[c[(c[n>>2]|0)+16>>2]&127](n)|0;n=l+8|0;j=l+1|0;if(s>>>0<e>>>0){q=0;r=0;t=s;while(1){u=a[((a[l>>0]&1)==0?j:c[n>>2]|0)+r>>0]|0;if(u<<24>>24!=0&(q|0)==(u<<24>>24|0)){u=c[h>>2]|0;c[h>>2]=u+1;a[u>>0]=p;u=a[l>>0]|0;v=0;w=(r>>>0<(((u&1)==0?(u&255)>>>1:c[o>>2]|0)+-1|0)>>>0&1)+r|0}else{v=q;w=r}u=Cd[c[(c[m>>2]|0)+28>>2]&63](m,a[t>>0]|0)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=u;t=t+1|0;if(t>>>0>=e>>>0)break;else{q=v+1|0;r=w}}}w=b;r=f+(s-w)|0;s=c[h>>2]|0;if((r|0)==(s|0)){y=w;z=r}else{v=s+-1|0;if(r>>>0<v>>>0){s=r;r=v;do{v=a[s>>0]|0;a[s>>0]=a[r>>0]|0;a[r>>0]=v;s=s+1|0;r=r+-1|0}while(s>>>0<r>>>0)}y=w;z=c[h>>2]|0}}else{Ad[c[(c[m>>2]|0)+32>>2]&31](m,b,e,f)|0;m=b;b=f+(e-m)|0;c[h>>2]=b;y=m;z=b}c[g>>2]=(d|0)==(e|0)?z:f+(d-y)|0;Hy(l);i=k;return}function RA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;i=i+96|0;h=a;j=a+8|0;k=a+32|0;l=a+54|0;m=a+16|0;n=a+24|0;o=a+20|0;p=a+28|0;q=j;c[q>>2]=37;c[q+4>>2]=0;OA(j+1|0,86704,1,c[d+4>>2]|0);q=pA()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=k+(fG(k,22,q,j,h)|0)|0;j=PA(k,g,d)|0;q=hz(d)|0;c[o>>2]=q;QA(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=Yg(h,l,b,m,d,e)|0;i=a;return p|0}function SA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=i;i=i+64|0;h=b;j=b+20|0;k=b+28|0;l=b+40|0;m=b+12|0;n=b+4|0;o=b+8|0;p=b+16|0;a[j>>0]=a[86688]|0;a[j+1>>0]=a[86689]|0;a[j+2>>0]=a[86690]|0;a[j+3>>0]=a[86691]|0;a[j+4>>0]=a[86692]|0;a[j+5>>0]=a[86693]|0;OA(j+1|0,86696,0,c[e+4>>2]|0);q=pA()|0;c[h>>2]=g;g=k+(fG(k,12,q,j,h)|0)|0;j=PA(k,g,e)|0;q=hz(e)|0;c[o>>2]=q;QA(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[d>>2];d=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=Yg(h,l,d,m,e,f)|0;i=b;return p|0}function TA(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=i;i=i+112|0;h=a;j=a+8|0;k=a+32|0;l=a+55|0;m=a+16|0;n=a+24|0;o=a+20|0;p=a+28|0;q=j;c[q>>2]=37;c[q+4>>2]=0;OA(j+1|0,86704,0,c[d+4>>2]|0);q=pA()|0;r=h;c[r>>2]=f;c[r+4>>2]=g;g=k+(fG(k,23,q,j,h)|0)|0;j=PA(k,g,d)|0;q=hz(d)|0;c[o>>2]=q;QA(k,j,g,l,m,n,o);xy(q)|0;c[p>>2]=c[b>>2];b=c[m>>2]|0;m=c[n>>2]|0;c[h>>2]=c[p>>2];p=Yg(h,l,b,m,d,e)|0;i=a;return p|0}function UA(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var g=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;a=i;i=i+160|0;g=a+52|0;j=a+16|0;k=a+40|0;l=a;m=a+32|0;n=a+72|0;o=a+68|0;p=a+102|0;q=a+64|0;r=a+60|0;s=a+48|0;t=a+56|0;u=m;c[u>>2]=37;c[u+4>>2]=0;u=VA(m+1|0,86712,c[d+4>>2]|0)|0;c[o>>2]=n;v=pA()|0;if(u){c[l>>2]=c[d+8>>2];h[l+8>>3]=f;w=fG(n,30,v,m,l)|0}else{h[k>>3]=f;w=fG(n,30,v,m,k)|0}if((w|0)>29){k=pA()|0;c[j>>2]=c[d+8>>2];h[j+8>>3]=f;v=gG(o,k,m,j)|0;j=c[o>>2]|0;if(!j)Gx();else{x=j;y=j;z=v}}else{x=c[o>>2]|0;y=0;z=w}w=x+z|0;o=PA(x,w,d)|0;if((x|0)!=(n|0)){v=py(z<<1)|0;if(!v)Gx();else{A=x;B=v;C=v}}else{A=n;B=0;C=p}p=hz(d)|0;c[s>>2]=p;WA(A,o,w,C,q,r,s);xy(p)|0;c[t>>2]=c[b>>2];b=c[q>>2]|0;q=c[r>>2]|0;c[g>>2]=c[t>>2];t=Yg(g,C,b,q,d,e)|0;qy(B);qy(y);i=a;return t|0}function VA(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;if(!(d&2048))e=b;else{a[b>>0]=43;e=b+1|0}if(!(d&1024))f=e;else{a[e>>0]=35;f=e+1|0}e=d&260;b=d>>>14;d=(e|0)==260;if(d){g=f;h=0}else{a[f>>0]=46;a[f+1>>0]=42;g=f+2|0;h=1}f=a[c>>0]|0;if(!(f<<24>>24))i=g;else{j=c;c=g;g=f;while(1){j=j+1|0;f=c+1|0;a[c>>0]=g;g=a[j>>0]|0;if(!(g<<24>>24)){i=f;break}else c=f}}do if((e|0)==256)if(!(b&1)){a[i>>0]=101;break}else{a[i>>0]=69;break}else if((e|0)==4)if(!(b&1)){a[i>>0]=102;break}else{a[i>>0]=70;break}else{c=(b&1|0)!=0;if(d)if(c){a[i>>0]=65;break}else{a[i>>0]=97;break}else if(c){a[i>>0]=71;break}else{a[i>>0]=103;break}}while(0);return h|0}\nfunction Ut(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=(d[b+1>>0]|0)<<16|(d[b>>0]|0)<<24|(d[b+2>>0]|0)<<8|(d[b+3>>0]|0);f=(d[b+5>>0]|0)<<16|(d[b+4>>0]|0)<<24|(d[b+6>>0]|0)<<8|(d[b+7>>0]|0);g=(d[b+9>>0]|0)<<16|(d[b+8>>0]|0)<<24|(d[b+10>>0]|0)<<8|(d[b+11>>0]|0);h=(d[b+13>>0]|0)<<16|(d[b+12>>0]|0)<<24|(d[b+14>>0]|0)<<8|(d[b+15>>0]|0);i=(d[b+17>>0]|0)<<16|(d[b+16>>0]|0)<<24|(d[b+18>>0]|0)<<8|(d[b+19>>0]|0);j=(d[b+21>>0]|0)<<16|(d[b+20>>0]|0)<<24|(d[b+22>>0]|0)<<8|(d[b+23>>0]|0);k=(d[b+25>>0]|0)<<16|(d[b+24>>0]|0)<<24|(d[b+26>>0]|0)<<8|(d[b+27>>0]|0);l=(d[b+29>>0]|0)<<16|(d[b+28>>0]|0)<<24|(d[b+30>>0]|0)<<8|(d[b+31>>0]|0);m=(d[b+33>>0]|0)<<16|(d[b+32>>0]|0)<<24|(d[b+34>>0]|0)<<8|(d[b+35>>0]|0);n=(d[b+37>>0]|0)<<16|(d[b+36>>0]|0)<<24|(d[b+38>>0]|0)<<8|(d[b+39>>0]|0);o=(d[b+41>>0]|0)<<16|(d[b+40>>0]|0)<<24|(d[b+42>>0]|0)<<8|(d[b+43>>0]|0);p=(d[b+45>>0]|0)<<16|(d[b+44>>0]|0)<<24|(d[b+46>>0]|0)<<8|(d[b+47>>0]|0);q=(d[b+49>>0]|0)<<16|(d[b+48>>0]|0)<<24|(d[b+50>>0]|0)<<8|(d[b+51>>0]|0);r=(d[b+53>>0]|0)<<16|(d[b+52>>0]|0)<<24|(d[b+54>>0]|0)<<8|(d[b+55>>0]|0);s=(d[b+57>>0]|0)<<16|(d[b+56>>0]|0)<<24|(d[b+58>>0]|0)<<8|(d[b+59>>0]|0);t=(d[b+61>>0]|0)<<16|(d[b+60>>0]|0)<<24|(d[b+62>>0]|0)<<8|(d[b+63>>0]|0);b=a+8|0;u=c[b>>2]|0;v=a+12|0;w=c[v>>2]|0;x=a+16|0;y=c[x>>2]|0;z=a+20|0;A=c[z>>2]|0;B=a+24|0;a=e+1518500249+(u<<5|u>>>27)+(c[B>>2]|0)+((A^y)&w^A)|0;C=w<<30|w>>>2;w=f+1518500249+A+((C^y)&u^y)+(a<<5|a>>>27)|0;A=u<<30|u>>>2;D=g+1518500249+y+(a&(C^A)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=h+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=i+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=j+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=k+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=l+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=m+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=n+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=o+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=p+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=q+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=r+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=s+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=t+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=g^e^m^r;e=w<<1|w>>>31;w=e+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=h^f^n^s;f=D<<1|D>>>31;D=f+1518500249+y+(a&(A^C)^C)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=i^g^o^t;g=a<<1|a>>>31;a=g+1518500249+C+(w&(y^A)^A)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=j^h^p^e;h=w<<1|w>>>31;w=h+1518500249+A+(D&(C^y)^y)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=k^i^q^f;i=D<<1|D>>>31;D=i+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=l^j^r^g;j=a<<1|a>>>31;a=j+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=m^k^s^h;k=w<<1|w>>>31;w=k+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=n^l^t^i;l=D<<1|D>>>31;D=l+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=o^m^e^j;m=a<<1|a>>>31;a=m+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=p^n^f^k;n=w<<1|w>>>31;w=n+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=q^o^g^l;o=D<<1|D>>>31;D=o+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=r^p^h^m;p=a<<1|a>>>31;a=p+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=s^q^i^n;q=w<<1|w>>>31;w=q+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=t^r^j^o;r=D<<1|D>>>31;D=r+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=e^s^k^p;s=a<<1|a>>>31;a=s+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=f^t^l^q;t=w<<1|w>>>31;w=t+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=g^e^m^r;e=D<<1|D>>>31;D=e+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=h^f^n^s;f=a<<1|a>>>31;a=f+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=i^g^o^t;g=w<<1|w>>>31;w=g+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=j^h^p^e;h=D<<1|D>>>31;D=h+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=k^i^q^f;i=a<<1|a>>>31;a=i+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=l^j^r^g;j=w<<1|w>>>31;w=j+1859775393+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=m^k^s^h;k=D<<1|D>>>31;D=k+1859775393+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=n^l^t^i;l=a<<1|a>>>31;a=l+1859775393+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=o^m^e^j;m=w<<1|w>>>31;w=m+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=p^n^f^k;n=D<<1|D>>>31;D=n+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=q^o^g^l;o=a<<1|a>>>31;a=o+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=r^p^h^m;p=w<<1|w>>>31;w=p+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=s^q^i^n;q=D<<1|D>>>31;D=q+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=t^r^j^o;r=a<<1|a>>>31;a=r+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=e^s^k^p;s=w<<1|w>>>31;w=s+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=f^t^l^q;t=D<<1|D>>>31;D=t+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=g^e^m^r;e=a<<1|a>>>31;a=e+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=h^f^n^s;f=w<<1|w>>>31;w=f+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=i^g^o^t;g=D<<1|D>>>31;D=g+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=j^h^p^e;h=a<<1|a>>>31;a=h+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=k^i^q^f;i=w<<1|w>>>31;w=i+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=l^j^r^g;j=D<<1|D>>>31;D=j+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=m^k^s^h;k=a<<1|a>>>31;a=k+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=n^l^t^i;l=w<<1|w>>>31;w=l+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=o^m^e^j;m=D<<1|D>>>31;D=m+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=p^n^f^k;n=a<<1|a>>>31;a=n+-1894007588+C+((w|y)&A|w&y)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=q^o^g^l;o=w<<1|w>>>31;w=o+-1894007588+A+((D|C)&y|D&C)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=r^p^h^m;p=D<<1|D>>>31;D=p+-1894007588+y+((a|A)&C|a&A)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=s^q^i^n;q=a<<1|a>>>31;a=q+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=t^r^j^o;r=w<<1|w>>>31;w=r+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=e^s^k^p;s=D<<1|D>>>31;D=s+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=f^t^l^q;t=a<<1|a>>>31;a=t+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=g^e^m^r;e=w<<1|w>>>31;w=e+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=h^f^n^s;f=D<<1|D>>>31;D=f+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=i^g^o^t;g=a<<1|a>>>31;a=g+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=j^h^p^e;h=w<<1|w>>>31;w=h+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=k^i^q^f;i=D<<1|D>>>31;D=i+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=l^j^r^g;j=a<<1|a>>>31;a=j+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=m^k^s^h;k=w<<1|w>>>31;w=k+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=n^l^t^i;l=D<<1|D>>>31;D=l+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=o^m^e^j;m=a<<1|a>>>31;a=m+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=p^n^f^k;n=w<<1|w>>>31;w=n+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=q^o^g^l;g=D<<1|D>>>31;D=g+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=r^p^h^m;m=a<<1|a>>>31;a=m+-899497514+C+(y^A^w)+(D<<5|D>>>27)|0;C=w<<30|w>>>2;w=s^q^i^n;n=w<<1|w>>>31;w=n+-899497514+A+(C^y^D)+(a<<5|a>>>27)|0;A=D<<30|D>>>2;D=t^r^j^g;g=(D<<1|D>>>31)+-899497514+y+(A^C^a)+(w<<5|w>>>27)|0;y=a<<30|a>>>2;a=e^s^k^m;m=(a<<1|a>>>31)+-899497514+C+(y^A^w)+(g<<5|g>>>27)|0;C=w<<30|w>>>2;w=f^t^l^n;c[b>>2]=u+-899497514+(w<<1|w>>>31)+A+(C^y^g)+(m<<5|m>>>27);c[v>>2]=m+(c[v>>2]|0);c[x>>2]=(g<<30|g>>>2)+(c[x>>2]|0);c[z>>2]=C+(c[z>>2]|0);c[B>>2]=y+(c[B>>2]|0);return}function Vt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!d)return;e=c[a>>2]|0;f=e&63;g=64-f|0;h=e+d|0;c[a>>2]=h;if(h>>>0<d>>>0){h=a+4|0;c[h>>2]=(c[h>>2]|0)+1}if((f|0)==0|g>>>0>d>>>0){i=b;j=d;k=f}else{zH(a+28+f|0,b|0,g|0)|0;Ut(a,a+28|0);i=b+g|0;j=d-g|0;k=0}if(j>>>0>63){g=j+-64|0;d=g&-64;b=d+64|0;f=j;h=i;while(1){Ut(a,h);f=f+-64|0;if(f>>>0<=63)break;else h=h+64|0}l=i+b|0;m=g-d|0}else{l=i;m=j}if(!m)return;zH(a+28+k|0,l|0,m|0)|0;return}function Wt(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+16|0;f=e;g=c[b>>2]|0;h=b+4|0;j=c[h>>2]|0;a[f>>0]=j>>>21;a[f+1>>0]=j>>>13;a[f+2>>0]=j>>>5;a[f+3>>0]=j<<3|g>>>29;a[f+4>>0]=g>>>21;a[f+5>>0]=g>>>13;a[f+6>>0]=g>>>5;a[f+7>>0]=g<<3;k=g&63;l=k>>>0<56?56:120;m=l-k|0;if((l|0)!=(k|0)){l=64-k|0;n=m+g|0;c[b>>2]=n;if(n>>>0<m>>>0)c[h>>2]=j+1;if((k|0)==0|m>>>0<l>>>0){o=34816;p=m;q=k}else{zH(b+28+k|0,34816,l|0)|0;Ut(b,b+28|0);o=34816+l|0;p=m-l|0;q=0}if(p>>>0>63){l=p+-64|0;m=l&-64;k=p;j=o;while(1){Ut(b,j);k=k+-64|0;if(k>>>0<=63)break;else j=j+64|0}r=o+(m+64)|0;s=l-m|0}else{r=o;s=p}if(s)zH(b+28+q|0,r|0,s|0)|0}s=c[b>>2]|0;r=s&63;q=64-r|0;c[b>>2]=s+8;if(s>>>0>4294967287)c[h>>2]=(c[h>>2]|0)+1;if(!((r|0)==0|q>>>0>8)){zH(b+28+r|0,f|0,q|0)|0;Ut(b,b+28|0);h=f+q|0;s=8-q|0;if(s>>>0>63){p=s+-64|0;o=s;m=h;while(1){Ut(b,m);o=o+-64|0;if(o>>>0<=63)break;else m=m+64|0}m=p&-64;t=f+(q+64+m)|0;u=p-m|0}else{t=h;u=s}if(u){v=t;w=u;x=0;y=20}}else{v=f;w=8;x=r;y=20}if((y|0)==20)zH(b+28+x|0,v|0,w|0)|0;w=b+8|0;a[d>>0]=(c[w>>2]|0)>>>24;a[d+1>>0]=(c[w>>2]|0)>>>16;a[d+2>>0]=(c[w>>2]|0)>>>8;a[d+3>>0]=c[w>>2];w=b+12|0;a[d+4>>0]=(c[w>>2]|0)>>>24;a[d+5>>0]=(c[w>>2]|0)>>>16;a[d+6>>0]=(c[w>>2]|0)>>>8;a[d+7>>0]=c[w>>2];w=b+16|0;a[d+8>>0]=(c[w>>2]|0)>>>24;a[d+9>>0]=(c[w>>2]|0)>>>16;a[d+10>>0]=(c[w>>2]|0)>>>8;a[d+11>>0]=c[w>>2];w=b+20|0;a[d+12>>0]=(c[w>>2]|0)>>>24;a[d+13>>0]=(c[w>>2]|0)>>>16;a[d+14>>0]=(c[w>>2]|0)>>>8;a[d+15>>0]=c[w>>2];w=b+24|0;a[d+16>>0]=(c[w>>2]|0)>>>24;a[d+17>>0]=(c[w>>2]|0)>>>16;a[d+18>>0]=(c[w>>2]|0)>>>8;a[d+19>>0]=c[w>>2];i=e;return}function Xt(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+96|0;g=f;h=g+8|0;j=g;k=j+92|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0));c[h>>2]=1732584193;c[g+12>>2]=-271733879;c[g+16>>2]=-1732584194;c[g+20>>2]=271733878;c[g+24>>2]=-1009589776;do if(d){c[g>>2]=d;if(d>>>0>63){h=d+-64|0;j=h&-64;k=d;l=b;while(1){Ut(g,l);k=k+-64|0;if(k>>>0<=63)break;else l=l+64|0}if((h|0)==(j|0))break;else{m=b+(j+64)|0;n=h-j|0}}else{m=b;n=d}zH(g+28|0,m|0,n|0)|0}while(0);Wt(g,e);e=92;n=g;while(1){e=e+-1|0;a[n>>0]=0;if(!e)break;else n=n+1|0}i=f;return}function Yt(a){a=a|0;var b=0;b=a;a=b+108|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function Zt(b){b=b|0;var c=0,d=0;if(!b)return;c=108;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function _t(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=d+108|0;do{c[d>>2]=c[a>>2];d=d+4|0;a=a+4|0}while((d|0)<(b|0));return}function $t(a,b){a=a|0;b=b|0;var d=0;c[a>>2]=0;c[a+4>>2]=0;d=(b|0)==0;c[a+8>>2]=d?1779033703:-1056596264;c[a+12>>2]=d?-1150833019:914150663;c[a+16>>2]=d?1013904242:812702999;c[a+20>>2]=d?-1521486534:-150054599;c[a+24>>2]=d?1359893119:-4191439;c[a+28>>2]=d?-1694144372:1750603025;c[a+32>>2]=d?528734635:1694076839;c[a+36>>2]=d?1541459225:-1090891868;c[a+104>>2]=b;return}function au(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;e=i;i=i+288|0;f=e+32|0;g=e;h=a+8|0;c[g>>2]=c[h>>2];c[g+4>>2]=c[h+4>>2];c[g+8>>2]=c[h+8>>2];c[g+12>>2]=c[h+12>>2];c[g+16>>2]=c[h+16>>2];c[g+20>>2]=c[h+20>>2];c[g+24>>2]=c[h+24>>2];c[g+28>>2]=c[h+28>>2];j=0;do{k=j<<2;c[f+(j<<2)>>2]=(d[b+(k|1)>>0]|0)<<16|(d[b+k>>0]|0)<<24|(d[b+(k|2)>>0]|0)<<8|(d[b+(k|3)>>0]|0);j=j+1|0}while((j|0)!=16);j=g+28|0;b=g+16|0;k=g+24|0;l=g+20|0;m=g+4|0;n=g+8|0;o=g+12|0;p=c[b>>2]|0;q=c[l>>2]|0;r=c[k>>2]|0;s=c[j>>2]|0;t=c[g>>2]|0;u=c[m>>2]|0;v=c[n>>2]|0;w=c[o>>2]|0;x=0;while(1){y=(c[34880+(x<<2)>>2]|0)+s+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+(c[f+(x<<2)>>2]|0)+((q^r)&p^r)|0;z=w+y|0;A=(v&(u|t)|u&t)+y+((t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10))|0;y=x|1;B=(c[34880+(y<<2)>>2]|0)+r+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+(y<<2)>>2]|0)+((p^q)&z^q)|0;y=B+v|0;C=(u&(t|A)|t&A)+((A>>>2|A<<30)^(A>>>13|A<<19)^(A>>>22|A<<10))+B|0;B=x|2;D=(c[34880+(B<<2)>>2]|0)+q+((y>>>6|y<<26)^(y>>>11|y<<21)^(y>>>25|y<<7))+(c[f+(B<<2)>>2]|0)+((z^p)&y^p)|0;B=D+u|0;E=(t&(A|C)|A&C)+((C>>>2|C<<30)^(C>>>13|C<<19)^(C>>>22|C<<10))+D|0;D=x|3;F=(c[34880+(D<<2)>>2]|0)+p+((B>>>6|B<<26)^(B>>>11|B<<21)^(B>>>25|B<<7))+(c[f+(D<<2)>>2]|0)+((y^z)&B^z)|0;D=F+t|0;G=(A&(C|E)|C&E)+((E>>>2|E<<30)^(E>>>13|E<<19)^(E>>>22|E<<10))+F|0;F=x|4;H=(c[34880+(F<<2)>>2]|0)+z+((D>>>6|D<<26)^(D>>>11|D<<21)^(D>>>25|D<<7))+(c[f+(F<<2)>>2]|0)+((B^y)&D^y)|0;F=H+A|0;A=(C&(E|G)|E&G)+((G>>>2|G<<30)^(G>>>13|G<<19)^(G>>>22|G<<10))+H|0;H=x|5;z=(c[34880+(H<<2)>>2]|0)+y+((F>>>6|F<<26)^(F>>>11|F<<21)^(F>>>25|F<<7))+(c[f+(H<<2)>>2]|0)+((D^B)&F^B)|0;H=z+C|0;C=(E&(G|A)|G&A)+((A>>>2|A<<30)^(A>>>13|A<<19)^(A>>>22|A<<10))+z|0;z=x|6;y=(c[34880+(z<<2)>>2]|0)+B+((H>>>6|H<<26)^(H>>>11|H<<21)^(H>>>25|H<<7))+(c[f+(z<<2)>>2]|0)+((F^D)&H^D)|0;z=y+E|0;E=(G&(A|C)|A&C)+((C>>>2|C<<30)^(C>>>13|C<<19)^(C>>>22|C<<10))+y|0;y=x|7;B=(c[34880+(y<<2)>>2]|0)+D+((z>>>6|z<<26)^(z>>>11|z<<21)^(z>>>25|z<<7))+(c[f+(y<<2)>>2]|0)+((H^F)&z^F)|0;y=B+G|0;G=(A&(C|E)|C&E)+((E>>>2|E<<30)^(E>>>13|E<<19)^(E>>>22|E<<10))+B|0;x=x+8|0;if(x>>>0>=16){I=F;J=A;K=H;L=C;M=z;N=E;O=y;P=G;break}else{p=y;q=z;r=H;s=F;t=G;u=E;v=C;w=A}}c[j>>2]=I;c[b>>2]=O;c[k>>2]=K;c[l>>2]=M;c[g>>2]=P;c[m>>2]=N;c[n>>2]=L;c[o>>2]=J;o=O;O=M;M=K;K=I;I=P;P=N;N=L;L=J;J=16;while(1){n=c[34880+(J<<2)>>2]|0;m=c[f+(J+-2<<2)>>2]|0;g=c[f+(J+-15<<2)>>2]|0;l=(c[f+(J+-16<<2)>>2]|0)+(c[f+(J+-7<<2)>>2]|0)+((m>>>19|m<<13)^m>>>10^(m>>>17|m<<15))+((g>>>18|g<<14)^g>>>3^(g>>>7|g<<25))|0;m=f+(J<<2)|0;c[m>>2]=l;k=n+K+((o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7))+((O^M)&o^M)+l|0;l=k+L|0;n=((I>>>2|I<<30)^(I>>>13|I<<19)^(I>>>22|I<<10))+(N&(P|I)|P&I)+k|0;k=J|1;b=c[34880+(k<<2)>>2]|0;j=c[f+(k+-2<<2)>>2]|0;w=c[f+(k+-15<<2)>>2]|0;v=g+(c[f+(k+-7<<2)>>2]|0)+((j>>>19|j<<13)^j>>>10^(j>>>17|j<<15))+((w>>>18|w<<14)^w>>>3^(w>>>7|w<<25))|0;c[f+(k<<2)>>2]=v;k=b+M+((l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+((o^O)&l^O)+v|0;v=k+N|0;b=((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+(P&(I|n)|I&n)+k|0;k=J|2;j=c[34880+(k<<2)>>2]|0;g=c[m>>2]|0;u=c[f+(k+-15<<2)>>2]|0;t=w+(c[f+(k+-7<<2)>>2]|0)+((g>>>19|g<<13)^g>>>10^(g>>>17|g<<15))+((u>>>18|u<<14)^u>>>3^(u>>>7|u<<25))|0;c[f+(k<<2)>>2]=t;k=j+O+((v>>>6|v<<26)^(v>>>11|v<<21)^(v>>>25|v<<7))+((l^o)&v^o)+t|0;t=k+P|0;j=((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+(I&(n|b)|n&b)+k|0;k=J|3;g=c[34880+(k<<2)>>2]|0;w=c[f+(k+-2<<2)>>2]|0;s=c[f+(k+-15<<2)>>2]|0;r=u+(c[f+(k+-7<<2)>>2]|0)+((w>>>19|w<<13)^w>>>10^(w>>>17|w<<15))+((s>>>18|s<<14)^s>>>3^(s>>>7|s<<25))|0;c[f+(k<<2)>>2]=r;k=g+o+((t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7))+((v^l)&t^l)+r|0;r=k+I|0;g=((j>>>2|j<<30)^(j>>>13|j<<19)^(j>>>22|j<<10))+(n&(b|j)|b&j)+k|0;k=J|4;w=c[34880+(k<<2)>>2]|0;u=c[f+(k+-2<<2)>>2]|0;q=c[f+(k+-15<<2)>>2]|0;p=s+(c[f+(k+-7<<2)>>2]|0)+((u>>>19|u<<13)^u>>>10^(u>>>17|u<<15))+((q>>>18|q<<14)^q>>>3^(q>>>7|q<<25))|0;c[f+(k<<2)>>2]=p;k=w+l+((r>>>6|r<<26)^(r>>>11|r<<21)^(r>>>25|r<<7))+((t^v)&r^v)+p|0;p=k+n|0;n=((g>>>2|g<<30)^(g>>>13|g<<19)^(g>>>22|g<<10))+(b&(j|g)|j&g)+k|0;k=J|5;l=c[34880+(k<<2)>>2]|0;w=c[f+(k+-2<<2)>>2]|0;u=c[f+(k+-15<<2)>>2]|0;s=q+(c[f+(k+-7<<2)>>2]|0)+((w>>>19|w<<13)^w>>>10^(w>>>17|w<<15))+((u>>>18|u<<14)^u>>>3^(u>>>7|u<<25))|0;c[f+(k<<2)>>2]=s;k=l+v+((p>>>6|p<<26)^(p>>>11|p<<21)^(p>>>25|p<<7))+((r^t)&p^t)+s|0;s=k+b|0;b=((n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10))+(j&(g|n)|g&n)+k|0;k=J|6;v=c[34880+(k<<2)>>2]|0;l=c[f+(k+-2<<2)>>2]|0;w=c[f+(k+-15<<2)>>2]|0;q=u+(c[f+(k+-7<<2)>>2]|0)+((l>>>19|l<<13)^l>>>10^(l>>>17|l<<15))+((w>>>18|w<<14)^w>>>3^(w>>>7|w<<25))|0;c[f+(k<<2)>>2]=q;k=v+t+((s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7))+((p^r)&s^r)+q|0;q=k+j|0;j=((b>>>2|b<<30)^(b>>>13|b<<19)^(b>>>22|b<<10))+(g&(n|b)|n&b)+k|0;k=J|7;t=c[34880+(k<<2)>>2]|0;v=c[f+(k+-2<<2)>>2]|0;l=c[f+(k+-15<<2)>>2]|0;u=w+(c[m>>2]|0)+((v>>>19|v<<13)^v>>>10^(v>>>17|v<<15))+((l>>>18|l<<14)^l>>>3^(l>>>7|l<<25))|0;c[f+(k<<2)>>2]=u;k=t+r+((q>>>6|q<<26)^(q>>>11|q<<21)^(q>>>25|q<<7))+((s^p)&q^p)+u|0;u=k+g|0;g=((j>>>2|j<<30)^(j>>>13|j<<19)^(j>>>22|j<<10))+(n&(b|j)|b&j)+k|0;J=J+8|0;if(J>>>0>=64){Q=p;R=n;S=s;T=b;U=q;V=j;W=u;X=g;break}else{o=u;O=q;M=s;K=p;I=g;P=j;N=b;L=n}}c[h>>2]=(c[h>>2]|0)+X;X=a+12|0;c[X>>2]=(c[X>>2]|0)+V;V=a+16|0;c[V>>2]=(c[V>>2]|0)+T;T=a+20|0;c[T>>2]=(c[T>>2]|0)+R;R=a+24|0;c[R>>2]=(c[R>>2]|0)+W;W=a+28|0;c[W>>2]=(c[W>>2]|0)+U;U=a+32|0;c[U>>2]=(c[U>>2]|0)+S;S=a+36|0;c[S>>2]=(c[S>>2]|0)+Q;i=e;return}function bu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!d)return;e=c[a>>2]|0;f=e&63;g=64-f|0;h=e+d|0;c[a>>2]=h;if(h>>>0<d>>>0){h=a+4|0;c[h>>2]=(c[h>>2]|0)+1}if((f|0)==0|g>>>0>d>>>0){i=b;j=d;k=f}else{zH(a+40+f|0,b|0,g|0)|0;au(a,a+40|0);i=b+g|0;j=d-g|0;k=0}if(j>>>0>63){g=j+-64|0;d=g&-64;b=d+64|0;f=j;h=i;while(1){au(a,h);f=f+-64|0;if(f>>>0<=63)break;else h=h+64|0}l=i+b|0;m=g-d|0}else{l=i;m=j}if(!m)return;zH(a+40+k|0,l|0,m|0)|0;return}function cu(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+16|0;f=e;g=c[b>>2]|0;h=b+4|0;j=c[h>>2]|0;a[f>>0]=j>>>21;a[f+1>>0]=j>>>13;a[f+2>>0]=j>>>5;a[f+3>>0]=j<<3|g>>>29;a[f+4>>0]=g>>>21;a[f+5>>0]=g>>>13;a[f+6>>0]=g>>>5;a[f+7>>0]=g<<3;k=g&63;l=k>>>0<56?56:120;m=l-k|0;if((l|0)!=(k|0)){l=64-k|0;n=m+g|0;c[b>>2]=n;if(n>>>0<m>>>0)c[h>>2]=j+1;if((k|0)==0|m>>>0<l>>>0){o=35136;p=m;q=k}else{zH(b+40+k|0,35136,l|0)|0;au(b,b+40|0);o=35136+l|0;p=m-l|0;q=0}if(p>>>0>63){l=p+-64|0;m=l&-64;k=p;j=o;while(1){au(b,j);k=k+-64|0;if(k>>>0<=63)break;else j=j+64|0}r=o+(m+64)|0;s=l-m|0}else{r=o;s=p}if(s)zH(b+40+q|0,r|0,s|0)|0}s=c[b>>2]|0;r=s&63;q=64-r|0;c[b>>2]=s+8;if(s>>>0>4294967287)c[h>>2]=(c[h>>2]|0)+1;if(!((r|0)==0|q>>>0>8)){zH(b+40+r|0,f|0,q|0)|0;au(b,b+40|0);h=f+q|0;s=8-q|0;if(s>>>0>63){p=s+-64|0;o=s;m=h;while(1){au(b,m);o=o+-64|0;if(o>>>0<=63)break;else m=m+64|0}m=p&-64;t=f+(q+64+m)|0;u=p-m|0}else{t=h;u=s}if(u){v=t;w=u;x=0;y=20}}else{v=f;w=8;x=r;y=20}if((y|0)==20)zH(b+40+x|0,v|0,w|0)|0;w=b+8|0;a[d>>0]=(c[w>>2]|0)>>>24;a[d+1>>0]=(c[w>>2]|0)>>>16;a[d+2>>0]=(c[w>>2]|0)>>>8;a[d+3>>0]=c[w>>2];w=b+12|0;a[d+4>>0]=(c[w>>2]|0)>>>24;a[d+5>>0]=(c[w>>2]|0)>>>16;a[d+6>>0]=(c[w>>2]|0)>>>8;a[d+7>>0]=c[w>>2];w=b+16|0;a[d+8>>0]=(c[w>>2]|0)>>>24;a[d+9>>0]=(c[w>>2]|0)>>>16;a[d+10>>0]=(c[w>>2]|0)>>>8;a[d+11>>0]=c[w>>2];w=b+20|0;a[d+12>>0]=(c[w>>2]|0)>>>24;a[d+13>>0]=(c[w>>2]|0)>>>16;a[d+14>>0]=(c[w>>2]|0)>>>8;a[d+15>>0]=c[w>>2];w=b+24|0;a[d+16>>0]=(c[w>>2]|0)>>>24;a[d+17>>0]=(c[w>>2]|0)>>>16;a[d+18>>0]=(c[w>>2]|0)>>>8;a[d+19>>0]=c[w>>2];w=b+28|0;a[d+20>>0]=(c[w>>2]|0)>>>24;a[d+21>>0]=(c[w>>2]|0)>>>16;a[d+22>>0]=(c[w>>2]|0)>>>8;a[d+23>>0]=c[w>>2];w=b+32|0;a[d+24>>0]=(c[w>>2]|0)>>>24;a[d+25>>0]=(c[w>>2]|0)>>>16;a[d+26>>0]=(c[w>>2]|0)>>>8;a[d+27>>0]=c[w>>2];if(c[b+104>>2]|0){i=e;return}w=b+36|0;a[d+28>>0]=(c[w>>2]|0)>>>24;a[d+29>>0]=(c[w>>2]|0)>>>16;a[d+30>>0]=(c[w>>2]|0)>>>8;a[d+31>>0]=c[w>>2];i=e;return}function du(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+112|0;h=g;j=(f|0)==0;k=h+8|0;l=j?1779033703:-1056596264;m=j?-1150833019:914150663;n=j?1013904242:812702999;o=j?-1521486534:-150054599;p=j?1359893119:-4191439;q=j?-1694144372:1750603025;r=j?528734635:1694076839;s=j?1541459225:-1090891868;j=h;t=j+104|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(t|0));c[k>>2]=l;c[h+12>>2]=m;c[h+16>>2]=n;c[h+20>>2]=o;c[h+24>>2]=p;c[h+28>>2]=q;c[h+32>>2]=r;c[h+36>>2]=s;c[h+104>>2]=f;do if(d){c[h>>2]=d;if(d>>>0>63){f=d+-64|0;s=f&-64;r=d;q=b;while(1){au(h,q);r=r+-64|0;if(r>>>0<=63)break;else q=q+64|0}if((f|0)==(s|0))break;else{u=b+(s+64)|0;v=f-s|0}}else{u=b;v=d}zH(h+40|0,u|0,v|0)|0}while(0);cu(h,e);e=108;v=h;while(1){e=e+-1|0;a[v>>0]=0;if(!e)break;else v=v+1|0}i=g;return}function eu(a){a=a|0;BH(a|0,0,216)|0;return}function fu(b){b=b|0;var c=0,d=0;if(!b)return;c=216;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function gu(a,b){a=a|0;b=b|0;zH(a|0,b|0,216)|0;return}function hu(a,b){a=a|0;b=b|0;var d=0,e=0;d=(b|0)==0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;e=a+16|0;c[e>>2]=d?-205731576:-1056596264;c[e+4>>2]=d?1779033703:-876896931;e=a+24|0;c[e>>2]=d?-2067093701:914150663;c[e+4>>2]=d?-1150833019:1654270250;e=a+32|0;c[e>>2]=d?-23791573:812702999;c[e+4>>2]=d?1013904242:-1856437926;e=a+40|0;c[e>>2]=d?1595750129:-150054599;c[e+4>>2]=d?-1521486534:355462360;e=a+48|0;c[e>>2]=d?-1377402159:-4191439;c[e+4>>2]=d?1359893119:1731405415;e=a+56|0;c[e>>2]=d?725511199:1750603025;c[e+4>>2]=d?-1694144372:-1900787065;e=a+64|0;c[e>>2]=d?-79577749:1694076839;c[e+4>>2]=d?528734635:-619958771;e=a+72|0;c[e>>2]=d?327033209:-1090891868;c[e+4>>2]=d?1541459225:1203062813;c[a+208>>2]=b;return}function iu(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0;e=i;i=i+640|0;f=e;g=0;do{h=g<<3;j=DH(d[b+h>>0]|0|0,0,56)|0;k=E;l=DH(d[b+(h|1)>>0]|0|0,0,48)|0;m=E|k;k=DH(d[b+(h|2)>>0]|0|0,0,40)|0;n=m|E|(d[b+(h|3)>>0]|0);m=DH(d[b+(h|4)>>0]|0|0,0,24)|0;o=n|E;n=DH(d[b+(h|5)>>0]|0|0,0,16)|0;p=o|E;o=DH(d[b+(h|6)>>0]|0|0,0,8)|0;q=f+(g<<3)|0;c[q>>2]=l|j|k|m|n|o|(d[b+(h|7)>>0]|0);c[q+4>>2]=p|E;g=g+1|0}while((g|0)!=16);g=f;b=c[g>>2]|0;p=c[g+4>>2]|0;g=16;do{q=f+(g+-2<<3)|0;h=c[q>>2]|0;o=c[q+4>>2]|0;q=xH(h|0,o|0,19)|0;n=E;m=DH(h|0,o|0,45)|0;k=n|E;n=xH(h|0,o|0,61)|0;j=E;l=DH(h|0,o|0,3)|0;r=j|E;j=xH(h|0,o|0,6)|0;o=r^E^k;k=f+(g+-7<<3)|0;r=c[k>>2]|0;h=c[k+4>>2]|0;k=f+(g+-15<<3)|0;s=b;b=c[k>>2]|0;t=p;p=c[k+4>>2]|0;k=xH(b|0,p|0,1)|0;u=E;v=DH(b|0,p|0,63)|0;w=u|E;u=xH(b|0,p|0,8)|0;x=E;y=DH(b|0,p|0,56)|0;z=x|E;x=xH(b|0,p|0,7)|0;A=z^E^w;w=CH(s|0,t|0,r|0,h|0)|0;h=CH(w|0,E|0,(n|l)^j^(q|m)|0,o|0)|0;o=CH(h|0,E|0,(u|y)^x^(k|v)|0,A|0)|0;A=f+(g<<3)|0;c[A>>2]=o;c[A+4>>2]=E;g=g+1|0}while((g|0)!=80);g=a+16|0;p=g;b=a+24|0;A=b;o=a+32|0;v=o;k=a+40|0;x=k;y=a+48|0;u=y;h=a+56|0;m=h;q=a+64|0;j=q;l=a+72|0;a=l;n=c[u>>2]|0;w=c[u+4>>2]|0;u=c[a>>2]|0;r=c[a+4>>2]|0;a=c[j>>2]|0;t=c[m>>2]|0;s=c[j+4>>2]|0;j=c[m+4>>2]|0;m=c[p>>2]|0;z=c[p+4>>2]|0;p=c[A>>2]|0;B=c[A+4>>2]|0;A=c[v>>2]|0;C=c[v+4>>2]|0;v=c[x>>2]|0;D=c[x+4>>2]|0;x=0;while(1){F=xH(n|0,w|0,14)|0;G=E;H=DH(n|0,w|0,50)|0;I=G|E;G=xH(n|0,w|0,18)|0;J=E;K=DH(n|0,w|0,46)|0;L=I^(J|E);J=xH(n|0,w|0,41)|0;I=E;M=DH(n|0,w|0,23)|0;N=CH((F|H)^(G|K)^(J|M)|0,L^(I|E)|0,u|0,r|0)|0;I=76168+(x<<3)|0;L=f+(x<<3)|0;M=c[L>>2]|0;J=c[L+4>>2]|0;L=CH(N|0,E|0,c[I>>2]|0,c[I+4>>2]|0)|0;I=CH(L|0,E|0,(a^t)&n^a|0,(s^j)&w^s|0)|0;L=CH(I|0,E|0,M|0,J|0)|0;J=E;M=xH(m|0,z|0,28)|0;I=E;N=DH(m|0,z|0,36)|0;K=I|E;I=xH(m|0,z|0,34)|0;G=E;H=DH(m|0,z|0,30)|0;F=K^(G|E);G=xH(m|0,z|0,39)|0;K=E;O=DH(m|0,z|0,25)|0;P=CH((M|N)^(I|H)^(G|O)|0,F^(K|E)|0,A&(p|m)|p&m|0,C&(B|z)|B&z|0)|0;K=E;F=CH(L|0,J|0,v|0,D|0)|0;O=E;G=CH(P|0,K|0,L|0,J|0)|0;J=E;L=x|1;K=xH(F|0,O|0,14)|0;P=E;H=DH(F|0,O|0,50)|0;I=P|E;P=xH(F|0,O|0,18)|0;N=E;M=DH(F|0,O|0,46)|0;Q=I^(N|E);N=xH(F|0,O|0,41)|0;I=E;R=DH(F|0,O|0,23)|0;S=Q^(I|E);I=76168+(L<<3)|0;Q=f+(L<<3)|0;L=c[Q>>2]|0;T=c[Q+4>>2]|0;Q=CH(c[I>>2]|0,c[I+4>>2]|0,a|0,s|0)|0;I=CH(Q|0,E|0,L|0,T|0)|0;T=CH(I|0,E|0,F&(t^n)^t|0,O&(j^w)^j|0)|0;I=CH(T|0,E|0,(K|H)^(P|M)^(N|R)|0,S|0)|0;S=E;R=xH(G|0,J|0,28)|0;N=E;M=DH(G|0,J|0,36)|0;P=N|E;N=xH(G|0,J|0,34)|0;H=E;K=DH(G|0,J|0,30)|0;T=P^(H|E);H=xH(G|0,J|0,39)|0;P=E;L=DH(G|0,J|0,25)|0;Q=CH((R|M)^(N|K)^(H|L)|0,T^(P|E)|0,(G|m)&p|G&m|0,(J|z)&B|J&z|0)|0;P=E;T=CH(I|0,S|0,A|0,C|0)|0;L=E;H=CH(Q|0,P|0,I|0,S|0)|0;S=E;I=x|2;P=xH(T|0,L|0,14)|0;Q=E;K=DH(T|0,L|0,50)|0;N=Q|E;Q=xH(T|0,L|0,18)|0;M=E;R=DH(T|0,L|0,46)|0;U=N^(M|E);M=xH(T|0,L|0,41)|0;N=E;V=DH(T|0,L|0,23)|0;W=U^(N|E);N=76168+(I<<3)|0;U=f+(I<<3)|0;I=c[U>>2]|0;X=c[U+4>>2]|0;U=CH(c[N>>2]|0,c[N+4>>2]|0,t|0,j|0)|0;N=CH(U|0,E|0,I|0,X|0)|0;X=CH(N|0,E|0,T&(F^n)^n|0,L&(O^w)^w|0)|0;N=CH(X|0,E|0,(P|K)^(Q|R)^(M|V)|0,W|0)|0;W=E;V=xH(H|0,S|0,28)|0;M=E;R=DH(H|0,S|0,36)|0;Q=M|E;M=xH(H|0,S|0,34)|0;K=E;P=DH(H|0,S|0,30)|0;X=Q^(K|E);K=xH(H|0,S|0,39)|0;Q=E;I=DH(H|0,S|0,25)|0;U=CH((V|R)^(M|P)^(K|I)|0,X^(Q|E)|0,(H|G)&m|H&G|0,(S|J)&z|S&J|0)|0;Q=E;X=CH(N|0,W|0,p|0,B|0)|0;I=E;K=CH(U|0,Q|0,N|0,W|0)|0;W=E;N=x|3;Q=xH(X|0,I|0,14)|0;U=E;P=DH(X|0,I|0,50)|0;M=U|E;U=xH(X|0,I|0,18)|0;R=E;V=DH(X|0,I|0,46)|0;Y=M^(R|E);R=xH(X|0,I|0,41)|0;M=E;Z=DH(X|0,I|0,23)|0;_=Y^(M|E);M=76168+(N<<3)|0;Y=f+(N<<3)|0;N=c[Y>>2]|0;$=c[Y+4>>2]|0;Y=CH(c[M>>2]|0,c[M+4>>2]|0,n|0,w|0)|0;M=CH(Y|0,E|0,N|0,$|0)|0;$=CH(M|0,E|0,X&(T^F)^F|0,I&(L^O)^O|0)|0;M=CH($|0,E|0,(Q|P)^(U|V)^(R|Z)|0,_|0)|0;_=E;Z=xH(K|0,W|0,28)|0;R=E;V=DH(K|0,W|0,36)|0;U=R|E;R=xH(K|0,W|0,34)|0;P=E;Q=DH(K|0,W|0,30)|0;$=U^(P|E);P=xH(K|0,W|0,39)|0;U=E;N=DH(K|0,W|0,25)|0;Y=CH((Z|V)^(R|Q)^(P|N)|0,$^(U|E)|0,(K|H)&G|K&H|0,(W|S)&J|W&S|0)|0;U=E;$=CH(M|0,_|0,m|0,z|0)|0;N=E;P=CH(Y|0,U|0,M|0,_|0)|0;_=E;M=x|4;U=xH($|0,N|0,14)|0;Y=E;Q=DH($|0,N|0,50)|0;R=Y|E;Y=xH($|0,N|0,18)|0;V=E;Z=DH($|0,N|0,46)|0;aa=R^(V|E);V=xH($|0,N|0,41)|0;R=E;ba=DH($|0,N|0,23)|0;ca=aa^(R|E);R=76168+(M<<3)|0;aa=f+(M<<3)|0;M=c[aa>>2]|0;da=c[aa+4>>2]|0;aa=CH(c[R>>2]|0,c[R+4>>2]|0,F|0,O|0)|0;O=CH(aa|0,E|0,M|0,da|0)|0;da=CH(O|0,E|0,$&(X^T)^T|0,N&(I^L)^L|0)|0;O=CH(da|0,E|0,(U|Q)^(Y|Z)^(V|ba)|0,ca|0)|0;ca=E;ba=xH(P|0,_|0,28)|0;V=E;Z=DH(P|0,_|0,36)|0;Y=V|E;V=xH(P|0,_|0,34)|0;Q=E;U=DH(P|0,_|0,30)|0;da=Y^(Q|E);Q=xH(P|0,_|0,39)|0;Y=E;M=DH(P|0,_|0,25)|0;aa=CH((ba|Z)^(V|U)^(Q|M)|0,da^(Y|E)|0,(P|K)&H|P&K|0,(_|W)&S|_&W|0)|0;Y=E;da=CH(O|0,ca|0,G|0,J|0)|0;J=E;G=CH(aa|0,Y|0,O|0,ca|0)|0;ca=E;O=x|5;Y=xH(da|0,J|0,14)|0;aa=E;M=DH(da|0,J|0,50)|0;Q=aa|E;aa=xH(da|0,J|0,18)|0;U=E;V=DH(da|0,J|0,46)|0;Z=Q^(U|E);U=xH(da|0,J|0,41)|0;Q=E;ba=DH(da|0,J|0,23)|0;F=Z^(Q|E);Q=76168+(O<<3)|0;Z=f+(O<<3)|0;O=CH(c[Z>>2]|0,c[Z+4>>2]|0,c[Q>>2]|0,c[Q+4>>2]|0)|0;Q=CH(O|0,E|0,T|0,L|0)|0;L=CH(Q|0,E|0,da&($^X)^X|0,J&(N^I)^I|0)|0;Q=CH(L|0,E|0,(Y|M)^(aa|V)^(U|ba)|0,F|0)|0;F=E;ba=xH(G|0,ca|0,28)|0;U=E;V=DH(G|0,ca|0,36)|0;aa=U|E;U=xH(G|0,ca|0,34)|0;M=E;Y=DH(G|0,ca|0,30)|0;L=aa^(M|E);M=xH(G|0,ca|0,39)|0;aa=E;T=DH(G|0,ca|0,25)|0;O=CH((ba|V)^(U|Y)^(M|T)|0,L^(aa|E)|0,(G|P)&K|G&P|0,(ca|_)&W|ca&_|0)|0;aa=E;L=CH(Q|0,F|0,H|0,S|0)|0;S=E;H=CH(O|0,aa|0,Q|0,F|0)|0;F=E;Q=x|6;aa=xH(L|0,S|0,14)|0;O=E;T=DH(L|0,S|0,50)|0;M=O|E;O=xH(L|0,S|0,18)|0;Y=E;U=DH(L|0,S|0,46)|0;V=M^(Y|E);Y=xH(L|0,S|0,41)|0;M=E;ba=DH(L|0,S|0,23)|0;Z=V^(M|E);M=76168+(Q<<3)|0;V=f+(Q<<3)|0;Q=CH(c[V>>2]|0,c[V+4>>2]|0,c[M>>2]|0,c[M+4>>2]|0)|0;M=CH(Q|0,E|0,X|0,I|0)|0;I=CH(M|0,E|0,L&(da^$)^$|0,S&(J^N)^N|0)|0;M=CH(I|0,E|0,(aa|T)^(O|U)^(Y|ba)|0,Z|0)|0;Z=E;ba=xH(H|0,F|0,28)|0;Y=E;U=DH(H|0,F|0,36)|0;O=Y|E;Y=xH(H|0,F|0,34)|0;T=E;aa=DH(H|0,F|0,30)|0;I=O^(T|E);T=xH(H|0,F|0,39)|0;O=E;X=DH(H|0,F|0,25)|0;Q=CH((ba|U)^(Y|aa)^(T|X)|0,I^(O|E)|0,(H|G)&P|H&G|0,(F|ca)&_|F&ca|0)|0;O=E;I=CH(M|0,Z|0,K|0,W|0)|0;W=E;K=CH(Q|0,O|0,M|0,Z|0)|0;Z=E;M=x|7;O=xH(I|0,W|0,14)|0;Q=E;X=DH(I|0,W|0,50)|0;T=Q|E;Q=xH(I|0,W|0,18)|0;aa=E;Y=DH(I|0,W|0,46)|0;U=T^(aa|E);aa=xH(I|0,W|0,41)|0;T=E;ba=DH(I|0,W|0,23)|0;V=U^(T|E);T=76168+(M<<3)|0;U=f+(M<<3)|0;M=CH(c[U>>2]|0,c[U+4>>2]|0,c[T>>2]|0,c[T+4>>2]|0)|0;T=CH(M|0,E|0,$|0,N|0)|0;N=CH(T|0,E|0,I&(L^da)^da|0,W&(S^J)^J|0)|0;T=CH(N|0,E|0,(O|X)^(Q|Y)^(aa|ba)|0,V|0)|0;V=E;ba=xH(K|0,Z|0,28)|0;aa=E;Y=DH(K|0,Z|0,36)|0;Q=aa|E;aa=xH(K|0,Z|0,34)|0;X=E;O=DH(K|0,Z|0,30)|0;N=Q^(X|E);X=xH(K|0,Z|0,39)|0;Q=E;$=DH(K|0,Z|0,25)|0;M=CH((ba|Y)^(aa|O)^(X|$)|0,N^(Q|E)|0,(K|H)&G|K&H|0,(Z|F)&ca|Z&F|0)|0;Q=E;N=CH(T|0,V|0,P|0,_|0)|0;_=E;P=CH(M|0,Q|0,T|0,V|0)|0;V=E;x=x+8|0;if((x|0)>=80){ea=L;fa=S;ga=da;ha=J;ia=P;ja=V;ka=K;la=Z;ma=H;na=F;oa=G;pa=ca;qa=N;ra=_;sa=I;ta=W;break}else{n=N;w=_;u=da;r=J;a=L;t=I;s=S;j=W;m=P;z=V;p=K;B=Z;A=H;C=F;v=G;D=ca}}D=g;v=CH(c[D>>2]|0,c[D+4>>2]|0,ia|0,ja|0)|0;ja=g;c[ja>>2]=v;c[ja+4>>2]=E;ja=b;v=CH(c[ja>>2]|0,c[ja+4>>2]|0,ka|0,la|0)|0;la=b;c[la>>2]=v;c[la+4>>2]=E;la=o;v=CH(c[la>>2]|0,c[la+4>>2]|0,ma|0,na|0)|0;na=o;c[na>>2]=v;c[na+4>>2]=E;na=k;v=CH(c[na>>2]|0,c[na+4>>2]|0,oa|0,pa|0)|0;pa=k;c[pa>>2]=v;c[pa+4>>2]=E;pa=y;v=CH(c[pa>>2]|0,c[pa+4>>2]|0,qa|0,ra|0)|0;ra=y;c[ra>>2]=v;c[ra+4>>2]=E;ra=h;v=CH(c[ra>>2]|0,c[ra+4>>2]|0,sa|0,ta|0)|0;ta=h;c[ta>>2]=v;c[ta+4>>2]=E;ta=q;v=CH(c[ta>>2]|0,c[ta+4>>2]|0,ea|0,fa|0)|0;fa=q;c[fa>>2]=v;c[fa+4>>2]=E;fa=l;v=CH(c[fa>>2]|0,c[fa+4>>2]|0,ga|0,ha|0)|0;ha=l;c[ha>>2]=v;c[ha+4>>2]=E;i=e;return}function ju(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;if(!d)return;e=a;f=c[e>>2]|0;g=f&127;h=128-g|0;i=CH(f|0,c[e+4>>2]|0,d|0,0)|0;e=E;f=a;c[f>>2]=i;c[f+4>>2]=e;if(e>>>0<0|(e|0)==0&i>>>0<d>>>0){i=a+8|0;e=i;f=CH(c[e>>2]|0,c[e+4>>2]|0,1,0)|0;e=i;c[e>>2]=f;c[e+4>>2]=E}if((g|0)==0|h>>>0>d>>>0){j=b;k=d;l=g}else{zH(a+80+g|0,b|0,h|0)|0;iu(a,a+80|0);j=b+h|0;k=d-h|0;l=0}if(k>>>0>127){h=k+-128|0;d=h&-128;b=d+128|0;g=k;e=j;while(1){iu(a,e);g=g+-128|0;if(g>>>0<=127)break;else e=e+128|0}m=j+b|0;n=h-d|0}else{m=j;n=k}if(!n)return;zH(a+80+l|0,m|0,n|0)|0;return}function ku(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;e=i;i=i+16|0;f=e;g=b;h=c[g>>2]|0;j=c[g+4>>2]|0;g=xH(h|0,j|0,61)|0;k=E;k=b+8|0;l=k;m=c[l>>2]|0;n=c[l+4>>2]|0;l=DH(m|0,n|0,3)|0;o=DH(h|0,j|0,3)|0;p=xH(m|0,n|0,53)|0;a[f>>0]=p;p=xH(m|0,n|0,45)|0;a[f+1>>0]=p;p=xH(m|0,n|0,37)|0;a[f+2>>0]=p;p=xH(m|0,n|0,29)|0;a[f+3>>0]=p;p=xH(m|0,n|0,21)|0;a[f+4>>0]=p;p=xH(m|0,n|0,13)|0;a[f+5>>0]=p;p=xH(m|0,n|0,5)|0;a[f+6>>0]=p;a[f+7>>0]=l|g;g=xH(h|0,j|0,53)|0;a[f+8>>0]=g;g=xH(h|0,j|0,45)|0;a[f+9>>0]=g;g=xH(h|0,j|0,37)|0;a[f+10>>0]=g;g=xH(h|0,j|0,29)|0;a[f+11>>0]=g;g=xH(h|0,j|0,21)|0;a[f+12>>0]=g;g=xH(h|0,j|0,13)|0;a[f+13>>0]=g;g=xH(h|0,j|0,5)|0;a[f+14>>0]=g;a[f+15>>0]=o;o=h&127;g=o>>>0<112?112:240;l=g-o|0;if((g|0)!=(o|0)){g=128-o|0;p=CH(l|0,0,h|0,j|0)|0;j=E;h=b;c[h>>2]=p;c[h+4>>2]=j;if(j>>>0<0|(j|0)==0&p>>>0<l>>>0){p=CH(m|0,n|0,1,0)|0;n=k;c[n>>2]=p;c[n+4>>2]=E}if((o|0)==0|l>>>0<g>>>0){q=35200;r=l;s=o}else{zH(b+80+o|0,35200,g|0)|0;iu(b,b+80|0);q=35200+g|0;r=l-g|0;s=0}if(r>>>0>127){g=r+-128|0;l=g&-128;o=r;n=q;while(1){iu(b,n);o=o+-128|0;if(o>>>0<=127)break;else n=n+128|0}t=q+(l+128)|0;u=g-l|0}else{t=q;u=r}if(u)zH(b+80+s|0,t|0,u|0)|0}u=b;t=c[u>>2]|0;s=c[u+4>>2]|0;u=t&127;r=128-u|0;q=CH(t|0,s|0,16,0)|0;l=b;c[l>>2]=q;c[l+4>>2]=E;if(s>>>0>4294967295|(s|0)==-1&t>>>0>4294967279){t=k;s=CH(c[t>>2]|0,c[t+4>>2]|0,1,0)|0;t=k;c[t>>2]=s;c[t+4>>2]=E}if(!((u|0)==0|r>>>0>16)){zH(b+80+u|0,f|0,r|0)|0;iu(b,b+80|0);t=f+r|0;s=16-r|0;if(s>>>0>127){k=s+-128|0;l=s;q=t;while(1){iu(b,q);l=l+-128|0;if(l>>>0<=127)break;else q=q+128|0}q=k&-128;v=f+(r+128+q)|0;w=k-q|0}else{v=t;w=s}if(w){x=v;y=w;z=0;A=20}}else{x=f;y=16;z=u;A=20}if((A|0)==20)zH(b+80+z|0,x|0,y|0)|0;y=b+16|0;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,48)|0;a[d+1>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+2>>0]=z;a[d+3>>0]=c[y+4>>2];z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,24)|0;a[d+4>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+5>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,8)|0;a[d+6>>0]=x;a[d+7>>0]=c[y>>2];y=b+24|0;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+8>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,48)|0;a[d+9>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+10>>0]=z;a[d+11>>0]=c[y+4>>2];z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,24)|0;a[d+12>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+13>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,8)|0;a[d+14>>0]=x;a[d+15>>0]=c[y>>2];y=b+32|0;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+16>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,48)|0;a[d+17>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+18>>0]=z;a[d+19>>0]=c[y+4>>2];z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,24)|0;a[d+20>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+21>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,8)|0;a[d+22>>0]=x;a[d+23>>0]=c[y>>2];y=b+40|0;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+24>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,48)|0;a[d+25>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+26>>0]=z;a[d+27>>0]=c[y+4>>2];z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,24)|0;a[d+28>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+29>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,8)|0;a[d+30>>0]=x;a[d+31>>0]=c[y>>2];y=b+48|0;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+32>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,48)|0;a[d+33>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+34>>0]=z;a[d+35>>0]=c[y+4>>2];z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,24)|0;a[d+36>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+37>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,8)|0;a[d+38>>0]=x;a[d+39>>0]=c[y>>2];y=b+56|0;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+40>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,48)|0;a[d+41>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+42>>0]=z;a[d+43>>0]=c[y+4>>2];z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,24)|0;a[d+44>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+45>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,8)|0;a[d+46>>0]=x;a[d+47>>0]=c[y>>2];if(c[b+208>>2]|0){i=e;return}y=b+64|0;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,56)|0;a[d+48>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,48)|0;a[d+49>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,40)|0;a[d+50>>0]=z;a[d+51>>0]=c[y+4>>2];z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,24)|0;a[d+52>>0]=x;x=y;z=xH(c[x>>2]|0,c[x+4>>2]|0,16)|0;a[d+53>>0]=z;z=y;x=xH(c[z>>2]|0,c[z+4>>2]|0,8)|0;a[d+54>>0]=x;a[d+55>>0]=c[y>>2];y=b+72|0;b=y;x=xH(c[b>>2]|0,c[b+4>>2]|0,56)|0;a[d+56>>0]=x;x=y;b=xH(c[x>>2]|0,c[x+4>>2]|0,48)|0;a[d+57>>0]=b;b=y;x=xH(c[b>>2]|0,c[b+4>>2]|0,40)|0;a[d+58>>0]=x;a[d+59>>0]=c[y+4>>2];x=y;b=xH(c[x>>2]|0,c[x+4>>2]|0,24)|0;a[d+60>>0]=b;b=y;x=xH(c[b>>2]|0,c[b+4>>2]|0,16)|0;a[d+61>>0]=x;x=y;b=xH(c[x>>2]|0,c[x+4>>2]|0,8)|0;a[d+62>>0]=b;a[d+63>>0]=c[y>>2];i=e;return}function lu(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+224|0;h=g;j=(f|0)==0;BH(h|0,0,216)|0;k=h+16|0;c[k>>2]=j?-205731576:-1056596264;c[k+4>>2]=j?1779033703:-876896931;k=h+24|0;c[k>>2]=j?-2067093701:914150663;c[k+4>>2]=j?-1150833019:1654270250;k=h+32|0;c[k>>2]=j?-23791573:812702999;c[k+4>>2]=j?1013904242:-1856437926;k=h+40|0;c[k>>2]=j?1595750129:-150054599;c[k+4>>2]=j?-1521486534:355462360;k=h+48|0;c[k>>2]=j?-1377402159:-4191439;c[k+4>>2]=j?1359893119:1731405415;k=h+56|0;c[k>>2]=j?725511199:1750603025;c[k+4>>2]=j?-1694144372:-1900787065;k=h+64|0;c[k>>2]=j?-79577749:1694076839;c[k+4>>2]=j?528734635:-619958771;k=h+72|0;c[k>>2]=j?327033209:-1090891868;c[k+4>>2]=j?1541459225:1203062813;c[h+208>>2]=f;do if(d){f=h;c[f>>2]=d;c[f+4>>2]=0;if(d>>>0>127){f=d+-128|0;j=f&-128;k=d;l=b;while(1){iu(h,l);k=k+-128|0;if(k>>>0<=127)break;else l=l+128|0}if((f|0)==(j|0))break;else{m=b+(j+128)|0;n=f-j|0}}else{m=b;n=d}zH(h+80|0,m|0,n|0)|0}while(0);ku(h,e);e=216;n=h;while(1){e=e+-1|0;a[n>>0]=0;if(!e)break;else n=n+1|0}i=g;return}function mu(){var a=0,b=0;a=i;i=i+16|0;b=a;if(!(c[8832]|0)){Lb(35336,0)|0;c[8832]=1}Lb(b|0,0)|0;i=a;return (c[b+4>>2]|0)-(c[8835]|0)+(((c[b>>2]|0)-(c[8834]|0)|0)*1e6|0)|0}function nu(a){a=a|0;return ((a|0)==1?35344:(a|0)==2?35360:0)|0}function ou(a){a=a|0;var b=0;if(!a)b=0;else b=c[a>>2]|0;return b|0}function pu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;if(!a)return -24448;else{h=Ed[c[a+8>>2]&31](b,d,e,f,g)|0;return ((h|0)==0?0:h|-24448)|0}return 0}function qu(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;k=i;i=i+256|0;l=k+84|0;m=k+72|0;n=k+8|0;o=k+4|0;p=k;c[o>>2]=0;c[p>>2]=0;if((a|0)==0|(b|0)==0|(e|0)==0|(f|0)==0){q=-19328;i=k;return q|0}c[f>>2]=0;r=or(7)|0;s=nu(2)|0;t=or(7)|0;fo(m);pq(l);To(n);u=Vo(n,Ro(7)|0)|0;do if((u|0)>=0){v=c[n>>2]|0;if(!v){w=0;x=0}else{y=c[n+56>>2]|0;if(!y)z=c[v+16>>2]|0;else z=y;w=c[v+8>>2]|0;x=z}v=(w+7|0)/8|0;y=(Br(t)|0)&255;A=y+v|0;B=ry(1,A)|0;if(B){C=B+v|0;D=Eq(c[a>>2]|0,l,h,j)|0;if((D|0)>=0)if((c[a>>2]|0)==(c[l>>2]|0)){E=kq(a,m,a+136|0,l+124|0,h,j)|0;if((E|0)>=0){F=((c[a+88>>2]|0)+7|0)>>>3;G=ry(1,F)|0;if(G){H=wo(m,G,F)|0;if((H|0)>=0){I=pu(s,r,G,F,B,A)|0;if((I|0)>=0){A=ry(1,x)|0;if(A){F=od[h&127](j,A,x)|0;if((F|0)>=0){J=Xo(n,B,v<<3,1)|0;if((J|0)>=0){v=Wo(n,0)|0;if((v|0)>=0){K=Zo(n)|0;if((K|0)>=0){L=c[n>>2]|0;if(!L)M=0;else M=c[L+24>>2]|0;L=M+d|0;c[o>>2]=L;if(L>>>0<=g>>>0){N=e+(g-L)|0;c[p>>2]=N;L=dp(n,A,x,b,d,N,o)|0;if((L|0)>=0){O=ry(1,y)|0;if(!O){P=0;Q=A;R=0;S=B;T=-18944;U=G}else{V=Ar(t,C,y,N,c[o>>2]|0,O)|0;if((V|0)<0){P=0;Q=A;R=O;S=B;T=V;U=G;break}V=Du(p,e,7,A,x,c[o>>2]|0)|0;if((V|0)<0){P=0;Q=A;R=O;S=B;T=V;U=G;break}N=Cu(p,e,Cr(t)|0,O,y)|0;if((N|0)<0){P=V;Q=A;R=O;S=B;T=N;U=G;break}y=N+V|0;V=ou(s)|0;N=Bu(p,e,V,Cr(r)|0)|0;if((N|0)<0){P=y;Q=A;R=O;S=B;T=N;U=G;break}V=N+y|0;y=Au(p,e,l)|0;if((y|0)<0){P=V;Q=A;R=O;S=B;T=y;U=G;break}N=y+V|0;V=zu(p,e,0)|0;if((V|0)<0){P=N;Q=A;R=O;S=B;T=V;U=G;break}y=V+N|0;N=yu(p,e,y)|0;if((N|0)<0){P=y;Q=A;R=O;S=B;T=N;U=G;break}V=N+y|0;AH(e|0,c[p>>2]|0,V|0)|0;BH(e+V|0,0,g-V|0)|0;P=V;Q=A;R=O;S=B;T=0;U=G}}else{P=0;Q=A;R=0;S=B;T=L;U=G}}else{P=0;Q=A;R=0;S=B;T=-19200;U=G}}else{P=0;Q=A;R=0;S=B;T=K;U=G}}else{P=0;Q=A;R=0;S=B;T=v;U=G}}else{P=0;Q=A;R=0;S=B;T=J;U=G}}else{P=0;Q=A;R=0;S=B;T=F;U=G}}else{P=0;Q=0;R=0;S=B;T=-18944;U=G}}else{P=0;Q=0;R=0;S=B;T=I;U=G}}else{P=0;Q=0;R=0;S=B;T=H;U=G}}else{P=0;Q=0;R=0;S=B;T=-18944;U=0}}else{P=0;Q=0;R=0;S=B;T=E;U=0}}else{P=0;Q=0;R=0;S=B;T=-19328;U=0}else{P=0;Q=0;R=0;S=B;T=D;U=0}}else{P=0;Q=0;R=0;S=0;T=-18944;U=0}}else{P=0;Q=0;R=0;S=0;T=u;U=0}while(0);c[f>>2]=P;Uo(n);sq(l);go(m);if(U)qy(U);if(S)qy(S);if(Q)qy(Q);if(!R){q=T;i=k;return q|0}qy(R);q=T;i=k;return q|0}function ru(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;k=i;i=i+144|0;l=k+8|0;m=k+88|0;n=k+108|0;o=k+124|0;p=k+96|0;q=k+104|0;r=k+120|0;s=k+128|0;t=k+132|0;u=k+4|0;v=k+92|0;w=k+16|0;x=k;y=k+80|0;z=k+100|0;A=k+84|0;c[l>>2]=0;c[m>>2]=0;c[o>>2]=0;c[p>>2]=0;c[q>>2]=0;c[r>>2]=0;c[s>>2]=0;c[t>>2]=0;c[u>>2]=0;c[v>>2]=0;c[x>>2]=0;c[y>>2]=0;c[z>>2]=0;c[A>>2]=0;if((a|0)==0|(b|0)==0|(e|0)==0|(f|0)==0){B=-19328;i=k;return B|0}c[f>>2]=0;To(w);fo(n);c[A>>2]=b;C=b+d|0;d=su(A,C,y)|0;do if((d|0)>=0){y=tu(A,C,l)|0;if((y|0)>=0)if(!(c[l>>2]|0)){b=uu(A,C,m)|0;if((b|0)>=0){D=vu(A,C,p,o)|0;if((D|0)>=0){E=wu(A,C,q,s,r)|0;if((E|0)>=0){F=xu(A,C,v,t,u,z,x)|0;if((F|0)>=0){G=Vo(w,Ro(c[v>>2]|0)|0)|0;if((G|0)>=0){H=c[w>>2]|0;if(!H)I=0;else I=((c[H+8>>2]|0)+7|0)/8|0;H=(Br(or(c[q>>2]|0)|0)|0)&255;J=H+I|0;K=ry(1,J)|0;if(K){L=K+I|0;M=ry(1,H)|0;if(M){N=c[m>>2]|0;if((N|0)!=0?(c[N>>2]|0)==(c[a>>2]|0):0){O=kq(N,n,N+136|0,a+124|0,h,j)|0;if((O|0)>=0){N=((c[a+88>>2]|0)+7|0)>>>3;P=ry(1,N)|0;if(P){Q=wo(n,P,N)|0;if((Q|0)>=0){R=nu(c[p>>2]|0)|0;S=pu(R,or(c[o>>2]|0)|0,P,N,K,J)|0;if((S|0)>=0){J=or(c[q>>2]|0)|0;N=Ar(J,L,H,c[z>>2]|0,c[x>>2]|0,M)|0;if((N|0)<0){T=M;U=K;V=N;W=P}else{if((c[r>>2]|0)!=(H|0)){T=M;U=K;V=-19072;W=P;break}if(ky(c[s>>2]|0,M,H)|0){T=M;U=K;V=-19072;W=P;break}H=Xo(w,K,I<<3,0)|0;if((H|0)<0){T=M;U=K;V=H;W=P;break}H=Wo(w,0)|0;if((H|0)<0){T=M;U=K;V=H;W=P;break}H=Zo(w)|0;if((H|0)<0){T=M;U=K;V=H;W=P;break}H=c[x>>2]|0;if(H>>>0>g>>>0){T=M;U=K;V=-19200;W=P;break}T=M;U=K;V=dp(w,c[t>>2]|0,c[u>>2]|0,c[z>>2]|0,H,e,f)|0;W=P}}else{T=M;U=K;V=S;W=P}}else{T=M;U=K;V=Q;W=P}}else{T=M;U=K;V=-18944;W=0}}else{T=M;U=K;V=O;W=0}}else{T=M;U=K;V=-19328;W=0}}else{T=0;U=K;V=-18944;W=0}}else{T=0;U=0;V=-18944;W=0}}else{T=0;U=0;V=G;W=0}}else{T=0;U=0;V=F;W=0}}else{T=0;U=0;V=E;W=0}}else{T=0;U=0;V=D;W=0}}else{T=0;U=0;V=b;W=0}}else{T=0;U=0;V=-19072;W=0}else{T=0;U=0;V=y;W=0}}else{T=0;U=0;V=d;W=0}while(0);Uo(w);sq(c[m>>2]|0);go(n);if(W)qy(W);if(U)qy(U);if(!T){B=V;i=k;return B|0}qy(T);B=V;i=k;return B|0}function su(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=On(a,b,c,48)|0;return ((d|0)<0?d|-19072:d)|0}function tu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(!c)return -19328;else{d=Pn(a,b,c)|0;return ((d|0)<0?d|-19072:d)|0}return 0}function uu(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+32|0;f=e+16|0;g=e+8|0;h=e;c[h>>2]=0;if(!d){j=-19328;i=e;return j|0}if(c[d>>2]|0){j=-19328;i=e;return j|0}k=c[a>>2]|0;c[f>>2]=k+1;l=Nn(f,b,h)|0;if((l|0)<0){j=l|-19072;i=e;return j|0}c[h>>2]=(c[f>>2]|0)-k+(c[h>>2]|0);vs(g);k=ot(g,c[a>>2]|0,c[h>>2]|0)|0;if((k|0)<0){j=k|-19072;i=e;return j|0}if(((zs(g,2)|0)==0?(zs(g,3)|0)==0:0)?(zs(g,4)|0)==0:0){ws(g);m=-19072}else{c[d>>2]=c[g+4>>2];m=k}c[a>>2]=(c[a>>2]|0)+(c[h>>2]|0);j=m;i=e;return j|0}function vu(a,b,e,f){a=a|0;b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+32|0;h=g+24|0;j=g+12|0;k=g;c[h>>2]=0;if((e|0)==0|(f|0)==0){l=-19328;i=g;return l|0}m=On(a,b,h,48)|0;if((m|0)<0){l=m|-19072;i=g;return l|0}m=c[a>>2]|0;if((b-m|0)<1){l=-96;i=g;return l|0}c[j>>2]=d[m>>0];m=j+4|0;n=On(a,b,m,6)|0;if((n|0)<0){l=n|-19072;i=g;return l|0}n=c[a>>2]|0;c[j+8>>2]=n;c[a>>2]=n+(c[m>>2]|0);m=ts(j,e)|0;if((m|0)<0){l=m|-19072;i=g;return l|0}m=On(a,b,h,48)|0;if((m|0)<0){l=m|-19072;i=g;return l|0}c[k>>2]=d[c[a>>2]>>0];m=k+4|0;e=On(a,b,m,6)|0;if((e|0)<0){l=e|-19072;i=g;return l|0}e=c[a>>2]|0;c[k+8>>2]=e;c[a>>2]=e+(c[m>>2]|0);m=qs(k,f)|0;if((m|0)>=0){f=On(a,b,h,5)|0;i=g;return ((f|0)<0?f|-19072:f)|0}l=m|-19072;i=g;return l|0}function wu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0;g=i;i=i+16|0;h=g+12|0;j=g;c[h>>2]=0;do if(!((d|0)==0|(e|0)==0)){k=On(a,b,h,48)|0;if((k|0)<0){l=k|-19072;break}k=Tn(a,b,j)|0;if((k|0)<0){l=k|-19072;break}k=qs(j,d)|0;if((k|0)<0){l=k|-19072;break}k=On(a,b,f,4)|0;if((k|0)<0){l=k|-19072;break}else{c[e>>2]=c[a>>2];c[a>>2]=(c[a>>2]|0)+(c[f>>2]|0);l=k;break}}else l=-19328;while(0);i=g;return l|0}function xu(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0;j=i;i=i+32|0;k=j+24|0;l=j+12|0;m=j;c[k>>2]=0;if((d|0)==0|(e|0)==0|(f|0)==0|(g|0)==0|(h|0)==0){n=-19328;i=j;return n|0}o=On(a,b,k,48)|0;if((o|0)<0){n=o|-19072;i=j;return n|0}o=Sn(a,b,l,m)|0;if((o|0)<0){n=o|-19072;i=j;return n|0}if((c[m>>2]|0)!=4){n=-98;i=j;return n|0}c[e>>2]=c[m+8>>2];c[f>>2]=c[m+4>>2];m=os(l,d)|0;if((m|0)<0){n=m|-19072;i=j;return n|0}m=On(a,b,h,4)|0;if((m|0)<0){n=m|-19072;i=j;return n|0}else{c[g>>2]=c[a>>2];c[a>>2]=(c[a>>2]|0)+(c[h>>2]|0);n=m;i=j;return n|0}return 0}function yu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=Un(a,b,c)|0;if((d|0)<0){e=d|-19200;return e|0}c=Vn(a,b,48)|0;if((c|0)<0){e=c|-19200;return e|0}else{e=c+d|0;return e|0}return 0}function zu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ao(a,b,c)|0;return ((d|0)<0?d|-19200:d)|0}function Au(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+16|0;f=e;if(!d){g=-19328;i=e;return g|0}c[f>>2]=xs(2)|0;c[f+4>>2]=d;d=ut(f,b,(c[a>>2]|0)-b|0)|0;if((d|0)<0){g=d|-19200;i=e;return g|0}else{c[a>>2]=(c[a>>2]|0)+(0-d);g=d;i=e;return g|0}return 0}function Bu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0;f=i;i=i+16|0;g=f+4|0;h=f;c[g>>2]=0;c[h>>2]=0;if((d|0)==0|(e|0)==0){j=-19328;i=f;return j|0}k=Yn(a,b)|0;if((k|0)<0){j=k|-19200;i=f;return j|0}l=rs(e,g,h)|0;if((l|0)<0){j=l|-19072;i=f;return j|0}l=_n(a,b,c[g>>2]|0,c[h>>2]|0,k)|0;if((l|0)<0){j=l|-19200;i=f;return j|0}k=us(d,g,h)|0;if((k|0)>=0){d=_n(a,b,c[g>>2]|0,c[h>>2]|0,l)|0;i=f;return ((d|0)<0?d|-19200:d)|0}j=k|-19072;i=f;return j|0}function Cu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+16|0;h=g+4|0;j=g;c[h>>2]=0;c[j>>2]=0;do if(!((d|0)==0|(e|0)==0|(f|0)==0)){k=bo(a,b,e,f)|0;if((k|0)<0){l=k|-19200;break}m=Yn(a,b)|0;if((m|0)<0){l=m|-19200;break}n=rs(d,h,j)|0;if((n|0)<0){l=n|-19072;break}n=_n(a,b,c[h>>2]|0,c[j>>2]|0,m)|0;if((n|0)<0){l=n|-19200;break}m=n+k|0;k=Un(a,b,m)|0;if((k|0)<0){l=k|-19200;break}n=Vn(a,b,48)|0;if((n|0)<0){l=n|-19200;break}else{l=k+m+n|0;break}}else l=-19328;while(0);i=g;return l|0}function Du(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=i;i=i+16|0;j=h+4|0;k=h;c[j>>2]=0;c[k>>2]=0;do if(!((d|0)==0|(e|0)==0|(f|0)==0)){l=Un(a,b,g)|0;if((l|0)<0){m=l|-19200;break}n=Vn(a,b,4)|0;if((n|0)<0){m=n|-19200;break}o=bo(a,b,e,f)|0;if((o|0)<0){m=o|-19200;break}p=ps(d,j,k)|0;if((p|0)<0){m=p|-19072;break}p=_n(a,b,c[j>>2]|0,c[k>>2]|0,o)|0;if((p|0)<0){m=p|-19200;break}o=l+g+n+p|0;p=Un(a,b,o)|0;if((p|0)<0){m=p|-19200;break}n=Vn(a,b,48)|0;if((n|0)<0){m=n|-19200;break}else{m=p+o+n|0;break}}else m=-19328;while(0);i=h;return m|0}function Eu(a){a=a|0;BH(a|0,0,280)|0;return}function Fu(b){b=b|0;var c=0,d=0;if(!b)return;c=280;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function Gu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;g=i;i=i+2048|0;h=g+1024|0;j=g;if(!(c[8848]|0)){k=0;l=1;while(1){c[h+(k<<2)>>2]=l;c[j+(l<<2)>>2]=k;k=k+1|0;if((k|0)==256)break;else l=l<<1&254^l^((l&128|0)!=0?27:0)}c[8850]=1;c[8851]=2;c[8852]=4;c[8853]=8;c[8854]=16;c[8855]=32;c[8856]=64;c[8857]=128;c[8858]=27;c[8859]=54;a[35440]=99;a[35795]=0;l=1;do{k=c[h+(255-(c[j+(l<<2)>>2]|0)<<2)>>2]|0;m=(k<<1|k>>>7)&255;n=m<<1&254;o=n|m>>>7;p=o<<1&254;q=p|n>>>7;n=k^99^m^o^q^(q<<1&254|p>>>7);a[35440+l>>0]=n;a[35696+n>>0]=l;l=l+1|0}while((l|0)!=256);l=c[j+56>>2]|0;n=c[j+36>>2]|0;p=c[j+52>>2]|0;q=c[j+44>>2]|0;o=0;do{m=d[35440+o>>0]|0;k=((m&128|0)!=0?27:0)^m<<1&254;r=k^m;s=m<<16|m<<8|k;c[35952+(o<<2)>>2]=r<<24|s;k=s<<8|r;c[36976+(o<<2)>>2]=k;r=k<<8|m;c[38e3+(o<<2)>>2]=r;c[39024+(o<<2)>>2]=r<<8|m;m=a[35696+o>>0]|0;if(!(m<<24>>24)){t=0;u=0;v=0}else{r=c[j+((m&255)<<2)>>2]|0;m=c[h+(((r+n|0)%255|0)<<2)>>2]<<8^c[h+(((r+l|0)%255|0)<<2)>>2];t=c[h+(((r+p|0)%255|0)<<2)>>2]<<16^m;u=m;v=c[h+(((r+q|0)%255|0)<<2)>>2]|0}r=v<<24^t;c[40048+(o<<2)>>2]=r;m=r>>>24|t<<8;c[41072+(o<<2)>>2]=m;r=m<<8|t>>>16&255;c[42096+(o<<2)>>2]=r;c[43120+(o<<2)>>2]=r<<8|u>>>8&255;o=o+1|0}while((o|0)!=256);c[8848]=1}if((f|0)==128)c[b>>2]=10;else if((f|0)==192)c[b>>2]=12;else if((f|0)==256)c[b>>2]=14;else{w=-32;i=g;return w|0}o=b+8|0;c[b+4>>2]=o;u=f>>>5;f=0;do{t=f<<2;c[b+8+(f<<2)>>2]=(d[e+(t|1)>>0]|0)<<8|(d[e+t>>0]|0)|(d[e+(t|2)>>0]|0)<<16|(d[e+(t|3)>>0]|0)<<24;f=f+1|0}while((f|0)!=(u|0));u=c[b>>2]|0;if((u|0)==10){b=c[o>>2]|0;f=o;e=0;do{t=c[f+12>>2]|0;b=c[35400+(e<<2)>>2]^b^(d[35440+(t>>>8&255)>>0]|0)^(d[35440+(t>>>16&255)>>0]|0)<<8^(d[35440+(t>>>24)>>0]|0)<<16^(d[35440+(t&255)>>0]|0)<<24;v=f;f=f+16|0;c[f>>2]=b;q=b^c[v+4>>2];c[v+20>>2]=q;h=q^c[v+8>>2];c[v+24>>2]=h;c[v+28>>2]=h^t;e=e+1|0}while((e|0)!=10);w=0;i=g;return w|0}else if((u|0)==14){e=c[o>>2]|0;b=o;f=0;do{t=c[b+28>>2]|0;e=c[35400+(f<<2)>>2]^e^(d[35440+(t>>>8&255)>>0]|0)^(d[35440+(t>>>16&255)>>0]|0)<<8^(d[35440+(t>>>24)>>0]|0)<<16^(d[35440+(t&255)>>0]|0)<<24;h=b;b=b+32|0;c[b>>2]=e;v=e^c[h+4>>2];c[h+36>>2]=v;q=v^c[h+8>>2];c[h+40>>2]=q;v=q^c[h+12>>2];c[h+44>>2]=v;q=(d[35440+(v&255)>>0]|0)^c[h+16>>2]^(d[35440+(v>>>8&255)>>0]|0)<<8^(d[35440+(v>>>16&255)>>0]|0)<<16^(d[35440+(v>>>24)>>0]|0)<<24;c[h+48>>2]=q;v=q^c[h+20>>2];c[h+52>>2]=v;q=v^c[h+24>>2];c[h+56>>2]=q;c[h+60>>2]=q^t;f=f+1|0}while((f|0)!=7);w=0;i=g;return w|0}else if((u|0)==12){u=c[o>>2]|0;f=o;o=0;do{e=c[f+20>>2]|0;u=c[35400+(o<<2)>>2]^u^(d[35440+(e>>>8&255)>>0]|0)^(d[35440+(e>>>16&255)>>0]|0)<<8^(d[35440+(e>>>24)>>0]|0)<<16^(d[35440+(e&255)>>0]|0)<<24;b=f;f=f+24|0;c[f>>2]=u;t=u^c[b+4>>2];c[b+28>>2]=t;q=t^c[b+8>>2];c[b+32>>2]=q;t=q^c[b+12>>2];c[b+36>>2]=t;q=t^c[b+16>>2];c[b+40>>2]=q;c[b+44>>2]=q^e;o=o+1|0}while((o|0)!=8);w=0;i=g;return w|0}else{w=0;i=g;return w|0}return 0}function Hu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;i=i+288|0;h=g;BH(h|0,0,280)|0;j=b+8|0;c[b+4>>2]=j;k=Gu(h,e,f)|0;if(!k){f=c[h>>2]|0;c[b>>2]=f;e=c[h+4>>2]|0;l=f<<2;m=l|1;c[j>>2]=c[e+(l<<2)>>2];c[b+12>>2]=c[e+(m<<2)>>2];j=l|3;c[b+16>>2]=c[e+(m+1<<2)>>2];m=b+24|0;c[b+20>>2]=c[e+(j<<2)>>2];l=e+(j+-7<<2)|0;if((f|0)>1){j=b+(f<<4|8)|0;b=m;n=l;o=f;while(1){f=c[n>>2]|0;c[b>>2]=c[41072+((d[35440+(f>>>8&255)>>0]|0)<<2)>>2]^c[40048+((d[35440+(f&255)>>0]|0)<<2)>>2]^c[42096+((d[35440+(f>>>16&255)>>0]|0)<<2)>>2]^c[43120+((d[35440+(f>>>24)>>0]|0)<<2)>>2];f=c[n+4>>2]|0;c[b+4>>2]=c[41072+((d[35440+(f>>>8&255)>>0]|0)<<2)>>2]^c[40048+((d[35440+(f&255)>>0]|0)<<2)>>2]^c[42096+((d[35440+(f>>>16&255)>>0]|0)<<2)>>2]^c[43120+((d[35440+(f>>>24)>>0]|0)<<2)>>2];f=c[n+8>>2]|0;c[b+8>>2]=c[41072+((d[35440+(f>>>8&255)>>0]|0)<<2)>>2]^c[40048+((d[35440+(f&255)>>0]|0)<<2)>>2]^c[42096+((d[35440+(f>>>16&255)>>0]|0)<<2)>>2]^c[43120+((d[35440+(f>>>24)>>0]|0)<<2)>>2];f=c[n+12>>2]|0;c[b+12>>2]=c[41072+((d[35440+(f>>>8&255)>>0]|0)<<2)>>2]^c[40048+((d[35440+(f&255)>>0]|0)<<2)>>2]^c[42096+((d[35440+(f>>>16&255)>>0]|0)<<2)>>2]^c[43120+((d[35440+(f>>>24)>>0]|0)<<2)>>2];o=o+-1|0;if((o|0)<=1)break;else{b=b+16|0;n=n+-16|0}}p=j;q=e}else{p=m;q=l}c[p>>2]=c[q>>2];c[p+4>>2]=c[q+4>>2];c[p+8>>2]=c[q+8>>2];c[p+12>>2]=c[q+12>>2];r=280;s=h}else{r=280;s=h}while(1){r=r+-1|0;a[s>>0]=0;if(!r)break;else s=s+1|0}i=g;return k|0}function Iu(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=c[b+4>>2]|0;h=c[b>>2]>>1;b=h+((h|0)<1?h^536870911:536870910)<<3;i=b+17|0;j=g+16|0;k=((d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[e+3>>0]|0)<<24)^c[g>>2];l=((d[e+5>>0]|0)<<8|(d[e+4>>0]|0)|(d[e+6>>0]|0)<<16|(d[e+7>>0]|0)<<24)^c[g+4>>2];m=((d[e+9>>0]|0)<<8|(d[e+8>>0]|0)|(d[e+10>>0]|0)<<16|(d[e+11>>0]|0)<<24)^c[g+8>>2];n=((d[e+13>>0]|0)<<8|(d[e+12>>0]|0)|(d[e+14>>0]|0)<<16|(d[e+15>>0]|0)<<24)^c[g+12>>2];e=h;while(1){h=c[35952+((k&255)<<2)>>2]^c[j>>2]^c[36976+((l>>>8&255)<<2)>>2]^c[38e3+((m>>>16&255)<<2)>>2]^c[39024+(n>>>24<<2)>>2];o=c[35952+((l&255)<<2)>>2]^c[j+4>>2]^c[36976+((m>>>8&255)<<2)>>2]^c[38e3+((n>>>16&255)<<2)>>2]^c[39024+(k>>>24<<2)>>2];p=c[35952+((m&255)<<2)>>2]^c[j+8>>2]^c[36976+((n>>>8&255)<<2)>>2]^c[38e3+((k>>>16&255)<<2)>>2]^c[39024+(l>>>24<<2)>>2];q=c[35952+((n&255)<<2)>>2]^c[j+12>>2]^c[36976+((k>>>8&255)<<2)>>2]^c[38e3+((l>>>16&255)<<2)>>2]^c[39024+(m>>>24<<2)>>2];r=c[j+16>>2]|0;s=h&255;if((e|0)<=1){t=h;u=o;v=p;w=q;x=r;y=s;break}z=c[35952+((o&255)<<2)>>2]^c[j+20>>2]^c[36976+((p>>>8&255)<<2)>>2]^c[38e3+((q>>>16&255)<<2)>>2]^c[39024+(h>>>24<<2)>>2];A=c[35952+((p&255)<<2)>>2]^c[j+24>>2]^c[36976+((q>>>8&255)<<2)>>2]^c[38e3+((h>>>16&255)<<2)>>2]^c[39024+(o>>>24<<2)>>2];B=c[35952+((q&255)<<2)>>2]^c[j+28>>2]^c[36976+((h>>>8&255)<<2)>>2]^c[38e3+((o>>>16&255)<<2)>>2]^c[39024+(p>>>24<<2)>>2];j=j+32|0;k=c[35952+(s<<2)>>2]^r^c[36976+((o>>>8&255)<<2)>>2]^c[38e3+((p>>>16&255)<<2)>>2]^c[39024+(q>>>24<<2)>>2];l=z;m=A;n=B;e=e+-1|0}e=(d[35440+(u>>>8&255)>>0]|0)<<8^x;n=(d[35440+(v>>>16&255)>>0]|0)<<16^x;m=(d[35440+(w>>>24)>>0]|0)<<24^x;l=c[g+(i<<2)>>2]|0;i=(d[35440+(u&255)>>0]|0)^l;k=(d[35440+(v>>>8&255)>>0]|0)<<8^l;j=(d[35440+(w>>>16&255)>>0]|0)<<16^l;B=(d[35440+(t>>>24)>>0]|0)<<24^l;l=c[g+(b+18<<2)>>2]|0;A=(d[35440+(v&255)>>0]|0)^l;z=(d[35440+(w>>>8&255)>>0]|0)<<8^l;q=(d[35440+(t>>>16&255)>>0]|0)<<16^l;p=(d[35440+(u>>>24)>>0]|0)<<24^l;l=c[g+(b+19<<2)>>2]|0;b=(d[35440+(w&255)>>0]|0)^l;w=(d[35440+(t>>>8&255)>>0]|0)<<8^l;t=(d[35440+(u>>>16&255)>>0]|0)<<16^l;u=(d[35440+(v>>>24)>>0]|0)<<24^l;a[f>>0]=(d[35440+y>>0]|0)^x;a[f+1>>0]=e>>>8;a[f+2>>0]=n>>>16;a[f+3>>0]=m>>>24;a[f+4>>0]=i;a[f+5>>0]=k>>>8;a[f+6>>0]=j>>>16;a[f+7>>0]=B>>>24;a[f+8>>0]=A;a[f+9>>0]=z>>>8;a[f+10>>0]=q>>>16;a[f+11>>0]=p>>>24;a[f+12>>0]=b;a[f+13>>0]=w>>>8;a[f+14>>0]=t>>>16;a[f+15>>0]=u>>>24;return}function Ju(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;g=c[b+4>>2]|0;h=c[b>>2]>>1;b=h+((h|0)<1?h^536870911:536870910)<<3;i=b+17|0;j=g+16|0;k=((d[e+1>>0]|0)<<8|(d[e>>0]|0)|(d[e+2>>0]|0)<<16|(d[e+3>>0]|0)<<24)^c[g>>2];l=((d[e+5>>0]|0)<<8|(d[e+4>>0]|0)|(d[e+6>>0]|0)<<16|(d[e+7>>0]|0)<<24)^c[g+4>>2];m=((d[e+9>>0]|0)<<8|(d[e+8>>0]|0)|(d[e+10>>0]|0)<<16|(d[e+11>>0]|0)<<24)^c[g+8>>2];n=((d[e+13>>0]|0)<<8|(d[e+12>>0]|0)|(d[e+14>>0]|0)<<16|(d[e+15>>0]|0)<<24)^c[g+12>>2];e=h;while(1){h=c[40048+((k&255)<<2)>>2]^c[j>>2]^c[41072+((n>>>8&255)<<2)>>2]^c[42096+((m>>>16&255)<<2)>>2]^c[43120+(l>>>24<<2)>>2];o=c[40048+((l&255)<<2)>>2]^c[j+4>>2]^c[41072+((k>>>8&255)<<2)>>2]^c[42096+((n>>>16&255)<<2)>>2]^c[43120+(m>>>24<<2)>>2];p=c[40048+((m&255)<<2)>>2]^c[j+8>>2]^c[41072+((l>>>8&255)<<2)>>2]^c[42096+((k>>>16&255)<<2)>>2]^c[43120+(n>>>24<<2)>>2];q=c[40048+((n&255)<<2)>>2]^c[j+12>>2]^c[41072+((m>>>8&255)<<2)>>2]^c[42096+((l>>>16&255)<<2)>>2]^c[43120+(k>>>24<<2)>>2];r=c[j+16>>2]|0;s=h&255;if((e|0)<=1){t=h;u=o;v=p;w=q;x=r;y=s;break}z=c[40048+((o&255)<<2)>>2]^c[j+20>>2]^c[41072+((h>>>8&255)<<2)>>2]^c[42096+((q>>>16&255)<<2)>>2]^c[43120+(p>>>24<<2)>>2];A=c[40048+((p&255)<<2)>>2]^c[j+24>>2]^c[41072+((o>>>8&255)<<2)>>2]^c[42096+((h>>>16&255)<<2)>>2]^c[43120+(q>>>24<<2)>>2];B=c[40048+((q&255)<<2)>>2]^c[j+28>>2]^c[41072+((p>>>8&255)<<2)>>2]^c[42096+((o>>>16&255)<<2)>>2]^c[43120+(h>>>24<<2)>>2];j=j+32|0;k=c[40048+(s<<2)>>2]^r^c[41072+((q>>>8&255)<<2)>>2]^c[42096+((p>>>16&255)<<2)>>2]^c[43120+(o>>>24<<2)>>2];l=z;m=A;n=B;e=e+-1|0}e=(d[35696+(w>>>8&255)>>0]|0)<<8^x;n=(d[35696+(v>>>16&255)>>0]|0)<<16^x;m=(d[35696+(u>>>24)>>0]|0)<<24^x;l=c[g+(i<<2)>>2]|0;i=(d[35696+(u&255)>>0]|0)^l;k=(d[35696+(t>>>8&255)>>0]|0)<<8^l;j=(d[35696+(w>>>16&255)>>0]|0)<<16^l;B=(d[35696+(v>>>24)>>0]|0)<<24^l;l=c[g+(b+18<<2)>>2]|0;A=(d[35696+(v&255)>>0]|0)^l;z=(d[35696+(u>>>8&255)>>0]|0)<<8^l;o=(d[35696+(t>>>16&255)>>0]|0)<<16^l;p=(d[35696+(w>>>24)>>0]|0)<<24^l;l=c[g+(b+19<<2)>>2]|0;b=(d[35696+(w&255)>>0]|0)^l;w=(d[35696+(v>>>8&255)>>0]|0)<<8^l;v=(d[35696+(u>>>16&255)>>0]|0)<<16^l;u=(d[35696+(t>>>24)>>0]|0)<<24^l;a[f>>0]=(d[35696+y>>0]|0)^x;a[f+1>>0]=e>>>8;a[f+2>>0]=n>>>16;a[f+3>>0]=m>>>24;a[f+4>>0]=i;a[f+5>>0]=k>>>8;a[f+6>>0]=j>>>16;a[f+7>>0]=B>>>24;a[f+8>>0]=A;a[f+9>>0]=z>>>8;a[f+10>>0]=o>>>16;a[f+11>>0]=p>>>24;a[f+12>>0]=b;a[f+13>>0]=w>>>8;a[f+14>>0]=v>>>16;a[f+15>>0]=u>>>24;return}function Ku(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((b|0)==1){Iu(a,c,d);return 0}else{Ju(a,c,d);return 0}return 0}function Lu(b,c,d,e,f,g){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=i;i=i+16|0;j=h;if(d&15){k=-34;i=h;return k|0}l=(d|0)==0;if(!c){if(l){k=0;i=h;return k|0}m=e+1|0;n=e+2|0;o=e+3|0;p=e+4|0;q=e+5|0;r=e+6|0;s=e+7|0;t=e+8|0;u=e+9|0;v=e+10|0;w=e+11|0;x=e+12|0;y=e+13|0;z=e+14|0;A=e+15|0;B=f;C=g;D=d;while(1){E=j;F=B;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));Ju(b,B,C);a[C>>0]=a[e>>0]^a[C>>0];H=C+1|0;a[H>>0]=a[m>>0]^a[H>>0];H=C+2|0;a[H>>0]=a[n>>0]^a[H>>0];H=C+3|0;a[H>>0]=a[o>>0]^a[H>>0];H=C+4|0;a[H>>0]=a[p>>0]^a[H>>0];H=C+5|0;a[H>>0]=a[q>>0]^a[H>>0];H=C+6|0;a[H>>0]=a[r>>0]^a[H>>0];H=C+7|0;a[H>>0]=a[s>>0]^a[H>>0];H=C+8|0;a[H>>0]=a[t>>0]^a[H>>0];H=C+9|0;a[H>>0]=a[u>>0]^a[H>>0];H=C+10|0;a[H>>0]=a[v>>0]^a[H>>0];H=C+11|0;a[H>>0]=a[w>>0]^a[H>>0];H=C+12|0;a[H>>0]=a[x>>0]^a[H>>0];H=C+13|0;a[H>>0]=a[y>>0]^a[H>>0];H=C+14|0;a[H>>0]=a[z>>0]^a[H>>0];H=C+15|0;a[H>>0]=a[A>>0]^a[H>>0];E=e;F=j;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));D=D+-16|0;if(!D){k=0;break}else{B=B+16|0;C=C+16|0}}i=h;return k|0}if(l){k=0;i=h;return k|0}l=e+1|0;C=e+2|0;B=e+3|0;D=e+4|0;j=e+5|0;A=e+6|0;z=e+7|0;y=e+8|0;x=e+9|0;w=e+10|0;v=e+11|0;u=e+12|0;t=e+13|0;s=e+14|0;r=e+15|0;if((c|0)==1){c=g;q=f;p=d;while(1){a[c>>0]=a[e>>0]^a[q>>0];a[c+1>>0]=a[l>>0]^a[q+1>>0];a[c+2>>0]=a[C>>0]^a[q+2>>0];a[c+3>>0]=a[B>>0]^a[q+3>>0];a[c+4>>0]=a[D>>0]^a[q+4>>0];a[c+5>>0]=a[j>>0]^a[q+5>>0];a[c+6>>0]=a[A>>0]^a[q+6>>0];a[c+7>>0]=a[z>>0]^a[q+7>>0];a[c+8>>0]=a[y>>0]^a[q+8>>0];a[c+9>>0]=a[x>>0]^a[q+9>>0];a[c+10>>0]=a[w>>0]^a[q+10>>0];a[c+11>>0]=a[v>>0]^a[q+11>>0];a[c+12>>0]=a[u>>0]^a[q+12>>0];a[c+13>>0]=a[t>>0]^a[q+13>>0];a[c+14>>0]=a[s>>0]^a[q+14>>0];a[c+15>>0]=a[r>>0]^a[q+15>>0];Iu(b,c,c);E=e;F=c;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));p=p+-16|0;if(!p){k=0;break}else{c=c+16|0;q=q+16|0}}i=h;return k|0}else{q=g;g=f;f=d;while(1){a[q>>0]=a[e>>0]^a[g>>0];a[q+1>>0]=a[l>>0]^a[g+1>>0];a[q+2>>0]=a[C>>0]^a[g+2>>0];a[q+3>>0]=a[B>>0]^a[g+3>>0];a[q+4>>0]=a[D>>0]^a[g+4>>0];a[q+5>>0]=a[j>>0]^a[g+5>>0];a[q+6>>0]=a[A>>0]^a[g+6>>0];a[q+7>>0]=a[z>>0]^a[g+7>>0];a[q+8>>0]=a[y>>0]^a[g+8>>0];a[q+9>>0]=a[x>>0]^a[g+9>>0];a[q+10>>0]=a[w>>0]^a[g+10>>0];a[q+11>>0]=a[v>>0]^a[g+11>>0];a[q+12>>0]=a[u>>0]^a[g+12>>0];a[q+13>>0]=a[t>>0]^a[g+13>>0];a[q+14>>0]=a[s>>0]^a[g+14>>0];a[q+15>>0]=a[r>>0]^a[g+15>>0];Ju(b,q,q);E=e;F=q;G=E+16|0;do{a[E>>0]=a[F>>0]|0;E=E+1|0;F=F+1|0}while((E|0)<(G|0));f=f+-16|0;if(!f){k=0;break}else{q=q+16|0;g=g+16|0}}i=h;return k|0}return 0}function Mu(a){a=a|0;var b=0;b=a;a=b+64|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function Nu(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=So(b,e,1)|0;if(!f){g=-13;return g|0}if((c[f+24>>2]|0)!=16){g=-13;return g|0}Uo(a);b=Vo(a,f)|0;if(b){g=b;return g|0}g=Xo(a,d,e,1)|0;return g|0}function Ou(b){b=b|0;var c=0,d=0;Uo(b);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;c=b+4|0;a[b+3>>0]=0;a[c>>0]=0;a[c+1>>0]=0;a[c+2>>0]=0;b=c+4|0;a[c+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+8|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+12|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+16|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+20|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+24|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+28|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+32|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+36|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+40|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+44|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+48|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=c+52|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=c+56|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;a[d+3>>0]=0;return}function Pu(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0;l=i;i=i+176|0;m=l+136|0;n=l+72|0;o=l+36|0;p=l+24|0;q=l+12|0;r=l;if((c[b>>2]|0)==9){if(!(c[b+84>>2]|0)){s=wo(f,m,32)|0;if(!s){t=m+31|0;u=a[m>>0]|0;a[m>>0]=a[t>>0]|0;a[t>>0]=u;u=m+1|0;v=m+30|0;w=a[u>>0]|0;a[u>>0]=a[v>>0]|0;a[v>>0]=w;w=m+2|0;x=m+29|0;y=a[w>>0]|0;a[w>>0]=a[x>>0]|0;a[x>>0]=y;y=m+3|0;z=m+28|0;A=a[y>>0]|0;a[y>>0]=a[z>>0]|0;a[z>>0]=A;A=m+4|0;B=m+27|0;C=a[A>>0]|0;a[A>>0]=a[B>>0]|0;a[B>>0]=C;C=m+5|0;D=m+26|0;E=a[C>>0]|0;a[C>>0]=a[D>>0]|0;a[D>>0]=E;E=m+6|0;F=m+25|0;G=a[E>>0]|0;a[E>>0]=a[F>>0]|0;a[F>>0]=G;G=m+7|0;H=m+24|0;I=a[G>>0]|0;a[G>>0]=a[H>>0]|0;a[H>>0]=I;I=m+8|0;J=m+23|0;K=a[I>>0]|0;a[I>>0]=a[J>>0]|0;a[J>>0]=K;K=m+9|0;L=m+22|0;M=a[K>>0]|0;a[K>>0]=a[L>>0]|0;a[L>>0]=M;M=m+10|0;N=m+21|0;O=a[M>>0]|0;a[M>>0]=a[N>>0]|0;a[N>>0]=O;O=m+11|0;P=m+20|0;Q=a[O>>0]|0;a[O>>0]=a[P>>0]|0;a[P>>0]=Q;Q=m+12|0;R=m+19|0;S=a[Q>>0]|0;a[Q>>0]=a[R>>0]|0;a[R>>0]=S;S=m+13|0;T=m+18|0;U=a[S>>0]|0;a[S>>0]=a[T>>0]|0;a[T>>0]=U;U=m+14|0;V=m+17|0;W=a[U>>0]|0;a[U>>0]=a[V>>0]|0;a[V>>0]=W;W=m+15|0;X=m+16|0;Y=a[W>>0]|0;a[W>>0]=a[X>>0]|0;a[X>>0]=Y;Y=rv(n,m,g,h)|0;if(!Y){Z=n+63|0;_=a[n>>0]|0;a[n>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+1|0;Z=n+62|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+2|0;Z=n+61|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+3|0;Z=n+60|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+4|0;Z=n+59|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+5|0;Z=n+58|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+6|0;Z=n+57|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+7|0;Z=n+56|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+8|0;Z=n+55|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+9|0;Z=n+54|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+10|0;Z=n+53|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+11|0;Z=n+52|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+12|0;Z=n+51|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+13|0;Z=n+50|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+14|0;Z=n+49|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+15|0;Z=n+48|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+16|0;Z=n+47|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+17|0;Z=n+46|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+18|0;Z=n+45|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+19|0;Z=n+44|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+20|0;Z=n+43|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+21|0;Z=n+42|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+22|0;Z=n+41|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+23|0;Z=n+40|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+24|0;Z=n+39|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+25|0;Z=n+38|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+26|0;Z=n+37|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+27|0;Z=n+36|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+28|0;Z=n+35|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+29|0;Z=n+34|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=n+30|0;Z=n+33|0;_=a[$>>0]|0;a[$>>0]=a[Z>>0]|0;a[Z>>0]=_;_=n+31|0;Z=n+32|0;$=a[_>>0]|0;a[_>>0]=a[Z>>0]|0;a[Z>>0]=$;$=vo(e,n,32)|0;if(!$){aa=w;ba=y;ca=A;da=C;ea=E;fa=G;ga=I;ha=K;ia=M;ja=O;ka=Q;la=S;ma=U;na=W;oa=X;pa=V;qa=T;ra=R;sa=P;ta=N;ua=L;va=J;wa=H;xa=F;ya=D;za=B;Aa=z;Ba=x;Ca=v;Da=t;Ea=u;Fa=vo(d,n+32|0,32)|0}else{aa=w;ba=y;ca=A;da=C;ea=E;fa=G;ga=I;ha=K;ia=M;ja=O;ka=Q;la=S;ma=U;na=W;oa=X;pa=V;qa=T;ra=R;sa=P;ta=N;ua=L;va=J;wa=H;xa=F;ya=D;za=B;Aa=z;Ba=x;Ca=v;Da=t;Ea=u;Fa=$}}else{aa=w;ba=y;ca=A;da=C;ea=E;fa=G;ga=I;ha=K;ia=M;ja=O;ka=Q;la=S;ma=U;na=W;oa=X;pa=V;qa=T;ra=R;sa=P;ta=N;ua=L;va=J;wa=H;xa=F;ya=D;za=B;Aa=z;Ba=x;Ca=v;Da=t;Ea=u;Fa=Y}}else{aa=m+2|0;ba=m+3|0;ca=m+4|0;da=m+5|0;ea=m+6|0;fa=m+7|0;ga=m+8|0;ha=m+9|0;ia=m+10|0;ja=m+11|0;ka=m+12|0;la=m+13|0;ma=m+14|0;na=m+15|0;oa=m+16|0;pa=m+17|0;qa=m+18|0;ra=m+19|0;sa=m+20|0;ta=m+21|0;ua=m+22|0;va=m+23|0;wa=m+24|0;xa=m+25|0;ya=m+26|0;za=m+27|0;Aa=m+28|0;Ba=m+29|0;Ca=m+30|0;Da=m+31|0;Ea=m+1|0;Fa=s}a[m>>0]=0;a[Ea>>0]=0;a[aa>>0]=0;a[ba>>0]=0;a[ca>>0]=0;a[da>>0]=0;a[ea>>0]=0;a[fa>>0]=0;a[ga>>0]=0;a[ha>>0]=0;a[ia>>0]=0;a[ja>>0]=0;a[ka>>0]=0;a[la>>0]=0;a[ma>>0]=0;a[na>>0]=0;a[oa>>0]=0;a[pa>>0]=0;a[qa>>0]=0;a[ra>>0]=0;a[sa>>0]=0;a[ta>>0]=0;a[ua>>0]=0;a[va>>0]=0;a[wa>>0]=0;a[xa>>0]=0;a[ya>>0]=0;a[za>>0]=0;a[Aa>>0]=0;a[Ba>>0]=0;a[Ca>>0]=0;a[Da>>0]=0;Ga=Fa}else Ga=-20352;Ha=Ga;i=l;return Ha|0}Ga=b+76|0;if(!(c[b+84>>2]|0)){Ha=-20352;i=l;return Ha|0}oq(o);fo(p);fo(q);fo(r);Fa=b+92|0;Da=0;a:while(1){Ca=0;while(1){Ba=Dq(b,p,o,j,k)|0;if(Ba){Ia=Ba;break a}Ba=Ho(d,o,Ga)|0;if(Ba){Ia=Ba;break a}if((Ca|0)>10){Ia=-19712;break a}if(!(Ao(d,0)|0))Ca=Ca+1|0;else break}Ca=((c[Fa>>2]|0)+7|0)>>>3;Ba=Ca>>>0<h>>>0?Ca:h;Ca=vo(q,g,Ba)|0;if(Ca){Ia=Ca;break}Ca=Ba<<3;Ba=c[Fa>>2]|0;if(Ca>>>0>Ba>>>0?(Aa=yo(q,Ca-Ba|0)|0,(Aa|0)!=0):0){Ia=Aa;break}if((zo(q,Ga)|0)>-1?(Aa=Eo(q,q,Ga)|0,(Aa|0)!=0):0){Ia=Aa;break}Aa=((c[Fa>>2]|0)+7|0)>>>3;Ba=Ko(r,Aa,j,k)|0;if(!Ba){Ja=Aa;Ka=0}else{Ia=Ba;break}while(1){Ba=yo(r,(Ja<<3)-(c[Fa>>2]|0)|0)|0;if(Ba){Ia=Ba;break a}if((Ka|0)>29){Ha=-19712;La=38;break a}Ka=Ka+1|0;if((Ao(r,1)|0)>=0?(zo(r,Ga)|0)<=-1:0)break;Ja=((c[Fa>>2]|0)+7|0)>>>3;Ba=Ko(r,Ja,j,k)|0;if(Ba){Ia=Ba;break a}}Ba=Fo(e,d,f)|0;if(Ba){Ia=Ba;break}Ba=Do(q,q,e)|0;if(Ba){Ia=Ba;break}Ba=Fo(q,q,r)|0;if(Ba){Ia=Ba;break}Ba=Fo(p,p,r)|0;if(Ba){Ia=Ba;break}Ba=Lo(e,p,Ga)|0;if(Ba){Ia=Ba;break}Ba=Fo(e,e,q)|0;if(Ba){Ia=Ba;break}Ba=Ho(e,e,Ga)|0;if(Ba){Ia=Ba;break}if((Da|0)>10){Ia=-19712;break}if(!(Ao(e,0)|0))Da=Da+1|0;else{Ia=0;break}}if((La|0)==38){i=l;return Ha|0}qq(o);go(p);go(q);go(r);Ha=Ia;i=l;return Ha|0}function Qu(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;j=i;i=i+256|0;k=j+12|0;l=j+112|0;m=j;n=a+92|0;o=((c[n>>2]|0)+7|0)>>>3;p=or(h)|0;if(!p){q=-20352;i=j;return q|0}fo(m);Xu(k);h=wo(e,l,o)|0;do if(!h){r=((c[n>>2]|0)+7|0)>>>3;s=r>>>0<g>>>0?r:g;r=vo(m,f,s)|0;if(!r){t=s<<3;s=c[n>>2]|0;if(t>>>0>s>>>0?(u=yo(m,t-s|0)|0,(u|0)!=0):0){v=u;break}u=a+76|0;if((zo(m,u)|0)>-1?(s=Eo(m,m,u)|0,(s|0)!=0):0){v=s;break}s=wo(m,l+o|0,o)|0;if(!s){Zu(k,p,l,o<<1)|0;v=Pu(a,b,d,e,f,g,66,k)|0}else v=s}else v=r}else v=h;while(0);av(k);go(m);q=v;i=j;return q|0}function Ru(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;j=i;i=i+192|0;k=j+152|0;l=j+88|0;m=j+12|0;n=j+72|0;o=j+60|0;p=j;q=j+24|0;oq(q);fo(m);fo(n);fo(o);fo(p);if((c[b>>2]|0)==9){if(!(c[b+84>>2]|0)){r=wo(f,k,32)|0;if(!r){s=k+31|0;t=a[k>>0]|0;a[k>>0]=a[s>>0]|0;a[s>>0]=t;t=k+1|0;s=k+30|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=k+2|0;s=k+29|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=k+3|0;s=k+28|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=k+4|0;s=k+27|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=k+5|0;s=k+26|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=k+6|0;s=k+25|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=k+7|0;s=k+24|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=k+8|0;s=k+23|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=k+9|0;s=k+22|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=k+10|0;s=k+21|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=k+11|0;s=k+20|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=k+12|0;s=k+19|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=k+13|0;s=k+18|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=k+14|0;s=k+17|0;t=a[u>>0]|0;a[u>>0]=a[s>>0]|0;a[s>>0]=t;t=k+15|0;s=k+16|0;u=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=u;u=wo(h,l,32)|0;if(!u){s=wo(g,l+32|0,32)|0;if(!s){t=l+63|0;v=a[l>>0]|0;a[l>>0]=a[t>>0]|0;a[t>>0]=v;v=l+1|0;t=l+62|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+2|0;t=l+61|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+3|0;t=l+60|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+4|0;t=l+59|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+5|0;t=l+58|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+6|0;t=l+57|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+7|0;t=l+56|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+8|0;t=l+55|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+9|0;t=l+54|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+10|0;t=l+53|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+11|0;t=l+52|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+12|0;t=l+51|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+13|0;t=l+50|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+14|0;t=l+49|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+15|0;t=l+48|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+16|0;t=l+47|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+17|0;t=l+46|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+18|0;t=l+45|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+19|0;t=l+44|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+20|0;t=l+43|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+21|0;t=l+42|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+22|0;t=l+41|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+23|0;t=l+40|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+24|0;t=l+39|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+25|0;t=l+38|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+26|0;t=l+37|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+27|0;t=l+36|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+28|0;t=l+35|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+29|0;t=l+34|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=l+30|0;t=l+33|0;v=a[w>>0]|0;a[w>>0]=a[t>>0]|0;a[t>>0]=v;v=l+31|0;t=l+32|0;w=a[v>>0]|0;a[v>>0]=a[t>>0]|0;a[t>>0]=w;w=(sv(l,k,d,e)|0)==0;x=w?-19968:0}else x=s}else x=u}else x=r}else x=-20352;y=x;i=j;return y|0}x=b+76|0;if(!(c[b+84>>2]|0)){y=-20352;i=j;return y|0}do if((((Ao(g,1)|0)>=0?(zo(g,x)|0)<=-1:0)?(Ao(h,1)|0)>=0:0)?(zo(h,x)|0)<=-1:0){r=Aq(b,f)|0;if(!r){u=b+92|0;s=((c[u>>2]|0)+7|0)>>>3;w=s>>>0<e>>>0?s:e;s=vo(m,d,w)|0;if(!s){k=w<<3;w=c[u>>2]|0;if(k>>>0>w>>>0?(u=yo(m,k-w|0)|0,(u|0)!=0):0){z=u;break}if((zo(m,x)|0)>-1?(u=Eo(m,m,x)|0,(u|0)!=0):0){z=u;break}u=Lo(n,h,x)|0;if(!u){w=Fo(o,m,n)|0;if(!w){k=Ho(o,o,x)|0;if(!k){l=Fo(p,g,n)|0;if(!l){t=Ho(p,p,x)|0;if(!t){v=Bq(b,q,o,b+40|0,p,f)|0;if(!v)if(!(vq(q)|0)){A=Ho(q,q,x)|0;if(!A){B=(zo(q,g)|0)==0;z=B?0:-19968}else z=A}else z=-19968;else z=v}else z=t}else z=l}else z=k}else z=w}else z=u}else z=s}else z=r}else z=-19968;while(0);qq(q);go(m);go(n);go(o);go(p);y=z;i=j;return y|0}function Su(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;j=i;i=i+176|0;h=j+28|0;k=j+24|0;l=j+12|0;m=j;fo(l);fo(m);n=Qu(a,l,m,a+124|0,d,e,b)|0;if(n){o=n;go(l);go(m);i=j;return o|0}c[k>>2]=h+141;n=Xn(k,h,m)|0;if((n|0)>=0){b=Xn(k,h,l)|0;if((b|0)>=0){e=b+n|0;d=Un(k,h,e)|0;if((d|0)>=0){a=Vn(k,h,48)|0;if((a|0)<0)p=a;else{h=d+e+a|0;zH(f|0,c[k>>2]|0,h|0)|0;c[g>>2]=h;p=0}}else p=d}else p=b}else p=n;o=p;go(l);go(m);i=j;return o|0}function Tu(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g=i;i=i+32|0;h=g+28|0;j=g+24|0;k=g+12|0;l=g;c[h>>2]=e;m=e+f|0;fo(k);fo(l);f=On(h,m,j,48)|0;do if(!f)if(((c[h>>2]|0)+(c[j>>2]|0)|0)==(m|0)){e=Qn(h,m,k)|0;if(!e){n=Qn(h,m,l)|0;if(!n){o=Ru(a,b,d,a+136|0,k,l)|0;p=((o|0)!=0?1:(c[h>>2]|0)==(m|0))?o:-19456;break}else q=n}else q=e;p=q+-20352|0}else p=-20454;else p=f+-20352|0;while(0);go(k);go(l);i=g;return p|0}function Uu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=uq(a,b)|0;if(!c){d=jo(a+124|0,b+124|0)|0;if(!d){e=tq(a+136|0,b+136|0)|0;if(!e){f=0;return f|0}else g=e}else g=d}else g=c;sq(a);f=g;return f|0}function Vu(a){a=a|0;sq(a);return}function Wu(a){a=a|0;pq(a);return}function Xu(a){a=a|0;var b=0;b=a;a=b+100|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function Yu(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+80|0;g=f+64|0;h=f;j=(Br(c[b>>2]|0)|0)&255;k=(d|0)!=0&(e|0)!=0;a[g>>0]=0;l=k?2:1;m=b+12|0;if(k){do{zr(b)|0;xr(b,m,j)|0;xr(b,g,1)|0;xr(b,d,e)|0;yr(b,h)|0;wr(b,h,j)|0;xr(b,m,j)|0;yr(b,m)|0;k=(a[g>>0]|0)+1<<24>>24;a[g>>0]=k}while((k&255)>>>0<l>>>0);i=f;return}else{do{zr(b)|0;xr(b,m,j)|0;xr(b,g,1)|0;yr(b,h)|0;wr(b,h,j)|0;xr(b,m,j)|0;yr(b,m)|0;e=(a[g>>0]|0)+1<<24>>24;a[g>>0]=e}while((e&255)>>>0<l>>>0);i=f;return}}function Zu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=rr(a,b,1)|0;if(e){f=e;return f|0}e=a+12|0;wr(a,e,(Br(b)|0)&255)|0;BH(e|0,1,(Br(b)|0)&255|0)|0;Yu(a,c,d);f=0;return f|0}function _u(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;i=i+384|0;h=g;j=(Br(c[a>>2]|0)|0)&255;if(d>>>0>1024){k=-3;i=g;return k|0}if(f>>>0>256){k=-5;i=g;return k|0}l=c[a+92>>2]|0;do if(!l)m=12;else{if((c[a+84>>2]|0)!=1?(c[a+76>>2]|0)<=(c[a+88>>2]|0):0){m=12;break}n=a+80|0;o=c[n>>2]|0;if((o+f|0)>>>0<=384){BH(h|0,0,384)|0;if(!(od[l&127](c[a+96>>2]|0,h,o)|0)){o=c[n>>2]|0;if((e|0)!=0&(f|0)!=0){zH(h+o|0,e|0,f|0)|0;p=o+f|0}else p=o;Yu(a,h,p);c[a+76>>2]=1;q=0;break}else r=-9}else r=-5;k=r;i=g;return k|0}while(0);if((m|0)==12)if((e|0)!=0&(f|0)!=0){Yu(a,e,f);q=f}else q=f;if(d){f=a+12|0;m=d;d=b;while(1){b=m>>>0>j>>>0?j:m;zr(a)|0;xr(a,f,j)|0;yr(a,f)|0;zH(d|0,f|0,b|0)|0;if((m|0)==(b|0))break;else{m=m-b|0;d=d+b|0}}}Yu(a,e,q);q=a+76|0;c[q>>2]=(c[q>>2]|0)+1;k=0;i=g;return k|0}function $u(a,b,c){a=a|0;b=b|0;c=c|0;return _u(a,b,c,0,0)|0}function av(b){b=b|0;var c=0,d=0;if(!b)return;qr(b);c=100;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function bv(a){a=a|0;var b=0;b=a;a=b+88|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function cv(b){b=b|0;var c=0,d=0;if(!b)return;c=88;d=b;while(1){c=c+-1|0;a[d>>0]=0;if(!c)break;else d=d+1|0}return}function dv(a,b){a=a|0;b=b|0;var d=0;d=a;a=b;b=d+88|0;do{c[d>>2]=c[a>>2];d=d+4|0;a=a+4|0}while((d|0)<(b|0));return}function ev(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=1732584193;c[a+12>>2]=-271733879;c[a+16>>2]=-1732584194;c[a+20>>2]=271733878;return}function fv(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=(d[b+1>>0]|0)<<8|(d[b>>0]|0)|(d[b+2>>0]|0)<<16|(d[b+3>>0]|0)<<24;f=(d[b+5>>0]|0)<<8|(d[b+4>>0]|0)|(d[b+6>>0]|0)<<16|(d[b+7>>0]|0)<<24;g=(d[b+9>>0]|0)<<8|(d[b+8>>0]|0)|(d[b+10>>0]|0)<<16|(d[b+11>>0]|0)<<24;h=(d[b+13>>0]|0)<<8|(d[b+12>>0]|0)|(d[b+14>>0]|0)<<16|(d[b+15>>0]|0)<<24;i=(d[b+17>>0]|0)<<8|(d[b+16>>0]|0)|(d[b+18>>0]|0)<<16|(d[b+19>>0]|0)<<24;j=(d[b+21>>0]|0)<<8|(d[b+20>>0]|0)|(d[b+22>>0]|0)<<16|(d[b+23>>0]|0)<<24;k=(d[b+25>>0]|0)<<8|(d[b+24>>0]|0)|(d[b+26>>0]|0)<<16|(d[b+27>>0]|0)<<24;l=(d[b+29>>0]|0)<<8|(d[b+28>>0]|0)|(d[b+30>>0]|0)<<16|(d[b+31>>0]|0)<<24;m=(d[b+33>>0]|0)<<8|(d[b+32>>0]|0)|(d[b+34>>0]|0)<<16|(d[b+35>>0]|0)<<24;n=(d[b+37>>0]|0)<<8|(d[b+36>>0]|0)|(d[b+38>>0]|0)<<16|(d[b+39>>0]|0)<<24;o=(d[b+41>>0]|0)<<8|(d[b+40>>0]|0)|(d[b+42>>0]|0)<<16|(d[b+43>>0]|0)<<24;p=(d[b+45>>0]|0)<<8|(d[b+44>>0]|0)|(d[b+46>>0]|0)<<16|(d[b+47>>0]|0)<<24;q=(d[b+49>>0]|0)<<8|(d[b+48>>0]|0)|(d[b+50>>0]|0)<<16|(d[b+51>>0]|0)<<24;r=(d[b+53>>0]|0)<<8|(d[b+52>>0]|0)|(d[b+54>>0]|0)<<16|(d[b+55>>0]|0)<<24;s=(d[b+57>>0]|0)<<8|(d[b+56>>0]|0)|(d[b+58>>0]|0)<<16|(d[b+59>>0]|0)<<24;t=(d[b+61>>0]|0)<<8|(d[b+60>>0]|0)|(d[b+62>>0]|0)<<16|(d[b+63>>0]|0)<<24;b=a+8|0;u=c[b>>2]|0;v=a+12|0;w=c[v>>2]|0;x=a+16|0;y=c[x>>2]|0;z=a+20|0;a=c[z>>2]|0;A=e+-680876936+u+((a^y)&w^a)|0;B=(A<<7|A>>>25)+w|0;A=f+-389564586+a+(B&(y^w)^y)|0;a=(A<<12|A>>>20)+B|0;A=g+606105819+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=h+-1044525330+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=i+-176418897+B+(w&(y^a)^a)|0;B=(A<<7|A>>>25)+w|0;A=j+1200080426+a+(B&(w^y)^y)|0;a=(A<<12|A>>>20)+B|0;A=k+-1473231341+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=l+-45705983+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=m+1770035416+B+(w&(y^a)^a)|0;B=(A<<7|A>>>25)+w|0;A=n+-1958414417+a+(B&(w^y)^y)|0;a=(A<<12|A>>>20)+B|0;A=o+-42063+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=p+-1990404162+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=q+1804603682+B+(w&(y^a)^a)|0;B=(A<<7|A>>>25)+w|0;A=r+-40341101+a+(B&(w^y)^y)|0;a=(A<<12|A>>>20)+B|0;A=s+-1502002290+y+(a&(B^w)^w)|0;y=(A<<17|A>>>15)+a|0;A=t+1236535329+w+(y&(a^B)^B)|0;w=(A<<22|A>>>10)+y|0;A=f+-165796510+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=k+-1069501632+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=p+643717713+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=e+-373897302+w+((y^a)&B^a)|0;w=(A<<20|A>>>12)+y|0;A=j+-701558691+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=o+38016083+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=t+-660478335+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=i+-405537848+w+((y^a)&B^a)|0;w=(A<<20|A>>>12)+y|0;A=n+568446438+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=s+-1019803690+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=h+-187363961+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=m+1163531501+w+((y^a)&B^a)|0;w=(A<<20|A>>>12)+y|0;A=r+-1444681467+B+((w^y)&a^y)|0;B=(A<<5|A>>>27)+w|0;A=g+-51403784+a+((B^w)&y^w)|0;a=(A<<9|A>>>23)+B|0;A=l+1735328473+y+((a^B)&w^B)|0;y=(A<<14|A>>>18)+a|0;A=y^a;C=q+-1926607734+w+(A&B^a)|0;w=(C<<20|C>>>12)+y|0;C=j+-378558+B+(A^w)|0;A=(C<<4|C>>>28)+w|0;C=m+-2022574463+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=p+1839030562+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=s+-35309556+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=f+-1530992060+A+(y^a^w)|0;A=(C<<4|C>>>28)+w|0;C=i+1272893353+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=l+-155497632+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=o+-1094730640+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=r+681279174+A+(y^a^w)|0;A=(C<<4|C>>>28)+w|0;C=e+-358537222+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=h+-722521979+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=k+76029189+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=n+-640364487+A+(y^a^w)|0;A=(C<<4|C>>>28)+w|0;C=q+-421815835+a+(w^y^A)|0;a=(C<<11|C>>>21)+A|0;C=t+530742520+y+(A^w^a)|0;y=(C<<16|C>>>16)+a|0;C=g+-995338651+w+(a^A^y)|0;w=(C<<23|C>>>9)+y|0;C=e+-198630844+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=l+1126891415+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=s+-1416354905+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=j+-57434055+w+((y|~A)^a)|0;w=(C<<21|C>>>11)+y|0;C=q+1700485571+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=h+-1894986606+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=o+-1051523+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=f+-2054922799+w+((y|~A)^a)|0;w=(C<<21|C>>>11)+y|0;C=m+1873313359+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=t+-30611744+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=k+-1560198380+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=r+1309151649+w+((y|~A)^a)|0;w=(C<<21|C>>>11)+y|0;C=i+-145523070+A+((w|~a)^y)|0;A=(C<<6|C>>>26)+w|0;C=p+-1120210379+a+((A|~y)^w)|0;a=(C<<10|C>>>22)+A|0;C=g+718787259+y+((a|~w)^A)|0;y=(C<<15|C>>>17)+a|0;C=n+-343485551+w+((y|~A)^a)|0;c[b>>2]=A+u;c[v>>2]=y+(c[v>>2]|0)+(C<<21|C>>>11);c[x>>2]=y+(c[x>>2]|0);c[z>>2]=a+(c[z>>2]|0);return}function gv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!d)return;e=c[a>>2]|0;f=e&63;g=64-f|0;h=e+d|0;c[a>>2]=h;if(h>>>0<d>>>0){h=a+4|0;c[h>>2]=(c[h>>2]|0)+1}if((f|0)==0|g>>>0>d>>>0){i=b;j=d;k=f}else{zH(a+24+f|0,b|0,g|0)|0;fv(a,a+24|0);i=b+g|0;j=d-g|0;k=0}if(j>>>0>63){g=j+-64|0;d=g&-64;b=d+64|0;f=j;h=i;while(1){fv(a,h);f=f+-64|0;if(f>>>0<=63)break;else h=h+64|0}l=i+b|0;m=g-d|0}else{l=i;m=j}if(!m)return;zH(a+24+k|0,l|0,m|0)|0;return}function hv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;e=i;i=i+16|0;f=e;g=c[b>>2]|0;h=b+4|0;j=c[h>>2]|0;a[f>>0]=g<<3;a[f+1>>0]=g>>>5;a[f+2>>0]=g>>>13;a[f+3>>0]=g>>>21;a[f+4>>0]=j<<3|g>>>29;a[f+5>>0]=j>>>5;a[f+6>>0]=j>>>13;a[f+7>>0]=j>>>21;k=g&63;l=k>>>0<56?56:120;m=l-k|0;if((l|0)!=(k|0)){l=64-k|0;n=m+g|0;c[b>>2]=n;if(n>>>0<m>>>0)c[h>>2]=j+1;if((k|0)==0|m>>>0<l>>>0){o=44144;p=m;q=k}else{zH(b+24+k|0,44144,l|0)|0;fv(b,b+24|0);o=44144+l|0;p=m-l|0;q=0}if(p>>>0>63){l=p+-64|0;m=l&-64;k=p;j=o;while(1){fv(b,j);k=k+-64|0;if(k>>>0<=63)break;else j=j+64|0}r=o+(m+64)|0;s=l-m|0}else{r=o;s=p}if(s)zH(b+24+q|0,r|0,s|0)|0}s=c[b>>2]|0;r=s&63;q=64-r|0;c[b>>2]=s+8;if(s>>>0>4294967287)c[h>>2]=(c[h>>2]|0)+1;if(!((r|0)==0|q>>>0>8)){zH(b+24+r|0,f|0,q|0)|0;fv(b,b+24|0);h=f+q|0;s=8-q|0;if(s>>>0>63){p=s+-64|0;o=s;m=h;while(1){fv(b,m);o=o+-64|0;if(o>>>0<=63)break;else m=m+64|0}m=p&-64;t=f+(q+64+m)|0;u=p-m|0}else{t=h;u=s}if(u){v=t;w=u;x=0;y=20}}else{v=f;w=8;x=r;y=20}if((y|0)==20)zH(b+24+x|0,v|0,w|0)|0;w=b+8|0;a[d>>0]=c[w>>2];a[d+1>>0]=(c[w>>2]|0)>>>8;a[d+2>>0]=(c[w>>2]|0)>>>16;a[d+3>>0]=(c[w>>2]|0)>>>24;w=b+12|0;a[d+4>>0]=c[w>>2];a[d+5>>0]=(c[w>>2]|0)>>>8;a[d+6>>0]=(c[w>>2]|0)>>>16;a[d+7>>0]=(c[w>>2]|0)>>>24;w=b+16|0;a[d+8>>0]=c[w>>2];a[d+9>>0]=(c[w>>2]|0)>>>8;a[d+10>>0]=(c[w>>2]|0)>>>16;a[d+11>>0]=(c[w>>2]|0)>>>24;w=b+20|0;a[d+12>>0]=c[w>>2];a[d+13>>0]=(c[w>>2]|0)>>>8;a[d+14>>0]=(c[w>>2]|0)>>>16;a[d+15>>0]=(c[w>>2]|0)>>>24;i=e;return}function iv(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+96|0;g=f;h=g+8|0;j=g;k=j+88|0;do{c[j>>2]=0;j=j+4|0}while((j|0)<(k|0));c[h>>2]=1732584193;c[g+12>>2]=-271733879;c[g+16>>2]=-1732584194;c[g+20>>2]=271733878;do if(d){c[g>>2]=d;if(d>>>0>63){h=d+-64|0;j=h&-64;k=d;l=b;while(1){fv(g,l);k=k+-64|0;if(k>>>0<=63)break;else l=l+64|0}if((h|0)==(j|0))break;else{m=b+(j+64)|0;n=h-j|0}}else{m=b;n=d}zH(g+24|0,m|0,n|0)|0}while(0);hv(g,e);e=88;n=g;while(1){e=e+-1|0;a[n>>0]=0;if(!e)break;else n=n+1|0}i=f;return}function jv(a){a=a|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return}function kv(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;l=i;i=i+752|0;m=l+360|0;n=l+48|0;o=l+80|0;p=l+16|0;q=l+72|0;r=l;if(!b){s=-5248;i=l;return s|0}t=Cw(g,e)|0;if(!t){s=-4224;i=l;return s|0}u=Cw(g,f)|0;if(!((u|0)!=0&u>>>0>t>>>0)){s=-4224;i=l;return s|0}v=yH(e|0)|0;e=t+v|0;w=(a[e>>0]|0)==32;x=v+1|0;y=w?t+x|0:e;e=(a[y>>0]|0)==13?t+((w?x:v)+1)|0:y;if((a[e>>0]|0)!=10){s=-4224;i=l;return s|0}y=e+1|0;v=yH(f|0)|0;f=u+v|0;x=(a[f>>0]|0)==32;w=v+1|0;t=x?u+w|0:f;f=(a[t>>0]|0)==13?u+((x?w:v)+1)|0:t;c[k>>2]=((a[f>>0]|0)==10?f+1|0:f)-g;do if(!(ky(y,44208,22)|0)){g=e+23|0;f=(a[g>>0]|0)==13;k=f?43:42;t=f?59:58;v=f?64:63;if((a[(f?e+24|0:g)>>0]|0)!=10){s=-4352;i=l;return s|0}g=e+(f?25:24)|0;do if(!(ky(g,44232,23)|0)){w=r;c[w>>2]=0;c[w+4>>2]=0;w=e+(f?48:47)|0;x=0;a:while(1){z=a[w>>0]|0;A=z&255;do if((z+-48&255)<10)B=A+-48|0;else{if((z+-65&255)<6){B=A+-55|0;break}if((z+-97&255)>=6){s=-4608;C=63;break a}B=A+-87|0}while(0);A=r+(x>>>1)|0;a[A>>0]=d[A>>0]|((x&1|0)!=0?B:B<<4);x=x+1|0;if(x>>>0>=16){C=16;break}else w=w+1|0}if((C|0)==16){D=37;E=e+v|0;break}else if((C|0)==63){i=l;return s|0}}else if(!(ky(g,44256,18)|0)){w=r;c[w>>2]=0;c[w+4>>2]=0;w=e+k|0;x=0;b:while(1){A=a[w>>0]|0;z=A&255;do if((A+-48&255)<10)F=z+-48|0;else{if((A+-65&255)<6){F=z+-55|0;break}if((A+-97&255)>=6){s=-4608;C=63;break b}F=z+-87|0}while(0);z=r+(x>>>1)|0;a[z>>0]=d[z>>0]|((x&1|0)!=0?F:F<<4);x=x+1|0;if(x>>>0>=16){C=26;break}else w=w+1|0}if((C|0)==26){D=33;E=e+t|0;break}else if((C|0)==63){i=l;return s|0}}else{D=0;E=g}while(0);do if(!(ky(E,44280,14)|0)){if(ky(E,44296,22)|0)if(ky(E,44320,22)|0)if(!(ky(E,44344,22)|0))G=7;else{s=-4736;i=l;return s|0}else G=6;else G=5;c[r>>2]=0;c[r+4>>2]=0;c[r+8>>2]=0;c[r+12>>2]=0;g=E+22|0;t=0;c:while(1){k=a[g>>0]|0;v=k&255;do if((k+-48&255)<10)H=v+-48|0;else{if((k+-65&255)<6){H=v+-55|0;break}if((k+-97&255)>=6){s=-4608;C=63;break c}H=v+-87|0}while(0);v=r+(t>>>1)|0;a[v>>0]=d[v>>0]|((t&1|0)!=0?H:H<<4);t=t+1|0;if(t>>>0>=32){C=39;break}else g=g+1|0}if((C|0)==39){I=G;J=E+54|0;break}else if((C|0)==63){i=l;return s|0}}else if(!D){s=-4736;i=l;return s|0}else{I=D;J=E}while(0);g=(a[J>>0]|0)==13?J+1|0:J;if((a[g>>0]|0)==10){K=1;L=I;M=g+1|0;break}else{s=-4352;i=l;return s|0}}else{K=0;L=0;M=y}while(0);if((M|0)==(u|0)){s=-4352;i=l;return s|0}y=u-M|0;if((eo(0,0,q,M,y)|0)==-44){s=-4396;i=l;return s|0}u=c[q>>2]|0;I=ry(1,u)|0;if(!I){s=-4480;i=l;return s|0}J=eo(I,u,q,M,y)|0;if(J){qy(I);s=J+-4352|0;i=l;return s|0}do if(!K)N=c[q>>2]|0;else{if(!h){qy(I);s=-4864;i=l;return s|0}switch(L|0){case 6:{J=c[q>>2]|0;Eu(m);nv(p,24,r,h,j);Hu(m,p,192)|0;Lu(m,0,J,r,I,I)|0;Fu(m);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;a[p+8>>0]=0;a[p+9>>0]=0;a[p+10>>0]=0;a[p+11>>0]=0;a[p+12>>0]=0;a[p+13>>0]=0;a[p+14>>0]=0;a[p+15>>0]=0;a[p+16>>0]=0;a[p+17>>0]=0;a[p+18>>0]=0;a[p+19>>0]=0;a[p+20>>0]=0;a[p+21>>0]=0;a[p+22>>0]=0;a[p+23>>0]=0;break}case 7:{J=c[q>>2]|0;Eu(m);nv(p,32,r,h,j);Hu(m,p,256)|0;Lu(m,0,J,r,I,I)|0;Fu(m);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;a[p+8>>0]=0;a[p+9>>0]=0;a[p+10>>0]=0;a[p+11>>0]=0;a[p+12>>0]=0;a[p+13>>0]=0;a[p+14>>0]=0;a[p+15>>0]=0;a[p+16>>0]=0;a[p+17>>0]=0;a[p+18>>0]=0;a[p+19>>0]=0;a[p+20>>0]=0;a[p+21>>0]=0;a[p+22>>0]=0;a[p+23>>0]=0;a[p+24>>0]=0;a[p+25>>0]=0;a[p+26>>0]=0;a[p+27>>0]=0;a[p+28>>0]=0;a[p+29>>0]=0;a[p+30>>0]=0;a[p+31>>0]=0;break}case 33:{J=c[q>>2]|0;Vp(o);bv(m);ev(m);gv(m,h,j);gv(m,r,8);hv(m,n);y=n;M=c[y+4>>2]|0;u=p;c[u>>2]=c[y>>2];c[u+4>>2]=M;cv(m);a[n>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;a[n+4>>0]=0;a[n+5>>0]=0;a[n+6>>0]=0;a[n+7>>0]=0;a[n+8>>0]=0;a[n+9>>0]=0;a[n+10>>0]=0;a[n+11>>0]=0;a[n+12>>0]=0;a[n+13>>0]=0;a[n+14>>0]=0;a[n+15>>0]=0;$p(o,p)|0;fq(o,0,J,r,I,I)|0;Wp(o);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;break}case 37:{J=c[q>>2]|0;Xp(m);nv(n,24,r,h,j);dq(m,n)|0;hq(m,0,J,r,I,I)|0;Yp(m);a[n>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;a[n+4>>0]=0;a[n+5>>0]=0;a[n+6>>0]=0;a[n+7>>0]=0;a[n+8>>0]=0;a[n+9>>0]=0;a[n+10>>0]=0;a[n+11>>0]=0;a[n+12>>0]=0;a[n+13>>0]=0;a[n+14>>0]=0;a[n+15>>0]=0;a[n+16>>0]=0;a[n+17>>0]=0;a[n+18>>0]=0;a[n+19>>0]=0;a[n+20>>0]=0;a[n+21>>0]=0;a[n+22>>0]=0;a[n+23>>0]=0;break}case 5:{J=c[q>>2]|0;Eu(o);bv(m);ev(m);gv(m,h,j);gv(m,r,8);hv(m,n);M=p;u=n;y=M+16|0;do{a[M>>0]=a[u>>0]|0;M=M+1|0;u=u+1|0}while((M|0)<(y|0));cv(m);a[n>>0]=0;a[n+1>>0]=0;a[n+2>>0]=0;a[n+3>>0]=0;a[n+4>>0]=0;a[n+5>>0]=0;a[n+6>>0]=0;a[n+7>>0]=0;a[n+8>>0]=0;a[n+9>>0]=0;a[n+10>>0]=0;a[n+11>>0]=0;a[n+12>>0]=0;a[n+13>>0]=0;a[n+14>>0]=0;a[n+15>>0]=0;Hu(o,p,128)|0;Lu(o,0,J,r,I,I)|0;Fu(o);a[p>>0]=0;a[p+1>>0]=0;a[p+2>>0]=0;a[p+3>>0]=0;a[p+4>>0]=0;a[p+5>>0]=0;a[p+6>>0]=0;a[p+7>>0]=0;a[p+8>>0]=0;a[p+9>>0]=0;a[p+10>>0]=0;a[p+11>>0]=0;a[p+12>>0]=0;a[p+13>>0]=0;a[p+14>>0]=0;a[p+15>>0]=0;break}default:{}}u=c[q>>2]|0;if((u>>>0>=3?(a[I>>0]|0)==48:0)?(d[I+1>>0]|0)<=131:0){N=u;break}qy(I);s=-4992;i=l;return s|0}while(0);c[b>>2]=I;c[b+4>>2]=N;s=0;i=l;return s|0}function lv(b){b=b|0;var d=0;qy(c[b>>2]|0);qy(c[b+8>>2]|0);a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;d=b+4|0;a[b+3>>0]=0;a[d>>0]=0;a[d+1>>0]=0;a[d+2>>0]=0;b=d+4|0;a[d+3>>0]=0;a[b>>0]=0;a[b+1>>0]=0;a[b+2>>0]=0;a[b+3>>0]=0;return}function mv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=k;co(0,0,l,e,f)|0;m=yH(b|0)|0;n=yH(d|0)|0;o=c[l>>2]|0;p=m+1+n+o+(o>>>6)|0;if(p>>>0>h>>>0){c[j>>2]=p;q=-42;i=k;return q|0}p=ry(1,o)|0;if(!p){q=-4480;i=k;return q|0}h=co(p,o,l,e,f)|0;if(h){qy(p);q=h;i=k;return q|0}zH(g|0,b|0,yH(b|0)|0)|0;h=g+(yH(b|0)|0)|0;b=c[l>>2]|0;if(!b)r=h;else{f=b;b=p;e=h;while(1){h=f>>>0>64?64:f;zH(e|0,b|0,h|0)|0;c[l>>2]=(c[l>>2]|0)-h;o=e+(h+1)|0;a[e+h>>0]=10;f=c[l>>2]|0;if(!f){r=o;break}else{b=b+h|0;e=o}}}zH(r|0,d|0,yH(d|0)|0)|0;e=yH(d|0)|0;a[r+e>>0]=0;c[j>>2]=r+(e+1)-g;qy(p);q=0;i=k;return q|0}function nv(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+112|0;h=g;j=g+88|0;bv(h);ev(h);gv(h,e,f);gv(h,d,8);hv(h,j);if(c>>>0<17){zH(b|0,j|0,c|0)|0;cv(h);a[j>>0]=0;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;a[j+4>>0]=0;a[j+5>>0]=0;a[j+6>>0]=0;a[j+7>>0]=0;a[j+8>>0]=0;a[j+9>>0]=0;a[j+10>>0]=0;a[j+11>>0]=0;a[j+12>>0]=0;a[j+13>>0]=0;a[j+14>>0]=0;a[j+15>>0]=0;i=g;return}else{k=b;l=j;m=k+16|0;do{a[k>>0]=a[l>>0]|0;k=k+1|0;l=l+1|0}while((k|0)<(m|0));ev(h);gv(h,j,16);gv(h,e,f);gv(h,d,8);hv(h,j);zH(b+16|0,j|0,(c>>>0<32?c+-16|0:16)|0)|0;cv(h);a[j>>0]=0;a[j+1>>0]=0;a[j+2>>0]=0;a[j+3>>0]=0;a[j+4>>0]=0;a[j+5>>0]=0;a[j+6>>0]=0;a[j+7>>0]=0;a[j+8>>0]=0;a[j+9>>0]=0;a[j+10>>0]=0;a[j+11>>0]=0;a[j+12>>0]=0;a[j+13>>0]=0;a[j+14>>0]=0;a[j+15>>0]=0;i=g;return}}function ov(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;i=i+80|0;j=h+12|0;k=h+16|0;l=h;c[j>>2]=0;m=k;n=m+64|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));if(!b){o=-49;i=h;return o|0}pr(l);m=rr(l,b,0)|0;a:do if((m|0)>=0?(n=(Br(b)|0)&255,p=(((g+-1|0)>>>0)/(n>>>0)|0)+1|0,(p|0)!=0):0){q=j+1|0;r=j+2|0;s=j+3|0;t=0;u=0;while(1){a[j>>0]=t>>>24;a[q>>0]=t>>>16;a[r>>0]=t>>>8;a[s>>0]=t;v=sr(l)|0;if((v|0)<0){w=v;break a}v=tr(l,d,e)|0;if((v|0)<0){w=v;break a}v=tr(l,j,4)|0;if((v|0)<0){w=v;break a}v=u+n|0;if(v>>>0<=g>>>0){x=ur(l,f+u|0)|0;if((x|0)<0){w=x;break a}else{y=v;z=x}}else{x=ur(l,k)|0;if((x|0)<0){w=x;break a}zH(f+u|0,k|0,g-u|0)|0;y=g;z=x}t=t+1|0;if(t>>>0>=p>>>0){w=z;break}else u=y}}else w=m;while(0);qr(l);o=w;i=h;return o|0}function pv(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=i;i=i+80|0;j=h+12|0;k=h+16|0;l=h;c[j>>2]=0;m=k;n=m+64|0;do{a[m>>0]=0;m=m+1|0}while((m|0)<(n|0));if(!b){o=-51;i=h;return o|0}pr(l);m=rr(l,b,0)|0;a:do if((m|0)>=0?(n=(Br(b)|0)&255,p=(((g+-1|0)>>>0)/(n>>>0)|0)+1|0,(p|0)!=0):0){q=j+1|0;r=j+2|0;s=j+3|0;t=1;u=0;while(1){a[j>>0]=t>>>24;a[q>>0]=t>>>16;a[r>>0]=t>>>8;a[s>>0]=t;v=sr(l)|0;if((v|0)<0){w=v;break a}v=tr(l,d,e)|0;if((v|0)<0){w=v;break a}v=tr(l,j,4)|0;if((v|0)<0){w=v;break a}v=u+n|0;if(v>>>0<=g>>>0){x=ur(l,f+u|0)|0;if((x|0)<0){w=x;break a}else{y=v;z=x}}else{x=ur(l,k)|0;if((x|0)<0){w=x;break a}zH(f+u|0,k|0,g-u|0)|0;y=g;z=x}t=t+1|0;if(t>>>0>p>>>0){w=z;break}else u=y}}else w=m;while(0);qr(l);o=w;i=h;return o|0}function qv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=i;i=i+288|0;d=c+120|0;e=c+80|0;f=c+40|0;g=c;Uv(d,b);Tv(a,d);Av(e,a);vv(g);wv(f,e,g);Lv(g,g,e);Bv(g,g);Dv(e,f,g);Fv(a,e);i=c;return 0}function rv(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+256|0;h=g;j=g+224|0;k=g+160|0;_v(c,32,k)|0;l=k;m=c;n=l+32|0;do{a[l>>0]=a[m>>0]|0;l=l+1|0;m=m+1|0}while((l|0)<(n|0));Uv(h,c);Tv(j,h);h=(d[j+31>>0]|0)&128;aw(b,e,f,j,k);j=b+63|0;a[j>>0]=(d[j>>0]|0)&127|h;a[k>>0]=0;a[k+1>>0]=0;a[k+2>>0]=0;a[k+3>>0]=0;a[k+4>>0]=0;a[k+5>>0]=0;a[k+6>>0]=0;a[k+7>>0]=0;a[k+8>>0]=0;a[k+9>>0]=0;a[k+10>>0]=0;a[k+11>>0]=0;a[k+12>>0]=0;a[k+13>>0]=0;a[k+14>>0]=0;a[k+15>>0]=0;a[k+16>>0]=0;a[k+17>>0]=0;a[k+18>>0]=0;a[k+19>>0]=0;a[k+20>>0]=0;a[k+21>>0]=0;a[k+22>>0]=0;a[k+23>>0]=0;a[k+24>>0]=0;a[k+25>>0]=0;a[k+26>>0]=0;a[k+27>>0]=0;a[k+28>>0]=0;a[k+29>>0]=0;a[k+30>>0]=0;a[k+31>>0]=0;a[k+32>>0]=0;a[k+33>>0]=0;a[k+34>>0]=0;a[k+35>>0]=0;a[k+36>>0]=0;a[k+37>>0]=0;a[k+38>>0]=0;a[k+39>>0]=0;a[k+40>>0]=0;a[k+41>>0]=0;a[k+42>>0]=0;a[k+43>>0]=0;a[k+44>>0]=0;a[k+45>>0]=0;a[k+46>>0]=0;a[k+47>>0]=0;a[k+48>>0]=0;a[k+49>>0]=0;a[k+50>>0]=0;a[k+51>>0]=0;a[k+52>>0]=0;a[k+53>>0]=0;a[k+54>>0]=0;a[k+55>>0]=0;a[k+56>>0]=0;a[k+57>>0]=0;a[k+58>>0]=0;a[k+59>>0]=0;a[k+60>>0]=0;a[k+61>>0]=0;a[k+62>>0]=0;a[k+63>>0]=0;i=g;return 0}function sv(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=i;i=i+336|0;h=g+200|0;j=g+120|0;k=g+160|0;l=g+80|0;m=g;n=g+40|0;o=g+304|0;p=g+240|0;Av(h,c);vv(m);Lv(j,h,m);wv(k,h,m);Bv(l,k);Dv(n,j,l);Fv(o,n);n=o+31|0;a[n>>0]=d[n>>0]|0|(d[b+63>>0]|0)&128;n=p;l=b;b=n+64|0;do{a[n>>0]=a[l>>0]|0;n=n+1|0;l=l+1|0}while((n|0)<(b|0));l=p+63|0;a[l>>0]=(d[l>>0]|0)&127;l=bw(p,e,f,o)|0;i=g;return l|0}function tv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+272|0;e=d+40|0;f=d+120|0;g=d+160|0;h=d+200|0;j=d;k=d+80|0;l=d+240|0;Av(e,b);vv(j);Lv(f,e,j);wv(g,e,j);Bv(h,g);Dv(k,f,h);Fv(l,k);cw(a,l,c);i=d;return 0}function uv(a){a=a|0;var b=0;b=a;a=b+40|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function vv(a){a=a|0;var b=0;c[a>>2]=1;b=a+4|0;a=b+36|0;do{c[b>>2]=0;b=b+4|0}while((b|0)<(a|0));return}function wv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=(c[d+4>>2]|0)+(c[b+4>>2]|0)|0;f=(c[d+8>>2]|0)+(c[b+8>>2]|0)|0;g=(c[d+12>>2]|0)+(c[b+12>>2]|0)|0;h=(c[d+16>>2]|0)+(c[b+16>>2]|0)|0;i=(c[d+20>>2]|0)+(c[b+20>>2]|0)|0;j=(c[d+24>>2]|0)+(c[b+24>>2]|0)|0;k=(c[d+28>>2]|0)+(c[b+28>>2]|0)|0;l=(c[d+32>>2]|0)+(c[b+32>>2]|0)|0;m=(c[d+36>>2]|0)+(c[b+36>>2]|0)|0;c[a>>2]=(c[d>>2]|0)+(c[b>>2]|0);c[a+4>>2]=e;c[a+8>>2]=f;c[a+12>>2]=g;c[a+16>>2]=h;c[a+20>>2]=i;c[a+24>>2]=j;c[a+28>>2]=k;c[a+32>>2]=l;c[a+36>>2]=m;return}function xv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=c[a>>2]|0;f=a+4|0;g=c[f>>2]|0;h=a+8|0;i=c[h>>2]|0;j=a+12|0;k=c[j>>2]|0;l=a+16|0;m=c[l>>2]|0;n=a+20|0;o=c[n>>2]|0;p=a+24|0;q=c[p>>2]|0;r=a+28|0;s=c[r>>2]|0;t=a+32|0;u=c[t>>2]|0;v=a+36|0;w=c[v>>2]|0;x=0-d|0;d=(c[b+4>>2]^g)&x;y=(c[b+8>>2]^i)&x;z=(c[b+12>>2]^k)&x;A=(c[b+16>>2]^m)&x;B=(c[b+20>>2]^o)&x;C=(c[b+24>>2]^q)&x;D=(c[b+28>>2]^s)&x;E=(c[b+32>>2]^u)&x;F=(c[b+36>>2]^w)&x;c[a>>2]=(c[b>>2]^e)&x^e;c[f>>2]=d^g;c[h>>2]=y^i;c[j>>2]=z^k;c[l>>2]=A^m;c[n>>2]=B^o;c[p>>2]=C^q;c[r>>2]=D^s;c[t>>2]=E^u;c[v>>2]=F^w;return}function yv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=c[a>>2]|0;f=a+4|0;g=c[f>>2]|0;h=a+8|0;i=c[h>>2]|0;j=a+12|0;k=c[j>>2]|0;l=a+16|0;m=c[l>>2]|0;n=a+20|0;o=c[n>>2]|0;p=a+24|0;q=c[p>>2]|0;r=a+28|0;s=c[r>>2]|0;t=a+32|0;u=c[t>>2]|0;v=a+36|0;w=c[v>>2]|0;x=c[b>>2]|0;y=b+4|0;z=c[y>>2]|0;A=b+8|0;B=c[A>>2]|0;C=b+12|0;D=c[C>>2]|0;E=b+16|0;F=c[E>>2]|0;G=b+20|0;H=c[G>>2]|0;I=b+24|0;J=c[I>>2]|0;K=b+28|0;L=c[K>>2]|0;M=b+32|0;N=c[M>>2]|0;O=b+36|0;P=c[O>>2]|0;Q=0-d|0;d=(x^e)&Q;R=(z^g)&Q;S=(B^i)&Q;T=(D^k)&Q;U=(F^m)&Q;V=(H^o)&Q;W=(J^q)&Q;X=(L^s)&Q;Y=(N^u)&Q;Z=(P^w)&Q;c[a>>2]=d^e;c[f>>2]=R^g;c[h>>2]=S^i;c[j>>2]=T^k;c[l>>2]=U^m;c[n>>2]=V^o;c[p>>2]=W^q;c[r>>2]=X^s;c[t>>2]=Y^u;c[v>>2]=Z^w;c[b>>2]=d^x;c[y>>2]=R^z;c[A>>2]=S^B;c[C>>2]=T^D;c[E>>2]=U^F;c[G>>2]=V^H;c[I>>2]=W^J;c[K>>2]=X^L;c[M>>2]=Y^N;c[O>>2]=Z^P;return}function zv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=c[b+4>>2]|0;e=c[b+8>>2]|0;f=c[b+12>>2]|0;g=c[b+16>>2]|0;h=c[b+20>>2]|0;i=c[b+24>>2]|0;j=c[b+28>>2]|0;k=c[b+32>>2]|0;l=c[b+36>>2]|0;c[a>>2]=c[b>>2];c[a+4>>2]=d;c[a+8>>2]=e;c[a+12>>2]=f;c[a+16>>2]=g;c[a+20>>2]=h;c[a+24>>2]=i;c[a+28>>2]=j;c[a+32>>2]=k;c[a+36>>2]=l;return}function Av(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0;f=d[e>>0]|0;g=DH(d[e+1>>0]|0|0,0,8)|0;h=E;i=DH(d[e+2>>0]|0|0,0,16)|0;j=h|E;h=DH(d[e+3>>0]|0|0,0,24)|0;k=j|E;j=a[e+6>>0]|0;l=d[e+4>>0]|0;m=DH(d[e+5>>0]|0|0,0,8)|0;n=E;o=DH(j&255|0,0,16)|0;j=DH(m|l|o|0,n|E|0,6)|0;n=E;o=a[e+9>>0]|0;l=d[e+7>>0]|0;m=DH(d[e+8>>0]|0|0,0,8)|0;p=E;q=DH(o&255|0,0,16)|0;o=DH(m|l|q|0,p|E|0,5)|0;p=E;q=a[e+12>>0]|0;l=d[e+10>>0]|0;m=DH(d[e+11>>0]|0|0,0,8)|0;r=E;s=DH(q&255|0,0,16)|0;q=DH(m|l|s|0,r|E|0,3)|0;r=E;s=a[e+15>>0]|0;l=d[e+13>>0]|0;m=DH(d[e+14>>0]|0|0,0,8)|0;t=E;u=DH(s&255|0,0,16)|0;s=DH(m|l|u|0,t|E|0,2)|0;t=E;u=d[e+16>>0]|0;l=DH(d[e+17>>0]|0|0,0,8)|0;m=E;v=DH(d[e+18>>0]|0|0,0,16)|0;w=m|E;m=DH(d[e+19>>0]|0|0,0,24)|0;x=l|u|v|m;m=w|E;w=a[e+22>>0]|0;v=d[e+20>>0]|0;u=DH(d[e+21>>0]|0|0,0,8)|0;l=E;y=DH(w&255|0,0,16)|0;w=DH(u|v|y|0,l|E|0,7)|0;l=E;y=a[e+25>>0]|0;v=d[e+23>>0]|0;u=DH(d[e+24>>0]|0|0,0,8)|0;z=E;A=DH(y&255|0,0,16)|0;y=DH(u|v|A|0,z|E|0,5)|0;z=E;A=a[e+28>>0]|0;v=d[e+26>>0]|0;u=DH(d[e+27>>0]|0|0,0,8)|0;B=E;C=DH(A&255|0,0,16)|0;A=DH(u|v|C|0,B|E|0,4)|0;B=E;C=a[e+31>>0]|0;v=d[e+29>>0]|0;u=DH(d[e+30>>0]|0|0,0,8)|0;e=E;D=DH(C&255|0,0,16)|0;C=DH(u|v|D|0,e|E|0,2)|0;e=C&33554428;C=CH(e|0,0,16777216,0)|0;D=xH(C|0,E|0,25)|0;C=E;v=vH(0,0,D|0,C|0)|0;u=CH(v&19|0,0,g|f|i|h|0,k|0)|0;k=E;h=DH(D|0,C|0,25)|0;C=E;D=CH(j|0,n|0,16777216,0)|0;i=xH(D|0,E|0,25)|0;D=E;f=CH(o|0,p|0,i|0,D|0)|0;p=E;o=DH(i|0,D|0,25)|0;D=vH(j|0,n|0,o|0,E|0)|0;o=E;n=CH(q|0,r|0,16777216,0)|0;j=xH(n|0,E|0,25)|0;n=E;i=CH(s|0,t|0,j|0,n|0)|0;t=E;s=DH(j|0,n|0,25)|0;n=E;j=CH(x|0,m|0,16777216,0)|0;g=xH(j|0,E|0,25)|0;j=E;v=CH(w|0,l|0,g|0,j|0)|0;l=E;w=DH(g|0,j|0,25)|0;j=E;g=CH(y|0,z|0,16777216,0)|0;F=xH(g|0,E|0,25)|0;g=E;G=CH(A|0,B|0,F|0,g|0)|0;B=E;A=DH(F|0,g|0,25)|0;g=E;F=CH(u|0,k|0,33554432,0)|0;H=wH(F|0,E|0,26)|0;F=E;I=CH(D|0,o|0,H|0,F|0)|0;o=DH(H|0,F|0,26)|0;F=vH(u|0,k|0,o|0,E|0)|0;o=CH(f|0,p|0,33554432,0)|0;k=wH(o|0,E|0,26)|0;o=E;u=CH(k|0,o|0,q|0,r|0)|0;r=vH(u|0,E|0,s|0,n|0)|0;n=DH(k|0,o|0,26)|0;o=vH(f|0,p|0,n|0,E|0)|0;n=CH(i|0,t|0,33554432,0)|0;p=wH(n|0,E|0,26)|0;n=E;f=CH(p|0,n|0,x|0,m|0)|0;m=vH(f|0,E|0,w|0,j|0)|0;j=DH(p|0,n|0,26)|0;n=vH(i|0,t|0,j|0,E|0)|0;j=CH(v|0,l|0,33554432,0)|0;t=wH(j|0,E|0,26)|0;j=E;i=CH(t|0,j|0,y|0,z|0)|0;z=vH(i|0,E|0,A|0,g|0)|0;g=DH(t|0,j|0,26)|0;j=vH(v|0,l|0,g|0,E|0)|0;g=CH(G|0,B|0,33554432,0)|0;l=wH(g|0,E|0,26)|0;g=E;v=CH(e|0,0,l|0,g|0)|0;e=vH(v|0,E|0,h|0,C|0)|0;C=DH(l|0,g|0,26)|0;g=vH(G|0,B|0,C|0,E|0)|0;c[b>>2]=F;c[b+4>>2]=I;c[b+8>>2]=o;c[b+12>>2]=r;c[b+16>>2]=n;c[b+20>>2]=m;c[b+24>>2]=j;c[b+28>>2]=z;c[b+32>>2]=g;c[b+36>>2]=e;return}function Bv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=i;i=i+160|0;d=c+120|0;e=c+80|0;f=c+40|0;g=c;Cv(d,b);Cv(e,d);Cv(e,e);Dv(e,b,e);Dv(d,d,e);Cv(f,d);Dv(e,e,f);Cv(f,e);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Dv(e,f,e);Cv(f,e);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Dv(f,f,e);Cv(g,f);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Cv(g,g);Dv(f,g,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Cv(f,f);Dv(e,f,e);Cv(f,e);b=1;do{Cv(f,f);b=b+1|0}while((b|0)!=50);Dv(f,f,e);Cv(g,f);b=1;do{Cv(g,g);b=b+1|0}while((b|0)!=100);Dv(f,g,f);Cv(f,f);g=1;do{Cv(f,f);g=g+1|0}while((g|0)!=50);Dv(e,f,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Cv(e,e);Dv(a,e,d);i=c;return}function Cv(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0;d=c[b>>2]|0;e=c[b+4>>2]|0;f=c[b+8>>2]|0;g=c[b+12>>2]|0;h=c[b+16>>2]|0;i=c[b+20>>2]|0;j=c[b+24>>2]|0;k=c[b+28>>2]|0;l=c[b+32>>2]|0;m=c[b+36>>2]|0;b=d<<1;n=e<<1;o=f<<1;p=g<<1;q=h<<1;r=i<<1;s=j<<1;t=k<<1;u=i*38|0;v=j*19|0;w=k*38|0;x=l*19|0;y=m*38|0;z=((d|0)<0)<<31>>31;A=IH(d|0,z|0,d|0,z|0)|0;z=E;d=((b|0)<0)<<31>>31;B=((e|0)<0)<<31>>31;C=IH(b|0,d|0,e|0,B|0)|0;D=E;F=((f|0)<0)<<31>>31;G=IH(f|0,F|0,b|0,d|0)|0;H=E;I=((g|0)<0)<<31>>31;J=IH(g|0,I|0,b|0,d|0)|0;K=E;L=((h|0)<0)<<31>>31;M=IH(h|0,L|0,b|0,d|0)|0;N=E;O=((i|0)<0)<<31>>31;P=IH(i|0,O|0,b|0,d|0)|0;Q=E;R=((j|0)<0)<<31>>31;S=IH(j|0,R|0,b|0,d|0)|0;T=E;U=((k|0)<0)<<31>>31;V=IH(k|0,U|0,b|0,d|0)|0;W=E;X=((l|0)<0)<<31>>31;Y=IH(l|0,X|0,b|0,d|0)|0;Z=E;_=((m|0)<0)<<31>>31;$=IH(m|0,_|0,b|0,d|0)|0;d=E;b=((n|0)<0)<<31>>31;aa=IH(n|0,b|0,e|0,B|0)|0;B=E;e=IH(n|0,b|0,f|0,F|0)|0;ba=E;ca=((p|0)<0)<<31>>31;da=IH(p|0,ca|0,n|0,b|0)|0;ea=E;fa=IH(h|0,L|0,n|0,b|0)|0;ga=E;ha=((r|0)<0)<<31>>31;ia=IH(r|0,ha|0,n|0,b|0)|0;ja=E;ka=IH(j|0,R|0,n|0,b|0)|0;la=E;ma=((t|0)<0)<<31>>31;na=IH(t|0,ma|0,n|0,b|0)|0;oa=E;pa=IH(l|0,X|0,n|0,b|0)|0;qa=E;ra=((y|0)<0)<<31>>31;sa=IH(y|0,ra|0,n|0,b|0)|0;b=E;n=IH(f|0,F|0,f|0,F|0)|0;ta=E;ua=((o|0)<0)<<31>>31;va=IH(o|0,ua|0,g|0,I|0)|0;wa=E;xa=IH(h|0,L|0,o|0,ua|0)|0;ya=E;za=IH(i|0,O|0,o|0,ua|0)|0;Aa=E;Ba=IH(j|0,R|0,o|0,ua|0)|0;Ca=E;Da=IH(k|0,U|0,o|0,ua|0)|0;Ea=E;Fa=((x|0)<0)<<31>>31;Ga=IH(x|0,Fa|0,o|0,ua|0)|0;ua=E;o=IH(y|0,ra|0,f|0,F|0)|0;F=E;f=IH(p|0,ca|0,g|0,I|0)|0;I=E;g=IH(p|0,ca|0,h|0,L|0)|0;Ha=E;Ia=IH(r|0,ha|0,p|0,ca|0)|0;Ja=E;Ka=IH(j|0,R|0,p|0,ca|0)|0;La=E;Ma=((w|0)<0)<<31>>31;Na=IH(w|0,Ma|0,p|0,ca|0)|0;Oa=E;Pa=IH(x|0,Fa|0,p|0,ca|0)|0;Qa=E;Ra=IH(y|0,ra|0,p|0,ca|0)|0;ca=E;p=IH(h|0,L|0,h|0,L|0)|0;Sa=E;Ta=((q|0)<0)<<31>>31;Ua=IH(q|0,Ta|0,i|0,O|0)|0;Va=E;Wa=((v|0)<0)<<31>>31;Xa=IH(v|0,Wa|0,q|0,Ta|0)|0;Ya=E;Za=IH(w|0,Ma|0,h|0,L|0)|0;_a=E;$a=IH(x|0,Fa|0,q|0,Ta|0)|0;Ta=E;q=IH(y|0,ra|0,h|0,L|0)|0;L=E;h=IH(u|0,((u|0)<0)<<31>>31|0,i|0,O|0)|0;O=E;i=IH(v|0,Wa|0,r|0,ha|0)|0;u=E;ab=IH(w|0,Ma|0,r|0,ha|0)|0;bb=E;cb=IH(x|0,Fa|0,r|0,ha|0)|0;db=E;eb=IH(y|0,ra|0,r|0,ha|0)|0;ha=E;r=IH(v|0,Wa|0,j|0,R|0)|0;Wa=E;v=IH(w|0,Ma|0,j|0,R|0)|0;fb=E;gb=IH(x|0,Fa|0,s|0,((s|0)<0)<<31>>31|0)|0;s=E;hb=IH(y|0,ra|0,j|0,R|0)|0;R=E;j=IH(w|0,Ma|0,k|0,U|0)|0;U=E;k=IH(x|0,Fa|0,t|0,ma|0)|0;Ma=E;w=IH(y|0,ra|0,t|0,ma|0)|0;ma=E;t=IH(x|0,Fa|0,l|0,X|0)|0;Fa=E;x=IH(y|0,ra|0,l|0,X|0)|0;X=E;l=IH(y|0,ra|0,m|0,_|0)|0;_=E;m=CH(h|0,O|0,A|0,z|0)|0;z=CH(m|0,E|0,Xa|0,Ya|0)|0;Ya=CH(z|0,E|0,Na|0,Oa|0)|0;Oa=CH(Ya|0,E|0,Ga|0,ua|0)|0;ua=CH(Oa|0,E|0,sa|0,b|0)|0;b=E;sa=CH(G|0,H|0,aa|0,B|0)|0;B=E;aa=CH(J|0,K|0,e|0,ba|0)|0;ba=E;e=CH(da|0,ea|0,n|0,ta|0)|0;ta=CH(e|0,E|0,M|0,N|0)|0;N=CH(ta|0,E|0,j|0,U|0)|0;U=CH(N|0,E|0,gb|0,s|0)|0;s=CH(U|0,E|0,eb|0,ha|0)|0;ha=E;eb=CH(ua|0,b|0,33554432,0)|0;U=wH(eb|0,E|0,26)|0;eb=E;gb=CH(i|0,u|0,C|0,D|0)|0;D=CH(gb|0,E|0,Za|0,_a|0)|0;_a=CH(D|0,E|0,Pa|0,Qa|0)|0;Qa=CH(_a|0,E|0,o|0,F|0)|0;F=CH(Qa|0,E|0,U|0,eb|0)|0;Qa=E;o=DH(U|0,eb|0,26)|0;eb=vH(ua|0,b|0,o|0,E|0)|0;o=E;b=CH(s|0,ha|0,33554432,0)|0;ua=wH(b|0,E|0,26)|0;b=E;U=CH(fa|0,ga|0,va|0,wa|0)|0;wa=CH(U|0,E|0,P|0,Q|0)|0;Q=CH(wa|0,E|0,k|0,Ma|0)|0;Ma=CH(Q|0,E|0,hb|0,R|0)|0;R=CH(Ma|0,E|0,ua|0,b|0)|0;Ma=E;hb=DH(ua|0,b|0,26)|0;b=vH(s|0,ha|0,hb|0,E|0)|0;hb=E;ha=CH(F|0,Qa|0,16777216,0)|0;s=wH(ha|0,E|0,25)|0;ha=E;ua=CH(sa|0,B|0,r|0,Wa|0)|0;Wa=CH(ua|0,E|0,ab|0,bb|0)|0;bb=CH(Wa|0,E|0,$a|0,Ta|0)|0;Ta=CH(bb|0,E|0,Ra|0,ca|0)|0;ca=CH(Ta|0,E|0,s|0,ha|0)|0;Ta=E;Ra=DH(s|0,ha|0,25)|0;ha=vH(F|0,Qa|0,Ra|0,E|0)|0;Ra=E;Qa=CH(R|0,Ma|0,16777216,0)|0;F=wH(Qa|0,E|0,25)|0;Qa=E;s=CH(f|0,I|0,xa|0,ya|0)|0;ya=CH(s|0,E|0,ia|0,ja|0)|0;ja=CH(ya|0,E|0,S|0,T|0)|0;T=CH(ja|0,E|0,t|0,Fa|0)|0;Fa=CH(T|0,E|0,w|0,ma|0)|0;ma=CH(Fa|0,E|0,F|0,Qa|0)|0;Fa=E;w=DH(F|0,Qa|0,25)|0;Qa=vH(R|0,Ma|0,w|0,E|0)|0;w=E;Ma=CH(ca|0,Ta|0,33554432,0)|0;R=wH(Ma|0,E|0,26)|0;Ma=E;F=CH(aa|0,ba|0,v|0,fb|0)|0;fb=CH(F|0,E|0,cb|0,db|0)|0;db=CH(fb|0,E|0,q|0,L|0)|0;L=CH(db|0,E|0,R|0,Ma|0)|0;db=E;q=DH(R|0,Ma|0,26)|0;Ma=vH(ca|0,Ta|0,q|0,E|0)|0;q=CH(ma|0,Fa|0,33554432,0)|0;Ta=wH(q|0,E|0,26)|0;q=E;ca=CH(za|0,Aa|0,g|0,Ha|0)|0;Ha=CH(ca|0,E|0,ka|0,la|0)|0;la=CH(Ha|0,E|0,V|0,W|0)|0;W=CH(la|0,E|0,x|0,X|0)|0;X=CH(W|0,E|0,Ta|0,q|0)|0;W=E;x=DH(Ta|0,q|0,26)|0;q=vH(ma|0,Fa|0,x|0,E|0)|0;x=CH(L|0,db|0,16777216,0)|0;Fa=wH(x|0,E|0,25)|0;x=E;ma=CH(Fa|0,x|0,b|0,hb|0)|0;hb=E;b=DH(Fa|0,x|0,25)|0;x=vH(L|0,db|0,b|0,E|0)|0;b=CH(X|0,W|0,16777216,0)|0;db=wH(b|0,E|0,25)|0;b=E;L=CH(Ba|0,Ca|0,p|0,Sa|0)|0;Sa=CH(L|0,E|0,Ia|0,Ja|0)|0;Ja=CH(Sa|0,E|0,na|0,oa|0)|0;oa=CH(Ja|0,E|0,Y|0,Z|0)|0;Z=CH(oa|0,E|0,l|0,_|0)|0;_=CH(Z|0,E|0,db|0,b|0)|0;Z=E;l=DH(db|0,b|0,25)|0;b=vH(X|0,W|0,l|0,E|0)|0;l=CH(ma|0,hb|0,33554432,0)|0;W=wH(l|0,E|0,26)|0;l=E;X=CH(Qa|0,w|0,W|0,l|0)|0;w=DH(W|0,l|0,26)|0;l=vH(ma|0,hb|0,w|0,E|0)|0;w=CH(_|0,Z|0,33554432,0)|0;hb=wH(w|0,E|0,26)|0;w=E;ma=CH(Ka|0,La|0,Ua|0,Va|0)|0;Va=CH(ma|0,E|0,Da|0,Ea|0)|0;Ea=CH(Va|0,E|0,pa|0,qa|0)|0;qa=CH(Ea|0,E|0,$|0,d|0)|0;d=CH(qa|0,E|0,hb|0,w|0)|0;qa=E;$=DH(hb|0,w|0,26)|0;w=vH(_|0,Z|0,$|0,E|0)|0;$=CH(d|0,qa|0,16777216,0)|0;Z=wH($|0,E|0,25)|0;$=E;_=IH(Z|0,$|0,19,0)|0;hb=CH(_|0,E|0,eb|0,o|0)|0;o=E;eb=DH(Z|0,$|0,25)|0;$=vH(d|0,qa|0,eb|0,E|0)|0;eb=CH(hb|0,o|0,33554432,0)|0;qa=wH(eb|0,E|0,26)|0;eb=E;d=CH(ha|0,Ra|0,qa|0,eb|0)|0;Ra=DH(qa|0,eb|0,26)|0;eb=vH(hb|0,o|0,Ra|0,E|0)|0;c[a>>2]=eb;c[a+4>>2]=d;c[a+8>>2]=Ma;c[a+12>>2]=x;c[a+16>>2]=l;c[a+20>>2]=X;c[a+24>>2]=q;c[a+28>>2]=b;c[a+32>>2]=w;c[a+36>>2]=$;return}\nfunction OF(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;b=i;i=i+224|0;k=b+198|0;l=b+196|0;m=b+16|0;n=b+4|0;o=b+192|0;p=b+32|0;q=b;r=b+28|0;s=wF(g)|0;EA(m,g,k,l);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;if(!(a[n>>0]&1))t=10;else t=(c[n>>2]&-2)+-1|0;Ly(n,t,0);t=n+8|0;g=n+1|0;u=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=u;c[q>>2]=p;c[r>>2]=0;v=n+4|0;w=a[l>>0]|0;l=c[e>>2]|0;x=u;a:while(1){if(l)if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(wd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[e>>2]=0;y=0}else y=l;else y=0;u=(y|0)==0;z=c[f>>2]|0;do if(z){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(u){A=z;break}else{B=y;C=z;D=x;break a}if((wd[c[(c[z>>2]|0)+36>>2]&127](z)|0)!=-1)if(u){A=z;break}else{B=y;C=z;D=x;break a}else{c[f>>2]=0;F=13;break}}else F=13;while(0);if((F|0)==13){F=0;if(u){B=y;C=0;D=x;break}else A=0}z=a[n>>0]|0;G=(z&1)==0?(z&255)>>>1:c[v>>2]|0;if((c[o>>2]|0)==(x+G|0)){Ly(n,G<<1,0);if(!(a[n>>0]&1))H=10;else H=(c[n>>2]&-2)+-1|0;Ly(n,H,0);z=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=z+G;I=z}else I=x;z=y+12|0;G=c[z>>2]|0;J=y+16|0;if((G|0)==(c[J>>2]|0))K=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else K=d[G>>0]|0;if(oA(K&255,s,I,o,r,w,m,p,q,k)|0){B=y;C=A;D=I;break}G=c[z>>2]|0;if((G|0)==(c[J>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;l=y;x=I;continue}else{c[z>>2]=G+1;l=y;x=I;continue}}I=a[m>>0]|0;x=c[q>>2]|0;if((((I&1)==0?(I&255)>>>1:c[m+4>>2]|0)|0)!=0?(x-p|0)<160:0){I=c[r>>2]|0;r=x+4|0;c[q>>2]=r;c[x>>2]=I;L=r}else L=x;x=sH(D,c[o>>2]|0,h,s)|0;s=j;c[s>>2]=x;c[s+4>>2]=E;lD(m,p,L,h);if(B)if((c[B+12>>2]|0)==(c[B+16>>2]|0)?(wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1:0){c[e>>2]=0;M=0}else M=B;else M=0;B=(M|0)==0;do if(C){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;F=38;break}if(!B)F=39}else F=38;while(0);if((F|0)==38?B:0)F=39;if((F|0)==39)c[h>>2]=c[h>>2]|2;h=c[e>>2]|0;Hy(n);Hy(m);i=b;return h|0}function PF(e,f,g,h,j,k){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=i;i=i+224|0;l=e+198|0;m=e+196|0;n=e+16|0;o=e+4|0;p=e+192|0;q=e+32|0;r=e;s=e+28|0;t=wF(h)|0;EA(n,h,l,m);c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;if(!(a[o>>0]&1))u=10;else u=(c[o>>2]&-2)+-1|0;Ly(o,u,0);u=o+8|0;h=o+1|0;v=(a[o>>0]&1)==0?h:c[u>>2]|0;c[p>>2]=v;c[r>>2]=q;c[s>>2]=0;w=o+4|0;x=a[m>>0]|0;m=c[f>>2]|0;y=v;a:while(1){if(m)if((c[m+12>>2]|0)==(c[m+16>>2]|0)?(wd[c[(c[m>>2]|0)+36>>2]&127](m)|0)==-1:0){c[f>>2]=0;z=0}else z=m;else z=0;v=(z|0)==0;A=c[g>>2]|0;do if(A){if((c[A+12>>2]|0)!=(c[A+16>>2]|0))if(v){B=A;break}else{C=z;D=A;E=y;break a}if((wd[c[(c[A>>2]|0)+36>>2]&127](A)|0)!=-1)if(v){B=A;break}else{C=z;D=A;E=y;break a}else{c[g>>2]=0;F=13;break}}else F=13;while(0);if((F|0)==13){F=0;if(v){C=z;D=0;E=y;break}else B=0}A=a[o>>0]|0;G=(A&1)==0?(A&255)>>>1:c[w>>2]|0;if((c[p>>2]|0)==(y+G|0)){Ly(o,G<<1,0);if(!(a[o>>0]&1))H=10;else H=(c[o>>2]&-2)+-1|0;Ly(o,H,0);A=(a[o>>0]&1)==0?h:c[u>>2]|0;c[p>>2]=A+G;I=A}else I=y;A=z+12|0;G=c[A>>2]|0;J=z+16|0;if((G|0)==(c[J>>2]|0))K=wd[c[(c[z>>2]|0)+36>>2]&127](z)|0;else K=d[G>>0]|0;if(oA(K&255,t,I,p,s,x,n,q,r,l)|0){C=z;D=B;E=I;break}G=c[A>>2]|0;if((G|0)==(c[J>>2]|0)){wd[c[(c[z>>2]|0)+40>>2]&127](z)|0;m=z;y=I;continue}else{c[A>>2]=G+1;m=z;y=I;continue}}I=a[n>>0]|0;y=c[r>>2]|0;if((((I&1)==0?(I&255)>>>1:c[n+4>>2]|0)|0)!=0?(y-q|0)<160:0){I=c[s>>2]|0;s=y+4|0;c[r>>2]=s;c[y>>2]=I;L=s}else L=y;b[k>>1]=rH(E,c[p>>2]|0,j,t)|0;lD(n,q,L,j);if(C)if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;M=0}else M=C;else M=0;C=(M|0)==0;do if(D){if((c[D+12>>2]|0)==(c[D+16>>2]|0)?(wd[c[(c[D>>2]|0)+36>>2]&127](D)|0)==-1:0){c[g>>2]=0;F=38;break}if(!C)F=39}else F=38;while(0);if((F|0)==38?C:0)F=39;if((F|0)==39)c[j>>2]=c[j>>2]|2;j=c[f>>2]|0;Hy(o);Hy(n);i=e;return j|0}function QF(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=i;i=i+224|0;k=b+198|0;l=b+196|0;m=b+16|0;n=b+4|0;o=b+192|0;p=b+32|0;q=b;r=b+28|0;s=wF(g)|0;EA(m,g,k,l);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;if(!(a[n>>0]&1))t=10;else t=(c[n>>2]&-2)+-1|0;Ly(n,t,0);t=n+8|0;g=n+1|0;u=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=u;c[q>>2]=p;c[r>>2]=0;v=n+4|0;w=a[l>>0]|0;l=c[e>>2]|0;x=u;a:while(1){if(l)if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(wd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[e>>2]=0;y=0}else y=l;else y=0;u=(y|0)==0;z=c[f>>2]|0;do if(z){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(u){A=z;break}else{B=y;C=z;D=x;break a}if((wd[c[(c[z>>2]|0)+36>>2]&127](z)|0)!=-1)if(u){A=z;break}else{B=y;C=z;D=x;break a}else{c[f>>2]=0;E=13;break}}else E=13;while(0);if((E|0)==13){E=0;if(u){B=y;C=0;D=x;break}else A=0}z=a[n>>0]|0;F=(z&1)==0?(z&255)>>>1:c[v>>2]|0;if((c[o>>2]|0)==(x+F|0)){Ly(n,F<<1,0);if(!(a[n>>0]&1))G=10;else G=(c[n>>2]&-2)+-1|0;Ly(n,G,0);z=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=z+F;H=z}else H=x;z=y+12|0;F=c[z>>2]|0;I=y+16|0;if((F|0)==(c[I>>2]|0))J=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else J=d[F>>0]|0;if(oA(J&255,s,H,o,r,w,m,p,q,k)|0){B=y;C=A;D=H;break}F=c[z>>2]|0;if((F|0)==(c[I>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;l=y;x=H;continue}else{c[z>>2]=F+1;l=y;x=H;continue}}H=a[m>>0]|0;x=c[q>>2]|0;if((((H&1)==0?(H&255)>>>1:c[m+4>>2]|0)|0)!=0?(x-p|0)<160:0){H=c[r>>2]|0;r=x+4|0;c[q>>2]=r;c[x>>2]=H;K=r}else K=x;c[j>>2]=qH(D,c[o>>2]|0,h,s)|0;lD(m,p,K,h);if(B)if((c[B+12>>2]|0)==(c[B+16>>2]|0)?(wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1:0){c[e>>2]=0;L=0}else L=B;else L=0;B=(L|0)==0;do if(C){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;E=38;break}if(!B)E=39}else E=38;while(0);if((E|0)==38?B:0)E=39;if((E|0)==39)c[h>>2]=c[h>>2]|2;h=c[e>>2]|0;Hy(n);Hy(m);i=b;return h|0}function RF(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;b=i;i=i+224|0;k=b+198|0;l=b+196|0;m=b+16|0;n=b+4|0;o=b+192|0;p=b+32|0;q=b;r=b+28|0;s=wF(g)|0;EA(m,g,k,l);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;if(!(a[n>>0]&1))t=10;else t=(c[n>>2]&-2)+-1|0;Ly(n,t,0);t=n+8|0;g=n+1|0;u=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=u;c[q>>2]=p;c[r>>2]=0;v=n+4|0;w=a[l>>0]|0;l=c[e>>2]|0;x=u;a:while(1){if(l)if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(wd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[e>>2]=0;y=0}else y=l;else y=0;u=(y|0)==0;z=c[f>>2]|0;do if(z){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(u){A=z;break}else{B=y;C=z;D=x;break a}if((wd[c[(c[z>>2]|0)+36>>2]&127](z)|0)!=-1)if(u){A=z;break}else{B=y;C=z;D=x;break a}else{c[f>>2]=0;E=13;break}}else E=13;while(0);if((E|0)==13){E=0;if(u){B=y;C=0;D=x;break}else A=0}z=a[n>>0]|0;F=(z&1)==0?(z&255)>>>1:c[v>>2]|0;if((c[o>>2]|0)==(x+F|0)){Ly(n,F<<1,0);if(!(a[n>>0]&1))G=10;else G=(c[n>>2]&-2)+-1|0;Ly(n,G,0);z=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=z+F;H=z}else H=x;z=y+12|0;F=c[z>>2]|0;I=y+16|0;if((F|0)==(c[I>>2]|0))J=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else J=d[F>>0]|0;if(oA(J&255,s,H,o,r,w,m,p,q,k)|0){B=y;C=A;D=H;break}F=c[z>>2]|0;if((F|0)==(c[I>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;l=y;x=H;continue}else{c[z>>2]=F+1;l=y;x=H;continue}}H=a[m>>0]|0;x=c[q>>2]|0;if((((H&1)==0?(H&255)>>>1:c[m+4>>2]|0)|0)!=0?(x-p|0)<160:0){H=c[r>>2]|0;r=x+4|0;c[q>>2]=r;c[x>>2]=H;K=r}else K=x;c[j>>2]=pH(D,c[o>>2]|0,h,s)|0;lD(m,p,K,h);if(B)if((c[B+12>>2]|0)==(c[B+16>>2]|0)?(wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1:0){c[e>>2]=0;L=0}else L=B;else L=0;B=(L|0)==0;do if(C){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;E=38;break}if(!B)E=39}else E=38;while(0);if((E|0)==38?B:0)E=39;if((E|0)==39)c[h>>2]=c[h>>2]|2;h=c[e>>2]|0;Hy(n);Hy(m);i=b;return h|0}function SF(b,e,f,g,h,j){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;b=i;i=i+224|0;k=b+198|0;l=b+196|0;m=b+16|0;n=b+4|0;o=b+192|0;p=b+32|0;q=b;r=b+28|0;s=wF(g)|0;EA(m,g,k,l);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;if(!(a[n>>0]&1))t=10;else t=(c[n>>2]&-2)+-1|0;Ly(n,t,0);t=n+8|0;g=n+1|0;u=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=u;c[q>>2]=p;c[r>>2]=0;v=n+4|0;w=a[l>>0]|0;l=c[e>>2]|0;x=u;a:while(1){if(l)if((c[l+12>>2]|0)==(c[l+16>>2]|0)?(wd[c[(c[l>>2]|0)+36>>2]&127](l)|0)==-1:0){c[e>>2]=0;y=0}else y=l;else y=0;u=(y|0)==0;z=c[f>>2]|0;do if(z){if((c[z+12>>2]|0)!=(c[z+16>>2]|0))if(u){A=z;break}else{B=y;C=z;D=x;break a}if((wd[c[(c[z>>2]|0)+36>>2]&127](z)|0)!=-1)if(u){A=z;break}else{B=y;C=z;D=x;break a}else{c[f>>2]=0;F=13;break}}else F=13;while(0);if((F|0)==13){F=0;if(u){B=y;C=0;D=x;break}else A=0}z=a[n>>0]|0;G=(z&1)==0?(z&255)>>>1:c[v>>2]|0;if((c[o>>2]|0)==(x+G|0)){Ly(n,G<<1,0);if(!(a[n>>0]&1))H=10;else H=(c[n>>2]&-2)+-1|0;Ly(n,H,0);z=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=z+G;I=z}else I=x;z=y+12|0;G=c[z>>2]|0;J=y+16|0;if((G|0)==(c[J>>2]|0))K=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else K=d[G>>0]|0;if(oA(K&255,s,I,o,r,w,m,p,q,k)|0){B=y;C=A;D=I;break}G=c[z>>2]|0;if((G|0)==(c[J>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;l=y;x=I;continue}else{c[z>>2]=G+1;l=y;x=I;continue}}I=a[m>>0]|0;x=c[q>>2]|0;if((((I&1)==0?(I&255)>>>1:c[m+4>>2]|0)|0)!=0?(x-p|0)<160:0){I=c[r>>2]|0;r=x+4|0;c[q>>2]=r;c[x>>2]=I;L=r}else L=x;x=oH(D,c[o>>2]|0,h,s)|0;s=j;c[s>>2]=x;c[s+4>>2]=E;lD(m,p,L,h);if(B)if((c[B+12>>2]|0)==(c[B+16>>2]|0)?(wd[c[(c[B>>2]|0)+36>>2]&127](B)|0)==-1:0){c[e>>2]=0;M=0}else M=B;else M=0;B=(M|0)==0;do if(C){if((c[C+12>>2]|0)==(c[C+16>>2]|0)?(wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)==-1:0){c[f>>2]=0;F=38;break}if(!B)F=39}else F=38;while(0);if((F|0)==38?B:0)F=39;if((F|0)==39)c[h>>2]=c[h>>2]|2;h=c[e>>2]|0;Hy(n);Hy(m);i=b;return h|0}function TF(b,e,f,h,j,k){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;b=i;i=i+256|0;l=b+208|0;m=b+200|0;n=b+240|0;o=b;p=b+188|0;q=b+184|0;r=b+16|0;s=b+176|0;t=b+180|0;u=b+241|0;v=b+242|0;FA(o,h,l,m,n);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;if(!(a[p>>0]&1))w=10;else w=(c[p>>2]&-2)+-1|0;Ly(p,w,0);w=p+8|0;h=p+1|0;x=(a[p>>0]&1)==0?h:c[w>>2]|0;c[q>>2]=x;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;y=p+4|0;z=a[m>>0]|0;m=a[n>>0]|0;n=c[e>>2]|0;A=x;a:while(1){if(n)if((c[n+12>>2]|0)==(c[n+16>>2]|0)?(wd[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1:0){c[e>>2]=0;B=0}else B=n;else B=0;x=(B|0)==0;C=c[f>>2]|0;do if(C){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(x){D=C;break}else{E=B;F=C;G=A;break a}if((wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)!=-1)if(x){D=C;break}else{E=B;F=C;G=A;break a}else{c[f>>2]=0;H=13;break}}else H=13;while(0);if((H|0)==13){H=0;if(x){E=B;F=0;G=A;break}else D=0}C=a[p>>0]|0;I=(C&1)==0?(C&255)>>>1:c[y>>2]|0;if((c[q>>2]|0)==(A+I|0)){Ly(p,I<<1,0);if(!(a[p>>0]&1))J=10;else J=(c[p>>2]&-2)+-1|0;Ly(p,J,0);C=(a[p>>0]&1)==0?h:c[w>>2]|0;c[q>>2]=C+I;K=C}else K=A;C=B+12|0;I=c[C>>2]|0;L=B+16|0;if((I|0)==(c[L>>2]|0))M=wd[c[(c[B>>2]|0)+36>>2]&127](B)|0;else M=d[I>>0]|0;if(GA(M&255,u,v,K,q,z,m,o,r,s,t,l)|0){E=B;F=D;G=K;break}I=c[C>>2]|0;if((I|0)==(c[L>>2]|0)){wd[c[(c[B>>2]|0)+40>>2]&127](B)|0;n=B;A=K;continue}else{c[C>>2]=I+1;n=B;A=K;continue}}K=a[o>>0]|0;A=c[s>>2]|0;if(!((a[u>>0]|0)==0?1:(((K&1)==0?(K&255)>>>1:c[o+4>>2]|0)|0)==0)?(A-r|0)<160:0){K=c[t>>2]|0;t=A+4|0;c[s>>2]=t;c[A>>2]=K;N=t}else N=A;g[k>>2]=+nH(G,c[q>>2]|0,j);lD(o,r,N,j);if(E)if((c[E+12>>2]|0)==(c[E+16>>2]|0)?(wd[c[(c[E>>2]|0)+36>>2]&127](E)|0)==-1:0){c[e>>2]=0;O=0}else O=E;else O=0;E=(O|0)==0;do if(F){if((c[F+12>>2]|0)==(c[F+16>>2]|0)?(wd[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1:0){c[f>>2]=0;H=38;break}if(!E)H=39}else H=38;while(0);if((H|0)==38?E:0)H=39;if((H|0)==39)c[j>>2]=c[j>>2]|2;j=c[e>>2]|0;Hy(p);Hy(o);i=b;return j|0}function UF(b,e,f,g,j,k){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;b=i;i=i+256|0;l=b+208|0;m=b+200|0;n=b+240|0;o=b;p=b+188|0;q=b+184|0;r=b+16|0;s=b+176|0;t=b+180|0;u=b+241|0;v=b+242|0;FA(o,g,l,m,n);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;if(!(a[p>>0]&1))w=10;else w=(c[p>>2]&-2)+-1|0;Ly(p,w,0);w=p+8|0;g=p+1|0;x=(a[p>>0]&1)==0?g:c[w>>2]|0;c[q>>2]=x;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;y=p+4|0;z=a[m>>0]|0;m=a[n>>0]|0;n=c[e>>2]|0;A=x;a:while(1){if(n)if((c[n+12>>2]|0)==(c[n+16>>2]|0)?(wd[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1:0){c[e>>2]=0;B=0}else B=n;else B=0;x=(B|0)==0;C=c[f>>2]|0;do if(C){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(x){D=C;break}else{E=B;F=C;G=A;break a}if((wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)!=-1)if(x){D=C;break}else{E=B;F=C;G=A;break a}else{c[f>>2]=0;H=13;break}}else H=13;while(0);if((H|0)==13){H=0;if(x){E=B;F=0;G=A;break}else D=0}C=a[p>>0]|0;I=(C&1)==0?(C&255)>>>1:c[y>>2]|0;if((c[q>>2]|0)==(A+I|0)){Ly(p,I<<1,0);if(!(a[p>>0]&1))J=10;else J=(c[p>>2]&-2)+-1|0;Ly(p,J,0);C=(a[p>>0]&1)==0?g:c[w>>2]|0;c[q>>2]=C+I;K=C}else K=A;C=B+12|0;I=c[C>>2]|0;L=B+16|0;if((I|0)==(c[L>>2]|0))M=wd[c[(c[B>>2]|0)+36>>2]&127](B)|0;else M=d[I>>0]|0;if(GA(M&255,u,v,K,q,z,m,o,r,s,t,l)|0){E=B;F=D;G=K;break}I=c[C>>2]|0;if((I|0)==(c[L>>2]|0)){wd[c[(c[B>>2]|0)+40>>2]&127](B)|0;n=B;A=K;continue}else{c[C>>2]=I+1;n=B;A=K;continue}}K=a[o>>0]|0;A=c[s>>2]|0;if(!((a[u>>0]|0)==0?1:(((K&1)==0?(K&255)>>>1:c[o+4>>2]|0)|0)==0)?(A-r|0)<160:0){K=c[t>>2]|0;t=A+4|0;c[s>>2]=t;c[A>>2]=K;N=t}else N=A;h[k>>3]=+mH(G,c[q>>2]|0,j);lD(o,r,N,j);if(E)if((c[E+12>>2]|0)==(c[E+16>>2]|0)?(wd[c[(c[E>>2]|0)+36>>2]&127](E)|0)==-1:0){c[e>>2]=0;O=0}else O=E;else O=0;E=(O|0)==0;do if(F){if((c[F+12>>2]|0)==(c[F+16>>2]|0)?(wd[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1:0){c[f>>2]=0;H=38;break}if(!E)H=39}else H=38;while(0);if((H|0)==38?E:0)H=39;if((H|0)==39)c[j>>2]=c[j>>2]|2;j=c[e>>2]|0;Hy(p);Hy(o);i=b;return j|0}function VF(b,e,f,g,j,k){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;b=i;i=i+256|0;l=b+208|0;m=b+200|0;n=b+240|0;o=b;p=b+188|0;q=b+184|0;r=b+16|0;s=b+176|0;t=b+180|0;u=b+241|0;v=b+242|0;FA(o,g,l,m,n);c[p>>2]=0;c[p+4>>2]=0;c[p+8>>2]=0;if(!(a[p>>0]&1))w=10;else w=(c[p>>2]&-2)+-1|0;Ly(p,w,0);w=p+8|0;g=p+1|0;x=(a[p>>0]&1)==0?g:c[w>>2]|0;c[q>>2]=x;c[s>>2]=r;c[t>>2]=0;a[u>>0]=1;a[v>>0]=69;y=p+4|0;z=a[m>>0]|0;m=a[n>>0]|0;n=c[e>>2]|0;A=x;a:while(1){if(n)if((c[n+12>>2]|0)==(c[n+16>>2]|0)?(wd[c[(c[n>>2]|0)+36>>2]&127](n)|0)==-1:0){c[e>>2]=0;B=0}else B=n;else B=0;x=(B|0)==0;C=c[f>>2]|0;do if(C){if((c[C+12>>2]|0)!=(c[C+16>>2]|0))if(x){D=C;break}else{E=B;F=C;G=A;break a}if((wd[c[(c[C>>2]|0)+36>>2]&127](C)|0)!=-1)if(x){D=C;break}else{E=B;F=C;G=A;break a}else{c[f>>2]=0;H=13;break}}else H=13;while(0);if((H|0)==13){H=0;if(x){E=B;F=0;G=A;break}else D=0}C=a[p>>0]|0;I=(C&1)==0?(C&255)>>>1:c[y>>2]|0;if((c[q>>2]|0)==(A+I|0)){Ly(p,I<<1,0);if(!(a[p>>0]&1))J=10;else J=(c[p>>2]&-2)+-1|0;Ly(p,J,0);C=(a[p>>0]&1)==0?g:c[w>>2]|0;c[q>>2]=C+I;K=C}else K=A;C=B+12|0;I=c[C>>2]|0;L=B+16|0;if((I|0)==(c[L>>2]|0))M=wd[c[(c[B>>2]|0)+36>>2]&127](B)|0;else M=d[I>>0]|0;if(GA(M&255,u,v,K,q,z,m,o,r,s,t,l)|0){E=B;F=D;G=K;break}I=c[C>>2]|0;if((I|0)==(c[L>>2]|0)){wd[c[(c[B>>2]|0)+40>>2]&127](B)|0;n=B;A=K;continue}else{c[C>>2]=I+1;n=B;A=K;continue}}K=a[o>>0]|0;A=c[s>>2]|0;if(!((a[u>>0]|0)==0?1:(((K&1)==0?(K&255)>>>1:c[o+4>>2]|0)|0)==0)?(A-r|0)<160:0){K=c[t>>2]|0;t=A+4|0;c[s>>2]=t;c[A>>2]=K;N=t}else N=A;h[k>>3]=+lH(G,c[q>>2]|0,j);lD(o,r,N,j);if(E)if((c[E+12>>2]|0)==(c[E+16>>2]|0)?(wd[c[(c[E>>2]|0)+36>>2]&127](E)|0)==-1:0){c[e>>2]=0;O=0}else O=E;else O=0;E=(O|0)==0;do if(F){if((c[F+12>>2]|0)==(c[F+16>>2]|0)?(wd[c[(c[F>>2]|0)+36>>2]&127](F)|0)==-1:0){c[f>>2]=0;H=38;break}if(!E)H=39}else H=38;while(0);if((H|0)==38?E:0)H=39;if((H|0)==39)c[j>>2]=c[j>>2]|2;j=c[e>>2]|0;Hy(p);Hy(o);i=b;return j|0}function WF(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=ac(b|0)|0;b=yw(a,d,g)|0;if(e)ac(e|0)|0;i=f;return b|0}function XF(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0;k=i;i=i+112|0;l=k;m=(f-e|0)/12|0;if(m>>>0>100){n=py(m)|0;if(!n)Gx();else{o=n;p=n}}else{o=0;p=l}if((e|0)==(f|0)){q=0;r=m}else{l=e;n=0;s=m;m=p;while(1){t=a[l>>0]|0;if(!(t&1))u=(t&255)>>>1;else u=c[l+4>>2]|0;if(!u){a[m>>0]=2;v=n+1|0;w=s+-1|0}else{a[m>>0]=1;v=n;w=s}l=l+12|0;if((l|0)==(f|0)){q=v;r=w;break}else{n=v;s=w;m=m+1|0}}}m=(e|0)==(f|0);w=(e|0)==(f|0);s=0;v=q;q=r;a:while(1){r=c[b>>2]|0;do if(r){n=c[r+12>>2]|0;if((n|0)==(c[r+16>>2]|0))x=wd[c[(c[r>>2]|0)+36>>2]&127](r)|0;else x=c[n>>2]|0;if((x|0)==-1){c[b>>2]=0;y=1;break}else{y=(c[b>>2]|0)==0;break}}else y=1;while(0);r=c[d>>2]|0;if(r){n=c[r+12>>2]|0;if((n|0)==(c[r+16>>2]|0))z=wd[c[(c[r>>2]|0)+36>>2]&127](r)|0;else z=c[n>>2]|0;if((z|0)==-1){c[d>>2]=0;A=0;B=1}else{A=r;B=0}}else{A=0;B=1}r=c[b>>2]|0;if(!((q|0)!=0&(y^B))){C=r;D=A;break}n=c[r+12>>2]|0;if((n|0)==(c[r+16>>2]|0))E=wd[c[(c[r>>2]|0)+36>>2]&127](r)|0;else E=c[n>>2]|0;if(j)F=E;else F=Cd[c[(c[g>>2]|0)+28>>2]&63](g,E)|0;n=s+1|0;if(m){G=0;H=v;I=q}else{r=0;l=e;u=v;t=q;J=p;while(1){do if((a[J>>0]|0)==1){if(!(a[l>>0]&1))K=l+4|0;else K=c[l+8>>2]|0;L=c[K+(s<<2)>>2]|0;if(j)M=L;else M=Cd[c[(c[g>>2]|0)+28>>2]&63](g,L)|0;if((F|0)!=(M|0)){a[J>>0]=0;N=r;O=u;P=t+-1|0;break}L=a[l>>0]|0;if(!(L&1))Q=(L&255)>>>1;else Q=c[l+4>>2]|0;if((Q|0)==(n|0)){a[J>>0]=2;N=1;O=u+1|0;P=t+-1|0}else{N=1;O=u;P=t}}else{N=r;O=u;P=t}while(0);l=l+12|0;if((l|0)==(f|0)){G=N;H=O;I=P;break}else{r=N;u=O;t=P;J=J+1|0}}}if(!G){s=n;v=H;q=I;continue}J=c[b>>2]|0;t=J+12|0;u=c[t>>2]|0;if((u|0)==(c[J+16>>2]|0))wd[c[(c[J>>2]|0)+40>>2]&127](J)|0;else c[t>>2]=u+4;if((H+I|0)>>>0<2|w){s=n;v=H;q=I;continue}else{R=e;S=H;T=p}while(1){if((a[T>>0]|0)==2){u=a[R>>0]|0;if(!(u&1))U=(u&255)>>>1;else U=c[R+4>>2]|0;if((U|0)!=(n|0)){a[T>>0]=0;V=S+-1|0}else V=S}else V=S;u=R+12|0;if((u|0)==(f|0)){s=n;v=V;q=I;continue a}else{R=u;S=V;T=T+1|0}}}do if(C){T=c[C+12>>2]|0;if((T|0)==(c[C+16>>2]|0))W=wd[c[(c[C>>2]|0)+36>>2]&127](C)|0;else W=c[T>>2]|0;if((W|0)==-1){c[b>>2]=0;X=1;break}else{X=(c[b>>2]|0)==0;break}}else X=1;while(0);do if(D){b=c[D+12>>2]|0;if((b|0)==(c[D+16>>2]|0))Y=wd[c[(c[D>>2]|0)+36>>2]&127](D)|0;else Y=c[b>>2]|0;if((Y|0)!=-1)if(X)break;else{Z=74;break}else{c[d>>2]=0;Z=72;break}}else Z=72;while(0);if((Z|0)==72?X:0)Z=74;if((Z|0)==74)c[h>>2]=c[h>>2]|2;b:do if((e|0)==(f|0))Z=78;else{X=e;d=p;while(1){if((a[d>>0]|0)==2){_=X;break b}X=X+12|0;if((X|0)==(f|0)){Z=78;break}else d=d+1|0}}while(0);if((Z|0)==78){c[h>>2]=c[h>>2]|4;_=f}qy(o);i=k;return _|0}function YF(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;b=i;i=i+304|0;j=b+160|0;k=b+280|0;l=b+264|0;m=b+284|0;n=b+300|0;o=b;p=b+276|0;q=b+296|0;r=wF(f)|0;HA(l,f,j,k);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;if(!(a[m>>0]&1))s=10;else s=(c[m>>2]&-2)+-1|0;Ly(m,s,0);s=m+8|0;f=m+1|0;t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t;c[p>>2]=o;c[q>>2]=0;u=m+4|0;v=c[k>>2]|0;k=c[d>>2]|0;w=t;a:while(1){if(k){t=c[k+12>>2]|0;if((t|0)==(c[k+16>>2]|0))x=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else x=c[t>>2]|0;if((x|0)==-1){c[d>>2]=0;y=0;z=1}else{y=k;z=0}}else{y=0;z=1}t=c[e>>2]|0;do if(t){A=c[t+12>>2]|0;if((A|0)==(c[t+16>>2]|0))B=wd[c[(c[t>>2]|0)+36>>2]&127](t)|0;else B=c[A>>2]|0;if((B|0)!=-1)if(z){C=t;break}else{D=y;E=t;F=w;break a}else{c[e>>2]=0;G=16;break}}else G=16;while(0);if((G|0)==16){G=0;if(z){D=y;E=0;F=w;break}else C=0}t=a[m>>0]|0;A=(t&1)==0?(t&255)>>>1:c[u>>2]|0;if((c[n>>2]|0)==(w+A|0)){Ly(m,A<<1,0);if(!(a[m>>0]&1))H=10;else H=(c[m>>2]&-2)+-1|0;Ly(m,H,0);t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t+A;I=t}else I=w;t=y+12|0;A=c[t>>2]|0;J=y+16|0;if((A|0)==(c[J>>2]|0))K=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else K=c[A>>2]|0;if(DA(K,r,I,n,q,v,l,o,p,j)|0){D=y;E=C;F=I;break}A=c[t>>2]|0;if((A|0)==(c[J>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;k=y;w=I;continue}else{c[t>>2]=A+4;k=y;w=I;continue}}I=a[l>>0]|0;w=c[p>>2]|0;if((((I&1)==0?(I&255)>>>1:c[l+4>>2]|0)|0)!=0?(w-o|0)<160:0){I=c[q>>2]|0;q=w+4|0;c[p>>2]=q;c[w>>2]=I;L=q}else L=w;c[h>>2]=tH(F,c[n>>2]|0,g,r)|0;lD(l,o,L,g);if(D){L=c[D+12>>2]|0;if((L|0)==(c[D+16>>2]|0))M=wd[c[(c[D>>2]|0)+36>>2]&127](D)|0;else M=c[L>>2]|0;if((M|0)==-1){c[d>>2]=0;N=1}else N=0}else N=1;do if(E){M=c[E+12>>2]|0;if((M|0)==(c[E+16>>2]|0))O=wd[c[(c[E>>2]|0)+36>>2]&127](E)|0;else O=c[M>>2]|0;if((O|0)!=-1)if(N)break;else{G=46;break}else{c[e>>2]=0;G=44;break}}else G=44;while(0);if((G|0)==44?N:0)G=46;if((G|0)==46)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(m);Hy(l);i=b;return g|0}function ZF(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;b=i;i=i+304|0;j=b+160|0;k=b+280|0;l=b+264|0;m=b+284|0;n=b+300|0;o=b;p=b+276|0;q=b+296|0;r=wF(f)|0;HA(l,f,j,k);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;if(!(a[m>>0]&1))s=10;else s=(c[m>>2]&-2)+-1|0;Ly(m,s,0);s=m+8|0;f=m+1|0;t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t;c[p>>2]=o;c[q>>2]=0;u=m+4|0;v=c[k>>2]|0;k=c[d>>2]|0;w=t;a:while(1){if(k){t=c[k+12>>2]|0;if((t|0)==(c[k+16>>2]|0))x=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else x=c[t>>2]|0;if((x|0)==-1){c[d>>2]=0;y=0;z=1}else{y=k;z=0}}else{y=0;z=1}t=c[e>>2]|0;do if(t){A=c[t+12>>2]|0;if((A|0)==(c[t+16>>2]|0))B=wd[c[(c[t>>2]|0)+36>>2]&127](t)|0;else B=c[A>>2]|0;if((B|0)!=-1)if(z){C=t;break}else{D=y;F=t;G=w;break a}else{c[e>>2]=0;H=16;break}}else H=16;while(0);if((H|0)==16){H=0;if(z){D=y;F=0;G=w;break}else C=0}t=a[m>>0]|0;A=(t&1)==0?(t&255)>>>1:c[u>>2]|0;if((c[n>>2]|0)==(w+A|0)){Ly(m,A<<1,0);if(!(a[m>>0]&1))I=10;else I=(c[m>>2]&-2)+-1|0;Ly(m,I,0);t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t+A;J=t}else J=w;t=y+12|0;A=c[t>>2]|0;K=y+16|0;if((A|0)==(c[K>>2]|0))L=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else L=c[A>>2]|0;if(DA(L,r,J,n,q,v,l,o,p,j)|0){D=y;F=C;G=J;break}A=c[t>>2]|0;if((A|0)==(c[K>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;k=y;w=J;continue}else{c[t>>2]=A+4;k=y;w=J;continue}}J=a[l>>0]|0;w=c[p>>2]|0;if((((J&1)==0?(J&255)>>>1:c[l+4>>2]|0)|0)!=0?(w-o|0)<160:0){J=c[q>>2]|0;q=w+4|0;c[p>>2]=q;c[w>>2]=J;M=q}else M=w;w=sH(G,c[n>>2]|0,g,r)|0;r=h;c[r>>2]=w;c[r+4>>2]=E;lD(l,o,M,g);if(D){M=c[D+12>>2]|0;if((M|0)==(c[D+16>>2]|0))N=wd[c[(c[D>>2]|0)+36>>2]&127](D)|0;else N=c[M>>2]|0;if((N|0)==-1){c[d>>2]=0;O=1}else O=0}else O=1;do if(F){N=c[F+12>>2]|0;if((N|0)==(c[F+16>>2]|0))P=wd[c[(c[F>>2]|0)+36>>2]&127](F)|0;else P=c[N>>2]|0;if((P|0)!=-1)if(O)break;else{H=46;break}else{c[e>>2]=0;H=44;break}}else H=44;while(0);if((H|0)==44?O:0)H=46;if((H|0)==46)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(m);Hy(l);i=b;return g|0}function _F(d,e,f,g,h,j){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;d=i;i=i+304|0;k=d+160|0;l=d+280|0;m=d+264|0;n=d+284|0;o=d+300|0;p=d;q=d+276|0;r=d+296|0;s=wF(g)|0;HA(m,g,k,l);c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;if(!(a[n>>0]&1))t=10;else t=(c[n>>2]&-2)+-1|0;Ly(n,t,0);t=n+8|0;g=n+1|0;u=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=u;c[q>>2]=p;c[r>>2]=0;v=n+4|0;w=c[l>>2]|0;l=c[e>>2]|0;x=u;a:while(1){if(l){u=c[l+12>>2]|0;if((u|0)==(c[l+16>>2]|0))y=wd[c[(c[l>>2]|0)+36>>2]&127](l)|0;else y=c[u>>2]|0;if((y|0)==-1){c[e>>2]=0;z=0;A=1}else{z=l;A=0}}else{z=0;A=1}u=c[f>>2]|0;do if(u){B=c[u+12>>2]|0;if((B|0)==(c[u+16>>2]|0))C=wd[c[(c[u>>2]|0)+36>>2]&127](u)|0;else C=c[B>>2]|0;if((C|0)!=-1)if(A){D=u;break}else{E=z;F=u;G=x;break a}else{c[f>>2]=0;H=16;break}}else H=16;while(0);if((H|0)==16){H=0;if(A){E=z;F=0;G=x;break}else D=0}u=a[n>>0]|0;B=(u&1)==0?(u&255)>>>1:c[v>>2]|0;if((c[o>>2]|0)==(x+B|0)){Ly(n,B<<1,0);if(!(a[n>>0]&1))I=10;else I=(c[n>>2]&-2)+-1|0;Ly(n,I,0);u=(a[n>>0]&1)==0?g:c[t>>2]|0;c[o>>2]=u+B;J=u}else J=x;u=z+12|0;B=c[u>>2]|0;K=z+16|0;if((B|0)==(c[K>>2]|0))L=wd[c[(c[z>>2]|0)+36>>2]&127](z)|0;else L=c[B>>2]|0;if(DA(L,s,J,o,r,w,m,p,q,k)|0){E=z;F=D;G=J;break}B=c[u>>2]|0;if((B|0)==(c[K>>2]|0)){wd[c[(c[z>>2]|0)+40>>2]&127](z)|0;l=z;x=J;continue}else{c[u>>2]=B+4;l=z;x=J;continue}}J=a[m>>0]|0;x=c[q>>2]|0;if((((J&1)==0?(J&255)>>>1:c[m+4>>2]|0)|0)!=0?(x-p|0)<160:0){J=c[r>>2]|0;r=x+4|0;c[q>>2]=r;c[x>>2]=J;M=r}else M=x;b[j>>1]=rH(G,c[o>>2]|0,h,s)|0;lD(m,p,M,h);if(E){M=c[E+12>>2]|0;if((M|0)==(c[E+16>>2]|0))N=wd[c[(c[E>>2]|0)+36>>2]&127](E)|0;else N=c[M>>2]|0;if((N|0)==-1){c[e>>2]=0;O=1}else O=0}else O=1;do if(F){N=c[F+12>>2]|0;if((N|0)==(c[F+16>>2]|0))P=wd[c[(c[F>>2]|0)+36>>2]&127](F)|0;else P=c[N>>2]|0;if((P|0)!=-1)if(O)break;else{H=46;break}else{c[f>>2]=0;H=44;break}}else H=44;while(0);if((H|0)==44?O:0)H=46;if((H|0)==46)c[h>>2]=c[h>>2]|2;h=c[e>>2]|0;Hy(n);Hy(m);i=d;return h|0}function $F(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;b=i;i=i+304|0;j=b+160|0;k=b+280|0;l=b+264|0;m=b+284|0;n=b+300|0;o=b;p=b+276|0;q=b+296|0;r=wF(f)|0;HA(l,f,j,k);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;if(!(a[m>>0]&1))s=10;else s=(c[m>>2]&-2)+-1|0;Ly(m,s,0);s=m+8|0;f=m+1|0;t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t;c[p>>2]=o;c[q>>2]=0;u=m+4|0;v=c[k>>2]|0;k=c[d>>2]|0;w=t;a:while(1){if(k){t=c[k+12>>2]|0;if((t|0)==(c[k+16>>2]|0))x=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else x=c[t>>2]|0;if((x|0)==-1){c[d>>2]=0;y=0;z=1}else{y=k;z=0}}else{y=0;z=1}t=c[e>>2]|0;do if(t){A=c[t+12>>2]|0;if((A|0)==(c[t+16>>2]|0))B=wd[c[(c[t>>2]|0)+36>>2]&127](t)|0;else B=c[A>>2]|0;if((B|0)!=-1)if(z){C=t;break}else{D=y;E=t;F=w;break a}else{c[e>>2]=0;G=16;break}}else G=16;while(0);if((G|0)==16){G=0;if(z){D=y;E=0;F=w;break}else C=0}t=a[m>>0]|0;A=(t&1)==0?(t&255)>>>1:c[u>>2]|0;if((c[n>>2]|0)==(w+A|0)){Ly(m,A<<1,0);if(!(a[m>>0]&1))H=10;else H=(c[m>>2]&-2)+-1|0;Ly(m,H,0);t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t+A;I=t}else I=w;t=y+12|0;A=c[t>>2]|0;J=y+16|0;if((A|0)==(c[J>>2]|0))K=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else K=c[A>>2]|0;if(DA(K,r,I,n,q,v,l,o,p,j)|0){D=y;E=C;F=I;break}A=c[t>>2]|0;if((A|0)==(c[J>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;k=y;w=I;continue}else{c[t>>2]=A+4;k=y;w=I;continue}}I=a[l>>0]|0;w=c[p>>2]|0;if((((I&1)==0?(I&255)>>>1:c[l+4>>2]|0)|0)!=0?(w-o|0)<160:0){I=c[q>>2]|0;q=w+4|0;c[p>>2]=q;c[w>>2]=I;L=q}else L=w;c[h>>2]=qH(F,c[n>>2]|0,g,r)|0;lD(l,o,L,g);if(D){L=c[D+12>>2]|0;if((L|0)==(c[D+16>>2]|0))M=wd[c[(c[D>>2]|0)+36>>2]&127](D)|0;else M=c[L>>2]|0;if((M|0)==-1){c[d>>2]=0;N=1}else N=0}else N=1;do if(E){M=c[E+12>>2]|0;if((M|0)==(c[E+16>>2]|0))O=wd[c[(c[E>>2]|0)+36>>2]&127](E)|0;else O=c[M>>2]|0;if((O|0)!=-1)if(N)break;else{G=46;break}else{c[e>>2]=0;G=44;break}}else G=44;while(0);if((G|0)==44?N:0)G=46;if((G|0)==46)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(m);Hy(l);i=b;return g|0}function aG(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;b=i;i=i+304|0;j=b+160|0;k=b+280|0;l=b+264|0;m=b+284|0;n=b+300|0;o=b;p=b+276|0;q=b+296|0;r=wF(f)|0;HA(l,f,j,k);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;if(!(a[m>>0]&1))s=10;else s=(c[m>>2]&-2)+-1|0;Ly(m,s,0);s=m+8|0;f=m+1|0;t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t;c[p>>2]=o;c[q>>2]=0;u=m+4|0;v=c[k>>2]|0;k=c[d>>2]|0;w=t;a:while(1){if(k){t=c[k+12>>2]|0;if((t|0)==(c[k+16>>2]|0))x=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else x=c[t>>2]|0;if((x|0)==-1){c[d>>2]=0;y=0;z=1}else{y=k;z=0}}else{y=0;z=1}t=c[e>>2]|0;do if(t){A=c[t+12>>2]|0;if((A|0)==(c[t+16>>2]|0))B=wd[c[(c[t>>2]|0)+36>>2]&127](t)|0;else B=c[A>>2]|0;if((B|0)!=-1)if(z){C=t;break}else{D=y;E=t;F=w;break a}else{c[e>>2]=0;G=16;break}}else G=16;while(0);if((G|0)==16){G=0;if(z){D=y;E=0;F=w;break}else C=0}t=a[m>>0]|0;A=(t&1)==0?(t&255)>>>1:c[u>>2]|0;if((c[n>>2]|0)==(w+A|0)){Ly(m,A<<1,0);if(!(a[m>>0]&1))H=10;else H=(c[m>>2]&-2)+-1|0;Ly(m,H,0);t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t+A;I=t}else I=w;t=y+12|0;A=c[t>>2]|0;J=y+16|0;if((A|0)==(c[J>>2]|0))K=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else K=c[A>>2]|0;if(DA(K,r,I,n,q,v,l,o,p,j)|0){D=y;E=C;F=I;break}A=c[t>>2]|0;if((A|0)==(c[J>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;k=y;w=I;continue}else{c[t>>2]=A+4;k=y;w=I;continue}}I=a[l>>0]|0;w=c[p>>2]|0;if((((I&1)==0?(I&255)>>>1:c[l+4>>2]|0)|0)!=0?(w-o|0)<160:0){I=c[q>>2]|0;q=w+4|0;c[p>>2]=q;c[w>>2]=I;L=q}else L=w;c[h>>2]=pH(F,c[n>>2]|0,g,r)|0;lD(l,o,L,g);if(D){L=c[D+12>>2]|0;if((L|0)==(c[D+16>>2]|0))M=wd[c[(c[D>>2]|0)+36>>2]&127](D)|0;else M=c[L>>2]|0;if((M|0)==-1){c[d>>2]=0;N=1}else N=0}else N=1;do if(E){M=c[E+12>>2]|0;if((M|0)==(c[E+16>>2]|0))O=wd[c[(c[E>>2]|0)+36>>2]&127](E)|0;else O=c[M>>2]|0;if((O|0)!=-1)if(N)break;else{G=46;break}else{c[e>>2]=0;G=44;break}}else G=44;while(0);if((G|0)==44?N:0)G=46;if((G|0)==46)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(m);Hy(l);i=b;return g|0}function bG(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;b=i;i=i+304|0;j=b+160|0;k=b+280|0;l=b+264|0;m=b+284|0;n=b+300|0;o=b;p=b+276|0;q=b+296|0;r=wF(f)|0;HA(l,f,j,k);c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;if(!(a[m>>0]&1))s=10;else s=(c[m>>2]&-2)+-1|0;Ly(m,s,0);s=m+8|0;f=m+1|0;t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t;c[p>>2]=o;c[q>>2]=0;u=m+4|0;v=c[k>>2]|0;k=c[d>>2]|0;w=t;a:while(1){if(k){t=c[k+12>>2]|0;if((t|0)==(c[k+16>>2]|0))x=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else x=c[t>>2]|0;if((x|0)==-1){c[d>>2]=0;y=0;z=1}else{y=k;z=0}}else{y=0;z=1}t=c[e>>2]|0;do if(t){A=c[t+12>>2]|0;if((A|0)==(c[t+16>>2]|0))B=wd[c[(c[t>>2]|0)+36>>2]&127](t)|0;else B=c[A>>2]|0;if((B|0)!=-1)if(z){C=t;break}else{D=y;F=t;G=w;break a}else{c[e>>2]=0;H=16;break}}else H=16;while(0);if((H|0)==16){H=0;if(z){D=y;F=0;G=w;break}else C=0}t=a[m>>0]|0;A=(t&1)==0?(t&255)>>>1:c[u>>2]|0;if((c[n>>2]|0)==(w+A|0)){Ly(m,A<<1,0);if(!(a[m>>0]&1))I=10;else I=(c[m>>2]&-2)+-1|0;Ly(m,I,0);t=(a[m>>0]&1)==0?f:c[s>>2]|0;c[n>>2]=t+A;J=t}else J=w;t=y+12|0;A=c[t>>2]|0;K=y+16|0;if((A|0)==(c[K>>2]|0))L=wd[c[(c[y>>2]|0)+36>>2]&127](y)|0;else L=c[A>>2]|0;if(DA(L,r,J,n,q,v,l,o,p,j)|0){D=y;F=C;G=J;break}A=c[t>>2]|0;if((A|0)==(c[K>>2]|0)){wd[c[(c[y>>2]|0)+40>>2]&127](y)|0;k=y;w=J;continue}else{c[t>>2]=A+4;k=y;w=J;continue}}J=a[l>>0]|0;w=c[p>>2]|0;if((((J&1)==0?(J&255)>>>1:c[l+4>>2]|0)|0)!=0?(w-o|0)<160:0){J=c[q>>2]|0;q=w+4|0;c[p>>2]=q;c[w>>2]=J;M=q}else M=w;w=oH(G,c[n>>2]|0,g,r)|0;r=h;c[r>>2]=w;c[r+4>>2]=E;lD(l,o,M,g);if(D){M=c[D+12>>2]|0;if((M|0)==(c[D+16>>2]|0))N=wd[c[(c[D>>2]|0)+36>>2]&127](D)|0;else N=c[M>>2]|0;if((N|0)==-1){c[d>>2]=0;O=1}else O=0}else O=1;do if(F){N=c[F+12>>2]|0;if((N|0)==(c[F+16>>2]|0))P=wd[c[(c[F>>2]|0)+36>>2]&127](F)|0;else P=c[N>>2]|0;if((P|0)!=-1)if(O)break;else{H=46;break}else{c[e>>2]=0;H=44;break}}else H=44;while(0);if((H|0)==44?O:0)H=46;if((H|0)==46)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(m);Hy(l);i=b;return g|0}function cG(b,d,e,f,h,j){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;b=i;i=i+352|0;k=b+208|0;l=b+184|0;m=b+4|0;n=b+8|0;o=b+196|0;p=b;q=b+24|0;r=b+192|0;s=b+188|0;t=b+337|0;u=b+336|0;IA(n,f,k,l,m);c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;if(!(a[o>>0]&1))v=10;else v=(c[o>>2]&-2)+-1|0;Ly(o,v,0);v=o+8|0;f=o+1|0;w=(a[o>>0]&1)==0?f:c[v>>2]|0;c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;a[t>>0]=1;a[u>>0]=69;x=o+4|0;y=c[l>>2]|0;l=c[m>>2]|0;m=c[d>>2]|0;z=w;a:while(1){if(m){w=c[m+12>>2]|0;if((w|0)==(c[m+16>>2]|0))A=wd[c[(c[m>>2]|0)+36>>2]&127](m)|0;else A=c[w>>2]|0;if((A|0)==-1){c[d>>2]=0;B=0;C=1}else{B=m;C=0}}else{B=0;C=1}w=c[e>>2]|0;do if(w){D=c[w+12>>2]|0;if((D|0)==(c[w+16>>2]|0))E=wd[c[(c[w>>2]|0)+36>>2]&127](w)|0;else E=c[D>>2]|0;if((E|0)!=-1)if(C){F=w;break}else{G=B;H=w;I=z;break a}else{c[e>>2]=0;J=16;break}}else J=16;while(0);if((J|0)==16){J=0;if(C){G=B;H=0;I=z;break}else F=0}w=a[o>>0]|0;D=(w&1)==0?(w&255)>>>1:c[x>>2]|0;if((c[p>>2]|0)==(z+D|0)){Ly(o,D<<1,0);if(!(a[o>>0]&1))K=10;else K=(c[o>>2]&-2)+-1|0;Ly(o,K,0);w=(a[o>>0]&1)==0?f:c[v>>2]|0;c[p>>2]=w+D;L=w}else L=z;w=B+12|0;D=c[w>>2]|0;M=B+16|0;if((D|0)==(c[M>>2]|0))N=wd[c[(c[B>>2]|0)+36>>2]&127](B)|0;else N=c[D>>2]|0;if(JA(N,t,u,L,p,y,l,n,q,r,s,k)|0){G=B;H=F;I=L;break}D=c[w>>2]|0;if((D|0)==(c[M>>2]|0)){wd[c[(c[B>>2]|0)+40>>2]&127](B)|0;m=B;z=L;continue}else{c[w>>2]=D+4;m=B;z=L;continue}}L=a[n>>0]|0;z=c[r>>2]|0;if(!((a[t>>0]|0)==0?1:(((L&1)==0?(L&255)>>>1:c[n+4>>2]|0)|0)==0)?(z-q|0)<160:0){L=c[s>>2]|0;s=z+4|0;c[r>>2]=s;c[z>>2]=L;O=s}else O=z;g[j>>2]=+nH(I,c[p>>2]|0,h);lD(n,q,O,h);if(G){O=c[G+12>>2]|0;if((O|0)==(c[G+16>>2]|0))P=wd[c[(c[G>>2]|0)+36>>2]&127](G)|0;else P=c[O>>2]|0;if((P|0)==-1){c[d>>2]=0;Q=1}else Q=0}else Q=1;do if(H){P=c[H+12>>2]|0;if((P|0)==(c[H+16>>2]|0))R=wd[c[(c[H>>2]|0)+36>>2]&127](H)|0;else R=c[P>>2]|0;if((R|0)!=-1)if(Q)break;else{J=46;break}else{c[e>>2]=0;J=44;break}}else J=44;while(0);if((J|0)==44?Q:0)J=46;if((J|0)==46)c[h>>2]=c[h>>2]|2;h=c[d>>2]|0;Hy(o);Hy(n);i=b;return h|0}function dG(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;b=i;i=i+352|0;k=b+208|0;l=b+184|0;m=b+4|0;n=b+8|0;o=b+196|0;p=b;q=b+24|0;r=b+192|0;s=b+188|0;t=b+337|0;u=b+336|0;IA(n,f,k,l,m);c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;if(!(a[o>>0]&1))v=10;else v=(c[o>>2]&-2)+-1|0;Ly(o,v,0);v=o+8|0;f=o+1|0;w=(a[o>>0]&1)==0?f:c[v>>2]|0;c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;a[t>>0]=1;a[u>>0]=69;x=o+4|0;y=c[l>>2]|0;l=c[m>>2]|0;m=c[d>>2]|0;z=w;a:while(1){if(m){w=c[m+12>>2]|0;if((w|0)==(c[m+16>>2]|0))A=wd[c[(c[m>>2]|0)+36>>2]&127](m)|0;else A=c[w>>2]|0;if((A|0)==-1){c[d>>2]=0;B=0;C=1}else{B=m;C=0}}else{B=0;C=1}w=c[e>>2]|0;do if(w){D=c[w+12>>2]|0;if((D|0)==(c[w+16>>2]|0))E=wd[c[(c[w>>2]|0)+36>>2]&127](w)|0;else E=c[D>>2]|0;if((E|0)!=-1)if(C){F=w;break}else{G=B;H=w;I=z;break a}else{c[e>>2]=0;J=16;break}}else J=16;while(0);if((J|0)==16){J=0;if(C){G=B;H=0;I=z;break}else F=0}w=a[o>>0]|0;D=(w&1)==0?(w&255)>>>1:c[x>>2]|0;if((c[p>>2]|0)==(z+D|0)){Ly(o,D<<1,0);if(!(a[o>>0]&1))K=10;else K=(c[o>>2]&-2)+-1|0;Ly(o,K,0);w=(a[o>>0]&1)==0?f:c[v>>2]|0;c[p>>2]=w+D;L=w}else L=z;w=B+12|0;D=c[w>>2]|0;M=B+16|0;if((D|0)==(c[M>>2]|0))N=wd[c[(c[B>>2]|0)+36>>2]&127](B)|0;else N=c[D>>2]|0;if(JA(N,t,u,L,p,y,l,n,q,r,s,k)|0){G=B;H=F;I=L;break}D=c[w>>2]|0;if((D|0)==(c[M>>2]|0)){wd[c[(c[B>>2]|0)+40>>2]&127](B)|0;m=B;z=L;continue}else{c[w>>2]=D+4;m=B;z=L;continue}}L=a[n>>0]|0;z=c[r>>2]|0;if(!((a[t>>0]|0)==0?1:(((L&1)==0?(L&255)>>>1:c[n+4>>2]|0)|0)==0)?(z-q|0)<160:0){L=c[s>>2]|0;s=z+4|0;c[r>>2]=s;c[z>>2]=L;O=s}else O=z;h[j>>3]=+mH(I,c[p>>2]|0,g);lD(n,q,O,g);if(G){O=c[G+12>>2]|0;if((O|0)==(c[G+16>>2]|0))P=wd[c[(c[G>>2]|0)+36>>2]&127](G)|0;else P=c[O>>2]|0;if((P|0)==-1){c[d>>2]=0;Q=1}else Q=0}else Q=1;do if(H){P=c[H+12>>2]|0;if((P|0)==(c[H+16>>2]|0))R=wd[c[(c[H>>2]|0)+36>>2]&127](H)|0;else R=c[P>>2]|0;if((R|0)!=-1)if(Q)break;else{J=46;break}else{c[e>>2]=0;J=44;break}}else J=44;while(0);if((J|0)==44?Q:0)J=46;if((J|0)==46)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(o);Hy(n);i=b;return g|0}function eG(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;b=i;i=i+352|0;k=b+208|0;l=b+184|0;m=b+4|0;n=b+8|0;o=b+196|0;p=b;q=b+24|0;r=b+192|0;s=b+188|0;t=b+337|0;u=b+336|0;IA(n,f,k,l,m);c[o>>2]=0;c[o+4>>2]=0;c[o+8>>2]=0;if(!(a[o>>0]&1))v=10;else v=(c[o>>2]&-2)+-1|0;Ly(o,v,0);v=o+8|0;f=o+1|0;w=(a[o>>0]&1)==0?f:c[v>>2]|0;c[p>>2]=w;c[r>>2]=q;c[s>>2]=0;a[t>>0]=1;a[u>>0]=69;x=o+4|0;y=c[l>>2]|0;l=c[m>>2]|0;m=c[d>>2]|0;z=w;a:while(1){if(m){w=c[m+12>>2]|0;if((w|0)==(c[m+16>>2]|0))A=wd[c[(c[m>>2]|0)+36>>2]&127](m)|0;else A=c[w>>2]|0;if((A|0)==-1){c[d>>2]=0;B=0;C=1}else{B=m;C=0}}else{B=0;C=1}w=c[e>>2]|0;do if(w){D=c[w+12>>2]|0;if((D|0)==(c[w+16>>2]|0))E=wd[c[(c[w>>2]|0)+36>>2]&127](w)|0;else E=c[D>>2]|0;if((E|0)!=-1)if(C){F=w;break}else{G=B;H=w;I=z;break a}else{c[e>>2]=0;J=16;break}}else J=16;while(0);if((J|0)==16){J=0;if(C){G=B;H=0;I=z;break}else F=0}w=a[o>>0]|0;D=(w&1)==0?(w&255)>>>1:c[x>>2]|0;if((c[p>>2]|0)==(z+D|0)){Ly(o,D<<1,0);if(!(a[o>>0]&1))K=10;else K=(c[o>>2]&-2)+-1|0;Ly(o,K,0);w=(a[o>>0]&1)==0?f:c[v>>2]|0;c[p>>2]=w+D;L=w}else L=z;w=B+12|0;D=c[w>>2]|0;M=B+16|0;if((D|0)==(c[M>>2]|0))N=wd[c[(c[B>>2]|0)+36>>2]&127](B)|0;else N=c[D>>2]|0;if(JA(N,t,u,L,p,y,l,n,q,r,s,k)|0){G=B;H=F;I=L;break}D=c[w>>2]|0;if((D|0)==(c[M>>2]|0)){wd[c[(c[B>>2]|0)+40>>2]&127](B)|0;m=B;z=L;continue}else{c[w>>2]=D+4;m=B;z=L;continue}}L=a[n>>0]|0;z=c[r>>2]|0;if(!((a[t>>0]|0)==0?1:(((L&1)==0?(L&255)>>>1:c[n+4>>2]|0)|0)==0)?(z-q|0)<160:0){L=c[s>>2]|0;s=z+4|0;c[r>>2]=s;c[z>>2]=L;O=s}else O=z;h[j>>3]=+lH(I,c[p>>2]|0,g);lD(n,q,O,g);if(G){O=c[G+12>>2]|0;if((O|0)==(c[G+16>>2]|0))P=wd[c[(c[G>>2]|0)+36>>2]&127](G)|0;else P=c[O>>2]|0;if((P|0)==-1){c[d>>2]=0;Q=1}else Q=0}else Q=1;do if(H){P=c[H+12>>2]|0;if((P|0)==(c[H+16>>2]|0))R=wd[c[(c[H>>2]|0)+36>>2]&127](H)|0;else R=c[P>>2]|0;if((R|0)!=-1)if(Q)break;else{J=46;break}else{c[e>>2]=0;J=44;break}}else J=44;while(0);if((J|0)==44?Q:0)J=46;if((J|0)==46)c[g>>2]=c[g>>2]|2;g=c[d>>2]|0;Hy(o);Hy(n);i=b;return g|0}function fG(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=i;i=i+16|0;h=g;c[h>>2]=f;f=ac(d|0)|0;d=fy(a,b,e,h)|0;if(f)ac(f|0)|0;i=g;return d|0}function gG(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+16|0;g=f;c[g>>2]=e;e=ac(b|0)|0;b=ww(a,d,g)|0;if(e)ac(e|0)|0;i=f;return b|0}function hG(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;j=i;i=i+16|0;k=j;l=c[b>>2]|0;a:do if(!l)m=0;else{n=f;o=d;p=n-o>>2;q=g+12|0;r=c[q>>2]|0;s=(r|0)>(p|0)?r-p|0:0;p=e;r=p-o|0;o=r>>2;if((r|0)>0?(od[c[(c[l>>2]|0)+48>>2]&127](l,d,o)|0)!=(o|0):0){c[b>>2]=0;m=0;break}do if((s|0)>0){Uy(k,s,h);if((od[c[(c[l>>2]|0)+48>>2]&127](l,(a[k>>0]&1)==0?k+4|0:c[k+8>>2]|0,s)|0)==(s|0)){Vy(k);break}else{c[b>>2]=0;Vy(k);m=0;break a}}while(0);s=n-p|0;o=s>>2;if((s|0)>0?(od[c[(c[l>>2]|0)+48>>2]&127](l,e,o)|0)!=(o|0):0){c[b>>2]=0;m=0;break}c[q>>2]=0;m=l}while(0);i=j;return m|0}function iG(a,e,f,g,h){a=a|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;i=c[a>>2]|0;do if(i)if((c[i+12>>2]|0)==(c[i+16>>2]|0))if((wd[c[(c[i>>2]|0)+36>>2]&127](i)|0)==-1){c[a>>2]=0;j=0;break}else{j=c[a>>2]|0;break}else j=i;else j=0;while(0);i=(j|0)==0;j=c[e>>2]|0;do if(j){if((c[j+12>>2]|0)==(c[j+16>>2]|0)?(wd[c[(c[j>>2]|0)+36>>2]&127](j)|0)==-1:0){c[e>>2]=0;k=11;break}if(i){l=j;k=13}else k=12}else k=11;while(0);if((k|0)==11)if(i)k=12;else{l=0;k=13}a:do if((k|0)==12){c[f>>2]=c[f>>2]|6;m=0}else if((k|0)==13){i=c[a>>2]|0;j=c[i+12>>2]|0;if((j|0)==(c[i+16>>2]|0))n=wd[c[(c[i>>2]|0)+36>>2]&127](i)|0;else n=d[j>>0]|0;j=n&255;if(j<<24>>24>-1?(i=g+8|0,(b[(c[i>>2]|0)+(n<<24>>24<<1)>>1]&2048)!=0):0){o=(od[c[(c[g>>2]|0)+36>>2]&127](g,j,0)|0)<<24>>24;j=c[a>>2]|0;p=j+12|0;q=c[p>>2]|0;if((q|0)==(c[j+16>>2]|0)){wd[c[(c[j>>2]|0)+40>>2]&127](j)|0;r=h;s=l;t=l;u=o}else{c[p>>2]=q+1;r=h;s=l;t=l;u=o}while(1){o=u+-48|0;q=r+-1|0;p=c[a>>2]|0;do if(p)if((c[p+12>>2]|0)==(c[p+16>>2]|0))if((wd[c[(c[p>>2]|0)+36>>2]&127](p)|0)==-1){c[a>>2]=0;v=0;break}else{v=c[a>>2]|0;break}else v=p;else v=0;while(0);p=(v|0)==0;if(t)if((c[t+12>>2]|0)==(c[t+16>>2]|0))if((wd[c[(c[t>>2]|0)+36>>2]&127](t)|0)==-1){c[e>>2]=0;w=0;x=0}else{w=s;x=s}else{w=s;x=t}else{w=s;x=0}j=c[a>>2]|0;if(!((r|0)>1&(p^(x|0)==0))){y=j;z=w;A=o;break}p=c[j+12>>2]|0;if((p|0)==(c[j+16>>2]|0))B=wd[c[(c[j>>2]|0)+36>>2]&127](j)|0;else B=d[p>>0]|0;p=B&255;if(p<<24>>24<=-1){m=o;break a}if(!(b[(c[i>>2]|0)+(B<<24>>24<<1)>>1]&2048)){m=o;break a}j=((od[c[(c[g>>2]|0)+36>>2]&127](g,p,0)|0)<<24>>24)+(o*10|0)|0;p=c[a>>2]|0;C=p+12|0;D=c[C>>2]|0;if((D|0)==(c[p+16>>2]|0)){wd[c[(c[p>>2]|0)+40>>2]&127](p)|0;r=q;s=w;t=x;u=j;continue}else{c[C>>2]=D+1;r=q;s=w;t=x;u=j;continue}}do if(y)if((c[y+12>>2]|0)==(c[y+16>>2]|0))if((wd[c[(c[y>>2]|0)+36>>2]&127](y)|0)==-1){c[a>>2]=0;E=0;break}else{E=c[a>>2]|0;break}else E=y;else E=0;while(0);i=(E|0)==0;do if(z){if((c[z+12>>2]|0)==(c[z+16>>2]|0)?(wd[c[(c[z>>2]|0)+36>>2]&127](z)|0)==-1:0){c[e>>2]=0;k=50;break}if(i){m=A;break a}}else k=50;while(0);if((k|0)==50?!i:0){m=A;break}c[f>>2]=c[f>>2]|2;m=A;break}c[f>>2]=c[f>>2]|4;m=0}while(0);return m|0}function jG(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=c[a>>2]|0;do if(g){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))i=wd[c[(c[g>>2]|0)+36>>2]&127](g)|0;else i=c[h>>2]|0;if((i|0)==-1){c[a>>2]=0;j=1;break}else{j=(c[a>>2]|0)==0;break}}else j=1;while(0);i=c[b>>2]|0;do if(i){g=c[i+12>>2]|0;if((g|0)==(c[i+16>>2]|0))k=wd[c[(c[i>>2]|0)+36>>2]&127](i)|0;else k=c[g>>2]|0;if((k|0)!=-1)if(j){l=i;m=17;break}else{m=16;break}else{c[b>>2]=0;m=14;break}}else m=14;while(0);if((m|0)==14)if(j)m=16;else{l=0;m=17}a:do if((m|0)==16){c[d>>2]=c[d>>2]|6;n=0}else if((m|0)==17){j=c[a>>2]|0;i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))o=wd[c[(c[j>>2]|0)+36>>2]&127](j)|0;else o=c[i>>2]|0;if(!(od[c[(c[e>>2]|0)+12>>2]&127](e,2048,o)|0)){c[d>>2]=c[d>>2]|4;n=0;break}i=(od[c[(c[e>>2]|0)+52>>2]&127](e,o,0)|0)<<24>>24;j=c[a>>2]|0;k=j+12|0;g=c[k>>2]|0;if((g|0)==(c[j+16>>2]|0)){wd[c[(c[j>>2]|0)+40>>2]&127](j)|0;p=f;q=l;r=l;s=i}else{c[k>>2]=g+4;p=f;q=l;r=l;s=i}while(1){i=s+-48|0;g=p+-1|0;k=c[a>>2]|0;do if(k){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))t=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else t=c[j>>2]|0;if((t|0)==-1){c[a>>2]=0;u=1;break}else{u=(c[a>>2]|0)==0;break}}else u=1;while(0);do if(r){k=c[r+12>>2]|0;if((k|0)==(c[r+16>>2]|0))v=wd[c[(c[r>>2]|0)+36>>2]&127](r)|0;else v=c[k>>2]|0;if((v|0)==-1){c[b>>2]=0;w=0;x=0;y=1;break}else{w=q;x=q;y=(q|0)==0;break}}else{w=q;x=0;y=1}while(0);k=c[a>>2]|0;if(!((p|0)>1&(u^y))){z=k;A=w;B=i;break}j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))C=wd[c[(c[k>>2]|0)+36>>2]&127](k)|0;else C=c[j>>2]|0;if(!(od[c[(c[e>>2]|0)+12>>2]&127](e,2048,C)|0)){n=i;break a}j=((od[c[(c[e>>2]|0)+52>>2]&127](e,C,0)|0)<<24>>24)+(i*10|0)|0;k=c[a>>2]|0;h=k+12|0;D=c[h>>2]|0;if((D|0)==(c[k+16>>2]|0)){wd[c[(c[k>>2]|0)+40>>2]&127](k)|0;p=g;q=w;r=x;s=j;continue}else{c[h>>2]=D+4;p=g;q=w;r=x;s=j;continue}}do if(z){j=c[z+12>>2]|0;if((j|0)==(c[z+16>>2]|0))E=wd[c[(c[z>>2]|0)+36>>2]&127](z)|0;else E=c[j>>2]|0;if((E|0)==-1){c[a>>2]=0;F=1;break}else{F=(c[a>>2]|0)==0;break}}else F=1;while(0);do if(A){j=c[A+12>>2]|0;if((j|0)==(c[A+16>>2]|0))G=wd[c[(c[A>>2]|0)+36>>2]&127](A)|0;else G=c[j>>2]|0;if((G|0)!=-1)if(F){n=B;break a}else break;else{c[b>>2]=0;m=60;break}}else m=60;while(0);if((m|0)==60?!F:0){n=B;break}c[d>>2]=c[d>>2]|2;n=B}while(0);return n|0}function kG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=184;g=c[a>>2]|0;h=g;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647?i<<1:-1;i=(c[b>>2]|0)-h|0;h=sy(f?g:0,j)|0;if(!h)Gx();if(!f){f=c[a>>2]|0;c[a>>2]=h;if(!f)k=h;else{td[c[e>>2]&255](f);k=c[a>>2]|0}}else{c[a>>2]=h;k=h}c[e>>2]=195;c[b>>2]=k+i;c[d>>2]=(c[a>>2]|0)+j;return}function lG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=184;g=c[a>>2]|0;h=g;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647?i<<1:-1;i=(c[b>>2]|0)-h>>2;h=sy(f?g:0,j)|0;if(!h)Gx();if(!f){f=c[a>>2]|0;c[a>>2]=h;if(!f)k=h;else{td[c[e>>2]&255](f);k=c[a>>2]|0}}else{c[a>>2]=h;k=h}c[e>>2]=195;c[b>>2]=k+(i<<2);c[d>>2]=(c[a>>2]|0)+(j>>>2<<2);return}function mG(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=d;g=a[b>>0]|0;if(!(g&1)){h=10;i=(g&255)>>>1;j=g}else{g=c[b>>2]|0;h=(g&-2)+-1|0;i=c[b+4>>2]|0;j=g&255}g=e-f|0;do if((e|0)!=(d|0)){if((h-i|0)>>>0<g>>>0){Ry(b,h,i+g-h|0,i,i,0,0);k=a[b>>0]|0}else k=j;if(!(k&1))l=b+1|0;else l=c[b+8>>2]|0;m=e+(i-f)|0;if((d|0)!=(e|0)){n=d;o=l+i|0;while(1){a[o>>0]=a[n>>0]|0;n=n+1|0;if((n|0)==(e|0))break;else o=o+1|0}}a[l+m>>0]=0;o=i+g|0;if(!(a[b>>0]&1)){a[b>>0]=o<<1;break}else{c[b+4>>2]=o;break}}while(0);return b|0}function nG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=a+4|0;f=(c[e>>2]|0)!=184;g=c[a>>2]|0;h=g;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647?i<<1:-1;i=(c[b>>2]|0)-h>>2;h=sy(f?g:0,j)|0;if(!h)Gx();if(!f){f=c[a>>2]|0;c[a>>2]=h;if(!f)k=h;else{td[c[e>>2]&255](f);k=c[a>>2]|0}}else{c[a>>2]=h;k=h}c[e>>2]=195;c[b>>2]=k+(i<<2);c[d>>2]=(c[a>>2]|0)+(j>>>2<<2);return}function oG(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=d;g=a[b>>0]|0;if(!(g&1)){h=1;i=(g&255)>>>1;j=g}else{g=c[b>>2]|0;h=(g&-2)+-1|0;i=c[b+4>>2]|0;j=g&255}g=e-f>>2;do if(g){if((h-i|0)>>>0<g>>>0){$y(b,h,i+g-h|0,i,i,0,0);k=a[b>>0]|0}else k=j;if(!(k&1))l=b+4|0;else l=c[b+8>>2]|0;m=i+((e-f|0)>>>2)|0;if((d|0)!=(e|0)){n=d;o=l+(i<<2)|0;while(1){c[o>>2]=c[n>>2];n=n+4|0;if((n|0)==(e|0))break;else o=o+4|0}}c[l+(m<<2)>>2]=0;o=i+g|0;if(!(a[b>>0]&1)){a[b>>0]=o<<1;break}else{c[b+4>>2]=o;break}}while(0);return b|0}function pG(b,d){b=b|0;d=d|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+128>>0]=0;if(d){kH(b,d);gH(b,d)}return}function qG(a,b){a=a|0;b=b|0;QD(a,b,ZD(82544)|0);return}function rG(a,b){a=a|0;b=b|0;QD(a,b,ZD(82584)|0);return}function sG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83696)|0);return}function tG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83688)|0);return}function uG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83760)|0);return}function vG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83768)|0);return}function wG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83824)|0);return}function xG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83832)|0);return}function yG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83840)|0);return}function zG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83848)|0);return}function AG(a,b){a=a|0;b=b|0;QD(a,b,ZD(82656)|0);return}function BG(a,b){a=a|0;b=b|0;QD(a,b,ZD(82768)|0);return}function CG(a,b){a=a|0;b=b|0;QD(a,b,ZD(82832)|0);return}function DG(a,b){a=a|0;b=b|0;QD(a,b,ZD(82896)|0);return}function EG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83216)|0);return}function FG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83280)|0);return}function GG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83344)|0);return}function HG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83408)|0);return}function IG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83448)|0);return}function JG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83488)|0);return}function KG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83528)|0);return}function LG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83568)|0);return}function MG(a,b){a=a|0;b=b|0;QD(a,b,ZD(82992)|0);return}function NG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83088)|0);return}function OG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83120)|0);return}function PG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83152)|0);return}function QG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83608)|0);return}function RG(a,b){a=a|0;b=b|0;QD(a,b,ZD(83648)|0);return}function SG(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=a+4|0;e=c[d>>2]|0;f=c[a>>2]|0;g=e-f>>2;if(g>>>0>=b>>>0){if(g>>>0>b>>>0?(h=f+(b<<2)|0,(e|0)!=(h|0)):0){f=e;while(1){e=f+-4|0;if((e|0)==(h|0)){i=e;break}else f=e}c[d>>2]=i}}else fH(a,b-g|0);return}function TG(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b>>2]|0;do if(d){e=b+4|0;f=c[e>>2]|0;if((f|0)!=(d|0)){g=f;while(1){f=g+-4|0;if((f|0)==(d|0)){h=f;break}else g=f}c[e>>2]=h}if((b+16|0)==(d|0)){a[b+128>>0]=0;break}else{Ow(d);break}}while(0);return}function UG(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=c[b>>2]|0;e=c[b+4>>2]|0;b=(c[a>>2]|0)+(e>>1)|0;if(!(e&1))f=d;else f=c[(c[b>>2]|0)+d>>2]|0;td[f&255](b);return}function VG(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;d=i;if(l&2)if((d-h|0)<3)m=1;else{c[j>>2]=h+1;a[h>>0]=-17;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=-69;h=c[j>>2]|0;c[j>>2]=h+1;a[h>>0]=-65;n=4}else n=4;a:do if((n|0)==4){h=f;l=c[g>>2]|0;if(l>>>0<f>>>0){i=l;while(1){l=b[i>>1]|0;o=l&65535;if(o>>>0>k>>>0){m=2;break a}do if((l&65535)<128){p=c[j>>2]|0;if((d-p|0)<1){m=1;break a}c[j>>2]=p+1;a[p>>0]=l}else{if((l&65535)<2048){p=c[j>>2]|0;if((d-p|0)<2){m=1;break a}c[j>>2]=p+1;a[p>>0]=o>>>6|192;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o&63|128;break}if((l&65535)<55296){p=c[j>>2]|0;if((d-p|0)<3){m=1;break a}c[j>>2]=p+1;a[p>>0]=o>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o&63|128;break}if((l&65535)>=56320){if((l&65535)<57344){m=2;break a}p=c[j>>2]|0;if((d-p|0)<3){m=1;break a}c[j>>2]=p+1;a[p>>0]=o>>>12|224;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o>>>6&63|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o&63|128;break}if((h-i|0)<4){m=1;break a}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;break a}if((d-(c[j>>2]|0)|0)<4){m=1;break a}r=o&960;if(((r<<10)+65536|o<<10&64512|q&1023)>>>0>k>>>0){m=2;break a}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r>>0]=p>>>2|240;r=c[j>>2]|0;c[j>>2]=r+1;a[r>>0]=o>>>2&15|p<<4&48|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=o<<4&48|q>>>6&15|128;p=c[j>>2]|0;c[j>>2]=p+1;a[p>>0]=q&63|128}while(0);i=(c[g>>2]|0)+2|0;c[g>>2]=i;if(i>>>0>=f>>>0){m=0;break}}}else m=0}while(0);return m|0}function WG(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;c[g>>2]=e;c[j>>2]=h;if(l&4){l=c[g>>2]|0;e=f;if((((e-l|0)>2?(a[l>>0]|0)==-17:0)?(a[l+1>>0]|0)==-69:0)?(a[l+2>>0]|0)==-65:0){c[g>>2]=l+3;m=c[j>>2]|0;n=e}else{m=h;n=e}}else{m=h;n=f}h=i;e=c[g>>2]|0;l=e>>>0<f>>>0;a:do if(l&m>>>0<i>>>0){o=e;p=m;while(1){q=a[o>>0]|0;r=q&255;if(r>>>0>k>>>0){s=2;break a}do if(q<<24>>24>-1){b[p>>1]=q&255;c[g>>2]=o+1}else{if((q&255)<194){s=2;break a}if((q&255)<224){if((n-o|0)<2){s=1;break a}t=d[o+1>>0]|0;if((t&192|0)!=128){s=2;break a}u=t&63|r<<6&1984;if(u>>>0>k>>>0){s=2;break a}b[p>>1]=u;c[g>>2]=o+2;break}if((q&255)<240){if((n-o|0)<3){s=1;break a}u=a[o+1>>0]|0;t=a[o+2>>0]|0;if((r|0)==224){if((u&-32)<<24>>24!=-96){s=2;break a}}else if((r|0)==237){if((u&-32)<<24>>24!=-128){s=2;break a}}else if((u&-64)<<24>>24!=-128){s=2;break a}v=t&255;if((v&192|0)!=128){s=2;break a}t=(u&255)<<6&4032|r<<12|v&63;if((t&65535)>>>0>k>>>0){s=2;break a}b[p>>1]=t;c[g>>2]=o+3;break}if((q&255)>=245){s=2;break a}if((n-o|0)<4){s=1;break a}t=a[o+1>>0]|0;v=a[o+2>>0]|0;u=a[o+3>>0]|0;if((r|0)==240){if((t+112&255)>=48){s=2;break a}}else if((r|0)==244){if((t&-16)<<24>>24!=-128){s=2;break a}}else if((t&-64)<<24>>24!=-128){s=2;break a}w=v&255;if((w&192|0)!=128){s=2;break a}v=u&255;if((v&192|0)!=128){s=2;break a}if((h-p|0)<4){s=1;break a}u=r&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){s=2;break a}b[p>>1]=x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296;u=p+2|0;c[j>>2]=u;b[u>>1]=y|t&960|56320;c[g>>2]=(c[g>>2]|0)+4}while(0);p=(c[j>>2]|0)+2|0;c[j>>2]=p;o=c[g>>2]|0;r=o>>>0<f>>>0;if(!(r&p>>>0<i>>>0)){z=r;A=39;break}}}else{z=l;A=39}while(0);if((A|0)==39)s=z&1;return s|0}function XG(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;h=c;if((((g&4|0)!=0?(h-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)i=(a[b+2>>0]|0)==-65?b+3|0:b;else i=b;a:do if((e|0)!=0&i>>>0<c>>>0){g=i;j=0;b:while(1){k=a[g>>0]|0;l=k&255;if(l>>>0>f>>>0){m=g;n=42;break a}do if(k<<24>>24>-1){o=g+1|0;p=j}else{if((k&255)<194){m=g;n=42;break a}if((k&255)<224){if((h-g|0)<2){m=g;n=42;break a}q=d[g+1>>0]|0;if((q&192|0)!=128){m=g;n=42;break a}if((q&63|l<<6&1984)>>>0>f>>>0){m=g;n=42;break a}o=g+2|0;p=j;break}if((k&255)<240){q=g;if((h-q|0)<3){m=g;n=42;break a}r=a[g+1>>0]|0;s=a[g+2>>0]|0;if((l|0)==237){if((r&-32)<<24>>24!=-128){t=q;n=22;break b}}else if((l|0)==224){if((r&-32)<<24>>24!=-96){u=q;n=20;break b}}else if((r&-64)<<24>>24!=-128){v=q;n=24;break b}q=s&255;if((q&192|0)!=128){m=g;n=42;break a}if(((r&255)<<6&4032|l<<12&61440|q&63)>>>0>f>>>0){m=g;n=42;break a}o=g+3|0;p=j;break}if((k&255)>=245){m=g;n=42;break a}q=g;if((e-j|0)>>>0<2|(h-q|0)<4){m=g;n=42;break a}r=a[g+1>>0]|0;s=a[g+2>>0]|0;w=a[g+3>>0]|0;if((l|0)==240){if((r+112&255)>=48){x=q;n=32;break b}}else if((l|0)==244){if((r&-16)<<24>>24!=-128){y=q;n=34;break b}}else if((r&-64)<<24>>24!=-128){z=q;n=36;break b}q=s&255;if((q&192|0)!=128){m=g;n=42;break a}s=w&255;if((s&192|0)!=128){m=g;n=42;break a}if(((r&255)<<12&258048|l<<18&1835008|q<<6&4032|s&63)>>>0>f>>>0){m=g;n=42;break a}o=g+4|0;p=j+1|0}while(0);j=p+1|0;if(!(j>>>0<e>>>0&o>>>0<c>>>0)){m=o;n=42;break a}else g=o}if((n|0)==20){A=u-b|0;break}else if((n|0)==22){A=t-b|0;break}else if((n|0)==24){A=v-b|0;break}else if((n|0)==32){A=x-b|0;break}else if((n|0)==34){A=y-b|0;break}else if((n|0)==36){A=z-b|0;break}}else{m=i;n=42}while(0);if((n|0)==42)A=m-b|0;return A|0}function YG(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;b=g;if(j&2)if((b-f|0)<3)k=1;else{c[h>>2]=f+1;a[f>>0]=-17;f=c[h>>2]|0;c[h>>2]=f+1;a[f>>0]=-69;f=c[h>>2]|0;c[h>>2]=f+1;a[f>>0]=-65;l=4}else l=4;a:do if((l|0)==4){f=c[e>>2]|0;if(f>>>0<d>>>0){j=f;while(1){f=c[j>>2]|0;if(f>>>0>i>>>0|(f&-2048|0)==55296){k=2;break a}do if(f>>>0>=128){if(f>>>0<2048){g=c[h>>2]|0;if((b-g|0)<2){k=1;break a}c[h>>2]=g+1;a[g>>0]=f>>>6|192;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=f&63|128;break}g=c[h>>2]|0;m=b-g|0;if(f>>>0<65536){if((m|0)<3){k=1;break a}c[h>>2]=g+1;a[g>>0]=f>>>12|224;n=c[h>>2]|0;c[h>>2]=n+1;a[n>>0]=f>>>6&63|128;n=c[h>>2]|0;c[h>>2]=n+1;a[n>>0]=f&63|128;break}else{if((m|0)<4){k=1;break a}c[h>>2]=g+1;a[g>>0]=f>>>18|240;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=f>>>12&63|128;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=f>>>6&63|128;g=c[h>>2]|0;c[h>>2]=g+1;a[g>>0]=f&63|128;break}}else{g=c[h>>2]|0;if((b-g|0)<1){k=1;break a}c[h>>2]=g+1;a[g>>0]=f}while(0);j=(c[e>>2]|0)+4|0;c[e>>2]=j;if(j>>>0>=d>>>0){k=0;break}}}else k=0}while(0);return k|0}function ZG(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;c[f>>2]=b;c[i>>2]=g;if(k&4){k=c[f>>2]|0;b=e;if((((b-k|0)>2?(a[k>>0]|0)==-17:0)?(a[k+1>>0]|0)==-69:0)?(a[k+2>>0]|0)==-65:0){c[f>>2]=k+3;l=c[i>>2]|0;m=b}else{l=g;m=b}}else{l=g;m=e}g=c[f>>2]|0;b=g>>>0<e>>>0;a:do if(b&l>>>0<h>>>0){k=g;n=l;while(1){o=a[k>>0]|0;p=o&255;do if(o<<24>>24>-1){if(p>>>0>j>>>0){q=2;break a}c[n>>2]=p;c[f>>2]=k+1}else{if((o&255)<194){q=2;break a}if((o&255)<224){if((m-k|0)<2){q=1;break a}r=d[k+1>>0]|0;if((r&192|0)!=128){q=2;break a}s=r&63|p<<6&1984;if(s>>>0>j>>>0){q=2;break a}c[n>>2]=s;c[f>>2]=k+2;break}if((o&255)<240){if((m-k|0)<3){q=1;break a}s=a[k+1>>0]|0;r=a[k+2>>0]|0;if((p|0)==224){if((s&-32)<<24>>24!=-96){q=2;break a}}else if((p|0)==237){if((s&-32)<<24>>24!=-128){q=2;break a}}else if((s&-64)<<24>>24!=-128){q=2;break a}t=r&255;if((t&192|0)!=128){q=2;break a}r=(s&255)<<6&4032|p<<12&61440|t&63;if(r>>>0>j>>>0){q=2;break a}c[n>>2]=r;c[f>>2]=k+3;break}if((o&255)>=245){q=2;break a}if((m-k|0)<4){q=1;break a}r=a[k+1>>0]|0;t=a[k+2>>0]|0;s=a[k+3>>0]|0;if((p|0)==244){if((r&-16)<<24>>24!=-128){q=2;break a}}else if((p|0)==240){if((r+112&255)>=48){q=2;break a}}else if((r&-64)<<24>>24!=-128){q=2;break a}u=t&255;if((u&192|0)!=128){q=2;break a}t=s&255;if((t&192|0)!=128){q=2;break a}s=(r&255)<<12&258048|p<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){q=2;break a}c[n>>2]=s;c[f>>2]=k+4}while(0);n=(c[i>>2]|0)+4|0;c[i>>2]=n;k=c[f>>2]|0;p=k>>>0<e>>>0;if(!(p&n>>>0<h>>>0)){v=p;w=38;break}}}else{v=b;w=38}while(0);if((w|0)==38)q=v&1;return q|0}function _G(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;h=c;if((((g&4|0)!=0?(h-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)i=(a[b+2>>0]|0)==-65?b+3|0:b;else i=b;a:do if((e|0)!=0&i>>>0<c>>>0){g=i;j=0;b:while(1){k=a[g>>0]|0;l=k&255;do if(k<<24>>24>-1){if(l>>>0>f>>>0){m=g;n=42;break a}o=g+1|0}else{if((k&255)<194){m=g;n=42;break a}if((k&255)<224){if((h-g|0)<2){m=g;n=42;break a}p=d[g+1>>0]|0;if((p&192|0)!=128){m=g;n=42;break a}if((p&63|l<<6&1984)>>>0>f>>>0){m=g;n=42;break a}o=g+2|0;break}if((k&255)<240){p=g;if((h-p|0)<3){m=g;n=42;break a}q=a[g+1>>0]|0;r=a[g+2>>0]|0;if((l|0)==237){if((q&-32)<<24>>24!=-128){s=p;n=22;break b}}else if((l|0)==224){if((q&-32)<<24>>24!=-96){t=p;n=20;break b}}else if((q&-64)<<24>>24!=-128){u=p;n=24;break b}p=r&255;if((p&192|0)!=128){m=g;n=42;break a}if(((q&255)<<6&4032|l<<12&61440|p&63)>>>0>f>>>0){m=g;n=42;break a}o=g+3|0;break}if((k&255)>=245){m=g;n=42;break a}p=g;if((h-p|0)<4){m=g;n=42;break a}q=a[g+1>>0]|0;r=a[g+2>>0]|0;v=a[g+3>>0]|0;if((l|0)==240){if((q+112&255)>=48){w=p;n=32;break b}}else if((l|0)==244){if((q&-16)<<24>>24!=-128){x=p;n=34;break b}}else if((q&-64)<<24>>24!=-128){y=p;n=36;break b}p=r&255;if((p&192|0)!=128){m=g;n=42;break a}r=v&255;if((r&192|0)!=128){m=g;n=42;break a}if(((q&255)<<12&258048|l<<18&1835008|p<<6&4032|r&63)>>>0>f>>>0){m=g;n=42;break a}o=g+4|0}while(0);j=j+1|0;if(!(j>>>0<e>>>0&o>>>0<c>>>0)){m=o;n=42;break a}else g=o}if((n|0)==20){z=t-b|0;break}else if((n|0)==22){z=s-b|0;break}else if((n|0)==24){z=u-b|0;break}else if((n|0)==32){z=w-b|0;break}else if((n|0)==34){z=x-b|0;break}else if((n|0)==36){z=y-b|0;break}}else{m=i;n=42}while(0);if((n|0)==42)z=m-b|0;return z|0}function $G(a){a=a|0;Hy(87796);Hy(87784);Hy(87772);Hy(87760);Hy(87748);Hy(87736);Hy(87724);Hy(87712);Hy(87700);Hy(87688);Hy(87676);Hy(87664);Hy(87652);Hy(87640);return}function aH(a){a=a|0;Vy(88124);Vy(88112);Vy(88100);Vy(88088);Vy(88076);Vy(88064);Vy(88052);Vy(88040);Vy(88028);Vy(88016);Vy(88004);Vy(87992);Vy(87980);Vy(87968);return}function bH(a){a=a|0;Hy(88796);Hy(88784);Hy(88772);Hy(88760);Hy(88748);Hy(88736);Hy(88724);Hy(88712);Hy(88700);Hy(88688);Hy(88676);Hy(88664);Hy(88652);Hy(88640);Hy(88628);Hy(88616);Hy(88604);Hy(88592);Hy(88580);Hy(88568);Hy(88556);Hy(88544);Hy(88532);Hy(88520);return}function cH(a){a=a|0;Vy(89324);Vy(89312);Vy(89300);Vy(89288);Vy(89276);Vy(89264);Vy(89252);Vy(89240);Vy(89228);Vy(89216);Vy(89204);Vy(89192);Vy(89180);Vy(89168);Vy(89156);Vy(89144);Vy(89132);Vy(89120);Vy(89108);Vy(89096);Vy(89084);Vy(89072);Vy(89060);Vy(89048);return}function dH(a){a=a|0;Hy(90180);Hy(90168);Hy(90156);Hy(90144);Hy(90132);Hy(90120);Hy(90108);Hy(90096);Hy(90084);Hy(90072);Hy(90060);Hy(90048);Hy(90036);Hy(90024);Hy(90012);Hy(9e4);Hy(89988);Hy(89976);Hy(89964);Hy(89952);Hy(89940);Hy(89928);Hy(89916);Hy(89904);return}function eH(a){a=a|0;Vy(90508);Vy(90496);Vy(90484);Vy(90472);Vy(90460);Vy(90448);Vy(90436);Vy(90424);Vy(90412);Vy(90400);Vy(90388);Vy(90376);Vy(90364);Vy(90352);Vy(90340);Vy(90328);Vy(90316);Vy(90304);Vy(90292);Vy(90280);Vy(90268);Vy(90256);Vy(90244);Vy(90232);return}function fH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+32|0;e=d;f=c[a+8>>2]|0;g=c[a+4>>2]|0;if(f-g>>2>>>0<b>>>0){h=c[a>>2]|0;j=g-h>>2;g=j+b|0;if(g>>>0>1073741823)Kw(a);k=f-h|0;if(k>>2>>>0<536870911){h=k>>1;l=h>>>0<g>>>0?g:h}else l=1073741823;hH(e,l,j,a+16|0);j=e+8|0;l=c[j>>2]|0;BH(l|0,0,b<<2|0)|0;c[j>>2]=l+(b<<2);iH(a,e);jH(e)}else gH(a,b);i=d;return}function gH(a,b){a=a|0;b=b|0;var d=0;d=a+4|0;a=b;b=c[d>>2]|0;do{c[b>>2]=0;b=(c[d>>2]|0)+4|0;c[d>>2]=b;a=a+-1|0}while((a|0)!=0);return}function hH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;c[b+12>>2]=0;c[b+16>>2]=f;do if(d){g=f+112|0;if(d>>>0<29&(a[g>>0]|0)==0){a[g>>0]=1;h=f;break}else{h=Mw(d<<2)|0;break}}else h=0;while(0);c[b>>2]=h;f=h+(e<<2)|0;c[b+8>>2]=f;c[b+4>>2]=f;c[b+12>>2]=h+(d<<2);return}function iH(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[a>>2]|0;e=a+4|0;f=b+4|0;g=(c[e>>2]|0)-d|0;h=(c[f>>2]|0)+(0-(g>>2)<<2)|0;c[f>>2]=h;zH(h|0,d|0,g|0)|0;g=c[a>>2]|0;c[a>>2]=c[f>>2];c[f>>2]=g;g=b+8|0;d=c[e>>2]|0;c[e>>2]=c[g>>2];c[g>>2]=d;d=a+8|0;a=b+12|0;g=c[d>>2]|0;c[d>>2]=c[a>>2];c[a>>2]=g;c[b>>2]=c[f>>2];return}function jH(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=c[b+4>>2]|0;e=b+8|0;f=c[e>>2]|0;if((f|0)!=(d|0)){g=f;while(1){f=g+-4|0;if((f|0)==(d|0)){h=f;break}else g=f}c[e>>2]=h}h=c[b>>2]|0;do if(h){e=c[b+16>>2]|0;if((e|0)==(h|0)){a[e+112>>0]=0;break}else{Ow(h);break}}while(0);return}function kH(b,d){b=b|0;d=d|0;var e=0,f=0;if(d>>>0>1073741823)Kw(b);e=b+128|0;if(d>>>0<29&(a[e>>0]|0)==0){a[e>>0]=1;f=b+16|0}else f=Mw(d<<2)|0;c[b+4>>2]=f;c[b>>2]=f;c[b+8>>2]=f+(d<<2);return}function lH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0,k=0,l=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=_c()|0;h=c[g>>2]|0;c[g>>2]=0;j=+gy(a,f,pA()|0);k=c[g>>2]|0;if(!k)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;l=0.0;break}if((k|0)==34){c[d>>2]=4;l=j}else l=j}else{c[d>>2]=4;l=0.0}while(0);i=e;return +l}function mH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0,k=0,l=0.0;e=i;i=i+16|0;f=e;do if((a|0)!=(b|0)){g=_c()|0;h=c[g>>2]|0;c[g>>2]=0;j=+gy(a,f,pA()|0);k=c[g>>2]|0;if(!k)c[g>>2]=h;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;l=0.0;break}if((k|0)==34){c[d>>2]=4;l=j}else l=j}else{c[d>>2]=4;l=0.0}while(0);i=e;return +l}function nH(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0.0,h=0,j=0,k=0.0,l=0;e=i;i=i+16|0;f=e;do if((a|0)==(b|0)){c[d>>2]=4;g=0.0}else{h=_c()|0;j=c[h>>2]|0;c[h>>2]=0;k=+gy(a,f,pA()|0);l=c[h>>2]|0;if(!l)c[h>>2]=j;if((c[f>>2]|0)!=(b|0)){c[d>>2]=4;g=0.0;break}if((l|0)==34)c[d>>2]=4;g=k}while(0);i=e;return +g}function oH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;k=0;break}l=_c()|0;m=c[l>>2]|0;c[l>>2]=0;n=iw(b,h,f,pA()|0)|0;o=c[l>>2]|0;if(!o)c[l>>2]=m;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)==34){c[e>>2]=4;j=-1;k=-1}else{j=E;k=n}}else{c[e>>2]=4;j=0;k=0}while(0);E=j;i=g;return k|0}function pH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;break}k=_c()|0;l=c[k>>2]|0;c[k>>2]=0;m=iw(b,h,f,pA()|0)|0;n=E;o=c[k>>2]|0;if(!o)c[k>>2]=l;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;break}if(n>>>0>0|(n|0)==0&m>>>0>4294967295|(o|0)==34){c[e>>2]=4;j=-1;break}else{j=m;break}}else{c[e>>2]=4;j=0}while(0);i=g;return j|0}function qH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;break}k=_c()|0;l=c[k>>2]|0;c[k>>2]=0;m=iw(b,h,f,pA()|0)|0;n=E;o=c[k>>2]|0;if(!o)c[k>>2]=l;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;break}if(n>>>0>0|(n|0)==0&m>>>0>4294967295|(o|0)==34){c[e>>2]=4;j=-1;break}else{j=m;break}}else{c[e>>2]=4;j=0}while(0);i=g;return j|0}function rH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+16|0;h=g;do if((b|0)!=(d|0)){if((a[b>>0]|0)==45){c[e>>2]=4;j=0;break}k=_c()|0;l=c[k>>2]|0;c[k>>2]=0;m=iw(b,h,f,pA()|0)|0;n=E;o=c[k>>2]|0;if(!o)c[k>>2]=l;if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;break}if(n>>>0>0|(n|0)==0&m>>>0>65535|(o|0)==34){c[e>>2]=4;j=-1;break}else{j=m&65535;break}}else{c[e>>2]=4;j=0}while(0);i=g;return j|0}function sH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+16|0;g=f;do if((a|0)!=(b|0)){h=_c()|0;j=c[h>>2]|0;c[h>>2]=0;k=jw(a,g,e,pA()|0)|0;l=E;m=c[h>>2]|0;if(!m)c[h>>2]=j;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;n=0;o=0;break}if((m|0)==34){c[d>>2]=4;m=(l|0)>0|(l|0)==0&k>>>0>0;E=m?2147483647:-2147483648;i=f;return (m?-1:0)|0}else{n=l;o=k}}else{c[d>>2]=4;n=0;o=0}while(0);E=n;i=f;return o|0}function tH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;f=i;i=i+16|0;g=f;a:do if((a|0)==(b|0)){c[d>>2]=4;h=0}else{j=_c()|0;k=c[j>>2]|0;c[j>>2]=0;l=jw(a,g,e,pA()|0)|0;m=E;n=c[j>>2]|0;if(!n)c[j>>2]=k;if((c[g>>2]|0)!=(b|0)){c[d>>2]=4;h=0;break}do if((n|0)==34){c[d>>2]=4;if((m|0)>0|(m|0)==0&l>>>0>0){h=2147483647;break a}}else{if((m|0)<-1|(m|0)==-1&l>>>0<2147483648){c[d>>2]=4;break}if((m|0)>0|(m|0)==0&l>>>0>2147483647){c[d>>2]=4;h=2147483647;break a}else{h=l;break a}}while(0);h=-2147483648}while(0);i=f;return h|0}function uH(){}function vH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return (E=e,a-c>>>0|0)|0}function wH(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=(b|0)<0?-1:0;return b>>c-32|0}function xH(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}E=0;return b>>>c-32|0}function yH(b){b=b|0;var c=0;c=b;while(a[c>>0]|0)c=c+1|0;return c-b|0}function zH(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((e|0)>=4096)return Oa(b|0,d|0,e|0)|0;f=b|0;if((b&3)==(d&3)){while(b&3){if(!e)return f|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function AH(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0}b=e}else zH(b,c,d)|0;return b|0}function BH(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b+e|0;if((e|0)>=20){d=d&255;g=b&3;h=d|d<<8|d<<16|d<<24;i=f&~3;if(g){g=b+4-g|0;while((b|0)<(g|0)){a[b>>0]=d;b=b+1|0}}while((b|0)<(i|0)){c[b>>2]=h;b=b+4|0}}while((b|0)<(f|0)){a[b>>0]=d;b=b+1|0}return b-e|0}function CH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return (E=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function DH(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){E=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}E=a<<c-32;return 0}function EH(b){b=b|0;var c=0;c=a[m+(b&255)>>0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)>>0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)>>0]|0;if((c|0)<8)return c+16|0;return (a[m+(b>>>24)>>0]|0)+24|0}function FH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=aa(d,c)|0;f=a>>>16;a=(e>>>16)+(aa(d,f)|0)|0;d=b>>>16;b=aa(d,c)|0;return (E=(a>>>16)+(aa(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function GH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=vH(e^a,f^b,e,f)|0;b=E;a=g^e;e=h^f;return vH((LH(i,b,vH(g^c,h^d,g,h)|0,E,0)|0)^a,E^e,a,e)|0}function HH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=vH(h^a,j^b,h,j)|0;b=E;LH(m,b,vH(k^d,l^e,k,l)|0,E,g)|0;l=vH(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=E;i=f;return (E=j,l)|0}function IH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=FH(e,a)|0;f=E;return (E=(aa(b,a)|0)+(aa(d,e)|0)+f|f&0,c|0|0)|0}function JH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return LH(a,b,c,d,0)|0}function KH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;LH(a,b,d,e,g)|0;i=f;return (E=c[g+4>>2]|0,c[g>>2]|0)|0}function LH(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,F=0,G=0,H=0;g=a;h=b;i=h;j=d;k=e;l=k;if(!i){m=(f|0)!=0;if(!l){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return (E=n,o)|0}else{if(!m){n=0;o=0;return (E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return (E=n,o)|0}}m=(l|0)==0;do if(j){if(!m){p=(ca(l|0)|0)-(ca(i|0)|0)|0;if(p>>>0<=31){q=p+1|0;r=31-p|0;s=p-31>>31;t=q;u=g>>>(q>>>0)&s|i<<r;v=i>>>(q>>>0)&s;w=0;x=g<<r;break}if(!f){n=0;o=0;return (E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (E=n,o)|0}r=j-1|0;if(r&j){s=(ca(j|0)|0)+33-(ca(i|0)|0)|0;q=64-s|0;p=32-s|0;y=p>>31;z=s-32|0;A=z>>31;t=s;u=p-1>>31&i>>>(z>>>0)|(i<<p|g>>>(s>>>0))&A;v=A&i>>>(s>>>0);w=g<<q&y;x=(i<<q|g>>>(z>>>0))&y|g<<p&s-33>>31;break}if(f){c[f>>2]=r&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return (E=n,o)|0}else{r=EH(j|0)|0;n=i>>>(r>>>0)|0;o=i<<32-r|g>>>(r>>>0)|0;return (E=n,o)|0}}else{if(m){if(f){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return (E=n,o)|0}if(!g){if(f){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return (E=n,o)|0}r=l-1|0;if(!(r&l)){if(f){c[f>>2]=a|0;c[f+4>>2]=r&i|b&0}n=0;o=i>>>((EH(l|0)|0)>>>0);return (E=n,o)|0}r=(ca(l|0)|0)-(ca(i|0)|0)|0;if(r>>>0<=30){s=r+1|0;p=31-r|0;t=s;u=i<<p|g>>>(s>>>0);v=i>>>(s>>>0);w=0;x=g<<p;break}if(!f){n=0;o=0;return (E=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return (E=n,o)|0}while(0);if(!t){B=x;C=w;D=v;F=u;G=0;H=0}else{b=d|0|0;d=k|e&0;e=CH(b|0,d|0,-1,-1)|0;k=E;h=x;x=w;w=v;v=u;u=t;t=0;do{a=h;h=x>>>31|h<<1;x=t|x<<1;g=v<<1|a>>>31|0;a=v>>>31|w<<1|0;vH(e,k,g,a)|0;i=E;l=i>>31|((i|0)<0?-1:0)<<1;t=l&1;v=vH(g,a,l&b,(((i|0)<0?-1:0)>>31|((i|0)<0?-1:0)<<1)&d)|0;w=E;u=u-1|0}while((u|0)!=0);B=h;C=x;D=w;F=v;G=0;H=t}t=C;C=0;if(f){c[f>>2]=F;c[f+4>>2]=D}n=(t|0)>>>31|(B|C)<<1|(C<<1|t>>>31)&0|G;o=(t<<1|0>>>31)&-2|H;return (E=n,o)|0}function MH(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return nd[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function NH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return od[a&127](b|0,c|0,d|0)|0}function OH(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;pd[a&15](b|0,c|0,d|0,e|0,f|0,g|0)}function PH(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;qd[a&7](b|0,c|0,d|0,e|0,f|0)}function QH(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;return rd[a&3](b|0,c|0,d|0,e|0,f|0,+g)|0}function RH(a){a=a|0;return sd[a&31]()|0}function SH(a,b){a=a|0;b=b|0;td[a&255](b|0)}function TH(a,b,c){a=a|0;b=b|0;c=c|0;ud[a&127](b|0,c|0)}function UH(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return vd[a&63](b|0,c|0,d|0,e|0,f|0,g|0)|0}function VH(a,b){a=a|0;b=b|0;return wd[a&127](b|0)|0}function WH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;xd[a&63](b|0,c|0,d|0)}function XH(a){a=a|0;yd[a&3]()}function YH(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return zd[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function ZH(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Ad[a&31](b|0,c|0,d|0,e|0)|0}function _H(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Bd[a&31](b|0,c|0,d|0,e|0)}function $H(a,b,c){a=a|0;b=b|0;c=c|0;return Cd[a&63](b|0,c|0)|0}function aI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;return Dd[a&7](b|0,c|0,d|0,e|0,+f)|0}function bI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Ed[a&31](b|0,c|0,d|0,e|0,f|0)|0}function cI(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;da(0);return 0}function dI(a,b,c){a=a|0;b=b|0;c=c|0;da(1);return 0}function eI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;da(2)}function fI(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;da(3)}function gI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;da(4);return 0}function hI(){da(5);return 0}function iI(a){a=a|0;da(6)}function jI(a,b){a=a|0;b=b|0;da(7)}function kI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;da(8);return 0}function lI(a){a=a|0;da(9);return 0}function mI(a,b,c){a=a|0;b=b|0;c=c|0;da(10)}function nI(){da(11)}function oI(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;da(12);return 0}function pI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;da(13);return 0}function qI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;da(14)}function rI(a,b){a=a|0;b=b|0;da(15);return 0}function sI(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;da(16);return 0}function tI(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;da(17);return 0}\n\n// EMSCRIPTEN_END_FUNCS\nvar nd=[cI,iC,mC,gD,jD,oD,qD,cI];var od=[dI,nz,sz,wz,zi,Gi,Ki,Oi,Vi,Zi,oj,Oj,zk,Uk,yl,xn,Ln,pp,qp,tp,up,xp,yp,Bp,Ep,Jp,Kp,lx,mx,nx,tx,oy,Xz,aA,GD,LD,tE,vE,yE,dE,iE,kE,nE,je,me,ik,qe,te,ye,df,gf,nf,zf,Kf,Xf,jg,Zk,Eg,Fg,Zq,Sp,fp,hp,jp,lp,mp,$u,Hw,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI,dI];var pd=[eI,ch,Dx,Cx,Bx,oz,HD,MD,Kh,xf,eI,eI,eI,eI,eI,eI];var qd=[fI,Ax,zx,wx,Ve,Tl,Vl,fI];var rd=[gI,uD,AD,gI];var sd=[hI,rp,zp,Cp,Fp,Lp,Hr,Or,Wr,es,Os,Ys,dt,_l,$l,am,bm,ge,Je,Qe,af,sf,Hf,Uf,wg,hI,hI,hI,hI,hI,hI,hI];var td=[iI,vy,ng,og,qg,zz,Bz,Az,Cz,Ug,hh,ih,jh,ah,bh,Iz,Kz,Jz,Lz,Wg,Zg,_g,$g,Hh,Ih,Ph,Qh,xi,yi,Di,Ei,Ii,Ji,Mi,Ni,Ti,Ui,Xi,Yi,Yw,aj,bj,cj,zj,Aj,tk,uk,Hk,Ik,_k,$k,gl,hl,Ll,Ml,em,fm,Zm,_m,Hn,In,sp,Ap,Dp,Gp,Mp,Er,Ir,Lr,Pr,Sr,Xr,_r,as,fs,is,Ps,Zs,et,Rw,Sw,Zw,$w,ax,cx,fx,dx,ex,gx,hx,ix,jx,kx,jz,kz,ez,Qz,Sz,Uz,aE,Yz,Zz,bA,cA,qA,rA,KA,LA,ZA,_A,kB,lB,JB,KB,fC,hC,kC,lC,oC,pC,zC,AC,KC,LC,VC,WC,eD,fD,mD,nD,sD,tD,yD,zD,ED,FD,JD,KD,RD,SD,qE,rE,LF,IE,iF,jF,kF,lF,Tz,$D,cE,AE,QE,YE,eF,fF,Rd,cm,_d,ee,ve,Wh,He,Oe,_e,nj,kf,Pg,qf,Nl,Ff,uj,vj,wj,xj,Fj,Kj,Qf,Sf,Pk,Qk,gg,ug,Kx,hD,bE,UG,$G,aH,bH,cH,dH,eH,Hy,Vy,qy,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI,iI];var ud=[jI,mz,Bi,Hi,Li,Pi,Wi,_i,pj,Pj,Ak,Vk,zl,yn,Mn,Gr,Jr,Kr,Nr,Qr,Rr,Ur,Yr,Zr,cs,gs,hs,Qs,_s,sC,tC,uC,vC,xC,yC,DC,EC,FC,GC,IC,JC,OC,PC,QC,RC,TC,UC,ZC,_C,$C,aD,cD,dD,ID,ND,qF,sF,uF,rF,tF,vF,Xd,be,ok,pk,Uj,Vj,Wj,Xj,Yj,Zj,_j,$j,ak,bk,ck,dk,ek,fk,gk,hk,Sh,Uh,Vh,ze,Xh,Yh,Be,gj,jj,mj,hf,Kg,Mg,Lg,Ng,of,vf,Ql,Cj,Lf,Gj,Hj,Jj,Lj,Mj,Ig,Jg,Jk,Lk,Nk,dg,xg,jI,jI,jI,jI,jI,jI,jI,jI,jI,jI,jI,jI,jI,jI,jI];var vd=[kI,op,wp,Ip,Js,Ts,bt,dA,eA,fA,gA,hA,iA,jA,kA,lA,mA,nA,sA,tA,uA,vA,wA,xA,yA,zA,AA,BA,CA,RA,TA,cB,eB,nB,oB,pB,rB,tB,MB,NB,OB,QB,SB,xD,DD,Le,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI,kI];var wd=[lI,qz,rz,eh,uz,_w,Hs,Is,Rs,Ss,$s,at,Tw,tz,mB,xF,zF,BF,HF,JF,DF,FF,LB,yF,AF,CF,IF,KF,EF,GF,qC,rC,wC,BC,CC,HC,MC,NC,SC,XC,YC,bD,ME,NE,PE,mF,oF,nF,pF,EE,FE,HE,UE,VE,XE,aF,bF,dF,Qd,Sd,Td,Vd,Zd,ae,de,fe,ie,kk,ue,Zh,Ee,Fe,Ge,Ie,Ne,Pe,Se,Ze,$e,dj,jf,pf,rf,uf,Ol,Rl,Ef,Gf,If,Pf,Rf,Tf,Wf,Kk,Mk,Ok,fg,ig,Yk,tg,vg,Bg,Nq,Oq,Pq,Qq,Rq,Sq,Tq,Uq,Vq,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI,lI];var xd=[mI,km,Fr,iv,Mr,Xt,Tr,Vr,$r,bs,ds,js,Yd,Sj,mk,Rh,xe,ej,ef,hj,ij,kj,lj,Og,Sl,Pl,Af,Ij,Mf,$f,bg,Xk,yg,zg,ep,gp,ip,kp,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI,mI];var yd=[nI,Hx,Ix,nI];var zd=[oI,Ks,Ls,Ms,Us,Vs,Ws,ct,vB,UB,JE,KE,BE,CE,RE,SE,ZE,_E,Ds,Cs,oI,oI,oI,oI,oI,oI,oI,oI,oI,oI,oI,oI];var Ad=[pI,np,vp,Hp,xE,eE,fE,gE,mE,ne,pe,se,Ke,Me,Ue,Xe,Cf,Of,eg,lg,Gg,$q,ar,br,pI,pI,pI,pI,pI,pI,pI,pI];var Bd=[qI,dh,px,qx,sx,pz,Wz,$z,Tj,lk,we,$h,Jh,Mh,Te,cf,ff,wf,Ul,Nj,Rk,Ag,qI,qI,qI,qI,qI,qI,qI,qI,qI,qI];var Cd=[rI,pg,fh,gh,Ns,Xs,vz,xz,sE,uE,wE,hE,jE,lE,Wd,$d,ce,he,ke,le,oe,jk,re,Th,Ae,Ce,De,Re,bf,fj,lf,mf,tf,yf,Bf,Jf,Nf,Vf,Yf,Zf,_f,ag,cg,hg,kg,Cg,Dg,lh,Om,rI,rI,rI,rI,rI,rI,rI,rI,rI,rI,rI,rI,rI,rI,rI];var Dd=[sI,UA,XA,fB,hB,sI,sI,sI];var Ed=[tI,ov,pv,Vz,_z,MA,NA,SA,YA,$A,aB,dB,iB,zE,LE,OE,oE,DE,GE,TE,WE,$E,cF,We,Ye,Df,tI,tI,tI,tI,tI,tI];return{___cxa_can_catch:Ex,_free:qy,_memset:BH,___cxa_is_pointer_type:Fx,_i64Add:CH,_memmove:AH,_bitshift64Ashr:wH,_i64Subtract:vH,_strlen:yH,_malloc:py,_memcpy:zH,___getTypeName:fw,_bitshift64Lshr:xH,_bitshift64Shl:DH,__GLOBAL__sub_I_wrapper_cxx:mg,__GLOBAL__sub_I_bind_cpp:hw,runPostSets:uH,stackAlloc:Fd,stackSave:Gd,stackRestore:Hd,establishStackSpace:Id,setThrew:Jd,setTempRet0:Md,getTempRet0:Nd,dynCall_iiiiiiii:MH,dynCall_iiii:NH,dynCall_viiiiii:OH,dynCall_viiiii:PH,dynCall_iiiiiid:QH,dynCall_i:RH,dynCall_vi:SH,dynCall_vii:TH,dynCall_iiiiiii:UH,dynCall_ii:VH,dynCall_viii:WH,dynCall_v:XH,dynCall_iiiiiiiii:YH,dynCall_iiiii:ZH,dynCall_viiii:_H,dynCall_iii:$H,dynCall_iiiiid:aI,dynCall_iiiiii:bI}})\n\n\n// EMSCRIPTEN_END_ASM\n(Module.asmGlobalArg,Module.asmLibraryArg,buffer);var ___cxa_can_catch=Module[\"___cxa_can_catch\"]=asm[\"___cxa_can_catch\"];var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=asm[\"__GLOBAL__sub_I_bind_cpp\"];var _free=Module[\"_free\"]=asm[\"_free\"];var runPostSets=Module[\"runPostSets\"]=asm[\"runPostSets\"];var ___cxa_is_pointer_type=Module[\"___cxa_is_pointer_type\"]=asm[\"___cxa_is_pointer_type\"];var _i64Add=Module[\"_i64Add\"]=asm[\"_i64Add\"];var _memmove=Module[\"_memmove\"]=asm[\"_memmove\"];var _bitshift64Ashr=Module[\"_bitshift64Ashr\"]=asm[\"_bitshift64Ashr\"];var _memset=Module[\"_memset\"]=asm[\"_memset\"];var _malloc=Module[\"_malloc\"]=asm[\"_malloc\"];var _memcpy=Module[\"_memcpy\"]=asm[\"_memcpy\"];var _strlen=Module[\"_strlen\"]=asm[\"_strlen\"];var _bitshift64Lshr=Module[\"_bitshift64Lshr\"]=asm[\"_bitshift64Lshr\"];var ___getTypeName=Module[\"___getTypeName\"]=asm[\"___getTypeName\"];var __GLOBAL__sub_I_wrapper_cxx=Module[\"__GLOBAL__sub_I_wrapper_cxx\"]=asm[\"__GLOBAL__sub_I_wrapper_cxx\"];var _i64Subtract=Module[\"_i64Subtract\"]=asm[\"_i64Subtract\"];var _bitshift64Shl=Module[\"_bitshift64Shl\"]=asm[\"_bitshift64Shl\"];var dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=asm[\"dynCall_iiiiiiii\"];var dynCall_iiii=Module[\"dynCall_iiii\"]=asm[\"dynCall_iiii\"];var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=asm[\"dynCall_viiiiii\"];var dynCall_viiiii=Module[\"dynCall_viiiii\"]=asm[\"dynCall_viiiii\"];var dynCall_iiiiiid=Module[\"dynCall_iiiiiid\"]=asm[\"dynCall_iiiiiid\"];var dynCall_i=Module[\"dynCall_i\"]=asm[\"dynCall_i\"];var dynCall_vi=Module[\"dynCall_vi\"]=asm[\"dynCall_vi\"];var dynCall_vii=Module[\"dynCall_vii\"]=asm[\"dynCall_vii\"];var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=asm[\"dynCall_iiiiiii\"];var dynCall_ii=Module[\"dynCall_ii\"]=asm[\"dynCall_ii\"];var dynCall_viii=Module[\"dynCall_viii\"]=asm[\"dynCall_viii\"];var dynCall_v=Module[\"dynCall_v\"]=asm[\"dynCall_v\"];var dynCall_iiiiiiiii=Module[\"dynCall_iiiiiiiii\"]=asm[\"dynCall_iiiiiiiii\"];var dynCall_iiiii=Module[\"dynCall_iiiii\"]=asm[\"dynCall_iiiii\"];var dynCall_viiii=Module[\"dynCall_viiii\"]=asm[\"dynCall_viiii\"];var dynCall_iii=Module[\"dynCall_iii\"]=asm[\"dynCall_iii\"];var dynCall_iiiiid=Module[\"dynCall_iiiiid\"]=asm[\"dynCall_iiiiid\"];var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=asm[\"dynCall_iiiiii\"];Runtime.stackAlloc=asm[\"stackAlloc\"];Runtime.stackSave=asm[\"stackSave\"];Runtime.stackRestore=asm[\"stackRestore\"];Runtime.establishStackSpace=asm[\"establishStackSpace\"];Runtime.setTempRet0=asm[\"setTempRet0\"];Runtime.getTempRet0=asm[\"getTempRet0\"];var i64Math=(function(){var goog={math:{}};goog.math.Long=(function(low,high){this.low_=low|0;this.high_=high|0});goog.math.Long.IntCache_={};goog.math.Long.fromInt=(function(value){if(-128<=value&&value<128){var cachedObj=goog.math.Long.IntCache_[value];if(cachedObj){return cachedObj}}var obj=new goog.math.Long(value|0,value<0?-1:0);if(-128<=value&&value<128){goog.math.Long.IntCache_[value]=obj}return obj});goog.math.Long.fromNumber=(function(value){if(isNaN(value)||!isFinite(value)){return goog.math.Long.ZERO}else if(value<=-goog.math.Long.TWO_PWR_63_DBL_){return goog.math.Long.MIN_VALUE}else if(value+1>=goog.math.Long.TWO_PWR_63_DBL_){return goog.math.Long.MAX_VALUE}else if(value<0){return goog.math.Long.fromNumber(-value).negate()}else{return new goog.math.Long(value%goog.math.Long.TWO_PWR_32_DBL_|0,value/goog.math.Long.TWO_PWR_32_DBL_|0)}});goog.math.Long.fromBits=(function(lowBits,highBits){return new goog.math.Long(lowBits,highBits)});goog.math.Long.fromString=(function(str,opt_radix){if(str.length==0){throw Error(\"number format error: empty string\")}var radix=opt_radix||10;if(radix<2||36<radix){throw Error(\"radix out of range: \"+radix)}if(str.charAt(0)==\"-\"){return goog.math.Long.fromString(str.substring(1),radix).negate()}else if(str.indexOf(\"-\")>=0){throw Error('number format error: interior \"-\" character: '+str)}var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,8));var result=goog.math.Long.ZERO;for(var i=0;i<str.length;i+=8){var size=Math.min(8,str.length-i);var value=parseInt(str.substring(i,i+size),radix);if(size<8){var power=goog.math.Long.fromNumber(Math.pow(radix,size));result=result.multiply(power).add(goog.math.Long.fromNumber(value))}else{result=result.multiply(radixToPower);result=result.add(goog.math.Long.fromNumber(value))}}return result});goog.math.Long.TWO_PWR_16_DBL_=1<<16;goog.math.Long.TWO_PWR_24_DBL_=1<<24;goog.math.Long.TWO_PWR_32_DBL_=goog.math.Long.TWO_PWR_16_DBL_*goog.math.Long.TWO_PWR_16_DBL_;goog.math.Long.TWO_PWR_31_DBL_=goog.math.Long.TWO_PWR_32_DBL_/2;goog.math.Long.TWO_PWR_48_DBL_=goog.math.Long.TWO_PWR_32_DBL_*goog.math.Long.TWO_PWR_16_DBL_;goog.math.Long.TWO_PWR_64_DBL_=goog.math.Long.TWO_PWR_32_DBL_*goog.math.Long.TWO_PWR_32_DBL_;goog.math.Long.TWO_PWR_63_DBL_=goog.math.Long.TWO_PWR_64_DBL_/2;goog.math.Long.ZERO=goog.math.Long.fromInt(0);goog.math.Long.ONE=goog.math.Long.fromInt(1);goog.math.Long.NEG_ONE=goog.math.Long.fromInt(-1);goog.math.Long.MAX_VALUE=goog.math.Long.fromBits(4294967295|0,2147483647|0);goog.math.Long.MIN_VALUE=goog.math.Long.fromBits(0,2147483648|0);goog.math.Long.TWO_PWR_24_=goog.math.Long.fromInt(1<<24);goog.math.Long.prototype.toInt=(function(){return this.low_});goog.math.Long.prototype.toNumber=(function(){return this.high_*goog.math.Long.TWO_PWR_32_DBL_+this.getLowBitsUnsigned()});goog.math.Long.prototype.toString=(function(opt_radix){var radix=opt_radix||10;if(radix<2||36<radix){throw Error(\"radix out of range: \"+radix)}if(this.isZero()){return\"0\"}if(this.isNegative()){if(this.equals(goog.math.Long.MIN_VALUE)){var radixLong=goog.math.Long.fromNumber(radix);var div=this.div(radixLong);var rem=div.multiply(radixLong).subtract(this);return div.toString(radix)+rem.toInt().toString(radix)}else{return\"-\"+this.negate().toString(radix)}}var radixToPower=goog.math.Long.fromNumber(Math.pow(radix,6));var rem=this;var result=\"\";while(true){var remDiv=rem.div(radixToPower);var intval=rem.subtract(remDiv.multiply(radixToPower)).toInt();var digits=intval.toString(radix);rem=remDiv;if(rem.isZero()){return digits+result}else{while(digits.length<6){digits=\"0\"+digits}result=\"\"+digits+result}}});goog.math.Long.prototype.getHighBits=(function(){return this.high_});goog.math.Long.prototype.getLowBits=(function(){return this.low_});goog.math.Long.prototype.getLowBitsUnsigned=(function(){return this.low_>=0?this.low_:goog.math.Long.TWO_PWR_32_DBL_+this.low_});goog.math.Long.prototype.getNumBitsAbs=(function(){if(this.isNegative()){if(this.equals(goog.math.Long.MIN_VALUE)){return 64}else{return this.negate().getNumBitsAbs()}}else{var val=this.high_!=0?this.high_:this.low_;for(var bit=31;bit>0;bit--){if((val&1<<bit)!=0){break}}return this.high_!=0?bit+33:bit+1}});goog.math.Long.prototype.isZero=(function(){return this.high_==0&&this.low_==0});goog.math.Long.prototype.isNegative=(function(){return this.high_<0});goog.math.Long.prototype.isOdd=(function(){return(this.low_&1)==1});goog.math.Long.prototype.equals=(function(other){return this.high_==other.high_&&this.low_==other.low_});goog.math.Long.prototype.notEquals=(function(other){return this.high_!=other.high_||this.low_!=other.low_});goog.math.Long.prototype.lessThan=(function(other){return this.compare(other)<0});goog.math.Long.prototype.lessThanOrEqual=(function(other){return this.compare(other)<=0});goog.math.Long.prototype.greaterThan=(function(other){return this.compare(other)>0});goog.math.Long.prototype.greaterThanOrEqual=(function(other){return this.compare(other)>=0});goog.math.Long.prototype.compare=(function(other){if(this.equals(other)){return 0}var thisNeg=this.isNegative();var otherNeg=other.isNegative();if(thisNeg&&!otherNeg){return-1}if(!thisNeg&&otherNeg){return 1}if(this.subtract(other).isNegative()){return-1}else{return 1}});goog.math.Long.prototype.negate=(function(){if(this.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.MIN_VALUE}else{return this.not().add(goog.math.Long.ONE)}});goog.math.Long.prototype.add=(function(other){var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00+b00;c16+=c00>>>16;c00&=65535;c16+=a16+b16;c32+=c16>>>16;c16&=65535;c32+=a32+b32;c48+=c32>>>16;c32&=65535;c48+=a48+b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)});goog.math.Long.prototype.subtract=(function(other){return this.add(other.negate())});goog.math.Long.prototype.multiply=(function(other){if(this.isZero()){return goog.math.Long.ZERO}else if(other.isZero()){return goog.math.Long.ZERO}if(this.equals(goog.math.Long.MIN_VALUE)){return other.isOdd()?goog.math.Long.MIN_VALUE:goog.math.Long.ZERO}else if(other.equals(goog.math.Long.MIN_VALUE)){return this.isOdd()?goog.math.Long.MIN_VALUE:goog.math.Long.ZERO}if(this.isNegative()){if(other.isNegative()){return this.negate().multiply(other.negate())}else{return this.negate().multiply(other).negate()}}else if(other.isNegative()){return this.multiply(other.negate()).negate()}if(this.lessThan(goog.math.Long.TWO_PWR_24_)&&other.lessThan(goog.math.Long.TWO_PWR_24_)){return goog.math.Long.fromNumber(this.toNumber()*other.toNumber())}var a48=this.high_>>>16;var a32=this.high_&65535;var a16=this.low_>>>16;var a00=this.low_&65535;var b48=other.high_>>>16;var b32=other.high_&65535;var b16=other.low_>>>16;var b00=other.low_&65535;var c48=0,c32=0,c16=0,c00=0;c00+=a00*b00;c16+=c00>>>16;c00&=65535;c16+=a16*b00;c32+=c16>>>16;c16&=65535;c16+=a00*b16;c32+=c16>>>16;c16&=65535;c32+=a32*b00;c48+=c32>>>16;c32&=65535;c32+=a16*b16;c48+=c32>>>16;c32&=65535;c32+=a00*b32;c48+=c32>>>16;c32&=65535;c48+=a48*b00+a32*b16+a16*b32+a00*b48;c48&=65535;return goog.math.Long.fromBits(c16<<16|c00,c48<<16|c32)});goog.math.Long.prototype.div=(function(other){if(other.isZero()){throw Error(\"division by zero\")}else if(this.isZero()){return goog.math.Long.ZERO}if(this.equals(goog.math.Long.MIN_VALUE)){if(other.equals(goog.math.Long.ONE)||other.equals(goog.math.Long.NEG_ONE)){return goog.math.Long.MIN_VALUE}else if(other.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.ONE}else{var halfThis=this.shiftRight(1);var approx=halfThis.div(other).shiftLeft(1);if(approx.equals(goog.math.Long.ZERO)){return other.isNegative()?goog.math.Long.ONE:goog.math.Long.NEG_ONE}else{var rem=this.subtract(other.multiply(approx));var result=approx.add(rem.div(other));return result}}}else if(other.equals(goog.math.Long.MIN_VALUE)){return goog.math.Long.ZERO}if(this.isNegative()){if(other.isNegative()){return this.negate().div(other.negate())}else{return this.negate().div(other).negate()}}else if(other.isNegative()){return this.div(other.negate()).negate()}var res=goog.math.Long.ZERO;var rem=this;while(rem.greaterThanOrEqual(other)){var approx=Math.max(1,Math.floor(rem.toNumber()/other.toNumber()));var log2=Math.ceil(Math.log(approx)/Math.LN2);var delta=log2<=48?1:Math.pow(2,log2-48);var approxRes=goog.math.Long.fromNumber(approx);var approxRem=approxRes.multiply(other);while(approxRem.isNegative()||approxRem.greaterThan(rem)){approx-=delta;approxRes=goog.math.Long.fromNumber(approx);approxRem=approxRes.multiply(other)}if(approxRes.isZero()){approxRes=goog.math.Long.ONE}res=res.add(approxRes);rem=rem.subtract(approxRem)}return res});goog.math.Long.prototype.modulo=(function(other){return this.subtract(this.div(other).multiply(other))});goog.math.Long.prototype.not=(function(){return goog.math.Long.fromBits(~this.low_,~this.high_)});goog.math.Long.prototype.and=(function(other){return goog.math.Long.fromBits(this.low_&other.low_,this.high_&other.high_)});goog.math.Long.prototype.or=(function(other){return goog.math.Long.fromBits(this.low_|other.low_,this.high_|other.high_)});goog.math.Long.prototype.xor=(function(other){return goog.math.Long.fromBits(this.low_^other.low_,this.high_^other.high_)});goog.math.Long.prototype.shiftLeft=(function(numBits){numBits&=63;if(numBits==0){return this}else{var low=this.low_;if(numBits<32){var high=this.high_;return goog.math.Long.fromBits(low<<numBits,high<<numBits|low>>>32-numBits)}else{return goog.math.Long.fromBits(0,low<<numBits-32)}}});goog.math.Long.prototype.shiftRight=(function(numBits){numBits&=63;if(numBits==0){return this}else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>numBits)}else{return goog.math.Long.fromBits(high>>numBits-32,high>=0?0:-1)}}});goog.math.Long.prototype.shiftRightUnsigned=(function(numBits){numBits&=63;if(numBits==0){return this}else{var high=this.high_;if(numBits<32){var low=this.low_;return goog.math.Long.fromBits(low>>>numBits|high<<32-numBits,high>>>numBits)}else if(numBits==32){return goog.math.Long.fromBits(high,0)}else{return goog.math.Long.fromBits(high>>>numBits-32,0)}}});var navigator={appName:\"Modern Browser\"};var dbits;var canary=0xdeadbeefcafe;var j_lm=(canary&16777215)==15715070;function BigInteger(a,b,c){if(a!=null)if(\"number\"==typeof a)this.fromNumber(a,b,c);else if(b==null&&\"string\"!=typeof a)this.fromString(a,256);else this.fromString(a,b)}function nbi(){return new BigInteger(null)}function am1(i,x,w,j,c,n){while(--n>=0){var v=x*this[i++]+w[j]+c;c=Math.floor(v/67108864);w[j++]=v&67108863}return c}function am2(i,x,w,j,c,n){var xl=x&32767,xh=x>>15;while(--n>=0){var l=this[i]&32767;var h=this[i++]>>15;var m=xh*l+h*xl;l=xl*l+((m&32767)<<15)+w[j]+(c&1073741823);c=(l>>>30)+(m>>>15)+xh*h+(c>>>30);w[j++]=l&1073741823}return c}function am3(i,x,w,j,c,n){var xl=x&16383,xh=x>>14;while(--n>=0){var l=this[i]&16383;var h=this[i++]>>14;var m=xh*l+h*xl;l=xl*l+((m&16383)<<14)+w[j]+c;c=(l>>28)+(m>>14)+xh*h;w[j++]=l&268435455}return c}if(j_lm&&navigator.appName==\"Microsoft Internet Explorer\"){BigInteger.prototype.am=am2;dbits=30}else if(j_lm&&navigator.appName!=\"Netscape\"){BigInteger.prototype.am=am1;dbits=26}else{BigInteger.prototype.am=am3;dbits=28}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=(1<<dbits)-1;BigInteger.prototype.DV=1<<dbits;var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM=\"0123456789abcdefghijklmnopqrstuvwxyz\";var BI_RC=new Array;var rr,vv;rr=\"0\".charCodeAt(0);for(vv=0;vv<=9;++vv)BI_RC[rr++]=vv;rr=\"a\".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;rr=\"A\".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;function int2char(n){return BI_RM.charAt(n)}function intAt(s,i){var c=BI_RC[s.charCodeAt(i)];return c==null?-1:c}function bnpCopyTo(r){for(var i=this.t-1;i>=0;--i)r[i]=this[i];r.t=this.t;r.s=this.s}function bnpFromInt(x){this.t=1;this.s=x<0?-1:0;if(x>0)this[0]=x;else if(x<-1)this[0]=x+DV;else this.t=0}function nbv(i){var r=nbi();r.fromInt(i);return r}function bnpFromString(s,b){var k;if(b==16)k=4;else if(b==8)k=3;else if(b==256)k=8;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else{this.fromRadix(s,b);return}this.t=0;this.s=0;var i=s.length,mi=false,sh=0;while(--i>=0){var x=k==8?s[i]&255:intAt(s,i);if(x<0){if(s.charAt(i)==\"-\")mi=true;continue}mi=false;if(sh==0)this[this.t++]=x;else if(sh+k>this.DB){this[this.t-1]|=(x&(1<<this.DB-sh)-1)<<sh;this[this.t++]=x>>this.DB-sh}else this[this.t-1]|=x<<sh;sh+=k;if(sh>=this.DB)sh-=this.DB}if(k==8&&(s[0]&128)!=0){this.s=-1;if(sh>0)this[this.t-1]|=(1<<this.DB-sh)-1<<sh}this.clamp();if(mi)BigInteger.ZERO.subTo(this,this)}function bnpClamp(){var c=this.s&this.DM;while(this.t>0&&this[this.t-1]==c)--this.t}function bnToString(b){if(this.s<0)return\"-\"+this.negate().toString(b);var k;if(b==16)k=4;else if(b==8)k=3;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else return this.toRadix(b);var km=(1<<k)-1,d,m=false,r=\"\",i=this.t;var p=this.DB-i*this.DB%k;if(i-->0){if(p<this.DB&&(d=this[i]>>p)>0){m=true;r=int2char(d)}while(i>=0){if(p<k){d=(this[i]&(1<<p)-1)<<k-p;d|=this[--i]>>(p+=this.DB-k)}else{d=this[i]>>(p-=k)&km;if(p<=0){p+=this.DB;--i}}if(d>0)m=true;if(m)r+=int2char(d)}}return m?r:\"0\"}function bnNegate(){var r=nbi();BigInteger.ZERO.subTo(this,r);return r}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(a){var r=this.s-a.s;if(r!=0)return r;var i=this.t;r=i-a.t;if(r!=0)return this.s<0?-r:r;while(--i>=0)if((r=this[i]-a[i])!=0)return r;return 0}function nbits(x){var r=1,t;if((t=x>>>16)!=0){x=t;r+=16}if((t=x>>8)!=0){x=t;r+=8}if((t=x>>4)!=0){x=t;r+=4}if((t=x>>2)!=0){x=t;r+=2}if((t=x>>1)!=0){x=t;r+=1}return r}function bnBitLength(){if(this.t<=0)return 0;return this.DB*(this.t-1)+nbits(this[this.t-1]^this.s&this.DM)}function bnpDLShiftTo(n,r){var i;for(i=this.t-1;i>=0;--i)r[i+n]=this[i];for(i=n-1;i>=0;--i)r[i]=0;r.t=this.t+n;r.s=this.s}function bnpDRShiftTo(n,r){for(var i=n;i<this.t;++i)r[i-n]=this[i];r.t=Math.max(this.t-n,0);r.s=this.s}function bnpLShiftTo(n,r){var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<cbs)-1;var ds=Math.floor(n/this.DB),c=this.s<<bs&this.DM,i;for(i=this.t-1;i>=0;--i){r[i+ds+1]=this[i]>>cbs|c;c=(this[i]&bm)<<bs}for(i=ds-1;i>=0;--i)r[i]=0;r[ds]=c;r.t=this.t+ds+1;r.s=this.s;r.clamp()}function bnpRShiftTo(n,r){r.s=this.s;var ds=Math.floor(n/this.DB);if(ds>=this.t){r.t=0;return}var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<bs)-1;r[0]=this[ds]>>bs;for(var i=ds+1;i<this.t;++i){r[i-ds-1]|=(this[i]&bm)<<cbs;r[i-ds]=this[i]>>bs}if(bs>0)r[this.t-ds-1]|=(this.s&bm)<<cbs;r.t=this.t-ds;r.clamp()}function bnpSubTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]-a[i];r[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c-=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=this.s;while(i<a.t){c-=a[i];r[i++]=c&this.DM;c>>=this.DB}c-=a.s}r.s=c<0?-1:0;if(c<-1)r[i++]=this.DV+c;else if(c>0)r[i++]=c;r.t=i;r.clamp()}function bnpMultiplyTo(a,r){var x=this.abs(),y=a.abs();var i=x.t;r.t=i+y.t;while(--i>=0)r[i]=0;for(i=0;i<y.t;++i)r[i+x.t]=x.am(0,y[i],r,i,0,x.t);r.s=0;r.clamp();if(this.s!=a.s)BigInteger.ZERO.subTo(r,r)}function bnpSquareTo(r){var x=this.abs();var i=r.t=2*x.t;while(--i>=0)r[i]=0;for(i=0;i<x.t-1;++i){var c=x.am(i,x[i],r,2*i,0,1);if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1))>=x.DV){r[i+x.t]-=x.DV;r[i+x.t+1]=1}}if(r.t>0)r[r.t-1]+=x.am(i,x[i],r,2*i,0,1);r.s=0;r.clamp()}function bnpDivRemTo(m,q,r){var pm=m.abs();if(pm.t<=0)return;var pt=this.abs();if(pt.t<pm.t){if(q!=null)q.fromInt(0);if(r!=null)this.copyTo(r);return}if(r==null)r=nbi();var y=nbi(),ts=this.s,ms=m.s;var nsh=this.DB-nbits(pm[pm.t-1]);if(nsh>0){pm.lShiftTo(nsh,y);pt.lShiftTo(nsh,r)}else{pm.copyTo(y);pt.copyTo(r)}var ys=y.t;var y0=y[ys-1];if(y0==0)return;var yt=y0*(1<<this.F1)+(ys>1?y[ys-2]>>this.F2:0);var d1=this.FV/yt,d2=(1<<this.F1)/yt,e=1<<this.F2;var i=r.t,j=i-ys,t=q==null?nbi():q;y.dlShiftTo(j,t);if(r.compareTo(t)>=0){r[r.t++]=1;r.subTo(t,r)}BigInteger.ONE.dlShiftTo(ys,t);t.subTo(y,y);while(y.t<ys)y[y.t++]=0;while(--j>=0){var qd=r[--i]==y0?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);if((r[i]+=y.am(0,qd,r,j,0,ys))<qd){y.dlShiftTo(j,t);r.subTo(t,r);while(r[i]<--qd)r.subTo(t,r)}}if(q!=null){r.drShiftTo(ys,q);if(ts!=ms)BigInteger.ZERO.subTo(q,q)}r.t=ys;r.clamp();if(nsh>0)r.rShiftTo(nsh,r);if(ts<0)BigInteger.ZERO.subTo(r,r)}function bnMod(a){var r=nbi();this.abs().divRemTo(a,null,r);if(this.s<0&&r.compareTo(BigInteger.ZERO)>0)a.subTo(r,r);return r}function Classic(m){this.m=m}function cConvert(x){if(x.s<0||x.compareTo(this.m)>=0)return x.mod(this.m);else return x}function cRevert(x){return x}function cReduce(x){x.divRemTo(this.m,null,x)}function cMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}function cSqrTo(x,r){x.squareTo(r);this.reduce(r)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1)return 0;var x=this[0];if((x&1)==0)return 0;var y=x&3;y=y*(2-(x&15)*y)&15;y=y*(2-(x&255)*y)&255;y=y*(2-((x&65535)*y&65535))&65535;y=y*(2-x*y%this.DV)%this.DV;return y>0?this.DV-y:-y}function Montgomery(m){this.m=m;this.mp=m.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<m.DB-15)-1;this.mt2=2*m.t}function montConvert(x){var r=nbi();x.abs().dlShiftTo(this.m.t,r);r.divRemTo(this.m,null,r);if(x.s<0&&r.compareTo(BigInteger.ZERO)>0)this.m.subTo(r,r);return r}function montRevert(x){var r=nbi();x.copyTo(r);this.reduce(r);return r}function montReduce(x){while(x.t<=this.mt2)x[x.t++]=0;for(var i=0;i<this.m.t;++i){var j=x[i]&32767;var u0=j*this.mpl+((j*this.mph+(x[i]>>15)*this.mpl&this.um)<<15)&x.DM;j=i+this.m.t;x[j]+=this.m.am(0,u0,x,i,0,this.m.t);while(x[j]>=x.DV){x[j]-=x.DV;x[++j]++}}x.clamp();x.drShiftTo(this.m.t,x);if(x.compareTo(this.m)>=0)x.subTo(this.m,x)}function montSqrTo(x,r){x.squareTo(r);this.reduce(r)}function montMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>0?this[0]&1:this.s)==0}function bnpExp(e,z){if(e>4294967295||e<1)return BigInteger.ONE;var r=nbi(),r2=nbi(),g=z.convert(this),i=nbits(e)-1;g.copyTo(r);while(--i>=0){z.sqrTo(r,r2);if((e&1<<i)>0)z.mulTo(r2,g,r);else{var t=r;r=r2;r2=t}}return z.revert(r)}function bnModPowInt(e,m){var z;if(e<256||m.isEven())z=new Classic(m);else z=new Montgomery(m);return this.exp(e,z)}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);function bnpFromRadix(s,b){this.fromInt(0);if(b==null)b=10;var cs=this.chunkSize(b);var d=Math.pow(b,cs),mi=false,j=0,w=0;for(var i=0;i<s.length;++i){var x=intAt(s,i);if(x<0){if(s.charAt(i)==\"-\"&&this.signum()==0)mi=true;continue}w=b*w+x;if(++j>=cs){this.dMultiply(d);this.dAddOffset(w,0);j=0;w=0}}if(j>0){this.dMultiply(Math.pow(b,j));this.dAddOffset(w,0)}if(mi)BigInteger.ZERO.subTo(this,this)}function bnpChunkSize(r){return Math.floor(Math.LN2*this.DB/Math.log(r))}function bnSigNum(){if(this.s<0)return-1;else if(this.t<=0||this.t==1&&this[0]<=0)return 0;else return 1}function bnpDMultiply(n){this[this.t]=this.am(0,n-1,this,0,0,this.t);++this.t;this.clamp()}function bnpDAddOffset(n,w){if(n==0)return;while(this.t<=w)this[this.t++]=0;this[w]+=n;while(this[w]>=this.DV){this[w]-=this.DV;if(++w>=this.t)this[this.t++]=0;++this[w]}}function bnpToRadix(b){if(b==null)b=10;if(this.signum()==0||b<2||b>36)return\"0\";var cs=this.chunkSize(b);var a=Math.pow(b,cs);var d=nbv(a),y=nbi(),z=nbi(),r=\"\";this.divRemTo(d,y,z);while(y.signum()>0){r=(a+z.intValue()).toString(b).substr(1)+r;y.divRemTo(d,y,z)}return z.intValue().toString(b)+r}function bnIntValue(){if(this.s<0){if(this.t==1)return this[0]-this.DV;else if(this.t==0)return-1}else if(this.t==1)return this[0];else if(this.t==0)return 0;return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function bnpAddTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this[i]+a[i];r[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c+=a.s;while(i<this.t){c+=this[i];r[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=this.s;while(i<a.t){c+=a[i];r[i++]=c&this.DM;c>>=this.DB}c+=a.s}r.s=c<0?-1:0;if(c>0)r[i++]=c;else if(c<-1)r[i++]=this.DV+c;r.t=i;r.clamp()}BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.addTo=bnpAddTo;var Wrapper={abs:(function(l,h){var x=new goog.math.Long(l,h);var ret;if(x.isNegative()){ret=x.negate()}else{ret=x}HEAP32[tempDoublePtr>>2]=ret.low_;HEAP32[tempDoublePtr+4>>2]=ret.high_}),ensureTemps:(function(){if(Wrapper.ensuredTemps)return;Wrapper.ensuredTemps=true;Wrapper.two32=new BigInteger;Wrapper.two32.fromString(\"4294967296\",10);Wrapper.two64=new BigInteger;Wrapper.two64.fromString(\"18446744073709551616\",10);Wrapper.temp1=new BigInteger;Wrapper.temp2=new BigInteger}),lh2bignum:(function(l,h){var a=new BigInteger;a.fromString(h.toString(),10);var b=new BigInteger;a.multiplyTo(Wrapper.two32,b);var c=new BigInteger;c.fromString(l.toString(),10);var d=new BigInteger;c.addTo(b,d);return d}),stringify:(function(l,h,unsigned){var ret=(new goog.math.Long(l,h)).toString();if(unsigned&&ret[0]==\"-\"){Wrapper.ensureTemps();var bignum=new BigInteger;bignum.fromString(ret,10);ret=new BigInteger;Wrapper.two64.addTo(bignum,ret);ret=ret.toString(10)}return ret}),fromString:(function(str,base,min,max,unsigned){Wrapper.ensureTemps();var bignum=new BigInteger;bignum.fromString(str,base);var bigmin=new BigInteger;bigmin.fromString(min,10);var bigmax=new BigInteger;bigmax.fromString(max,10);if(unsigned&&bignum.compareTo(BigInteger.ZERO)<0){var temp=new BigInteger;bignum.addTo(Wrapper.two64,temp);bignum=temp}var error=false;if(bignum.compareTo(bigmin)<0){bignum=bigmin;error=true}else if(bignum.compareTo(bigmax)>0){bignum=bigmax;error=true}var ret=goog.math.Long.fromString(bignum.toString());HEAP32[tempDoublePtr>>2]=ret.low_;HEAP32[tempDoublePtr+4>>2]=ret.high_;if(error)throw\"range error\"})};return Wrapper})();function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;var preloadStartTime=null;var calledMain=false;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};Module[\"callMain\"]=Module.callMain=function callMain(args){assert(runDependencies==0,\"cannot call main when async dependencies remain! (listen on __ATMAIN__)\");assert(__ATPRERUN__.length==0,\"cannot call main when preRun functions remain to be called\");args=args||[];ensureInitRuntime();var argc=args.length+1;function pad(){for(var i=0;i<4-1;i++){argv.push(0)}}var argv=[allocate(intArrayFromString(Module[\"thisProgram\"]),\"i8\",ALLOC_NORMAL)];pad();for(var i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),\"i8\",ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,\"i32\",ALLOC_NORMAL);initialStackTop=STACKTOP;try{var ret=Module[\"_main\"](argc,argv,0);exit(ret,true)}catch(e){if(e instanceof ExitStatus){return}else if(e==\"SimulateInfiniteLoop\"){Module[\"noExitRuntime\"]=true;return}else{if(e&&typeof e===\"object\"&&e.stack)Module.printErr(\"exception thrown: \"+[e,e.stack]);throw e}}finally{calledMain=true}};function run(args){args=args||Module[\"arguments\"];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(ENVIRONMENT_IS_WEB&&preloadStartTime!==null){Module.printErr(\"pre-main prep time: \"+(Date.now()-preloadStartTime)+\" ms\")}if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();if(Module[\"_main\"]&&shouldRunNow)Module[\"callMain\"](args);postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=Module.run=run;function exit(status,implicit){if(implicit&&Module[\"noExitRuntime\"]){return}if(Module[\"noExitRuntime\"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\"onExit\"])Module[\"onExit\"](status)}if(ENVIRONMENT_IS_NODE){process[\"stdout\"][\"once\"](\"drain\",(function(){process[\"exit\"](status)}));console.log(\" \");setTimeout((function(){process[\"exit\"](status)}),500)}else if(ENVIRONMENT_IS_SHELL&&typeof quit===\"function\"){quit(status)}throw new ExitStatus(status)}Module[\"exit\"]=Module.exit=exit;var abortDecorators=[];function abort(what){if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;var extra=\"\\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.\";var output=\"abort(\"+what+\") at \"+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw output}Module[\"abort\"]=Module.abort=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}var shouldRunNow=true;if(Module[\"noInitialRun\"]){shouldRunNow=false}run();Module[\"VirgilByteArray\"][\"fromUTF8\"]=(function(string){var ba=new Module.VirgilByteArray;ba.fromUTF8(string);return ba});Module[\"VirgilByteArray\"][\"prototype\"][\"fromUTF8\"]=(function(string){var s=unescape(encodeURIComponent(string));var charList=s.split(\"\");var uintArray=[];for(var i=0;i<charList.length;i++){uintArray.push(charList[i].charCodeAt(0))}this.assign(new Uint8Array(uintArray))});Module[\"VirgilByteArray\"][\"prototype\"][\"toUTF8\"]=(function(){var encodedString=String.fromCharCode.apply(null,this.data());return decodeURIComponent(escape(encodedString))});Module[\"VirgilKeyPair\"][\"Type\"]=Module[\"VirgilKeyPairType\"];Module[\"VirgilPBKDF\"][\"Algorithm\"]=Module[\"VirgilPBKDFAlgorithm\"];Module[\"VirgilPBKDF\"][\"Hash\"]=Module[\"VirgilPBKDFHash\"];Module[\"VirgilTinyCipher\"][\"PackageSize\"]=Module[\"VirgilTinyCipherPackageSize\"]\n\n\n\n\n"

/***/ },
/* 100 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {(function (global) {
	  var babelHelpers = global.babelHelpers = {};

	  babelHelpers.inherits = function (subClass, superClass) {
	    if (typeof superClass !== "function" && superClass !== null) {
	      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	    }

	    subClass.prototype = Object.create(superClass && superClass.prototype, {
	      constructor: {
	        value: subClass,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	  };

	  babelHelpers.defaults = function (obj, defaults) {
	    var keys = Object.getOwnPropertyNames(defaults);

	    for (var i = 0; i < keys.length; i++) {
	      var key = keys[i];
	      var value = Object.getOwnPropertyDescriptor(defaults, key);

	      if (value && value.configurable && obj[key] === undefined) {
	        Object.defineProperty(obj, key, value);
	      }
	    }

	    return obj;
	  };

	  babelHelpers.createClass = (function () {
	    function defineProperties(target, props) {
	      for (var i = 0; i < props.length; i++) {
	        var descriptor = props[i];
	        descriptor.enumerable = descriptor.enumerable || false;
	        descriptor.configurable = true;
	        if ("value" in descriptor) descriptor.writable = true;
	        Object.defineProperty(target, descriptor.key, descriptor);
	      }
	    }

	    return function (Constructor, protoProps, staticProps) {
	      if (protoProps) defineProperties(Constructor.prototype, protoProps);
	      if (staticProps) defineProperties(Constructor, staticProps);
	      return Constructor;
	    };
	  })();

	  babelHelpers.createDecoratedClass = (function () {
	    function defineProperties(target, descriptors, initializers) {
	      for (var i = 0; i < descriptors.length; i++) {
	        var descriptor = descriptors[i];
	        var decorators = descriptor.decorators;
	        var key = descriptor.key;
	        delete descriptor.key;
	        delete descriptor.decorators;
	        descriptor.enumerable = descriptor.enumerable || false;
	        descriptor.configurable = true;
	        if ("value" in descriptor || descriptor.initializer) descriptor.writable = true;

	        if (decorators) {
	          for (var f = 0; f < decorators.length; f++) {
	            var decorator = decorators[f];

	            if (typeof decorator === "function") {
	              descriptor = decorator(target, key, descriptor) || descriptor;
	            } else {
	              throw new TypeError("The decorator for method " + descriptor.key + " is of the invalid type " + typeof decorator);
	            }
	          }

	          if (descriptor.initializer !== undefined) {
	            initializers[key] = descriptor;
	            continue;
	          }
	        }

	        Object.defineProperty(target, key, descriptor);
	      }
	    }

	    return function (Constructor, protoProps, staticProps, protoInitializers, staticInitializers) {
	      if (protoProps) defineProperties(Constructor.prototype, protoProps, protoInitializers);
	      if (staticProps) defineProperties(Constructor, staticProps, staticInitializers);
	      return Constructor;
	    };
	  })();

	  babelHelpers.createDecoratedObject = function (descriptors) {
	    var target = {};

	    for (var i = 0; i < descriptors.length; i++) {
	      var descriptor = descriptors[i];
	      var decorators = descriptor.decorators;
	      var key = descriptor.key;
	      delete descriptor.key;
	      delete descriptor.decorators;
	      descriptor.enumerable = true;
	      descriptor.configurable = true;
	      if ("value" in descriptor || descriptor.initializer) descriptor.writable = true;

	      if (decorators) {
	        for (var f = 0; f < decorators.length; f++) {
	          var decorator = decorators[f];

	          if (typeof decorator === "function") {
	            descriptor = decorator(target, key, descriptor) || descriptor;
	          } else {
	            throw new TypeError("The decorator for method " + descriptor.key + " is of the invalid type " + typeof decorator);
	          }
	        }
	      }

	      if (descriptor.initializer) {
	        descriptor.value = descriptor.initializer.call(target);
	      }

	      Object.defineProperty(target, key, descriptor);
	    }

	    return target;
	  };

	  babelHelpers.defineDecoratedPropertyDescriptor = function (target, key, descriptors) {
	    var _descriptor = descriptors[key];
	    if (!_descriptor) return;
	    var descriptor = {};

	    for (var _key in _descriptor) descriptor[_key] = _descriptor[_key];

	    descriptor.value = descriptor.initializer ? descriptor.initializer.call(target) : undefined;
	    Object.defineProperty(target, key, descriptor);
	  };

	  babelHelpers.taggedTemplateLiteral = function (strings, raw) {
	    return Object.freeze(Object.defineProperties(strings, {
	      raw: {
	        value: Object.freeze(raw)
	      }
	    }));
	  };

	  babelHelpers.taggedTemplateLiteralLoose = function (strings, raw) {
	    strings.raw = raw;
	    return strings;
	  };

	  babelHelpers.toArray = function (arr) {
	    return Array.isArray(arr) ? arr : Array.from(arr);
	  };

	  babelHelpers.toConsumableArray = function (arr) {
	    if (Array.isArray(arr)) {
	      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

	      return arr2;
	    } else {
	      return Array.from(arr);
	    }
	  };

	  babelHelpers.slicedToArray = (function () {
	    function sliceIterator(arr, i) {
	      var _arr = [];
	      var _n = true;
	      var _d = false;
	      var _e = undefined;

	      try {
	        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	          _arr.push(_s.value);

	          if (i && _arr.length === i) break;
	        }
	      } catch (err) {
	        _d = true;
	        _e = err;
	      } finally {
	        try {
	          if (!_n && _i["return"]) _i["return"]();
	        } finally {
	          if (_d) throw _e;
	        }
	      }

	      return _arr;
	    }

	    return function (arr, i) {
	      if (Array.isArray(arr)) {
	        return arr;
	      } else if (Symbol.iterator in Object(arr)) {
	        return sliceIterator(arr, i);
	      } else {
	        throw new TypeError("Invalid attempt to destructure non-iterable instance");
	      }
	    };
	  })();

	  babelHelpers.slicedToArrayLoose = function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if (Symbol.iterator in Object(arr)) {
	      var _arr = [];

	      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {
	        _arr.push(_step.value);

	        if (i && _arr.length === i) break;
	      }

	      return _arr;
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };

	  babelHelpers.objectWithoutProperties = function (obj, keys) {
	    var target = {};

	    for (var i in obj) {
	      if (keys.indexOf(i) >= 0) continue;
	      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	      target[i] = obj[i];
	    }

	    return target;
	  };

	  babelHelpers.hasOwn = Object.prototype.hasOwnProperty;
	  babelHelpers.slice = Array.prototype.slice;
	  babelHelpers.bind = Function.prototype.bind;

	  babelHelpers.defineProperty = function (obj, key, value) {
	    if (key in obj) {
	      Object.defineProperty(obj, key, {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    } else {
	      obj[key] = value;
	    }

	    return obj;
	  };

	  babelHelpers.asyncToGenerator = function (fn) {
	    return function () {
	      var gen = fn.apply(this, arguments);
	      return new Promise(function (resolve, reject) {
	        var callNext = step.bind(null, "next");
	        var callThrow = step.bind(null, "throw");

	        function step(key, arg) {
	          try {
	            var info = gen[key](arg);
	            var value = info.value;
	          } catch (error) {
	            reject(error);
	            return;
	          }

	          if (info.done) {
	            resolve(value);
	          } else {
	            Promise.resolve(value).then(callNext, callThrow);
	          }
	        }

	        callNext();
	      });
	    };
	  };

	  babelHelpers.interopExportWildcard = function (obj, defaults) {
	    var newObj = defaults({}, obj);
	    delete newObj["default"];
	    return newObj;
	  };

	  babelHelpers.interopRequireWildcard = function (obj) {
	    if (obj && obj.__esModule) {
	      return obj;
	    } else {
	      var newObj = {};

	      if (obj != null) {
	        for (var key in obj) {
	          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
	        }
	      }

	      newObj["default"] = obj;
	      return newObj;
	    }
	  };

	  babelHelpers.interopRequireDefault = function (obj) {
	    return obj && obj.__esModule ? obj : {
	      "default": obj
	    };
	  };

	  babelHelpers._typeof = function (obj) {
	    return obj && obj.constructor === Symbol ? "symbol" : typeof obj;
	  };

	  babelHelpers._extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];

	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }

	    return target;
	  };

	  babelHelpers.get = function get(object, property, receiver) {
	    if (object === null) object = Function.prototype;
	    var desc = Object.getOwnPropertyDescriptor(object, property);

	    if (desc === undefined) {
	      var parent = Object.getPrototypeOf(object);

	      if (parent === null) {
	        return undefined;
	      } else {
	        return get(parent, property, receiver);
	      }
	    } else if ("value" in desc) {
	      return desc.value;
	    } else {
	      var getter = desc.get;

	      if (getter === undefined) {
	        return undefined;
	      }

	      return getter.call(receiver);
	    }
	  };

	  babelHelpers.set = function set(object, property, value, receiver) {
	    var desc = Object.getOwnPropertyDescriptor(object, property);

	    if (desc === undefined) {
	      var parent = Object.getPrototypeOf(object);

	      if (parent !== null) {
	        set(parent, property, value, receiver);
	      }
	    } else if ("value" in desc && desc.writable) {
	      desc.value = value;
	    } else {
	      var setter = desc.set;

	      if (setter !== undefined) {
	        setter.call(receiver, value);
	      }
	    }

	    return value;
	  };

	  babelHelpers.newArrowCheck = function (innerThis, boundThis) {
	    if (innerThis !== boundThis) {
	      throw new TypeError("Cannot instantiate an arrow function");
	    }
	  };

	  babelHelpers.classCallCheck = function (instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	      throw new TypeError("Cannot call a class as a function");
	    }
	  };

	  babelHelpers.objectDestructuringEmpty = function (obj) {
	    if (obj == null) throw new TypeError("Cannot destructure undefined");
	  };

	  babelHelpers.temporalUndefined = {};

	  babelHelpers.temporalAssertDefined = function (val, name, undef) {
	    if (val === undef) {
	      throw new ReferenceError(name + " is not defined - temporal dead zone");
	    }

	    return true;
	  };

	  babelHelpers.selfGlobal = typeof global === "undefined" ? self : global;
	  babelHelpers.typeofReactElement = typeof Symbol === "function" && Symbol["for"] && Symbol["for"]("react.element") || 60103;

	  babelHelpers.defaultProps = function (defaultProps, props) {
	    if (defaultProps) {
	      for (var propName in defaultProps) {
	        if (typeof props[propName] === "undefined") {
	          props[propName] = defaultProps[propName];
	        }
	      }
	    }

	    return props;
	  };

	  babelHelpers._instanceof = function (left, right) {
	    if (right != null && right[Symbol.hasInstance]) {
	      return right[Symbol.hasInstance](left);
	    } else {
	      return left instanceof right;
	    }
	  };

	  babelHelpers.interopRequire = function (obj) {
	    return obj && obj.__esModule ? obj["default"] : obj;
	  };
	})(typeof global === "undefined" ? self : global);

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";

	__webpack_require__(248);

	__webpack_require__(262);

	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel/polyfill is allowed");
	}
	global._babelPolyfill = true;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(101);


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.changePrivateKeyPassword = changePrivateKeyPassword;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var u = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	function changePrivateKeyPassword(privateKey, oldPassword, newPassword) {
		if (!_lodash2['default'].isString(privateKey)) {
			throw new TypeError('Private key must be string');
		}

		if (!_lodash2['default'].isString(oldPassword)) {
			throw new TypeError('Old password must be string');
		}

		if (!_lodash2['default'].isString(newPassword)) {
			throw new TypeError('New password must be string');
		}

		return u.byteArrayToBuffer(_utilsCryptoModule2['default'].VirgilKeyPair.resetPrivateKeyPassword(u.toByteArray(privateKey), u.toByteArray(oldPassword), u.toByteArray(newPassword))).toString('utf8');
	}

	;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decryptStringFromBase64Async = decryptStringFromBase64Async;

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _decryptAsync = __webpack_require__(60);

	var _decryptAsync2 = babelHelpers.interopRequireDefault(_decryptAsync);

	function decryptStringFromBase64Async() {
		arguments[0] = CryptoUtils.base64ToBuffer(arguments[0]);

		return _decryptAsync2['default'].apply(undefined, arguments).then(function (decryptedDataBuffer) {
			return decryptedDataBuffer.toString('utf8');
		});
	}

	exports['default'] = decryptStringFromBase64Async;

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decryptStringFromBase64 = decryptStringFromBase64;

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _decrypt = __webpack_require__(63);

	var _decrypt2 = babelHelpers.interopRequireDefault(_decrypt);

	function decryptStringFromBase64() {
		arguments[0] = CryptoUtils.base64ToBuffer(arguments[0]);

		return _decrypt2['default'].apply(undefined, arguments).toString('utf8');
	}

	exports['default'] = decryptStringFromBase64;

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decryptWithKeyAsync = decryptWithKeyAsync;

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _decryptWithKey = __webpack_require__(61);

	function decryptWithKeyAsync(initialEncryptedData, recipientId, privateKey, privateKeyPassword) {
		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _decryptWithKey.decryptWithKey)(initialEncryptedData, recipientId, privateKey, privateKeyPassword));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			return _cryptoWorkerApi2['default'].decryptWithKey(CryptoUtils.toBase64(initialEncryptedData), recipientId, CryptoUtils.toBase64(privateKey), privateKeyPassword).then(
			// convert the base64 response to Buffer for support new interface
			function (result) {
				return CryptoUtils.base64ToBuffer(result);
			}, function () {
				return (0, _utilsCryptoErrors.throwVirgilError)('90002', { initialData: initialEncryptedData, key: privateKey });
			});
		}
	}

	exports['default'] = decryptWithKeyAsync;

/***/ },
/* 107 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (initialEncryptedData, recipientId, privateKeyBase64, privateKeyPassword) {
		var deferred = this.deferred();
		var virgilCipher = new VirgilCryptoWorkerContext.VirgilCipher();

		try {
			var recipientIdByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(recipientId);
			var dataByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(initialEncryptedData);
			var privateKeyByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(privateKeyBase64);
			var privateKeyPasswordByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(privateKeyPassword);
			var decryptedDataByteArray = virgilCipher.decryptWithKey(dataByteArray, recipientIdByteArray, privateKeyByteArray, privateKeyPasswordByteArray);
			var decryptedDataBase64 = VirgilCryptoWorkerContext.VirgilBase64.encode(decryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			recipientIdByteArray["delete"]();
			dataByteArray["delete"]();
			privateKeyByteArray["delete"]();
			decryptedDataByteArray["delete"]();
			privateKeyPasswordByteArray["delete"]();

			deferred.resolve(decryptedDataBase64);
		} catch (e) {
			deferred.reject(e);
		} finally {
			virgilCipher["delete"]();
		}
	};

	module.exports = exports["default"];

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.decryptWithPasswordAsync = decryptWithPasswordAsync;

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _decryptWithPassword = __webpack_require__(62);

	function decryptWithPasswordAsync(initialEncryptedData) {
		var password = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];

		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _decryptWithPassword.decryptWithPassword)(initialEncryptedData, password));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			return _cryptoWorkerApi2['default'].decryptWithPassword(CryptoUtils.toBase64(initialEncryptedData), password).then(
			// convert the base64 response to Buffer for support new interface
			function (result) {
				return CryptoUtils.base64ToBuffer(result);
			}, function () {
				return (0, _utilsCryptoErrors.throwVirgilError)('90004', { initialData: initialEncryptedData, password: password });
			});
		}
	}

	exports['default'] = decryptWithPasswordAsync;

/***/ },
/* 109 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (initialEncryptedData, password) {
		var deferred = this.deferred();
		var virgilCipher = new VirgilCryptoWorkerContext.VirgilCipher();

		try {
			var dataByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(initialEncryptedData);
			var passwordByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(password);
			var decryptedDataByteArray = virgilCipher.decryptWithPassword(dataByteArray, passwordByteArray);
			var decryptedData = VirgilCryptoWorkerContext.VirgilBase64.encode(decryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray["delete"]();
			passwordByteArray["delete"]();
			decryptedDataByteArray["delete"]();

			deferred.resolve(decryptedData);
		} catch (e) {
			deferred.reject(e);
		} finally {
			virgilCipher["delete"]();
		}
	};

	;
	module.exports = exports["default"];

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptStringToBase64Async = encryptStringToBase64Async;

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _encryptAsync = __webpack_require__(64);

	var _encryptAsync2 = babelHelpers.interopRequireDefault(_encryptAsync);

	function encryptStringToBase64Async() {
		arguments[0] = CryptoUtils.stringToBuffer(arguments[0]);

		return _encryptAsync2['default'].apply(undefined, arguments).then(function (encryptedDataBuffer) {
			return encryptedDataBuffer.toString('base64');
		});
	}

	exports['default'] = encryptStringToBase64Async;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptStringToBase64 = encryptStringToBase64;

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _encrypt = __webpack_require__(68);

	var _encrypt2 = babelHelpers.interopRequireDefault(_encrypt);

	function encryptStringToBase64() {
		arguments[0] = CryptoUtils.stringToBuffer(arguments[0]);

		return _encrypt2['default'].apply(undefined, arguments).toString('base64');
	}

	exports['default'] = encryptStringToBase64;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptWithKeyAsync = encryptWithKeyAsync;

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _encryptWithKey = __webpack_require__(66);

	function encryptWithKeyAsync(initialData, recipientId, publicKey) {
		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _encryptWithKey.encryptWithKey)(initialData, recipientId, publicKey));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			return _cryptoWorkerApi2['default'].encryptWithKey(CryptoUtils.toBase64(initialData), recipientId, publicKey).then(
			// convert the base64 response to Buffer for support new interface
			function (result) {
				return CryptoUtils.base64ToBuffer(result);
			}, function () {
				return (0, _utilsCryptoErrors.throwVirgilError)('90001', { initialData: initialData, key: publicKey });
			});
		}
	}

	exports['default'] = encryptWithKeyAsync;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptWithKeyMultiRecipientsAsync = encryptWithKeyMultiRecipientsAsync;

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _encryptWithKeyMultiRecipients = __webpack_require__(65);

	function encryptWithKeyMultiRecipientsAsync(initialData, recipients) {
		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _encryptWithKeyMultiRecipients.encryptWithKeyMultiRecipients)(initialData, recipients));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			return _cryptoWorkerApi2['default'].encryptWithKeyMultiRecipients(CryptoUtils.toBase64(initialData), recipients).then(
			// convert the base64 response to Buffer for support new interface
			function (result) {
				return CryptoUtils.base64ToBuffer(result);
			}, function () {
				return (0, _utilsCryptoErrors.throwVirgilError)('90008', { initialData: initialData, recipients: recipients });
			});
		}
	}

	exports['default'] = encryptWithKeyMultiRecipientsAsync;

/***/ },
/* 114 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (initialData, recipients) {
		var deferred = this.deferred();
		var virgilCipher = new VirgilCryptoWorkerContext.VirgilCipher();
		var dataByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(initialData);

		try {
			var recipientIdsByteArrays = [];

			for (var i = 0, l = recipients.length; i < l; i++) {
				var recipient = recipients[i];

				var recipientIdByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(recipient.recipientId);
				var publicKeyByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(recipient.publicKey);

				virgilCipher.addKeyRecipient(recipientIdByteArray, publicKeyByteArray);
				recipientIdsByteArrays.push(recipientIdByteArray);
			}

			var encryptedDataByteArray = virgilCipher.encrypt(dataByteArray, true);
			var encryptedDataBase64 = VirgilCryptoWorkerContext.VirgilBase64.encode(encryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray["delete"]();
			encryptedDataByteArray["delete"]();

			for (var j = 0, rsl = recipientIdsByteArrays.length; j < rsl; j++) {
				recipientIdsByteArrays[j]["delete"]();
			}

			deferred.resolve(encryptedDataBase64);
		} catch (e) {
			deferred.reject(e);
		} finally {
			virgilCipher["delete"]();
		}
	};

	;
	module.exports = exports["default"];

/***/ },
/* 115 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (initialData, recipientId, publicKey) {
		var deferred = this.deferred();
		var virgilCipher = new VirgilCryptoWorkerContext.VirgilCipher();

		try {
			var recipientIdByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(recipientId);
			var dataByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(initialData);
			var publicKeyByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(publicKey);

			virgilCipher.addKeyRecipient(recipientIdByteArray, publicKeyByteArray);
			var encryptedDataByteArray = virgilCipher.encrypt(dataByteArray, true);
			var encryptedDataBase64 = VirgilCryptoWorkerContext.VirgilBase64.encode(encryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			recipientIdByteArray["delete"]();
			dataByteArray["delete"]();
			encryptedDataByteArray["delete"]();

			deferred.resolve(encryptedDataBase64);
		} catch (e) {
			deferred.reject(e);
		} finally {
			virgilCipher["delete"]();
		}
	};

	;
	module.exports = exports["default"];

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.encryptWithPasswordAsync = encryptWithPasswordAsync;

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _encryptWithPassword = __webpack_require__(67);

	function encryptWithPasswordAsync(initialData) {
		var password = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];
		var isEmbeddedContentInfo = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _encryptWithPassword.encryptWithPassword)(initialData, password, isEmbeddedContentInfo));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			return _cryptoWorkerApi2['default'].encryptWithPassword(CryptoUtils.toBase64(initialData), password, isEmbeddedContentInfo).then(
			// convert the base64 response to Buffer for support new interface
			function (result) {
				return CryptoUtils.base64ToBuffer(result);
			}, function () {
				return (0, _utilsCryptoErrors.throwVirgilError)('90003', { initialData: initialData, password: password });
			});
		}
	}

	exports['default'] = encryptWithPasswordAsync;

/***/ },
/* 117 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (initialData, password, isEmbeddedContentInfo) {
		var deferred = this.deferred();
		var virgilCipher = new VirgilCryptoWorkerContext.VirgilCipher();

		try {
			var dataByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(initialData);
			var passwordByteArray = undefined;

			if (password) {
				passwordByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(password);
				virgilCipher.addPasswordRecipient(passwordByteArray);
			}

			var encryptedDataByteArray = virgilCipher.encrypt(dataByteArray, isEmbeddedContentInfo);
			var encryptedDataBase64 = VirgilCryptoWorkerContext.VirgilBase64.encode(encryptedDataByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray["delete"]();
			if (passwordByteArray) {
				passwordByteArray["delete"]();
			}

			deferred.resolve(encryptedDataBase64);
		} catch (e) {
			deferred.reject(e);
		} finally {
			virgilCipher["delete"]();
		}
	};

	module.exports = exports["default"];

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.generateKeyPairAsync = generateKeyPairAsync;

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _libKeysTypesEnum = __webpack_require__(48);

	var _libKeysTypesEnum2 = babelHelpers.interopRequireDefault(_libKeysTypesEnum);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _generateKeyPair = __webpack_require__(69);

	/**
	 * Generate the key pair - public and private keys using workers
	 *
	 * @param [password = ''] {string}
	 * @param [keysType = 'Default'] {string}
	 * @returns {Promise}
	 */

	function generateKeyPairAsync(password, keysType) {
		switch (arguments.length) {
			case 1:
				if (_libKeysTypesEnum2['default'][password]) {
					keysType = _libKeysTypesEnum2['default'][password];
					password = '';
				} else {
					keysType = _libKeysTypesEnum2['default'].Default;
				}
				break;

			case 2:
				keysType = _libKeysTypesEnum2['default'][keysType];
				break;

			case 0:
			default:
				password = '';
				keysType = _libKeysTypesEnum2['default'].Default;
				break;
		}

		if (!_.isString(password)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'password', type: 'String' });
		}

		if (_.isUndefined(keysType)) {
			(0, _utilsCryptoErrors.throwValidationError)('00002', { arg: 'keysType', type: 'equal to one of ' + _.values(_libKeysTypesEnum2['default']).join(', ') + ' - use the KeysTypesEnum for it.' });
		}

		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _generateKeyPair.generateKeyPair)(password, keysType));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			return _cryptoWorkerApi2['default'].generateKeyPair(password, keysType)['catch'](function () {
				return (0, _utilsCryptoErrors.throwVirgilError)('90007', { password: password });
			});
		}
	}

	exports['default'] = generateKeyPairAsync;

/***/ },
/* 119 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (password, keysType) {
		var deferred = this.deferred();

		try {
			var passwordByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(password);
			var virgilKeys = VirgilCryptoWorkerContext.VirgilKeyPair.generate(VirgilCryptoWorkerContext.VirgilKeyPair.Type[keysType], passwordByteArray);

			var publicKey = virgilKeys.publicKey().toUTF8();
			var privateKey = virgilKeys.privateKey().toUTF8(virgilKeys);

			// cleanup memory to avoid memory leaks
			passwordByteArray["delete"]();
			virgilKeys["delete"]();

			deferred.resolve({ publicKey: publicKey, privateKey: privateKey });
		} catch (e) {
			deferred.reject(e);
		}
	};

	;
	module.exports = exports["default"];

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.generateValidationToken = generateValidationToken;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _nodeUuid = __webpack_require__(258);

	var _nodeUuid2 = babelHelpers.interopRequireDefault(_nodeUuid);

	var _sign = __webpack_require__(47);

	var _sign2 = babelHelpers.interopRequireDefault(_sign);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	function generateValidationToken(identityValue, identityType, privateKey, privateKeyPassword) {
		if (!_lodash2['default'].isString(identityValue)) {
			throw new TypeError('identityValue must be a string');
		}

		if (!_lodash2['default'].isString(privateKey)) {
			throw new TypeError('privateKey must be string');
		}

		var uid = _nodeUuid2['default'].v4();
		var signature = (0, _sign2['default'])(uid + identityType + identityValue, privateKey, privateKeyPassword);
		var validationToken = Buffer.concat([new Buffer(uid), new Buffer('.'), new Buffer(signature.toString('base64'))]);
		return validationToken.toString('base64');
	}

	;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _utilsCryptoUtils = __webpack_require__(3);

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	_utilsCryptoUtils.wrapper.wrapPrototype(_utilsCryptoModule2['default'], 'VirgilTinyCipher');

	var _encrypt = __webpack_require__(68);

	Object.defineProperty(exports, 'encrypt', {
	  enumerable: true,
	  get: function get() {
	    return _encrypt.encrypt;
	  }
	});

	var _encryptStringToBase64 = __webpack_require__(111);

	Object.defineProperty(exports, 'encryptStringToBase64', {
	  enumerable: true,
	  get: function get() {
	    return _encryptStringToBase64.encryptStringToBase64;
	  }
	});

	var _encryptAsync = __webpack_require__(64);

	Object.defineProperty(exports, 'encryptAsync', {
	  enumerable: true,
	  get: function get() {
	    return _encryptAsync.encryptAsync;
	  }
	});

	var _encryptStringToBase64Async = __webpack_require__(110);

	Object.defineProperty(exports, 'encryptStringToBase64Async', {
	  enumerable: true,
	  get: function get() {
	    return _encryptStringToBase64Async.encryptStringToBase64Async;
	  }
	});

	var _decrypt = __webpack_require__(63);

	Object.defineProperty(exports, 'decrypt', {
	  enumerable: true,
	  get: function get() {
	    return _decrypt.decrypt;
	  }
	});

	var _decryptStringFromBase64 = __webpack_require__(105);

	Object.defineProperty(exports, 'decryptStringFromBase64', {
	  enumerable: true,
	  get: function get() {
	    return _decryptStringFromBase64.decryptStringFromBase64;
	  }
	});

	var _decryptAsync = __webpack_require__(60);

	Object.defineProperty(exports, 'decryptAsync', {
	  enumerable: true,
	  get: function get() {
	    return _decryptAsync.decryptAsync;
	  }
	});

	var _decryptStringFromBase64Async = __webpack_require__(104);

	Object.defineProperty(exports, 'decryptStringFromBase64Async', {
	  enumerable: true,
	  get: function get() {
	    return _decryptStringFromBase64Async.decryptStringFromBase64Async;
	  }
	});

	var _sign = __webpack_require__(47);

	Object.defineProperty(exports, 'sign', {
	  enumerable: true,
	  get: function get() {
	    return _sign.sign;
	  }
	});

	var _signAsync = __webpack_require__(123);

	Object.defineProperty(exports, 'signAsync', {
	  enumerable: true,
	  get: function get() {
	    return _signAsync.signAsync;
	  }
	});

	var _verify = __webpack_require__(70);

	Object.defineProperty(exports, 'verify', {
	  enumerable: true,
	  get: function get() {
	    return _verify.verify;
	  }
	});

	var _verifyAsync = __webpack_require__(126);

	Object.defineProperty(exports, 'verifyAsync', {
	  enumerable: true,
	  get: function get() {
	    return _verifyAsync.verifyAsync;
	  }
	});

	var _generateKeyPair = __webpack_require__(69);

	Object.defineProperty(exports, 'generateKeyPair', {
	  enumerable: true,
	  get: function get() {
	    return _generateKeyPair.generateKeyPair;
	  }
	});

	var _generateKeyPairAsync = __webpack_require__(118);

	Object.defineProperty(exports, 'generateKeyPairAsync', {
	  enumerable: true,
	  get: function get() {
	    return _generateKeyPairAsync.generateKeyPairAsync;
	  }
	});

	var _generateValidationToken = __webpack_require__(120);

	Object.defineProperty(exports, 'generateValidationToken', {
	  enumerable: true,
	  get: function get() {
	    return _generateValidationToken.generateValidationToken;
	  }
	});

	var _changePrivateKeyPassword = __webpack_require__(103);

	Object.defineProperty(exports, 'changePrivateKeyPassword', {
	  enumerable: true,
	  get: function get() {
	    return _changePrivateKeyPassword.changePrivateKeyPassword;
	  }
	});

	var _obfuscate = __webpack_require__(122);

	Object.defineProperty(exports, 'obfuscate', {
	  enumerable: true,
	  get: function get() {
	    return _obfuscate.obfuscate;
	  }
	});

	var _libKeysTypesEnum = __webpack_require__(48);

	exports.KeysTypesEnum = babelHelpers.interopRequire(_libKeysTypesEnum);

	var _libIdentityTypes = __webpack_require__(130);

	exports.IdentityTypesEnum = babelHelpers.interopRequire(_libIdentityTypes);
	var PBKDFHashTypes = _utilsCryptoModule2['default'].VirgilPBKDFHash;
	exports.PBKDFHashTypes = PBKDFHashTypes;
	var VirgilTinyCipher = _utilsCryptoModule2['default'].VirgilTinyCipher;
	exports.VirgilTinyCipher = VirgilTinyCipher;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.obfuscate = obfuscate;

	var _utilsCryptoModule = __webpack_require__(12);

	var _utilsCryptoModule2 = babelHelpers.interopRequireDefault(_utilsCryptoModule);

	var _utilsCryptoUtils = __webpack_require__(3);

	var u = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _utilsCryptoErrors = __webpack_require__(5);

	function obfuscate(value, salt, algorithm, iterations) {
		iterations = iterations || 2048;
		algorithm = algorithm || _utilsCryptoModule2['default'].VirgilPBKDFHash.SHA384;
		var pbkdf = new _utilsCryptoModule2['default'].VirgilPBKDF(u.toByteArray(salt), iterations);
		pbkdf.setHash(algorithm);
		return u.byteArrayToBuffer(pbkdf.derive(u.toByteArray(value), 0)).toString('base64');
	}

	;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.signAsync = signAsync;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _sign = __webpack_require__(47);

	/**
	 * Sign the encrypted data using private key using workers
	 *
	 * @param data {string|Buffer}
	 * @param privateKey {string}
	 * @param [privateKeyPassword = ''] {string}
	 * @returns {Promise}
	 */

	var _buffer = __webpack_require__(19);

	Object.defineProperty(exports, 'Buffer', {
		enumerable: true,
		get: function get() {
			return _buffer.Buffer;
		}
	});

	function signAsync(data, privateKey) {
		var privateKeyPassword = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];

		if (!(_lodash2['default'].isString(data) || Buffer.isBuffer(data))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'data', type: 'String or Buffer' });
		}

		if (!_lodash2['default'].isString(privateKey)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'privateKey', type: 'String' });
		}

		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _sign.sign)(data, privateKey, privateKeyPassword));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			return _cryptoWorkerApi2['default'].sign(CryptoUtils.toBase64(data), CryptoUtils.toBase64(privateKey), privateKeyPassword).then(
			// convert the base64 response to Buffer for support new interface
			function (result) {
				return CryptoUtils.base64ToBuffer(result);
			}, function () {
				return (0, _utilsCryptoErrors.throwVirgilError)('90005', { initialData: data, key: privateKey, password: privateKeyPassword });
			});
		}
	}

	exports['default'] = signAsync;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 124 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (initialData, privateKeyBase64, privateKeyPassword) {
		var deferred = this.deferred();
		var virgilSigner = new VirgilCryptoWorkerContext.VirgilSigner();

		try {
			var dataByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(initialData);
			var privateKeyByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(privateKeyBase64);
			var privateKeyPasswordByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(privateKeyPassword);

			var sign = virgilSigner.sign(dataByteArray, privateKeyByteArray, privateKeyPasswordByteArray);
			var signBase64 = VirgilCryptoWorkerContext.VirgilBase64.encode(sign);

			// cleanup memory to avoid memory leaks
			dataByteArray["delete"]();
			privateKeyByteArray["delete"]();
			privateKeyPasswordByteArray["delete"]();

			deferred.resolve(signBase64);
		} catch (e) {
			deferred.reject(e);
		} finally {
			virgilSigner["delete"]();
		}
	};

	module.exports = exports["default"];

/***/ },
/* 125 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.blobScript = blobScript;

	function blobScript(code) {
		return URL.createObjectURL(new Blob([code], { type: 'text/javascript' }));
	}

	exports['default'] = blobScript;

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports.verifyAsync = verifyAsync;

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _bowser = __webpack_require__(24);

	var _bowser2 = babelHelpers.interopRequireDefault(_bowser);

	var _utilsCryptoUtils = __webpack_require__(3);

	var CryptoUtils = babelHelpers.interopRequireWildcard(_utilsCryptoUtils);

	var _cryptoWorkerApi = __webpack_require__(23);

	var _cryptoWorkerApi2 = babelHelpers.interopRequireDefault(_cryptoWorkerApi);

	var _utilsCryptoErrors = __webpack_require__(5);

	var _verify = __webpack_require__(70);

	var _verify2 = babelHelpers.interopRequireDefault(_verify);

	/**
	 * Verify signed data using public key using workers
	 *
	 * @param data {string|Buffer}
	 * @param publicKey {string}
	 * @param sign {Buffer}
	 * @returns {Promise}
	 */

	function verifyAsync(data, publicKey, sign) {
		if (!(_lodash2['default'].isString(data) || Buffer.isBuffer(data))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'data', type: 'String or Buffer' });
		}

		if (!_lodash2['default'].isString(publicKey)) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'publicKey', type: 'String' });
		}

		if (!(_lodash2['default'].isString(sign) || Buffer.isBuffer(sign))) {
			(0, _utilsCryptoErrors.throwValidationError)('00001', { arg: 'sign', type: 'base64 String or Buffer' });
		}

		if (_bowser2['default'].msie || _bowser2['default'].msedge) {
			return new Promise(function (resolve, reject) {
				try {
					resolve((0, _verify2['default'])(data, publicKey, sign));
				} catch (e) {
					reject(e.message);
				}
			});
		} else {
			sign = Buffer.isBuffer(sign) ? CryptoUtils.toBase64(sign) : sign;

			return _cryptoWorkerApi2['default'].verify(CryptoUtils.toBase64(data), publicKey, sign)['catch'](function () {
				(0, _utilsCryptoErrors.throwVirgilError)('90006', { initialData: data, key: publicKey, sign: sign });
			});
		}
	}

	exports['default'] = verifyAsync;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 127 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	exports["default"] = function (initialData, publicKey, sign) {
		var deferred = this.deferred();
		var virgilSigner = new VirgilCryptoWorkerContext.VirgilSigner();

		try {
			var signByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(sign);
			var dataByteArray = VirgilCryptoWorkerContext.VirgilBase64.decode(initialData);
			var publicKeyByteArray = VirgilCryptoWorkerContext.VirgilByteArray.fromUTF8(publicKey);
			var isVerified = virgilSigner.verify(dataByteArray, signByteArray, publicKeyByteArray);

			// cleanup memory to avoid memory leaks
			dataByteArray["delete"]();
			publicKeyByteArray["delete"]();
			signByteArray["delete"]();

			deferred.resolve(isVerified);
		} catch (e) {
			deferred.reject(e);
		} finally {
			virgilSigner["delete"]();
		}
	};

	module.exports = exports["default"];

/***/ },
/* 128 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function Enum(a) {
		var i = Object.keys(a).reduce(function (o, k) {
			o[a[k]] = k;
			return o;
		}, {});

		return Object.freeze(Object.keys(a).reduce(function (o, k) {
			o[k] = a[k];
			return o;
		}, function (v) {
			return i[v];
		}));
	};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _lodash = __webpack_require__(10);

	var _lodash2 = babelHelpers.interopRequireDefault(_lodash);

	var _es6Error = __webpack_require__(255);

	var _es6Error2 = babelHelpers.interopRequireDefault(_es6Error);

	var VirgilError = (function (_ExtendableError) {
	  babelHelpers.inherits(VirgilError, _ExtendableError);

	  function VirgilError() {
	    var message = arguments.length <= 0 || arguments[0] === undefined ? 'Error' : arguments[0];
	    var code = arguments.length <= 1 || arguments[1] === undefined ? '00000' : arguments[1];
	    babelHelpers.classCallCheck(this, VirgilError);

	    if (_lodash2['default'].isEmpty(message) || !_lodash2['default'].isString(message)) {
	      throw new TypeError('The `message` argument should be a not empty string');
	    }

	    if (_lodash2['default'].isEmpty(code)) {
	      throw new TypeError('The `code` argument should not be empty');
	    }

	    babelHelpers.get(Object.getPrototypeOf(VirgilError.prototype), 'constructor', this).call(this, message);

	    this._message = message;
	    this._code = code;
	  }

	  babelHelpers.createClass(VirgilError, [{
	    key: 'code',
	    set: function set(code) {
	      this._code = code;
	    },
	    get: function get() {
	      return this._code;
	    }
	  }, {
	    key: 'message',
	    set: function set(code) {
	      this._message = code;
	    },
	    get: function get() {
	      return this._message;
	    }
	  }]);
	  return VirgilError;
	})(_es6Error2['default']);

	exports['default'] = VirgilError;
	module.exports = exports['default'];

/***/ },
/* 130 */
/***/ function(module, exports) {

	'use strict';

	module.exports = {
		email: 'email',
		application: 'app'
	};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {'use strict';

	module.exports = function createWrapper(utils) {
		return {
			wrapAll: wrapAll,
			wrapPrototype: wrapPrototype,
			wrapFunction: wrapFunction
		};

		// Add type conversions to all functions / methods
		function wrapAll(library) {
			for (var className in library) {
				wrapPrototype(library[className]);

				// wrap static functions
				for (var member in library[className]) {
					if (typeof library[className][member] === 'function') {
						library[className][member] = wrapFunction(library[className][member]);
					}
				}
			}
		}

		// Add type conversions to class methods
		function wrapPrototype(root, className) {
			// asmjs bindings
			for (var i in root[className].prototype) {
				if (typeof root[className].prototype[i] === 'function') {
					root[className].prototype[i] = wrapFunction(root[className].prototype[i]);
				}
			}

			// Node bindings
			for (var i in root[className].prototype.__proto__) {
				if (typeof root[className].prototype.__proto__[i] === 'function') {
					root[className].prototype.__proto__[i] = wrapFunction(root[className].prototype.__proto__[i]);
				}
			}
		}

		// Wrap function with type conversions
		function wrapFunction(func) {
			return function wrappedFunction() {
				var args = Array.prototype.slice.apply(arguments);

				for (var i in args) {
					// Convert strings and buffer to VirgilByteArray
					if (typeof args[i] === 'string' || Buffer.isBuffer(args[i])) {
						args[i] = utils.toByteArray(args[i]);
					}
				}

				var result = func.apply(this, args);

				// ByteArray
				if (typeof result === 'object') {
					return utils.byteArrayToBuffer(result);
				}

				return result;
			};
		}
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(102);


/***/ },
/* 133 */
/***/ function(module, exports) {

	'use strict'

	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	function init () {
	  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	  for (var i = 0, len = code.length; i < len; ++i) {
	    lookup[i] = code[i]
	    revLookup[code.charCodeAt(i)] = i
	  }

	  revLookup['-'.charCodeAt(0)] = 62
	  revLookup['_'.charCodeAt(0)] = 63
	}

	init()

	function toByteArray (b64) {
	  var i, j, l, tmp, placeHolders, arr
	  var len = b64.length

	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // the number of equal signs (place holders)
	  // if there are two placeholders, than the two characters before it
	  // represent one byte
	  // if there is only one, then the three characters before it represent 2 bytes
	  // this is just a cheap hack to not do indexOf twice
	  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0

	  // base64 is 4/3 + up to two characters of the original data
	  arr = new Arr(len * 3 / 4 - placeHolders)

	  // if there are placeholders, only get up to the last complete 4 chars
	  l = placeHolders > 0 ? len - 4 : len

	  var L = 0

	  for (i = 0, j = 0; i < l; i += 4, j += 3) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
	    arr[L++] = (tmp >> 16) & 0xFF
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  if (placeHolders === 2) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[L++] = tmp & 0xFF
	  } else if (placeHolders === 1) {
	    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[L++] = (tmp >> 8) & 0xFF
	    arr[L++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var output = ''
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    output += lookup[tmp >> 2]
	    output += lookup[(tmp << 4) & 0x3F]
	    output += '=='
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
	    output += lookup[tmp >> 10]
	    output += lookup[(tmp >> 4) & 0x3F]
	    output += lookup[(tmp << 2) & 0x3F]
	    output += '='
	  }

	  parts.push(output)

	  return parts.join('')
	}


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(27)
	  , toIndex  = __webpack_require__(35)
	  , toLength = __webpack_require__(14);

	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , $$    = arguments
	    , end   = $$.length > 2 ? $$[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(27)
	  , toIndex  = __webpack_require__(35)
	  , toLength = __webpack_require__(14);
	module.exports = [].fill || function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , $$     = arguments
	    , $$len  = $$.length
	    , index  = toIndex($$len > 1 ? $$[1] : undefined, length)
	    , end    = $$len > 2 ? $$[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var isObject = __webpack_require__(4)
	  , isArray  = __webpack_require__(50)
	  , SPECIES  = __webpack_require__(8)('species');
	module.exports = function(original, length){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return new (C === undefined ? Array : C)(length);
	};

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var $ = __webpack_require__(2);
	module.exports = function(it){
	  var keys       = $.getKeys(it)
	    , getSymbols = $.getSymbols;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = $.isEnum
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))keys.push(key);
	  }
	  return keys;
	};

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	var $         = __webpack_require__(2)
	  , toIObject = __webpack_require__(18);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = $.getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(9)
	  , macrotask = __webpack_require__(92).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(25)(process) == 'process'
	  , head, last, notify;

	var flush = function(){
	  var parent, domain, fn;
	  if(isNode && (parent = process.domain)){
	    process.domain = null;
	    parent.exit();
	  }
	  while(head){
	    domain = head.domain;
	    fn     = head.fn;
	    if(domain)domain.enter();
	    fn(); // <- currently we use it only for Promise - try / catch not required
	    if(domain)domain.exit();
	    head = head.next;
	  } last = undefined;
	  if(parent)parent.enter();
	};

	// Node.js
	if(isNode){
	  notify = function(){
	    process.nextTick(flush);
	  };
	// browsers with MutationObserver
	} else if(Observer){
	  var toggle = 1
	    , node   = document.createTextNode('');
	  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	  notify = function(){
	    node.data = toggle = -toggle;
	  };
	// environments with maybe non-completely correct, but existent Promise
	} else if(Promise && Promise.resolve){
	  notify = function(){
	    Promise.resolve().then(flush);
	  };
	// for other environments - macrotask based on:
	// - setImmediate
	// - MessageChannel
	// - window.postMessag
	// - onreadystatechange
	// - setTimeout
	} else {
	  notify = function(){
	    // strange IE + webpack dev server bug - use .call(global)
	    macrotask.call(global, flush);
	  };
	}

	module.exports = function asap(fn){
	  var task = {fn: fn, next: undefined, domain: isNode && process.domain};
	  if(last)last.next = task;
	  if(!head){
	    head = task;
	    notify();
	  } last = task;
	};

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.1 Object.assign(target, source, ...)
	var $        = __webpack_require__(2)
	  , toObject = __webpack_require__(27)
	  , IObject  = __webpack_require__(42);

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = __webpack_require__(11)(function(){
	  var a = Object.assign
	    , A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , $$    = arguments
	    , $$len = $$.length
	    , index = 1
	    , getKeys    = $.getKeys
	    , getSymbols = $.getSymbols
	    , isEnum     = $.isEnum;
	  while($$len > index){
	    var S      = IObject($$[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  }
	  return T;
	} : Object.assign;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(142)
	  , invoke    = __webpack_require__(41)
	  , aFunction = __webpack_require__(29);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that  = this
	      , $$    = arguments
	      , $$len = $$.length
	      , j = 0, k = 0, args;
	    if(!holder && !$$len)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = $$[k++];
	    while($$len > k)args.push($$[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(9);

/***/ },
/* 143 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(7)
	  , aFunction = __webpack_require__(29)
	  , SPECIES   = __webpack_require__(8)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(4);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $                 = __webpack_require__(2)
	  , $export           = __webpack_require__(1)
	  , DESCRIPTORS       = __webpack_require__(15)
	  , createDesc        = __webpack_require__(28)
	  , html              = __webpack_require__(78)
	  , cel               = __webpack_require__(75)
	  , has               = __webpack_require__(13)
	  , cof               = __webpack_require__(25)
	  , invoke            = __webpack_require__(41)
	  , fails             = __webpack_require__(11)
	  , anObject          = __webpack_require__(7)
	  , aFunction         = __webpack_require__(29)
	  , isObject          = __webpack_require__(4)
	  , toObject          = __webpack_require__(27)
	  , toIObject         = __webpack_require__(18)
	  , toInteger         = __webpack_require__(36)
	  , toIndex           = __webpack_require__(35)
	  , toLength          = __webpack_require__(14)
	  , IObject           = __webpack_require__(42)
	  , IE_PROTO          = __webpack_require__(31)('__proto__')
	  , createArrayMethod = __webpack_require__(37)
	  , arrayIndexOf      = __webpack_require__(71)(false)
	  , ObjectProto       = Object.prototype
	  , ArrayProto        = Array.prototype
	  , arraySlice        = ArrayProto.slice
	  , arrayJoin         = ArrayProto.join
	  , defineProperty    = $.setDesc
	  , getOwnDescriptor  = $.getDesc
	  , defineProperties  = $.setDescs
	  , factories         = {}
	  , IE8_DOM_DEFINE;

	if(!DESCRIPTORS){
	  IE8_DOM_DEFINE = !fails(function(){
	    return defineProperty(cel('div'), 'a', {get: function(){ return 7; }}).a != 7;
	  });
	  $.setDesc = function(O, P, Attributes){
	    if(IE8_DOM_DEFINE)try {
	      return defineProperty(O, P, Attributes);
	    } catch(e){ /* empty */ }
	    if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	    if('value' in Attributes)anObject(O)[P] = Attributes.value;
	    return O;
	  };
	  $.getDesc = function(O, P){
	    if(IE8_DOM_DEFINE)try {
	      return getOwnDescriptor(O, P);
	    } catch(e){ /* empty */ }
	    if(has(O, P))return createDesc(!ObjectProto.propertyIsEnumerable.call(O, P), O[P]);
	  };
	  $.setDescs = defineProperties = function(O, Properties){
	    anObject(O);
	    var keys   = $.getKeys(Properties)
	      , length = keys.length
	      , i = 0
	      , P;
	    while(length > i)$.setDesc(O, P = keys[i++], Properties[P]);
	    return O;
	  };
	}
	$export($export.S + $export.F * !DESCRIPTORS, 'Object', {
	  // 19.1.2.6 / 15.2.3.3 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $.getDesc,
	  // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	  defineProperty: $.setDesc,
	  // 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	  defineProperties: defineProperties
	});

	  // IE 8- don't enum bug keys
	var keys1 = ('constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,' +
	            'toLocaleString,toString,valueOf').split(',')
	  // Additional keys for getOwnPropertyNames
	  , keys2 = keys1.concat('length', 'prototype')
	  , keysLen1 = keys1.length;

	// Create object with `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = cel('iframe')
	    , i      = keysLen1
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  html.appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write('<script>document.F=Object</script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict.prototype[keys1[i]];
	  return createDict();
	};
	var createGetKeys = function(names, length){
	  return function(object){
	    var O      = toIObject(object)
	      , i      = 0
	      , result = []
	      , key;
	    for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	    // Don't enum bug & hidden keys
	    while(length > i)if(has(O, key = names[i++])){
	      ~arrayIndexOf(result, key) || result.push(key);
	    }
	    return result;
	  };
	};
	var Empty = function(){};
	$export($export.S, 'Object', {
	  // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	  getPrototypeOf: $.getProto = $.getProto || function(O){
	    O = toObject(O);
	    if(has(O, IE_PROTO))return O[IE_PROTO];
	    if(typeof O.constructor == 'function' && O instanceof O.constructor){
	      return O.constructor.prototype;
	    } return O instanceof Object ? ObjectProto : null;
	  },
	  // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $.getNames = $.getNames || createGetKeys(keys2, keys2.length, true),
	  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	  create: $.create = $.create || function(O, /*?*/Properties){
	    var result;
	    if(O !== null){
	      Empty.prototype = anObject(O);
	      result = new Empty();
	      Empty.prototype = null;
	      // add "__proto__" for Object.getPrototypeOf shim
	      result[IE_PROTO] = O;
	    } else result = createDict();
	    return Properties === undefined ? result : defineProperties(result, Properties);
	  },
	  // 19.1.2.14 / 15.2.3.14 Object.keys(O)
	  keys: $.getKeys = $.getKeys || createGetKeys(keys1, keysLen1, false)
	});

	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  }
	  return factories[len](F, args);
	};

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	$export($export.P, 'Function', {
	  bind: function bind(that /*, args... */){
	    var fn       = aFunction(this)
	      , partArgs = arraySlice.call(arguments, 1);
	    var bound = function(/* args... */){
	      var args = partArgs.concat(arraySlice.call(arguments));
	      return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	    };
	    if(isObject(fn.prototype))bound.prototype = fn.prototype;
	    return bound;
	  }
	});

	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * fails(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});
	$export($export.P + $export.F * (IObject != Object), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(IObject(this), separator === undefined ? ',' : separator);
	  }
	});

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	$export($export.S, 'Array', {isArray: __webpack_require__(50)});

	var createArrayReduce = function(isRight){
	  return function(callbackfn, memo){
	    aFunction(callbackfn);
	    var O      = IObject(this)
	      , length = toLength(O.length)
	      , index  = isRight ? length - 1 : 0
	      , i      = isRight ? -1 : 1;
	    if(arguments.length < 2)for(;;){
	      if(index in O){
	        memo = O[index];
	        index += i;
	        break;
	      }
	      index += i;
	      if(isRight ? index < 0 : length <= index){
	        throw TypeError('Reduce of empty array with no initial value');
	      }
	    }
	    for(;isRight ? index >= 0 : length > index; index += i)if(index in O){
	      memo = callbackfn(memo, O[index], index, this);
	    }
	    return memo;
	  };
	};

	var methodize = function($fn){
	  return function(arg1/*, arg2 = undefined */){
	    return $fn(this, arg1, arguments[1]);
	  };
	};

	$export($export.P, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: $.each = $.each || methodize(createArrayMethod(0)),
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: methodize(createArrayMethod(1)),
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: methodize(createArrayMethod(2)),
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: methodize(createArrayMethod(3)),
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: methodize(createArrayMethod(4)),
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: createArrayReduce(false),
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: createArrayReduce(true),
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: methodize(arrayIndexOf),
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function(el, fromIndex /* = @[*-1] */){
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(fromIndex));
	    if(index < 0)index = toLength(length + index);
	    for(;index >= 0; index--)if(index in O)if(O[index] === el)return index;
	    return -1;
	  }
	});

	// 20.3.3.1 / 15.9.4.4 Date.now()
	$export($export.S, 'Date', {now: function(){ return +new Date; }});

	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};

	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(this))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(1);

	$export($export.P, 'Array', {copyWithin: __webpack_require__(134)});

	__webpack_require__(30)('copyWithin');

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(1);

	$export($export.P, 'Array', {fill: __webpack_require__(135)});

	__webpack_require__(30)('fill');

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(1)
	  , $find   = __webpack_require__(37)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(30)(KEY);

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(1)
	  , $find   = __webpack_require__(37)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(30)(KEY);

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx         = __webpack_require__(20)
	  , $export     = __webpack_require__(1)
	  , toObject    = __webpack_require__(27)
	  , call        = __webpack_require__(82)
	  , isArrayIter = __webpack_require__(79)
	  , toLength    = __webpack_require__(14)
	  , getIterFn   = __webpack_require__(93);
	$export($export.S + $export.F * !__webpack_require__(52)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , $$      = arguments
	      , $$len   = $$.length
	      , mapfn   = $$len > 1 ? $$[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        result[index] = mapping ? mapfn(O[index], index) : O[index];
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1);

	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(11)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , $$     = arguments
	      , $$len  = $$.length
	      , result = new (typeof this == 'function' ? this : Array)($$len);
	    while($$len > index)result[index] = $$[index++];
	    result.length = $$len;
	    return result;
	  }
	});

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(44)('Array');

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $             = __webpack_require__(2)
	  , isObject      = __webpack_require__(4)
	  , HAS_INSTANCE  = __webpack_require__(8)('hasInstance')
	  , FunctionProto = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))$.setDesc(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = $.getProto(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var setDesc    = __webpack_require__(2).setDesc
	  , createDesc = __webpack_require__(28)
	  , has        = __webpack_require__(13)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';
	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(15) && setDesc(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    var match = ('' + this).match(nameRE)
	      , name  = match ? match[1] : '';
	    has(this, NAME) || setDesc(this, NAME, createDesc(5, name));
	    return name;
	  }
	});

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(72);

	// 23.1 Map Objects
	__webpack_require__(39)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(1)
	  , log1p   = __webpack_require__(85)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;

	// V8 bug https://code.google.com/p/v8/issues/detail?id=3509
	$export($export.S + $export.F * !($acosh && Math.floor($acosh(Number.MAX_VALUE)) == 710), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(1);

	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}

	$export($export.S, 'Math', {asinh: asinh});

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(1)
	  , sign    = __webpack_require__(55);

	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(1)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {expm1: __webpack_require__(54)});

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(1)
	  , sign      = __webpack_require__(55)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);

	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};


	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(1)
	  , abs     = Math.abs;

	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum   = 0
	      , i     = 0
	      , $$    = arguments
	      , $$len = $$.length
	      , larg  = 0
	      , arg, div;
	    while(i < $$len){
	      arg = abs($$[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(1)
	  , $imul   = Math.imul;

	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(11)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {log1p: __webpack_require__(85)});

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {sign: __webpack_require__(55)});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(1)
	  , expm1   = __webpack_require__(54)
	  , exp     = Math.exp;

	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(11)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(1)
	  , expm1   = __webpack_require__(54)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(1);

	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $           = __webpack_require__(2)
	  , global      = __webpack_require__(9)
	  , has         = __webpack_require__(13)
	  , cof         = __webpack_require__(25)
	  , toPrimitive = __webpack_require__(145)
	  , fails       = __webpack_require__(11)
	  , $trim       = __webpack_require__(46).trim
	  , NUMBER      = 'Number'
	  , $Number     = global[NUMBER]
	  , Base        = $Number
	  , proto       = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF  = cof($.create(proto)) == NUMBER
	  , TRIM        = 'trim' in String.prototype;

	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};

	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? new Base(toNumber(it)) : toNumber(it);
	  };
	  $.each.call(__webpack_require__(15) ? $.getNames(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), function(key){
	    if(has(Base, key) && !has($Number, key)){
	      $.setDesc($Number, key, $.getDesc(Base, key));
	    }
	  });
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(17)(global, NUMBER, $Number);
	}

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(1);

	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(1)
	  , _isFinite = __webpack_require__(9).isFinite;

	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(1);

	$export($export.S, 'Number', {isInteger: __webpack_require__(80)});

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(1);

	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(1)
	  , isInteger = __webpack_require__(80)
	  , abs       = Math.abs;

	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(1);

	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(1);

	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.12 Number.parseFloat(string)
	var $export = __webpack_require__(1);

	$export($export.S, 'Number', {parseFloat: parseFloat});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.13 Number.parseInt(string, radix)
	var $export = __webpack_require__(1);

	$export($export.S, 'Number', {parseInt: parseInt});

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(1);

	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(140)});

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(4);

	__webpack_require__(16)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(it) : it;
	  };
	});

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject = __webpack_require__(18);

	__webpack_require__(16)('getOwnPropertyDescriptor', function($getOwnPropertyDescriptor){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(16)('getOwnPropertyNames', function(){
	  return __webpack_require__(77).get;
	});

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(27);

	__webpack_require__(16)('getPrototypeOf', function($getPrototypeOf){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(4);

	__webpack_require__(16)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(4);

	__webpack_require__(16)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(4);

	__webpack_require__(16)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(1);
	$export($export.S, 'Object', {is: __webpack_require__(88)});

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(27);

	__webpack_require__(16)('keys', function($keys){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(4);

	__webpack_require__(16)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(it) : it;
	  };
	});

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(4);

	__webpack_require__(16)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(it) : it;
	  };
	});

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(1);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(56).set});

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(38)
	  , test    = {};
	test[__webpack_require__(8)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(17)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $          = __webpack_require__(2)
	  , LIBRARY    = __webpack_require__(53)
	  , global     = __webpack_require__(9)
	  , ctx        = __webpack_require__(20)
	  , classof    = __webpack_require__(38)
	  , $export    = __webpack_require__(1)
	  , isObject   = __webpack_require__(4)
	  , anObject   = __webpack_require__(7)
	  , aFunction  = __webpack_require__(29)
	  , strictNew  = __webpack_require__(45)
	  , forOf      = __webpack_require__(32)
	  , setProto   = __webpack_require__(56).set
	  , same       = __webpack_require__(88)
	  , SPECIES    = __webpack_require__(8)('species')
	  , speciesConstructor = __webpack_require__(144)
	  , asap       = __webpack_require__(139)
	  , PROMISE    = 'Promise'
	  , process    = global.process
	  , isNode     = classof(process) == 'process'
	  , P          = global[PROMISE]
	  , Wrapper;

	var testResolve = function(sub){
	  var test = new P(function(){});
	  if(sub)test.constructor = Object;
	  return P.resolve(test) === test;
	};

	var USE_NATIVE = function(){
	  var works = false;
	  function P2(x){
	    var self = new P(x);
	    setProto(self, P2.prototype);
	    return self;
	  }
	  try {
	    works = P && P.resolve && testResolve();
	    setProto(P2, P);
	    P2.prototype = $.create(P.prototype, {constructor: {value: P2}});
	    // actual Firefox has broken subclass support, test that
	    if(!(P2.resolve(5).then(function(){}) instanceof P2)){
	      works = false;
	    }
	    // actual V8 bug, https://code.google.com/p/v8/issues/detail?id=4162
	    if(works && __webpack_require__(15)){
	      var thenableThenGotten = false;
	      P.resolve($.setDesc({}, 'then', {
	        get: function(){ thenableThenGotten = true; }
	      }));
	      works = thenableThenGotten;
	    }
	  } catch(e){ works = false; }
	  return works;
	}();

	// helpers
	var sameConstructor = function(a, b){
	  // library wrapper special case
	  if(LIBRARY && a === P && b === Wrapper)return true;
	  return same(a, b);
	};
	var getConstructor = function(C){
	  var S = anObject(C)[SPECIES];
	  return S != undefined ? S : C;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var PromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve),
	  this.reject  = aFunction(reject)
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(record, isReject){
	  if(record.n)return;
	  record.n = true;
	  var chain = record.c;
	  asap(function(){
	    var value = record.v
	      , ok    = record.s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , result, then;
	      try {
	        if(handler){
	          if(!ok)record.h = true;
	          result = handler === true ? value : handler(value);
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    chain.length = 0;
	    record.n = false;
	    if(isReject)setTimeout(function(){
	      var promise = record.p
	        , handler, console;
	      if(isUnhandled(promise)){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      } record.a = undefined;
	    }, 1);
	  });
	};
	var isUnhandled = function(promise){
	  var record = promise._d
	    , chain  = record.a || record.c
	    , i      = 0
	    , reaction;
	  if(record.h)return false;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var $reject = function(value){
	  var record = this;
	  if(record.d)return;
	  record.d = true;
	  record = record.r || record; // unwrap
	  record.v = value;
	  record.s = 2;
	  record.a = record.c.slice();
	  notify(record, true);
	};
	var $resolve = function(value){
	  var record = this
	    , then;
	  if(record.d)return;
	  record.d = true;
	  record = record.r || record; // unwrap
	  try {
	    if(record.p === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      asap(function(){
	        var wrapper = {r: record, d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      record.v = value;
	      record.s = 1;
	      notify(record, false);
	    }
	  } catch(e){
	    $reject.call({r: record, d: false}, e); // wrap
	  }
	};

	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  P = function Promise(executor){
	    aFunction(executor);
	    var record = this._d = {
	      p: strictNew(this, P, PROMISE),         // <- promise
	      c: [],                                  // <- awaiting reactions
	      a: undefined,                           // <- checked in isUnhandled reactions
	      s: 0,                                   // <- state
	      d: false,                               // <- done
	      v: undefined,                           // <- value
	      h: false,                               // <- handled rejection
	      n: false                                // <- notify
	    };
	    try {
	      executor(ctx($resolve, record, 1), ctx($reject, record, 1));
	    } catch(err){
	      $reject.call(record, err);
	    }
	  };
	  __webpack_require__(43)(P.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction = new PromiseCapability(speciesConstructor(this, P))
	        , promise  = reaction.promise
	        , record   = this._d;
	      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail = typeof onRejected == 'function' && onRejected;
	      record.c.push(reaction);
	      if(record.a)record.a.push(reaction);
	      if(record.s)notify(record, false);
	      return promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: P});
	__webpack_require__(34)(P, PROMISE);
	__webpack_require__(44)(PROMISE);
	Wrapper = __webpack_require__(26)[PROMISE];

	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = new PromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (!USE_NATIVE || testResolve(true)), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof P && sameConstructor(x.constructor, this))return x;
	    var capability = new PromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(52)(function(iter){
	  P.all(iter)['catch'](function(){});
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = getConstructor(this)
	      , capability = new PromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject
	      , values     = [];
	    var abrupt = perform(function(){
	      forOf(iterable, false, values.push, values);
	      var remaining = values.length
	        , results   = Array(remaining);
	      if(remaining)$.each.call(values, function(promise, index){
	        var alreadyCalled = false;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled = true;
	          results[index] = value;
	          --remaining || resolve(results);
	        }, reject);
	      });
	      else resolve(results);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = getConstructor(this)
	      , capability = new PromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export = __webpack_require__(1)
	  , _apply  = Function.apply;

	$export($export.S, 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    return _apply.call(target, thisArgument, argumentsList);
	  }
	});

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $         = __webpack_require__(2)
	  , $export   = __webpack_require__(1)
	  , aFunction = __webpack_require__(29)
	  , anObject  = __webpack_require__(7)
	  , isObject  = __webpack_require__(4)
	  , bind      = Function.bind || __webpack_require__(26).Function.prototype.bind;

	// MS Edge supports only 2 arguments
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	$export($export.S + $export.F * __webpack_require__(11)(function(){
	  function F(){}
	  return !(Reflect.construct(function(){}, [], F) instanceof F);
	}), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      if(args != undefined)switch(anObject(args).length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = $.create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var $        = __webpack_require__(2)
	  , $export  = __webpack_require__(1)
	  , anObject = __webpack_require__(7);

	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(11)(function(){
	  Reflect.defineProperty($.setDesc({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    try {
	      $.setDesc(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(1)
	  , getDesc  = __webpack_require__(2).getDesc
	  , anObject = __webpack_require__(7);

	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = getDesc(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(1)
	  , anObject = __webpack_require__(7);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(83)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});

	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var $        = __webpack_require__(2)
	  , $export  = __webpack_require__(1)
	  , anObject = __webpack_require__(7);

	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return $.getDesc(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(1)
	  , getProto = __webpack_require__(2).getProto
	  , anObject = __webpack_require__(7);

	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var $        = __webpack_require__(2)
	  , has      = __webpack_require__(13)
	  , $export  = __webpack_require__(1)
	  , isObject = __webpack_require__(4)
	  , anObject = __webpack_require__(7);

	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = $.getDesc(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = $.getProto(target)))return get(proto, propertyKey, receiver);
	}

	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(1);

	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(1)
	  , anObject      = __webpack_require__(7)
	  , $isExtensible = Object.isExtensible;

	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(1);

	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(87)});

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(1)
	  , anObject           = __webpack_require__(7)
	  , $preventExtensions = Object.preventExtensions;

	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(1)
	  , setProto = __webpack_require__(56);

	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var $          = __webpack_require__(2)
	  , has        = __webpack_require__(13)
	  , $export    = __webpack_require__(1)
	  , createDesc = __webpack_require__(28)
	  , anObject   = __webpack_require__(7)
	  , isObject   = __webpack_require__(4);

	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = $.getDesc(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = $.getProto(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = $.getDesc(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    $.setDesc(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}

	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var $        = __webpack_require__(2)
	  , global   = __webpack_require__(9)
	  , isRegExp = __webpack_require__(81)
	  , $flags   = __webpack_require__(76)
	  , $RegExp  = global.RegExp
	  , Base     = $RegExp
	  , proto    = $RegExp.prototype
	  , re1      = /a/g
	  , re2      = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW = new $RegExp(re1) !== re1;

	if(__webpack_require__(15) && (!CORRECT_NEW || __webpack_require__(11)(function(){
	  re2[__webpack_require__(8)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !(this instanceof $RegExp) && piRE && p.constructor === $RegExp && fiU ? p
	      : CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f);
	  };
	  $.each.call($.getNames(Base), function(key){
	    key in $RegExp || $.setDesc($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  });
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(17)(global, 'RegExp', $RegExp);
	}

	__webpack_require__(44)('RegExp');

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	var $ = __webpack_require__(2);
	if(__webpack_require__(15) && /./g.flags != 'g')$.setDesc(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(76)
	});

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(40)('match', 1, function(defined, MATCH){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  };
	});

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(40)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  };
	});

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(40)('search', 1, function(defined, SEARCH){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  };
	});

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(40)('split', 2, function(defined, SPLIT, $split){
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return function split(separator, limit){
	    'use strict';
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined
	      ? fn.call(separator, O, limit)
	      : $split.call(String(O), separator, limit);
	  };
	});

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(72);

	// 23.2 Set Objects
	__webpack_require__(39)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $at     = __webpack_require__(57)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(1)
	  , toLength  = __webpack_require__(14)
	  , context   = __webpack_require__(58)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];

	$export($export.P + $export.F * __webpack_require__(49)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , $$   = arguments
	      , endPosition = $$.length > 1 ? $$[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(1)
	  , toIndex        = __webpack_require__(35)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;

	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res   = []
	      , $$    = arguments
	      , $$len = $$.length
	      , i     = 0
	      , code;
	    while($$len > i){
	      code = +$$[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(1)
	  , context  = __webpack_require__(58)
	  , INCLUDES = 'includes';

	$export($export.P + $export.F * __webpack_require__(49)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(57)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(51)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(1)
	  , toIObject = __webpack_require__(18)
	  , toLength  = __webpack_require__(14);

	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl   = toIObject(callSite.raw)
	      , len   = toLength(tpl.length)
	      , $$    = arguments
	      , $$len = $$.length
	      , res   = []
	      , i     = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < $$len)res.push(String($$[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1);

	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(91)
	});

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(1)
	  , toLength    = __webpack_require__(14)
	  , context     = __webpack_require__(58)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];

	$export($export.P + $export.F * __webpack_require__(49)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , $$     = arguments
	      , index  = toLength(Math.min($$.length > 1 ? $$[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(46)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var $              = __webpack_require__(2)
	  , global         = __webpack_require__(9)
	  , has            = __webpack_require__(13)
	  , DESCRIPTORS    = __webpack_require__(15)
	  , $export        = __webpack_require__(1)
	  , redefine       = __webpack_require__(17)
	  , $fails         = __webpack_require__(11)
	  , shared         = __webpack_require__(89)
	  , setToStringTag = __webpack_require__(34)
	  , uid            = __webpack_require__(31)
	  , wks            = __webpack_require__(8)
	  , keyOf          = __webpack_require__(138)
	  , $names         = __webpack_require__(77)
	  , enumKeys       = __webpack_require__(137)
	  , isArray        = __webpack_require__(50)
	  , anObject       = __webpack_require__(7)
	  , toIObject      = __webpack_require__(18)
	  , createDesc     = __webpack_require__(28)
	  , getDesc        = $.getDesc
	  , setDesc        = $.setDesc
	  , _create        = $.create
	  , getNames       = $names.get
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , setter         = false
	  , HIDDEN         = wks('_hidden')
	  , isEnum         = $.isEnum
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , useNative      = typeof $Symbol == 'function'
	  , ObjectProto    = Object.prototype;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(setDesc({}, 'a', {
	    get: function(){ return setDesc(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = getDesc(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  setDesc(it, key, D);
	  if(protoDesc && it !== ObjectProto)setDesc(ObjectProto, key, protoDesc);
	} : setDesc;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol.prototype);
	  sym._k = tag;
	  DESCRIPTORS && setter && setSymbolDesc(ObjectProto, tag, {
	    configurable: true,
	    set: function(value){
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    }
	  });
	  return sym;
	};

	var isSymbol = function(it){
	  return typeof it == 'symbol';
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(D && has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))setDesc(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return setDesc(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key);
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key]
	    ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  var D = getDesc(it = toIObject(it), key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = getNames(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i)if(!has(AllSymbols, key = names[i++]) && key != HIDDEN)result.push(key);
	  return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var names  = getNames(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i)if(has(AllSymbols, key = names[i++]))result.push(AllSymbols[key]);
	  return result;
	};
	var $stringify = function stringify(it){
	  if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	  var args = [it]
	    , i    = 1
	    , $$   = arguments
	    , replacer, $replacer;
	  while($$.length > i)args.push($$[i++]);
	  replacer = args[1];
	  if(typeof replacer == 'function')$replacer = replacer;
	  if($replacer || !isArray(replacer))replacer = function(key, value){
	    if($replacer)value = $replacer.call(this, key, value);
	    if(!isSymbol(value))return value;
	  };
	  args[1] = replacer;
	  return _stringify.apply($JSON, args);
	};
	var buggyJSON = $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	});

	// 19.4.1.1 Symbol([description])
	if(!useNative){
	  $Symbol = function Symbol(){
	    if(isSymbol(this))throw TypeError('Symbol is not a constructor');
	    return wrap(uid(arguments.length > 0 ? arguments[0] : undefined));
	  };
	  redefine($Symbol.prototype, 'toString', function toString(){
	    return this._k;
	  });

	  isSymbol = function(it){
	    return it instanceof $Symbol;
	  };

	  $.create     = $create;
	  $.isEnum     = $propertyIsEnumerable;
	  $.getDesc    = $getOwnPropertyDescriptor;
	  $.setDesc    = $defineProperty;
	  $.setDescs   = $defineProperties;
	  $.getNames   = $names.get = $getOwnPropertyNames;
	  $.getSymbols = $getOwnPropertySymbols;

	  if(DESCRIPTORS && !__webpack_require__(53)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	}

	var symbolStatics = {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    return keyOf(SymbolRegistry, key);
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	};
	// 19.4.2.2 Symbol.hasInstance
	// 19.4.2.3 Symbol.isConcatSpreadable
	// 19.4.2.4 Symbol.iterator
	// 19.4.2.6 Symbol.match
	// 19.4.2.8 Symbol.replace
	// 19.4.2.9 Symbol.search
	// 19.4.2.10 Symbol.species
	// 19.4.2.11 Symbol.split
	// 19.4.2.12 Symbol.toPrimitive
	// 19.4.2.13 Symbol.toStringTag
	// 19.4.2.14 Symbol.unscopables
	$.each.call((
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,' +
	  'species,split,toPrimitive,toStringTag,unscopables'
	).split(','), function(it){
	  var sym = wks(it);
	  symbolStatics[it] = useNative ? sym : wrap(sym);
	});

	setter = true;

	$export($export.G + $export.W, {Symbol: $Symbol});

	$export($export.S, 'Symbol', symbolStatics);

	$export($export.S + $export.F * !useNative, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!useNative || buggyJSON), 'JSON', {stringify: $stringify});

	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $            = __webpack_require__(2)
	  , redefine     = __webpack_require__(17)
	  , weak         = __webpack_require__(74)
	  , isObject     = __webpack_require__(4)
	  , has          = __webpack_require__(13)
	  , frozenStore  = weak.frozenStore
	  , WEAK         = weak.WEAK
	  , isExtensible = Object.isExtensible || isObject
	  , tmp          = {};

	// 23.3 WeakMap Objects
	var $WeakMap = __webpack_require__(39)('WeakMap', function(get){
	  return function WeakMap(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      if(!isExtensible(key))return frozenStore(this).get(key);
	      if(has(key, WEAK))return key[WEAK][this._i];
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	}, weak, true, true);

	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  $.each.call(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on leaky map
	      if(isObject(a) && !isExtensible(a)){
	        var result = frozenStore(this)[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(74);

	// 23.4 WeakSet Objects
	__webpack_require__(39)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(1)
	  , $includes = __webpack_require__(71)(true);

	$export($export.P, 'Array', {
	  // https://github.com/domenic/Array.prototype.includes
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	__webpack_require__(30)('includes');

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(1);

	$export($export.P, 'Map', {toJSON: __webpack_require__(73)('Map')});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// http://goo.gl/XkBrjD
	var $export  = __webpack_require__(1)
	  , $entries = __webpack_require__(86)(true);

	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/WebReflection/9353781
	var $          = __webpack_require__(2)
	  , $export    = __webpack_require__(1)
	  , ownKeys    = __webpack_require__(87)
	  , toIObject  = __webpack_require__(18)
	  , createDesc = __webpack_require__(28);

	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , setDesc = $.setDesc
	      , getDesc = $.getDesc
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key, D;
	    while(keys.length > i){
	      D = getDesc(O, key = keys[i++]);
	      if(key in result)setDesc(result, key, createDesc(0, D));
	      else result[key] = D;
	    } return result;
	  }
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	// http://goo.gl/XkBrjD
	var $export = __webpack_require__(1)
	  , $values = __webpack_require__(86)(false);

	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(1)
	  , $re     = __webpack_require__(143)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(1);

	$export($export.P, 'Set', {toJSON: __webpack_require__(73)('Set')});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(1)
	  , $at     = __webpack_require__(57)(true);

	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $pad    = __webpack_require__(90);

	$export($export.P, 'String', {
	  padLeft: function padLeft(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(1)
	  , $pad    = __webpack_require__(90);

	$export($export.P, 'String', {
	  padRight: function padRight(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(46)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(46)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	});

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// JavaScript 1.6 / Strawman array statics shim
	var $       = __webpack_require__(2)
	  , $export = __webpack_require__(1)
	  , $ctx    = __webpack_require__(20)
	  , $Array  = __webpack_require__(26).Array || Array
	  , statics = {};
	var setStatics = function(keys, length){
	  $.each.call(keys.split(','), function(key){
	    if(length == undefined && key in $Array)statics[key] = $Array[key];
	    else if(key in [])statics[key] = $ctx(Function.call, [][key], length);
	  });
	};
	setStatics('pop,reverse,shift,keys,values,entries', 1);
	setStatics('indexOf,every,some,forEach,map,filter,find,findIndex,includes', 3);
	setStatics('join,slice,concat,push,splice,unshift,sort,lastIndexOf,' +
	           'reduce,reduceRight,copyWithin,fill');
	$export($export.S, 'Array', statics);

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(94);
	var global      = __webpack_require__(9)
	  , hide        = __webpack_require__(22)
	  , Iterators   = __webpack_require__(33)
	  , ITERATOR    = __webpack_require__(8)('iterator')
	  , NL          = global.NodeList
	  , HTC         = global.HTMLCollection
	  , NLProto     = NL && NL.prototype
	  , HTCProto    = HTC && HTC.prototype
	  , ArrayValues = Iterators.NodeList = Iterators.HTMLCollection = Iterators.Array;
	if(NLProto && !NLProto[ITERATOR])hide(NLProto, ITERATOR, ArrayValues);
	if(HTCProto && !HTCProto[ITERATOR])hide(HTCProto, ITERATOR, ArrayValues);

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(1)
	  , $task   = __webpack_require__(92);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(9)
	  , $export    = __webpack_require__(1)
	  , invoke     = __webpack_require__(41)
	  , partial    = __webpack_require__(141)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(146);
	__webpack_require__(229);
	__webpack_require__(184);
	__webpack_require__(192);
	__webpack_require__(196);
	__webpack_require__(197);
	__webpack_require__(185);
	__webpack_require__(195);
	__webpack_require__(194);
	__webpack_require__(190);
	__webpack_require__(191);
	__webpack_require__(189);
	__webpack_require__(186);
	__webpack_require__(188);
	__webpack_require__(193);
	__webpack_require__(187);
	__webpack_require__(155);
	__webpack_require__(154);
	__webpack_require__(174);
	__webpack_require__(175);
	__webpack_require__(176);
	__webpack_require__(177);
	__webpack_require__(178);
	__webpack_require__(179);
	__webpack_require__(180);
	__webpack_require__(181);
	__webpack_require__(182);
	__webpack_require__(183);
	__webpack_require__(157);
	__webpack_require__(158);
	__webpack_require__(159);
	__webpack_require__(160);
	__webpack_require__(161);
	__webpack_require__(162);
	__webpack_require__(163);
	__webpack_require__(164);
	__webpack_require__(165);
	__webpack_require__(166);
	__webpack_require__(167);
	__webpack_require__(168);
	__webpack_require__(169);
	__webpack_require__(170);
	__webpack_require__(171);
	__webpack_require__(172);
	__webpack_require__(173);
	__webpack_require__(222);
	__webpack_require__(225);
	__webpack_require__(228);
	__webpack_require__(224);
	__webpack_require__(220);
	__webpack_require__(221);
	__webpack_require__(223);
	__webpack_require__(226);
	__webpack_require__(227);
	__webpack_require__(151);
	__webpack_require__(152);
	__webpack_require__(94);
	__webpack_require__(153);
	__webpack_require__(147);
	__webpack_require__(148);
	__webpack_require__(150);
	__webpack_require__(149);
	__webpack_require__(213);
	__webpack_require__(214);
	__webpack_require__(215);
	__webpack_require__(216);
	__webpack_require__(217);
	__webpack_require__(218);
	__webpack_require__(198);
	__webpack_require__(156);
	__webpack_require__(219);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(199);
	__webpack_require__(200);
	__webpack_require__(201);
	__webpack_require__(202);
	__webpack_require__(203);
	__webpack_require__(206);
	__webpack_require__(204);
	__webpack_require__(205);
	__webpack_require__(207);
	__webpack_require__(208);
	__webpack_require__(209);
	__webpack_require__(210);
	__webpack_require__(212);
	__webpack_require__(211);
	__webpack_require__(232);
	__webpack_require__(239);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(242);
	__webpack_require__(243);
	__webpack_require__(237);
	__webpack_require__(235);
	__webpack_require__(236);
	__webpack_require__(234);
	__webpack_require__(233);
	__webpack_require__(238);
	__webpack_require__(244);
	__webpack_require__(247);
	__webpack_require__(246);
	__webpack_require__(245);
	module.exports = __webpack_require__(26);

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(95)

	var zeroBuffer = new Buffer(128)
	zeroBuffer.fill(0)

	module.exports = Hmac

	function Hmac (alg, key) {
	  if(!(this instanceof Hmac)) return new Hmac(alg, key)
	  this._opad = opad
	  this._alg = alg

	  var blocksize = (alg === 'sha512') ? 128 : 64

	  key = this._key = !Buffer.isBuffer(key) ? new Buffer(key) : key

	  if(key.length > blocksize) {
	    key = createHash(alg).update(key).digest()
	  } else if(key.length < blocksize) {
	    key = Buffer.concat([key, zeroBuffer], blocksize)
	  }

	  var ipad = this._ipad = new Buffer(blocksize)
	  var opad = this._opad = new Buffer(blocksize)

	  for(var i = 0; i < blocksize; i++) {
	    ipad[i] = key[i] ^ 0x36
	    opad[i] = key[i] ^ 0x5C
	  }

	  this._hash = createHash(alg).update(ipad)
	}

	Hmac.prototype.update = function (data, enc) {
	  this._hash.update(data, enc)
	  return this
	}

	Hmac.prototype.digest = function (enc) {
	  var h = this._hash.digest()
	  return createHash(this._alg).update(this._opad).update(h).digest(enc)
	}


	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var intSize = 4;
	var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
	var chrsz = 8;

	function toArray(buf, bigEndian) {
	  if ((buf.length % intSize) !== 0) {
	    var len = buf.length + (intSize - (buf.length % intSize));
	    buf = Buffer.concat([buf, zeroBuffer], len);
	  }

	  var arr = [];
	  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
	  for (var i = 0; i < buf.length; i += intSize) {
	    arr.push(fn.call(buf, i));
	  }
	  return arr;
	}

	function toBuffer(arr, size, bigEndian) {
	  var buf = new Buffer(size);
	  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
	  for (var i = 0; i < arr.length; i++) {
	    fn.call(buf, arr[i], i * 4, true);
	  }
	  return buf;
	}

	function hash(buf, fn, hashSize, bigEndian) {
	  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
	  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
	  return toBuffer(arr, hashSize, bigEndian);
	}

	module.exports = { hash: hash };

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var rng = __webpack_require__(254)

	function error () {
	  var m = [].slice.call(arguments).join(' ')
	  throw new Error([
	    m,
	    'we accept pull requests',
	    'http://github.com/dominictarr/crypto-browserify'
	    ].join('\n'))
	}

	exports.createHash = __webpack_require__(95)

	exports.createHmac = __webpack_require__(249)

	exports.randomBytes = function(size, callback) {
	  if (callback && callback.call) {
	    try {
	      callback.call(this, undefined, new Buffer(rng(size)))
	    } catch (err) { callback(err) }
	  } else {
	    return new Buffer(rng(size))
	  }
	}

	function each(a, f) {
	  for(var i in a)
	    f(a[i], i)
	}

	exports.getHashes = function () {
	  return ['sha1', 'sha256', 'sha512', 'md5', 'rmd160']
	}

	var p = __webpack_require__(253)(exports)
	exports.pbkdf2 = p.pbkdf2
	exports.pbkdf2Sync = p.pbkdf2Sync


	// the least I can do is make error messages for the rest of the node.js/crypto api.
	each(['createCredentials'
	, 'createCipher'
	, 'createCipheriv'
	, 'createDecipher'
	, 'createDecipheriv'
	, 'createSign'
	, 'createVerify'
	, 'createDiffieHellman'
	], function (name) {
	  exports[name] = function () {
	    error('sorry,', name, 'is not implemented yet')
	  }
	})

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */

	var helpers = __webpack_require__(250);

	/*
	 * Calculate the MD5 of an array of little-endian words, and a bit length
	 */
	function core_md5(x, len)
	{
	  /* append padding */
	  x[len >> 5] |= 0x80 << ((len) % 32);
	  x[(((len + 64) >>> 9) << 4) + 14] = len;

	  var a =  1732584193;
	  var b = -271733879;
	  var c = -1732584194;
	  var d =  271733878;

	  for(var i = 0; i < x.length; i += 16)
	  {
	    var olda = a;
	    var oldb = b;
	    var oldc = c;
	    var oldd = d;

	    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
	    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
	    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
	    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
	    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
	    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
	    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
	    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
	    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
	    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
	    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
	    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
	    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
	    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
	    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
	    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

	    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
	    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
	    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
	    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
	    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
	    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
	    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
	    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
	    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
	    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
	    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
	    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
	    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
	    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
	    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
	    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

	    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
	    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
	    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
	    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
	    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
	    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
	    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
	    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
	    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
	    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
	    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
	    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
	    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
	    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
	    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
	    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

	    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
	    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
	    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
	    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
	    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
	    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
	    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
	    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
	    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
	    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
	    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
	    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
	    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
	    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
	    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
	    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

	    a = safe_add(a, olda);
	    b = safe_add(b, oldb);
	    c = safe_add(c, oldc);
	    d = safe_add(d, oldd);
	  }
	  return Array(a, b, c, d);

	}

	/*
	 * These functions implement the four basic operations the algorithm uses.
	 */
	function md5_cmn(q, a, b, x, s, t)
	{
	  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
	}
	function md5_ff(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
	}
	function md5_gg(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
	}
	function md5_hh(a, b, c, d, x, s, t)
	{
	  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	}
	function md5_ii(a, b, c, d, x, s, t)
	{
	  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
	}

	/*
	 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	 * to work around bugs in some JS interpreters.
	 */
	function safe_add(x, y)
	{
	  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  return (msw << 16) | (lsw & 0xFFFF);
	}

	/*
	 * Bitwise rotate a 32-bit number to the left.
	 */
	function bit_rol(num, cnt)
	{
	  return (num << cnt) | (num >>> (32 - cnt));
	}

	module.exports = function md5(buf) {
	  return helpers.hash(buf, core_md5, 16);
	};


/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	var pbkdf2Export = __webpack_require__(260)

	module.exports = function (crypto, exports) {
	  exports = exports || {}

	  var exported = pbkdf2Export(crypto)

	  exports.pbkdf2 = exported.pbkdf2
	  exports.pbkdf2Sync = exported.pbkdf2Sync

	  return exports
	}


/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, Buffer) {(function() {
	  var g = ('undefined' === typeof window ? global : window) || {}
	  _crypto = (
	    g.crypto || g.msCrypto || __webpack_require__(273)
	  )
	  module.exports = function(size) {
	    // Modern Browsers
	    if(_crypto.getRandomValues) {
	      var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array
	      /* This will not work in older browsers.
	       * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
	       */
	    
	      _crypto.getRandomValues(bytes);
	      return bytes;
	    }
	    else if (_crypto.randomBytes) {
	      return _crypto.randomBytes(size)
	    }
	    else
	      throw new Error(
	        'secure random number generation not supported by this browser\n'+
	        'use chrome, FireFox or Internet Explorer 11'
	      )
	  }
	}())

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(6).Buffer))

/***/ },
/* 255 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ExtendableError = (function (_Error) {
	  _inherits(ExtendableError, _Error);

	  function ExtendableError() {
	    var message = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];

	    _classCallCheck(this, ExtendableError);

	    _get(Object.getPrototypeOf(ExtendableError.prototype), 'constructor', this).call(this, message);

	    // extending Error is weird and does not propagate `message`
	    Object.defineProperty(this, 'message', {
	      enumerable: false,
	      value: message,
	      writable: true
	    });

	    Object.defineProperty(this, 'name', {
	      enumerable: false,
	      value: this.constructor.name
	    });

	    if (Error.hasOwnProperty('captureStackTrace')) {
	      Error.captureStackTrace(this, this.constructor);
	      return;
	    }

	    Object.defineProperty(this, 'stack', {
	      enumerable: false,
	      value: new Error(message).stack
	    });
	  }

	  return ExtendableError;
	})(Error);

	exports['default'] = ExtendableError;
	module.exports = exports['default'];

/***/ },
/* 256 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	;(function (exports) {
		'use strict';

	  var Arr = (typeof Uint8Array !== 'undefined')
	    ? Uint8Array
	    : Array

		var PLUS   = '+'.charCodeAt(0)
		var SLASH  = '/'.charCodeAt(0)
		var NUMBER = '0'.charCodeAt(0)
		var LOWER  = 'a'.charCodeAt(0)
		var UPPER  = 'A'.charCodeAt(0)
		var PLUS_URL_SAFE = '-'.charCodeAt(0)
		var SLASH_URL_SAFE = '_'.charCodeAt(0)

		function decode (elt) {
			var code = elt.charCodeAt(0)
			if (code === PLUS ||
			    code === PLUS_URL_SAFE)
				return 62 // '+'
			if (code === SLASH ||
			    code === SLASH_URL_SAFE)
				return 63 // '/'
			if (code < NUMBER)
				return -1 //no match
			if (code < NUMBER + 10)
				return code - NUMBER + 26 + 26
			if (code < UPPER + 26)
				return code - UPPER
			if (code < LOWER + 26)
				return code - LOWER + 26
		}

		function b64ToByteArray (b64) {
			var i, j, l, tmp, placeHolders, arr

			if (b64.length % 4 > 0) {
				throw new Error('Invalid string. Length must be a multiple of 4')
			}

			// the number of equal signs (place holders)
			// if there are two placeholders, than the two characters before it
			// represent one byte
			// if there is only one, then the three characters before it represent 2 bytes
			// this is just a cheap hack to not do indexOf twice
			var len = b64.length
			placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

			// base64 is 4/3 + up to two characters of the original data
			arr = new Arr(b64.length * 3 / 4 - placeHolders)

			// if there are placeholders, only get up to the last complete 4 chars
			l = placeHolders > 0 ? b64.length - 4 : b64.length

			var L = 0

			function push (v) {
				arr[L++] = v
			}

			for (i = 0, j = 0; i < l; i += 4, j += 3) {
				tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
				push((tmp & 0xFF0000) >> 16)
				push((tmp & 0xFF00) >> 8)
				push(tmp & 0xFF)
			}

			if (placeHolders === 2) {
				tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
				push(tmp & 0xFF)
			} else if (placeHolders === 1) {
				tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
				push((tmp >> 8) & 0xFF)
				push(tmp & 0xFF)
			}

			return arr
		}

		function uint8ToBase64 (uint8) {
			var i,
				extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
				output = "",
				temp, length

			function encode (num) {
				return lookup.charAt(num)
			}

			function tripletToBase64 (num) {
				return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
			}

			// go through the array every three bytes, we'll deal with trailing stuff later
			for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
				temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
				output += tripletToBase64(temp)
			}

			// pad the end with zeros, but make sure to not forget the extra bytes
			switch (extraBytes) {
				case 1:
					temp = uint8[uint8.length - 1]
					output += encode(temp >> 2)
					output += encode((temp << 4) & 0x3F)
					output += '=='
					break
				case 2:
					temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
					output += encode(temp >> 10)
					output += encode((temp >> 4) & 0x3F)
					output += encode((temp << 2) & 0x3F)
					output += '='
					break
			}

			return output
		}

		exports.toByteArray = b64ToByteArray
		exports.fromByteArray = uint8ToBase64
	}( false ? (this.base64js = {}) : exports))


/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(Buffer) {//     uuid.js
	//
	//     Copyright (c) 2010-2012 Robert Kieffer
	//     MIT License - http://opensource.org/licenses/mit-license.php

	/*global window, require, define */
	(function(_window) {
	  'use strict';

	  // Unique ID creation requires a high quality random # generator.  We feature
	  // detect to determine the best RNG source, normalizing to a function that
	  // returns 128-bits of randomness, since that's what's usually required
	  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;

	  function setupBrowser() {
	    // Allow for MSIE11 msCrypto
	    var _crypto = _window.crypto || _window.msCrypto;

	    if (!_rng && _crypto && _crypto.getRandomValues) {
	      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
	      //
	      // Moderately fast, high quality
	      try {
	        var _rnds8 = new Uint8Array(16);
	        _whatwgRNG = _rng = function whatwgRNG() {
	          _crypto.getRandomValues(_rnds8);
	          return _rnds8;
	        };
	        _rng();
	      } catch(e) {}
	    }

	    if (!_rng) {
	      // Math.random()-based (RNG)
	      //
	      // If all else fails, use Math.random().  It's fast, but is of unspecified
	      // quality.
	      var  _rnds = new Array(16);
	      _mathRNG = _rng = function() {
	        for (var i = 0, r; i < 16; i++) {
	          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }
	          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
	        }

	        return _rnds;
	      };
	      if ('undefined' !== typeof console && console.warn) {
	        console.warn("[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()");
	      }
	    }
	  }

	  function setupNode() {
	    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html
	    //
	    // Moderately fast, high quality
	    if (true) {
	      try {
	        var _rb = __webpack_require__(251).randomBytes;
	        _nodeRNG = _rng = _rb && function() {return _rb(16);};
	        _rng();
	      } catch(e) {}
	    }
	  }

	  if (_window) {
	    setupBrowser();
	  } else {
	    setupNode();
	  }

	  // Buffer class to use
	  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;

	  // Maps for number <-> hex string conversion
	  var _byteToHex = [];
	  var _hexToByte = {};
	  for (var i = 0; i < 256; i++) {
	    _byteToHex[i] = (i + 0x100).toString(16).substr(1);
	    _hexToByte[_byteToHex[i]] = i;
	  }

	  // **`parse()` - Parse a UUID into it's component bytes**
	  function parse(s, buf, offset) {
	    var i = (buf && offset) || 0, ii = 0;

	    buf = buf || [];
	    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
	      if (ii < 16) { // Don't overflow!
	        buf[i + ii++] = _hexToByte[oct];
	      }
	    });

	    // Zero out remaining bytes if string was short
	    while (ii < 16) {
	      buf[i + ii++] = 0;
	    }

	    return buf;
	  }

	  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**
	  function unparse(buf, offset) {
	    var i = offset || 0, bth = _byteToHex;
	    return  bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]];
	  }

	  // **`v1()` - Generate time-based UUID**
	  //
	  // Inspired by https://github.com/LiosK/UUID.js
	  // and http://docs.python.org/library/uuid.html

	  // random #'s we need to init node and clockseq
	  var _seedBytes = _rng();

	  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
	  var _nodeId = [
	    _seedBytes[0] | 0x01,
	    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
	  ];

	  // Per 4.2.2, randomize (14 bit) clockseq
	  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

	  // Previous uuid creation time
	  var _lastMSecs = 0, _lastNSecs = 0;

	  // See https://github.com/broofa/node-uuid for API details
	  function v1(options, buf, offset) {
	    var i = buf && offset || 0;
	    var b = buf || [];

	    options = options || {};

	    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;

	    // UUID timestamps are 100 nano-second units since the Gregorian epoch,
	    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
	    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
	    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
	    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();

	    // Per 4.2.1.2, use count of uuid's generated during the current clock
	    // cycle to simulate higher resolution clock
	    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;

	    // Time since last uuid creation (in msecs)
	    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

	    // Per 4.2.1.2, Bump clockseq on clock regression
	    if (dt < 0 && options.clockseq == null) {
	      clockseq = clockseq + 1 & 0x3fff;
	    }

	    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
	    // time interval
	    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {
	      nsecs = 0;
	    }

	    // Per 4.2.1.2 Throw error if too many uuids are requested
	    if (nsecs >= 10000) {
	      throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
	    }

	    _lastMSecs = msecs;
	    _lastNSecs = nsecs;
	    _clockseq = clockseq;

	    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
	    msecs += 12219292800000;

	    // `time_low`
	    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
	    b[i++] = tl >>> 24 & 0xff;
	    b[i++] = tl >>> 16 & 0xff;
	    b[i++] = tl >>> 8 & 0xff;
	    b[i++] = tl & 0xff;

	    // `time_mid`
	    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
	    b[i++] = tmh >>> 8 & 0xff;
	    b[i++] = tmh & 0xff;

	    // `time_high_and_version`
	    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
	    b[i++] = tmh >>> 16 & 0xff;

	    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
	    b[i++] = clockseq >>> 8 | 0x80;

	    // `clock_seq_low`
	    b[i++] = clockseq & 0xff;

	    // `node`
	    var node = options.node || _nodeId;
	    for (var n = 0; n < 6; n++) {
	      b[i + n] = node[n];
	    }

	    return buf ? buf : unparse(b);
	  }

	  // **`v4()` - Generate random UUID**

	  // See https://github.com/broofa/node-uuid for API details
	  function v4(options, buf, offset) {
	    // Deprecated - 'format' argument, as supported in v1.2
	    var i = buf && offset || 0;

	    if (typeof(options) === 'string') {
	      buf = (options === 'binary') ? new BufferClass(16) : null;
	      options = null;
	    }
	    options = options || {};

	    var rnds = options.random || (options.rng || _rng)();

	    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	    rnds[6] = (rnds[6] & 0x0f) | 0x40;
	    rnds[8] = (rnds[8] & 0x3f) | 0x80;

	    // Copy bytes to buffer, if provided
	    if (buf) {
	      for (var ii = 0; ii < 16; ii++) {
	        buf[i + ii] = rnds[ii];
	      }
	    }

	    return buf || unparse(rnds);
	  }

	  // Export public API
	  var uuid = v4;
	  uuid.v1 = v1;
	  uuid.v4 = v4;
	  uuid.parse = parse;
	  uuid.unparse = unparse;
	  uuid.BufferClass = BufferClass;
	  uuid._rng = _rng;
	  uuid._mathRNG = _mathRNG;
	  uuid._nodeRNG = _nodeRNG;
	  uuid._whatwgRNG = _whatwgRNG;

	  if (('undefined' !== typeof module) && module.exports) {
	    // Publish as node.js module
	    module.exports = uuid;
	  } else if (true) {
	    // Publish as AMD module
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {return uuid;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));


	  } else {
	    // Publish as global (in browsers)
	    _previousRoot = _window.uuid;

	    // **`noConflict()` - (browser only) to reset global 'uuid' var**
	    uuid.noConflict = function() {
	      _window.uuid = _previousRoot;
	      return uuid;
	    };

	    _window.uuid = uuid;
	  }
	})('undefined' !== typeof window ? window : null);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 259 */
/***/ function(module, exports) {

	/** Operative v0.4.4 (c) 2013 James padolsey, MIT-licensed, http://github.com/padolsey/operative **/
	(function(){function e(t,n){var o=e.getBaseURL,i=e.getSelfURL,s=e.hasWorkerSupport?e.Operative.BrowserWorker:e.Operative.Iframe;if("function"==typeof t){var a=new s({main:t},n,o,i),u=function(){return a.api.main.apply(a,arguments)};u.transfer=function(){return a.api.main.transfer.apply(a,arguments)};for(var l in a.api)r.call(a.api,l)&&(u[l]=a.api[l]);return u}return new s(t,n,o,i).api}if("undefined"!=typeof window||!self.importScripts){var r={}.hasOwnProperty,t=document.getElementsByTagName("script"),n=t[t.length-1],o=/operative/.test(n.src)&&n.src;e.pool=function(r,t,n){r=0|Math.abs(r)||1;for(var o=[],i=0,s=0;r>s;++s)o.push(e(t,n));return{terminate:function(){for(var e=0;r>e;++e)o[e].destroy()},next:function(){return i=i+1===r?0:i+1,o[i]}}},e.hasWorkerSupport=!!window.Worker,e.hasWorkerViaBlobSupport=!1,e.hasTransferSupport=!1;var i=(location.protocol+"//"+location.hostname+(location.port?":"+location.port:"")+location.pathname).replace(/[^\/]+$/,"");e.objCreate=Object.create||function(e){function r(){}return r.prototype=e,new r},e.setSelfURL=function(e){o=e},e.getSelfURL=function(){return o},e.setBaseURL=function(e){i=e},e.getBaseURL=function(){return i},window.operative=e}})(),function(){function e(e){this.value=e}function r(e,r,n,o){var i=this;e.get=e.get||function(e){return this[e]},e.set=e.set||function(e,r){return this[e]=r},this._curToken=0,this._queue=[],this._getBaseURL=n,this._getSelfURL=o,this.isDestroyed=!1,this.isContextReady=!1,this.module=e,this.dependencies=r||[],this.dataProperties={},this.api={},this.callbacks={},this.deferreds={},this._fixDependencyURLs(),this._setup();for(var s in e)t.call(e,s)&&this._createExposedMethod(s);this.api.__operative__=this,this.api.destroy=this.api.terminate=function(){return i.destroy()}}if("undefined"!=typeof window||!self.importScripts){var t={}.hasOwnProperty,n=[].slice,o={}.toString;operative.Operative=r;var i=r.Promise=window.Promise;r.prototype={_marshal:function(e){return e},_demarshal:function(e){return e},_enqueue:function(e){this._queue.push(e)},_fixDependencyURLs:function(){for(var e=this.dependencies,r=0,t=e.length;t>r;++r){var n=e[r];/\/\//.test(n)||(e[r]=n.replace(/^\/?/,this._getBaseURL().replace(/([^\/])$/,"$1/")))}},_dequeueAll:function(){for(var e=0,r=this._queue.length;r>e;++e)this._queue[e].call(this);this._queue=[]},_buildContextScript:function(e){var r,t=[],n=this.module,o=this.dataProperties;for(var i in n)r=n[i],"function"==typeof r?t.push('	self["'+i.replace(/"/g,'\\"')+'"] = '+(""+r)+";"):o[i]=r;return t.join("\n")+(e?"\n("+(""+e)+"());":"")},_createExposedMethod:function(r){var t=this,s=this.api[r]=function(){function o(){t.isContextReady?t._runMethod(r,s,a,l):t._enqueue(o)}if(t.isDestroyed)throw Error("Operative: Cannot run method. Operative has already been destroyed");var s=++t._curToken,a=n.call(arguments),u="function"==typeof a[a.length-1]&&a.pop(),l=a[a.length-1]instanceof e&&a.pop();if(!u&&!i)throw Error("Operative: No callback has been passed. Assumed that you want a promise. But `operative.Promise` is null. Please provide Promise polyfill/lib.");if(u)t.callbacks[s]=u,setTimeout(function(){o()},1);else if(i)return new i(function(e,r){var n;e.fulfil||e.fulfill?(n=e,n.fulfil=n.fulfill=e.fulfil||e.fulfill):n={fulfil:e,fulfill:e,resolve:e,reject:r,transferResolve:e,transferReject:r},t.deferreds[s]=n,o()})};s.transfer=function(){var r=[].slice.call(arguments),t="function"==typeof r[r.length-1]?r.length-2:r.length-1,n=r[t],i=o.call(n);if("[object Array]"!==i)throw Error("Operative:transfer() must be passed an Array of transfers as its last arguments (Expected: [object Array], Received: "+i+")");return r[t]=new e(n),s.apply(null,r)}},destroy:function(){this.isDestroyed=!0}}}}(),function(){function makeBlobURI(e){var r;try{r=new Blob([e],{type:"text/javascript"})}catch(t){r=new BlobBuilder,r.append(e),r=r.getBlob()}return URL.createObjectURL(r)}function workerBoilerScript(){var postMessage=self.postMessage,structuredCloningSupport=null,toString={}.toString;self.console={},self.isWorker=!0,["log","debug","error","info","warn","time","timeEnd"].forEach(function(e){self.console[e]=function(){postMessage({cmd:"console",method:e,args:[].slice.call(arguments)})}}),self.addEventListener("message",function(e){function callback(){returnResult({args:[].slice.call(arguments)})}function returnResult(e,r){postMessage({cmd:"result",token:data.token,result:e},hasTransferSupport&&r||[])}function extractTransfers(e){var r=e[e.length-1];if("[object Array]"!==toString.call(r))throw Error("Operative: callback.transfer() must be passed an Array of transfers as its last arguments");return r}var data=e.data;if("string"==typeof data&&0===data.indexOf("EVAL|"))return eval(data.substring(5)),void 0;if(null==structuredCloningSupport)return structuredCloningSupport="PING"===e.data[0],self.postMessage(structuredCloningSupport?"pingback:structuredCloningSupport=YES":"pingback:structuredCloningSupport=NO"),structuredCloningSupport||(postMessage=function(e){return self.postMessage(JSON.stringify(e))}),void 0;structuredCloningSupport||(data=JSON.parse(data));var defs=data.definitions,isDeferred=!1,args=data.args;if(defs)for(var i in defs)self[i]=defs[i];else{callback.transfer=function(){var e=[].slice.call(arguments),r=extractTransfers(e);returnResult({args:e},r)},args.push(callback),self.deferred=function(){function e(e,r){return returnResult({isDeferred:!0,action:"resolve",args:[e]},r),t}function r(e,r){returnResult({isDeferred:!0,action:"reject",args:[e]},r)}isDeferred=!0;var t={};return t.fulfil=t.fulfill=t.resolve=function(r){return e(r)},t.reject=function(e){return r(e)},t.transferResolve=function(r){var t=extractTransfers(arguments);return e(r,t)},t.transferReject=function(e){var t=extractTransfers(arguments);return r(e,t)},t};var result=self[data.method].apply(self,args);isDeferred||void 0===result||returnResult({args:[result]}),self.deferred=function(){throw Error("Operative: deferred() called at odd time")}}})}if("undefined"==typeof window&&self.importScripts)return workerBoilerScript(),void 0;var Operative=operative.Operative,URL=window.URL||window.webkitURL,BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,workerViaBlobSupport=function(){try{new Worker(makeBlobURI(";"))}catch(e){return!1}return!0}(),transferrableObjSupport=function(){try{var e=new ArrayBuffer(1);return new Worker(makeBlobURI(";")).postMessage(e,[e]),!e.byteLength}catch(r){return!1}}();operative.hasWorkerViaBlobSupport=workerViaBlobSupport,operative.hasTransferSupport=transferrableObjSupport,Operative.BrowserWorker=function BrowserWorker(){Operative.apply(this,arguments)};var WorkerProto=Operative.BrowserWorker.prototype=operative.objCreate(Operative.prototype);WorkerProto._onWorkerMessage=function(e){var r=e.data;if("string"==typeof r&&0===r.indexOf("pingback"))return"pingback:structuredCloningSupport=NO"===r&&(this._marshal=function(e){return JSON.stringify(e)},this._demarshal=function(e){return JSON.parse(e)}),this.isContextReady=!0,this._postMessage({definitions:this.dataProperties}),this._dequeueAll(),void 0;switch(r=this._demarshal(r),r.cmd){case"console":window.console&&window.console[r.method].apply(window.console,r.args);break;case"result":var t=this.callbacks[r.token],n=this.deferreds[r.token],o=r.result&&r.result.isDeferred&&r.result.action;n&&o?n[o](r.result.args[0]):t?t.apply(this,r.result.args):n&&n.fulfil(r.result.args[0])}},WorkerProto._isWorkerViaBlobSupported=function(){return workerViaBlobSupport},WorkerProto._setup=function(){var e,r=this,t=this._getSelfURL(),n=this._isWorkerViaBlobSupported(),o=this._buildContextScript(n?workerBoilerScript:"");if(this.dependencies.length&&(o='importScripts("'+this.dependencies.join('", "')+'");\n'+o),n)e=this.worker=new Worker(makeBlobURI(o));else{if(!t)throw Error("Operaritve: No operative.js URL available. Please set via operative.setSelfURL(...)");e=this.worker=new Worker(t),e.postMessage("EVAL|"+o)}e.postMessage("EVAL|self.hasTransferSupport="+transferrableObjSupport),e.postMessage(["PING"]),e.addEventListener("message",function(e){r._onWorkerMessage(e)})},WorkerProto._postMessage=function(e){var r=transferrableObjSupport&&e.transfers;return r?this.worker.postMessage(e,r.value):this.worker.postMessage(this._marshal(e))},WorkerProto._runMethod=function(e,r,t,n){this._postMessage({method:e,args:t,token:r,transfers:n})},WorkerProto.destroy=function(){this.worker.terminate(),Operative.prototype.destroy.call(this)}}(),function(){function e(){window.__run__=function(e,r,t,n){function o(){return t.apply(this,arguments)}var i=!1;window.deferred=function(){return i=!0,n},o.transfer=function(){return t.apply(this,[].slice.call(arguments,0,arguments.length-1))},t&&r.push(o);var s=window[e].apply(window,r);window.deferred=function(){throw Error("Operative: deferred() called at odd time")},i||void 0===s||o(s)}}if("undefined"!=typeof window||!self.importScripts){var r=operative.Operative;r.Iframe=function(){r.apply(this,arguments)};var t=r.Iframe.prototype=operative.objCreate(r.prototype),n=0;t._setup=function(){var r=this,t="__operativeIFrameLoaded"+ ++n;this.module.isWorker=!1;var o=this.iframe=document.body.appendChild(document.createElement("iframe"));o.style.display="none";var i=this.iframeWindow=o.contentWindow,s=i.document;window[t]=function(){window[t]=null;var n=s.createElement("script"),o=r._buildContextScript(e);void 0!==n.text?n.text=o:n.innerHTML=o,s.documentElement.appendChild(n);for(var a in r.dataProperties)i[a]=r.dataProperties[a];r.isContextReady=!0,r._dequeueAll()},s.open();var a="";this.dependencies.length&&(a+='\n<script src="'+this.dependencies.join('"></script><script src="')+'"></script>'),s.write(a+"\n<script>setTimeout(window.parent."+t+",0);</script>"),s.close()},t._runMethod=function(e,r,t){var n=this,o=this.callbacks[r],i=this.deferreds[r];this.iframeWindow.__run__(e,t,function(e){var r=o,t=i;r?r.apply(n,arguments):t&&t.fulfil(e)},i)},t.destroy=function(){this.iframe.parentNode.removeChild(this.iframe),r.prototype.destroy.call(this)}}}();

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function(crypto) {
	  function pbkdf2(password, salt, iterations, keylen, digest, callback) {
	    if ('function' === typeof digest) {
	      callback = digest
	      digest = undefined
	    }

	    if ('function' !== typeof callback)
	      throw new Error('No callback provided to pbkdf2')

	    setTimeout(function() {
	      var result

	      try {
	        result = pbkdf2Sync(password, salt, iterations, keylen, digest)
	      } catch (e) {
	        return callback(e)
	      }

	      callback(undefined, result)
	    })
	  }

	  function pbkdf2Sync(password, salt, iterations, keylen, digest) {
	    if ('number' !== typeof iterations)
	      throw new TypeError('Iterations not a number')

	    if (iterations < 0)
	      throw new TypeError('Bad iterations')

	    if ('number' !== typeof keylen)
	      throw new TypeError('Key length not a number')

	    if (keylen < 0)
	      throw new TypeError('Bad key length')

	    digest = digest || 'sha1'

	    if (!Buffer.isBuffer(password)) password = new Buffer(password)
	    if (!Buffer.isBuffer(salt)) salt = new Buffer(salt)

	    var hLen, l = 1, r, T
	    var DK = new Buffer(keylen)
	    var block1 = new Buffer(salt.length + 4)
	    salt.copy(block1, 0, 0, salt.length)

	    for (var i = 1; i <= l; i++) {
	      block1.writeUInt32BE(i, salt.length)

	      var U = crypto.createHmac(digest, password).update(block1).digest()

	      if (!hLen) {
	        hLen = U.length
	        T = new Buffer(hLen)
	        l = Math.ceil(keylen / hLen)
	        r = keylen - (l - 1) * hLen

	        if (keylen > (Math.pow(2, 32) - 1) * hLen)
	          throw new TypeError('keylen exceeds maximum length')
	      }

	      U.copy(T, 0, 0, hLen)

	      for (var j = 1; j < iterations; j++) {
	        U = crypto.createHmac(digest, password).update(U).digest()

	        for (var k = 0; k < hLen; k++) {
	          T[k] ^= U[k]
	        }
	      }

	      var destPos = (i - 1) * hLen
	      var len = (i == l ? r : hLen)
	      T.copy(DK, destPos, 0, len)
	    }

	    return DK
	  }

	  return {
	    pbkdf2: pbkdf2,
	    pbkdf2Sync: pbkdf2Sync
	  }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 261 */
/***/ function(module, exports) {

	module.exports = "\"use strict\";\n\nModule = Module || {};\nModule.onRuntimeInitialized = function () {};\nvar VirgilCryptoWorkerContext = Module;"

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */

	!(function(global) {
	  "use strict";

	  var hasOwn = Object.prototype.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var iteratorSymbol =
	    typeof Symbol === "function" && Symbol.iterator || "@@iterator";

	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }

	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided, then outerFn.prototype instanceof Generator.
	    var generator = Object.create((outerFn || Generator).prototype);
	    var context = new Context(tryLocsList || []);

	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);

	    return generator;
	  }
	  runtime.wrap = wrap;

	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }

	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";

	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};

	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}

	  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunction.displayName = "GeneratorFunction";

	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }

	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };

	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };

	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `value instanceof AwaitArgument` to determine if the yielded value is
	  // meant to be awaited. Some may consider the name of this method too
	  // cutesy, but they are curmudgeons.
	  runtime.awrap = function(arg) {
	    return new AwaitArgument(arg);
	  };

	  function AwaitArgument(arg) {
	    this.arg = arg;
	  }

	  function AsyncIterator(generator) {
	    // This invoke function is written in a style that assumes some
	    // calling function (or Promise) will handle exceptions.
	    function invoke(method, arg) {
	      var result = generator[method](arg);
	      var value = result.value;
	      return value instanceof AwaitArgument
	        ? Promise.resolve(value.arg).then(invokeNext, invokeThrow)
	        : Promise.resolve(value).then(function(unwrapped) {
	            // When a yielded Promise is resolved, its final value becomes
	            // the .value of the Promise<{value,done}> result for the
	            // current iteration. If the Promise is rejected, however, the
	            // result for this iteration will be rejected with the same
	            // reason. Note that rejections of yielded Promises are not
	            // thrown back into the generator function, as is the case
	            // when an awaited Promise is rejected. This difference in
	            // behavior between yield and await is important, because it
	            // allows the consumer to decide what to do with the yielded
	            // rejection (swallow it and continue, manually .throw it back
	            // into the generator, abandon iteration, whatever). With
	            // await, by contrast, there is no opportunity to examine the
	            // rejection reason outside the generator function, so the
	            // only option is to throw it from the await expression, and
	            // let the generator function handle the exception.
	            result.value = unwrapped;
	            return result;
	          });
	    }

	    if (typeof process === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }

	    var invokeNext = invoke.bind(generator, "next");
	    var invokeThrow = invoke.bind(generator, "throw");
	    var invokeReturn = invoke.bind(generator, "return");
	    var previousPromise;

	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return invoke(method, arg);
	      }

	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : new Promise(function (resolve) {
	          resolve(callInvokeWithMethodAndArg());
	        });
	    }

	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }

	  defineIteratorMethods(AsyncIterator.prototype);

	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );

	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };

	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;

	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }

	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }

	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }

	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          if (method === "return" ||
	              (method === "throw" && delegate.iterator[method] === undefined)) {
	            // A return or throw (when the delegate iterator has no throw
	            // method) always terminates the yield* loop.
	            context.delegate = null;

	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            var returnMethod = delegate.iterator["return"];
	            if (returnMethod) {
	              var record = tryCatch(returnMethod, delegate.iterator, arg);
	              if (record.type === "throw") {
	                // If the return method threw an exception, let that
	                // exception prevail over the original return or throw.
	                method = "throw";
	                arg = record.arg;
	                continue;
	              }
	            }

	            if (method === "return") {
	              // Continue with the outer return, now that the delegate
	              // iterator has been terminated.
	              continue;
	            }
	          }

	          var record = tryCatch(
	            delegate.iterator[method],
	            delegate.iterator,
	            arg
	          );

	          if (record.type === "throw") {
	            context.delegate = null;

	            // Like returning generator.throw(uncaught), but without the
	            // overhead of an extra function call.
	            method = "throw";
	            arg = record.arg;
	            continue;
	          }

	          // Delegate generator ran and handled its own exceptions so
	          // regardless of what the method was, we continue as if it is
	          // "next" with an undefined arg.
	          method = "next";
	          arg = undefined;

	          var info = record.arg;
	          if (info.done) {
	            context[delegate.resultName] = info.value;
	            context.next = delegate.nextLoc;
	          } else {
	            state = GenStateSuspendedYield;
	            return info;
	          }

	          context.delegate = null;
	        }

	        if (method === "next") {
	          if (state === GenStateSuspendedYield) {
	            context.sent = arg;
	          } else {
	            context.sent = undefined;
	          }

	        } else if (method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw arg;
	          }

	          if (context.dispatchException(arg)) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            method = "next";
	            arg = undefined;
	          }

	        } else if (method === "return") {
	          context.abrupt("return", arg);
	        }

	        state = GenStateExecuting;

	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;

	          var info = {
	            value: record.arg,
	            done: context.done
	          };

	          if (record.arg === ContinueSentinel) {
	            if (context.delegate && method === "next") {
	              // Deliberately forget the last sent value so that we don't
	              // accidentally pass it on to the delegate.
	              arg = undefined;
	            }
	          } else {
	            return info;
	          }

	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(arg) call above.
	          method = "throw";
	          arg = record.arg;
	        }
	      }
	    };
	  }

	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);

	  Gp[iteratorSymbol] = function() {
	    return this;
	  };

	  Gp.toString = function() {
	    return "[object Generator]";
	  };

	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };

	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }

	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }

	    this.tryEntries.push(entry);
	  }

	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }

	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }

	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();

	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }

	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };

	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }

	      if (typeof iterable.next === "function") {
	        return iterable;
	      }

	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }

	          next.value = undefined;
	          next.done = true;

	          return next;
	        };

	        return next.next = next;
	      }
	    }

	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;

	  function doneResult() {
	    return { value: undefined, done: true };
	  }

	  Context.prototype = {
	    constructor: Context,

	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      this.sent = undefined;
	      this.done = false;
	      this.delegate = null;

	      this.tryEntries.forEach(resetTryEntry);

	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },

	    stop: function() {
	      this.done = true;

	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }

	      return this.rval;
	    },

	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }

	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	        return !!caught;
	      }

	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;

	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }

	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");

	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }

	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }

	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },

	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }

	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }

	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;

	      if (finallyEntry) {
	        this.next = finallyEntry.finallyLoc;
	      } else {
	        this.complete(record);
	      }

	      return ContinueSentinel;
	    },

	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }

	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = record.arg;
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	    },

	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },

	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }

	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },

	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };

	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(98)))

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {
	module.exports = ripemd160



	/*
	CryptoJS v3.1.2
	code.google.com/p/crypto-js
	(c) 2009-2013 by Jeff Mott. All rights reserved.
	code.google.com/p/crypto-js/wiki/License
	*/
	/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

	// Constants table
	var zl = [
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
	    7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
	    3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
	    1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
	    4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13];
	var zr = [
	    5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
	    6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
	    15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
	    8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
	    12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11];
	var sl = [
	     11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
	    7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
	    11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
	      11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
	    9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ];
	var sr = [
	    8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
	    9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
	    9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
	    15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
	    8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ];

	var hl =  [ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E];
	var hr =  [ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000];

	var bytesToWords = function (bytes) {
	  var words = [];
	  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
	    words[b >>> 5] |= bytes[i] << (24 - b % 32);
	  }
	  return words;
	};

	var wordsToBytes = function (words) {
	  var bytes = [];
	  for (var b = 0; b < words.length * 32; b += 8) {
	    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
	  }
	  return bytes;
	};

	var processBlock = function (H, M, offset) {

	  // Swap endian
	  for (var i = 0; i < 16; i++) {
	    var offset_i = offset + i;
	    var M_offset_i = M[offset_i];

	    // Swap
	    M[offset_i] = (
	        (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	        (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	    );
	  }

	  // Working variables
	  var al, bl, cl, dl, el;
	  var ar, br, cr, dr, er;

	  ar = al = H[0];
	  br = bl = H[1];
	  cr = cl = H[2];
	  dr = dl = H[3];
	  er = el = H[4];
	  // Computation
	  var t;
	  for (var i = 0; i < 80; i += 1) {
	    t = (al +  M[offset+zl[i]])|0;
	    if (i<16){
	        t +=  f1(bl,cl,dl) + hl[0];
	    } else if (i<32) {
	        t +=  f2(bl,cl,dl) + hl[1];
	    } else if (i<48) {
	        t +=  f3(bl,cl,dl) + hl[2];
	    } else if (i<64) {
	        t +=  f4(bl,cl,dl) + hl[3];
	    } else {// if (i<80) {
	        t +=  f5(bl,cl,dl) + hl[4];
	    }
	    t = t|0;
	    t =  rotl(t,sl[i]);
	    t = (t+el)|0;
	    al = el;
	    el = dl;
	    dl = rotl(cl, 10);
	    cl = bl;
	    bl = t;

	    t = (ar + M[offset+zr[i]])|0;
	    if (i<16){
	        t +=  f5(br,cr,dr) + hr[0];
	    } else if (i<32) {
	        t +=  f4(br,cr,dr) + hr[1];
	    } else if (i<48) {
	        t +=  f3(br,cr,dr) + hr[2];
	    } else if (i<64) {
	        t +=  f2(br,cr,dr) + hr[3];
	    } else {// if (i<80) {
	        t +=  f1(br,cr,dr) + hr[4];
	    }
	    t = t|0;
	    t =  rotl(t,sr[i]) ;
	    t = (t+er)|0;
	    ar = er;
	    er = dr;
	    dr = rotl(cr, 10);
	    cr = br;
	    br = t;
	  }
	  // Intermediate hash value
	  t    = (H[1] + cl + dr)|0;
	  H[1] = (H[2] + dl + er)|0;
	  H[2] = (H[3] + el + ar)|0;
	  H[3] = (H[4] + al + br)|0;
	  H[4] = (H[0] + bl + cr)|0;
	  H[0] =  t;
	};

	function f1(x, y, z) {
	  return ((x) ^ (y) ^ (z));
	}

	function f2(x, y, z) {
	  return (((x)&(y)) | ((~x)&(z)));
	}

	function f3(x, y, z) {
	  return (((x) | (~(y))) ^ (z));
	}

	function f4(x, y, z) {
	  return (((x) & (z)) | ((y)&(~(z))));
	}

	function f5(x, y, z) {
	  return ((x) ^ ((y) |(~(z))));
	}

	function rotl(x,n) {
	  return (x<<n) | (x>>>(32-n));
	}

	function ripemd160(message) {
	  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];

	  if (typeof message == 'string')
	    message = new Buffer(message, 'utf8');

	  var m = bytesToWords(message);

	  var nBitsLeft = message.length * 8;
	  var nBitsTotal = message.length * 8;

	  // Add padding
	  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	      (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
	      (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
	  );

	  for (var i=0 ; i<m.length; i += 16) {
	    processBlock(H, m, i);
	  }

	  // Swap endian
	  for (var i = 0; i < 5; i++) {
	      // Shortcut
	    var H_i = H[i];

	    // Swap
	    H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	  }

	  var digestbytes = wordsToBytes(H);
	  return new Buffer(digestbytes);
	}



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6).Buffer))

/***/ },
/* 264 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	module.exports = function(src) {
		if (typeof execScript === "function")
			execScript(src);
		else
			eval.call(null, src);
	}

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(264)(__webpack_require__(99))

/***/ },
/* 266 */
/***/ function(module, exports) {

	module.exports = function (Buffer) {

	  //prototype class for hash functions
	  function Hash (blockSize, finalSize) {
	    this._block = new Buffer(blockSize) //new Uint32Array(blockSize/4)
	    this._finalSize = finalSize
	    this._blockSize = blockSize
	    this._len = 0
	    this._s = 0
	  }

	  Hash.prototype.init = function () {
	    this._s = 0
	    this._len = 0
	  }

	  Hash.prototype.update = function (data, enc) {
	    if ("string" === typeof data) {
	      enc = enc || "utf8"
	      data = new Buffer(data, enc)
	    }

	    var l = this._len += data.length
	    var s = this._s = (this._s || 0)
	    var f = 0
	    var buffer = this._block

	    while (s < l) {
	      var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
	      var ch = (t - f)

	      for (var i = 0; i < ch; i++) {
	        buffer[(s % this._blockSize) + i] = data[i + f]
	      }

	      s += ch
	      f += ch

	      if ((s % this._blockSize) === 0) {
	        this._update(buffer)
	      }
	    }
	    this._s = s

	    return this
	  }

	  Hash.prototype.digest = function (enc) {
	    // Suppose the length of the message M, in bits, is l
	    var l = this._len * 8

	    // Append the bit 1 to the end of the message
	    this._block[this._len % this._blockSize] = 0x80

	    // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
	    this._block.fill(0, this._len % this._blockSize + 1)

	    if (l % (this._blockSize * 8) >= this._finalSize * 8) {
	      this._update(this._block)
	      this._block.fill(0)
	    }

	    // to this append the block which is equal to the number l written in binary
	    // TODO: handle case where l is > Math.pow(2, 29)
	    this._block.writeInt32BE(l, this._blockSize - 4)

	    var hash = this._update(this._block) || this._hash()

	    return enc ? hash.toString(enc) : hash
	  }

	  Hash.prototype._update = function () {
	    throw new Error('_update must be implemented by subclass')
	  }

	  return Hash
	}


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var exports = module.exports = function (alg) {
	  var Alg = exports[alg]
	  if(!Alg) throw new Error(alg + ' is not supported (we accept pull requests)')
	  return new Alg()
	}

	var Buffer = __webpack_require__(19).Buffer
	var Hash   = __webpack_require__(266)(Buffer)

	exports.sha1 = __webpack_require__(268)(Buffer, Hash)
	exports.sha256 = __webpack_require__(269)(Buffer, Hash)
	exports.sha512 = __webpack_require__(270)(Buffer, Hash)


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
	 * in FIPS PUB 180-1
	 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for details.
	 */

	var inherits = __webpack_require__(59).inherits

	module.exports = function (Buffer, Hash) {

	  var A = 0|0
	  var B = 4|0
	  var C = 8|0
	  var D = 12|0
	  var E = 16|0

	  var W = new (typeof Int32Array === 'undefined' ? Array : Int32Array)(80)

	  var POOL = []

	  function Sha1 () {
	    if(POOL.length)
	      return POOL.pop().init()

	    if(!(this instanceof Sha1)) return new Sha1()
	    this._w = W
	    Hash.call(this, 16*4, 14*4)

	    this._h = null
	    this.init()
	  }

	  inherits(Sha1, Hash)

	  Sha1.prototype.init = function () {
	    this._a = 0x67452301
	    this._b = 0xefcdab89
	    this._c = 0x98badcfe
	    this._d = 0x10325476
	    this._e = 0xc3d2e1f0

	    Hash.prototype.init.call(this)
	    return this
	  }

	  Sha1.prototype._POOL = POOL
	  Sha1.prototype._update = function (X) {

	    var a, b, c, d, e, _a, _b, _c, _d, _e

	    a = _a = this._a
	    b = _b = this._b
	    c = _c = this._c
	    d = _d = this._d
	    e = _e = this._e

	    var w = this._w

	    for(var j = 0; j < 80; j++) {
	      var W = w[j] = j < 16 ? X.readInt32BE(j*4)
	        : rol(w[j - 3] ^ w[j -  8] ^ w[j - 14] ^ w[j - 16], 1)

	      var t = add(
	        add(rol(a, 5), sha1_ft(j, b, c, d)),
	        add(add(e, W), sha1_kt(j))
	      )

	      e = d
	      d = c
	      c = rol(b, 30)
	      b = a
	      a = t
	    }

	    this._a = add(a, _a)
	    this._b = add(b, _b)
	    this._c = add(c, _c)
	    this._d = add(d, _d)
	    this._e = add(e, _e)
	  }

	  Sha1.prototype._hash = function () {
	    if(POOL.length < 100) POOL.push(this)
	    var H = new Buffer(20)
	    //console.log(this._a|0, this._b|0, this._c|0, this._d|0, this._e|0)
	    H.writeInt32BE(this._a|0, A)
	    H.writeInt32BE(this._b|0, B)
	    H.writeInt32BE(this._c|0, C)
	    H.writeInt32BE(this._d|0, D)
	    H.writeInt32BE(this._e|0, E)
	    return H
	  }

	  /*
	   * Perform the appropriate triplet combination function for the current
	   * iteration
	   */
	  function sha1_ft(t, b, c, d) {
	    if(t < 20) return (b & c) | ((~b) & d);
	    if(t < 40) return b ^ c ^ d;
	    if(t < 60) return (b & c) | (b & d) | (c & d);
	    return b ^ c ^ d;
	  }

	  /*
	   * Determine the appropriate additive constant for the current iteration
	   */
	  function sha1_kt(t) {
	    return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :
	           (t < 60) ? -1894007588 : -899497514;
	  }

	  /*
	   * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	   * to work around bugs in some JS interpreters.
	   * //dominictarr: this is 10 years old, so maybe this can be dropped?)
	   *
	   */
	  function add(x, y) {
	    return (x + y ) | 0
	  //lets see how this goes on testling.
	  //  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  //  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  //  return (msw << 16) | (lsw & 0xFFFF);
	  }

	  /*
	   * Bitwise rotate a 32-bit number to the left.
	   */
	  function rol(num, cnt) {
	    return (num << cnt) | (num >>> (32 - cnt));
	  }

	  return Sha1
	}


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
	 * in FIPS 180-2
	 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 *
	 */

	var inherits = __webpack_require__(59).inherits

	module.exports = function (Buffer, Hash) {

	  var K = [
	      0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
	      0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
	      0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
	      0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
	      0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
	      0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
	      0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
	      0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
	      0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
	      0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
	      0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
	      0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
	      0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
	      0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
	      0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
	      0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
	    ]

	  var W = new Array(64)

	  function Sha256() {
	    this.init()

	    this._w = W //new Array(64)

	    Hash.call(this, 16*4, 14*4)
	  }

	  inherits(Sha256, Hash)

	  Sha256.prototype.init = function () {

	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0

	    this._len = this._s = 0

	    return this
	  }

	  function S (X, n) {
	    return (X >>> n) | (X << (32 - n));
	  }

	  function R (X, n) {
	    return (X >>> n);
	  }

	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }

	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }

	  function Sigma0256 (x) {
	    return (S(x, 2) ^ S(x, 13) ^ S(x, 22));
	  }

	  function Sigma1256 (x) {
	    return (S(x, 6) ^ S(x, 11) ^ S(x, 25));
	  }

	  function Gamma0256 (x) {
	    return (S(x, 7) ^ S(x, 18) ^ R(x, 3));
	  }

	  function Gamma1256 (x) {
	    return (S(x, 17) ^ S(x, 19) ^ R(x, 10));
	  }

	  Sha256.prototype._update = function(M) {

	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var T1, T2

	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0

	    for (var j = 0; j < 64; j++) {
	      var w = W[j] = j < 16
	        ? M.readInt32BE(j * 4)
	        : Gamma1256(W[j - 2]) + W[j - 7] + Gamma0256(W[j - 15]) + W[j - 16]

	      T1 = h + Sigma1256(e) + Ch(e, f, g) + K[j] + w

	      T2 = Sigma0256(a) + Maj(a, b, c);
	      h = g; g = f; f = e; e = d + T1; d = c; c = b; b = a; a = T1 + T2;
	    }

	    this._a = (a + this._a) | 0
	    this._b = (b + this._b) | 0
	    this._c = (c + this._c) | 0
	    this._d = (d + this._d) | 0
	    this._e = (e + this._e) | 0
	    this._f = (f + this._f) | 0
	    this._g = (g + this._g) | 0
	    this._h = (h + this._h) | 0

	  };

	  Sha256.prototype._hash = function () {
	    var H = new Buffer(32)

	    H.writeInt32BE(this._a,  0)
	    H.writeInt32BE(this._b,  4)
	    H.writeInt32BE(this._c,  8)
	    H.writeInt32BE(this._d, 12)
	    H.writeInt32BE(this._e, 16)
	    H.writeInt32BE(this._f, 20)
	    H.writeInt32BE(this._g, 24)
	    H.writeInt32BE(this._h, 28)

	    return H
	  }

	  return Sha256

	}


/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var inherits = __webpack_require__(59).inherits

	module.exports = function (Buffer, Hash) {
	  var K = [
	    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
	    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
	    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
	    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
	    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
	    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
	    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
	    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
	    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
	    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
	    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
	    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
	    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
	    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
	    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
	    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
	    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
	    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
	    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
	    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
	    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
	    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
	    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
	    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
	    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
	    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
	    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
	    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
	    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
	    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
	    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
	    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
	    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
	    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
	    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
	    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
	    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
	    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
	    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
	    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
	  ]

	  var W = new Array(160)

	  function Sha512() {
	    this.init()
	    this._w = W

	    Hash.call(this, 128, 112)
	  }

	  inherits(Sha512, Hash)

	  Sha512.prototype.init = function () {

	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0

	    this._al = 0xf3bcc908|0
	    this._bl = 0x84caa73b|0
	    this._cl = 0xfe94f82b|0
	    this._dl = 0x5f1d36f1|0
	    this._el = 0xade682d1|0
	    this._fl = 0x2b3e6c1f|0
	    this._gl = 0xfb41bd6b|0
	    this._hl = 0x137e2179|0

	    this._len = this._s = 0

	    return this
	  }

	  function S (X, Xl, n) {
	    return (X >>> n) | (Xl << (32 - n))
	  }

	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }

	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }

	  Sha512.prototype._update = function(M) {

	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var al, bl, cl, dl, el, fl, gl, hl

	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0

	    al = this._al | 0
	    bl = this._bl | 0
	    cl = this._cl | 0
	    dl = this._dl | 0
	    el = this._el | 0
	    fl = this._fl | 0
	    gl = this._gl | 0
	    hl = this._hl | 0

	    for (var i = 0; i < 80; i++) {
	      var j = i * 2

	      var Wi, Wil

	      if (i < 16) {
	        Wi = W[j] = M.readInt32BE(j * 4)
	        Wil = W[j + 1] = M.readInt32BE(j * 4 + 4)

	      } else {
	        var x  = W[j - 15*2]
	        var xl = W[j - 15*2 + 1]
	        var gamma0  = S(x, xl, 1) ^ S(x, xl, 8) ^ (x >>> 7)
	        var gamma0l = S(xl, x, 1) ^ S(xl, x, 8) ^ S(xl, x, 7)

	        x  = W[j - 2*2]
	        xl = W[j - 2*2 + 1]
	        var gamma1  = S(x, xl, 19) ^ S(xl, x, 29) ^ (x >>> 6)
	        var gamma1l = S(xl, x, 19) ^ S(x, xl, 29) ^ S(xl, x, 6)

	        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	        var Wi7  = W[j - 7*2]
	        var Wi7l = W[j - 7*2 + 1]

	        var Wi16  = W[j - 16*2]
	        var Wi16l = W[j - 16*2 + 1]

	        Wil = gamma0l + Wi7l
	        Wi  = gamma0  + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)
	        Wil = Wil + gamma1l
	        Wi  = Wi  + gamma1  + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)
	        Wil = Wil + Wi16l
	        Wi  = Wi  + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)

	        W[j] = Wi
	        W[j + 1] = Wil
	      }

	      var maj = Maj(a, b, c)
	      var majl = Maj(al, bl, cl)

	      var sigma0h = S(a, al, 28) ^ S(al, a, 2) ^ S(al, a, 7)
	      var sigma0l = S(al, a, 28) ^ S(a, al, 2) ^ S(a, al, 7)
	      var sigma1h = S(e, el, 14) ^ S(e, el, 18) ^ S(el, e, 9)
	      var sigma1l = S(el, e, 14) ^ S(el, e, 18) ^ S(e, el, 9)

	      // t1 = h + sigma1 + ch + K[i] + W[i]
	      var Ki = K[j]
	      var Kil = K[j + 1]

	      var ch = Ch(e, f, g)
	      var chl = Ch(el, fl, gl)

	      var t1l = hl + sigma1l
	      var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)
	      t1l = t1l + chl
	      t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)
	      t1l = t1l + Kil
	      t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)
	      t1l = t1l + Wil
	      t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)

	      // t2 = sigma0 + maj
	      var t2l = sigma0l + majl
	      var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)

	      h  = g
	      hl = gl
	      g  = f
	      gl = fl
	      f  = e
	      fl = el
	      el = (dl + t1l) | 0
	      e  = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	      d  = c
	      dl = cl
	      c  = b
	      cl = bl
	      b  = a
	      bl = al
	      al = (t1l + t2l) | 0
	      a  = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0
	    }

	    this._al = (this._al + al) | 0
	    this._bl = (this._bl + bl) | 0
	    this._cl = (this._cl + cl) | 0
	    this._dl = (this._dl + dl) | 0
	    this._el = (this._el + el) | 0
	    this._fl = (this._fl + fl) | 0
	    this._gl = (this._gl + gl) | 0
	    this._hl = (this._hl + hl) | 0

	    this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0
	    this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0
	    this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0
	    this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	    this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0
	    this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0
	    this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0
	    this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0
	  }

	  Sha512.prototype._hash = function () {
	    var H = new Buffer(64)

	    function writeInt64BE(h, l, offset) {
	      H.writeInt32BE(h, offset)
	      H.writeInt32BE(l, offset + 4)
	    }

	    writeInt64BE(this._a, this._al, 0)
	    writeInt64BE(this._b, this._bl, 8)
	    writeInt64BE(this._c, this._cl, 16)
	    writeInt64BE(this._d, this._dl, 24)
	    writeInt64BE(this._e, this._el, 32)
	    writeInt64BE(this._f, this._fl, 40)
	    writeInt64BE(this._g, this._gl, 48)
	    writeInt64BE(this._h, this._hl, 56)

	    return H
	  }

	  return Sha512

	}


/***/ },
/* 271 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 272 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 273 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ }
/******/ ])
});
;